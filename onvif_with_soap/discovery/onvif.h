// Reminder: Modify typemap.dat to customize the header file generated by wsdl2h
/* onvif.h
   Generated by wsdl2h 2.8.131 from devicemgmt.wsdl media.wsdl remotediscovery.wsdl and ./typemap.dat
   2023-12-05 09:20:41 GMT

   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE.

gSOAP XML Web services tools
Copyright (C) 2000-2023, Robert van Engelen, Genivia Inc. All Rights Reserved.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

/**

@page page_notes Notes

@note HINTS:
 - Run soapcpp2 on onvif.h to generate the SOAP/XML processing logic:
   Use soapcpp2 -I to specify paths for #import
   Use soapcpp2 -j to generate improved proxy and server classes.
   Use soapcpp2 -r to generate a report.
 - Edit 'typemap.dat' to control namespace bindings and type mappings:
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Run Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h -c to generate pure C code.
 - Use wsdl2h -R to include the REST operations defined by the WSDLs.
 - Use wsdl2h -O3 or -O4 to optimize by removing unused schema components.
 - Use wsdl2h -d to enable DOM support for xsd:any and xsd:anyType.
 - Use wsdl2h -F to simulate struct-type derivation in C (also works in C++).
 - Use wsdl2h -f to generate flat C++ class hierarchy, removes type derivation.
 - Use wsdl2h -g to generate top-level root elements with readers and writers.
 - Use wsdl2h -U to map XML names to C++ Unicode identifiers instead of _xNNNN.
 - Use wsdl2h -u to disable the generation of unions.
 - Use wsdl2h -L to remove this @note and all other @note comments.
 - Use wsdl2h -nname to use name as the base namespace prefix instead of 'ns'.
 - Use wsdl2h -Nname for service prefix and produce multiple service bindings
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

@warning
   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE:
   THE GENERATED soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

@copyright LICENSE:
@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2023, Robert van Engelen, Genivia Inc. All Rights Reserved.
The wsdl2h tool and its generated software are released under the GPL.
This software is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt c,w

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * $SIZE typemap variable:                                                    *
 *   int                                                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/

#import "wsdd10.h"	// wsdd10 = <http://schemas.xmlsoap.org/ws/2005/04/discovery>
#import "wsa5.h"	// wsa5 = <http://www.w3.org/2005/08/addressing>
#import "wsse.h"
/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to 'typemap.dat' then rerun wsdl2h (use wsdl2h -t typemap.dat):

tds = "http://www.onvif.org/ver10/device/wsdl"
tt = "http://www.onvif.org/ver10/schema"
wsnt = "http://docs.oasis-open.org/wsn/b-2"
wsrfbf = "http://docs.oasis-open.org/wsrf/bf-2"
wstop = "http://docs.oasis-open.org/wsn/t-1"
trt = "http://www.onvif.org/ver10/media/wsdl"
tdn = "http://www.onvif.org/ver10/network/wsdl"

*/

#define SOAP_NAMESPACE_OF_tds	"http://www.onvif.org/ver10/device/wsdl"
//gsoap tds   schema namespace:	http://www.onvif.org/ver10/device/wsdl
//gsoap tds   schema elementForm:	qualified
//gsoap tds   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_tt	"http://www.onvif.org/ver10/schema"
//gsoap tt    schema namespace:	http://www.onvif.org/ver10/schema
//gsoap tt    schema elementForm:	qualified
//gsoap tt    schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wsnt	"http://docs.oasis-open.org/wsn/b-2"
//gsoap wsnt  schema namespace:	http://docs.oasis-open.org/wsn/b-2
//gsoap wsnt  schema elementForm:	qualified
//gsoap wsnt  schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wsrfbf	"http://docs.oasis-open.org/wsrf/bf-2"
//gsoap wsrfbf schema namespace:	http://docs.oasis-open.org/wsrf/bf-2
//gsoap wsrfbf schema elementForm:	qualified
//gsoap wsrfbf schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wstop	"http://docs.oasis-open.org/wsn/t-1"
//gsoap wstop schema namespace:	http://docs.oasis-open.org/wsn/t-1
//gsoap wstop schema elementForm:	qualified
//gsoap wstop schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_trt	"http://www.onvif.org/ver10/media/wsdl"
//gsoap trt   schema namespace:	http://www.onvif.org/ver10/media/wsdl
//gsoap trt   schema elementForm:	qualified
//gsoap trt   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_tdn	"http://www.onvif.org/ver10/network/wsdl"
//gsoap tdn   schema namespace:	http://www.onvif.org/ver10/network/wsdl
//gsoap tdn   schema elementForm:	qualified
//gsoap tdn   schema attributeForm:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/

/// Built-in type "xs:boolean".
enum xsd__boolean { xsd__boolean__false_, xsd__boolean__true_ };

/// Built-in type "xs:duration".
#import "custom/duration.h"

// Imported type ""http://www.w3.org/2005/08/addressing":EndpointReferenceType" defined by wsa5__EndpointReferenceType.

/// Primitive built-in type "xs:NCName".
typedef char* xsd__NCName;

/// Primitive built-in type "xs:anySimpleType".
typedef char* xsd__anySimpleType;

/// Primitive built-in type "xs:anyURI".
typedef char* xsd__anyURI;

/// Primitive built-in type "xs:nonNegativeInteger".
typedef char* xsd__nonNegativeInteger;

/// Primitive built-in type "xs:token".
typedef char* xsd__token;

/// Built-in attribute "xml:lang".
typedef char* _xml__lang;



/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/device/wsdl":EAPMethodTypes is a simpleType containing a whitespace separated list of values of type xs:int.
///
typedef char* tds__EAPMethodTypes;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/schema":IntAttrList is a simpleType containing a whitespace separated list of values of type xs:int.
///
typedef char* tt__IntAttrList;

/// @brief "http://www.onvif.org/ver10/schema":FloatAttrList is a simpleType containing a whitespace separated list of values of type xs:float.
///
typedef char* tt__FloatAttrList;

/// @brief "http://www.onvif.org/ver10/schema":StringAttrList is a simpleType containing a whitespace separated list of values of type xs:string.
///
typedef char* tt__StringAttrList;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/

/// @brief Union of values from member types "xsd:dateTime xsd:duration".
typedef char* wsnt__AbsoluteOrRelativeTimeType;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/network/wsdl                                  *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/schema":ReferenceToken is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Unique identifier for a physical or logical resource.
///   Tokens should be assigned such that they are unique within a device. Tokens must be at least unique within its class.
///   Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Length of this content is 0 to 64.
typedef char* tt__ReferenceToken : 64;

/// @brief "http://www.onvif.org/ver10/schema":Name is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Length of this content is 0 to 64.
typedef char* tt__Name : 64;

/// @brief "http://www.onvif.org/ver10/schema":CapabilityCategory is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__CapabilityCategory__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__CapabilityCategory
{
	tt__CapabilityCategory__All,	///< xs:string value="All"
	tt__CapabilityCategory__Device,	///< xs:string value="Device"
	tt__CapabilityCategory__Events,	///< xs:string value="Events"
	tt__CapabilityCategory__Media,	///< xs:string value="Media"
	tt__CapabilityCategory__PTZ,	///< xs:string value="PTZ"
};

/// @brief "http://www.onvif.org/ver10/schema":MoveStatus is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__MoveStatus__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__MoveStatus
{
	tt__MoveStatus__IDLE,	///< xs:string value="IDLE"
	tt__MoveStatus__MOVING,	///< xs:string value="MOVING"
	tt__MoveStatus__UNKNOWN,	///< xs:string value="UNKNOWN"
};

/// @brief "http://www.onvif.org/ver10/schema":TopicNamespaceLocation is a simpleType restriction of type xs:anyURI.
///
typedef xsd__anyURI tt__TopicNamespaceLocation;

/// @brief "http://www.onvif.org/ver10/schema":PropertyOperation is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__PropertyOperation__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__PropertyOperation
{
	tt__PropertyOperation__Initialized,	///< xs:string value="Initialized"
	tt__PropertyOperation__Deleted,	///< xs:string value="Deleted"
	tt__PropertyOperation__Changed,	///< xs:string value="Changed"
};

/// @brief "http://www.onvif.org/ver10/schema":VideoEncoding is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__VideoEncoding__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__VideoEncoding
{
	tt__VideoEncoding__JPEG,	///< xs:string value="JPEG"
	tt__VideoEncoding__MPEG4,	///< xs:string value="MPEG4"
	tt__VideoEncoding__H264,	///< xs:string value="H264"
};

/// @brief "http://www.onvif.org/ver10/schema":Mpeg4Profile is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__Mpeg4Profile__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__Mpeg4Profile
{
	tt__Mpeg4Profile__SP,	///< xs:string value="SP"
	tt__Mpeg4Profile__ASP,	///< xs:string value="ASP"
};

/// @brief "http://www.onvif.org/ver10/schema":H264Profile is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__H264Profile__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__H264Profile
{
	tt__H264Profile__Baseline,	///< xs:string value="Baseline"
	tt__H264Profile__Main,	///< xs:string value="Main"
	tt__H264Profile__Extended,	///< xs:string value="Extended"
	tt__H264Profile__High,	///< xs:string value="High"
};

/// @brief "http://www.onvif.org/ver10/schema":IPType is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__IPType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__IPType
{
	tt__IPType__IPv4,	///< xs:string value="IPv4"
	tt__IPType__IPv6,	///< xs:string value="IPv6"
};

/// @brief "http://www.onvif.org/ver10/schema":IPv4Address is a simpleType restriction of type xs:token.
///
typedef xsd__token tt__IPv4Address;

/// @brief "http://www.onvif.org/ver10/schema":IPv6Address is a simpleType restriction of type xs:token.
///
typedef xsd__token tt__IPv6Address;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

/// @brief "http://docs.oasis-open.org/wsn/t-1":FullTopicExpression is a simpleType restriction of type xs:token.
///
/// <PRE><BLOCKQUOTE>
///   TopicPathExpression ::= TopicPath ( '|' TopicPath )* TopicPath ::= RootTopic ChildTopicExpression* RootTopic ::= NamespacePrefix? ('//')? (NCName | '*') NamespacePrefix ::= NCName ':' ChildTopicExpression ::= '/' '/'? (QName | NCName | '*'| '.')
/// </BLOCKQUOTE></PRE>
///
/// Content pattern is "([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*(\\|([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*)*".
typedef xsd__token wstop__FullTopicExpression "([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*(\\|([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*)*";

/// @brief "http://docs.oasis-open.org/wsn/t-1":ConcreteTopicExpression is a simpleType restriction of type xs:token.
///
/// <PRE><BLOCKQUOTE>
///   The pattern allows strings matching the following EBNF:
///   ConcreteTopicPath ::= RootTopic ChildTopic* RootTopic ::= QName ChildTopic ::= '/' (QName | NCName)
/// </BLOCKQUOTE></PRE>
///
/// Content pattern is "(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)(/([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)*".
typedef xsd__token wstop__ConcreteTopicExpression "(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)(/([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)*";

/// @brief "http://docs.oasis-open.org/wsn/t-1":SimpleTopicExpression is a simpleType restriction of type xs:QName.
///
/// <PRE><BLOCKQUOTE>
///   The pattern allows strings matching the following EBNF:
///   RootTopic ::= QName
/// </BLOCKQUOTE></PRE>
///
typedef _QName wstop__SimpleTopicExpression;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/network/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/device/wsdl":Service is a complexType.
///
/// @note struct tds__Service operations:
/// - tds__Service* soap_new_tds__Service(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tds__Service(struct soap*, tds__Service*) default initialize members
/// - int soap_read_tds__Service(struct soap*, tds__Service*) deserialize from a source
/// - int soap_write_tds__Service(struct soap*, tds__Service*) serialize to a sink
/// - tds__Service* soap_dup_tds__Service(struct soap*, tds__Service* dst, tds__Service *src) returns deep copy of tds__Service src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tds__Service(tds__Service*) deep deletes tds__Service data members, use only on dst after soap_dup_tds__Service(NULL, tds__Service *dst, tds__Service *src) (use soapcpp2 -Ed)
struct tds__Service
{
/// <PRE><BLOCKQUOTE>
///   Namespace of the service being described. This parameter allows to match the service capabilities to the service. Note that only one set of capabilities is supported per namespace.
/// </BLOCKQUOTE></PRE>
///
/// Element "Namespace" of type xs:anyURI.
    xsd__anyURI                          Namespace                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The transport addresses where the service can be reached. The scheme and IP part shall match the one used in the request (i.e. the GetServices request).
/// </BLOCKQUOTE></PRE>
///
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// @note struct _tds__Service_Capabilities operations:
/// - _tds__Service_Capabilities* soap_new__tds__Service_Capabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__Service_Capabilities(struct soap*, _tds__Service_Capabilities*) default initialize members
/// - int soap_read__tds__Service_Capabilities(struct soap*, _tds__Service_Capabilities*) deserialize from a source
/// - int soap_write__tds__Service_Capabilities(struct soap*, _tds__Service_Capabilities*) serialize to a sink
/// - _tds__Service_Capabilities* soap_dup__tds__Service_Capabilities(struct soap*, _tds__Service_Capabilities* dst, _tds__Service_Capabilities *src) returns deep copy of _tds__Service_Capabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__Service_Capabilities(_tds__Service_Capabilities*) deep deletes _tds__Service_Capabilities data members, use only on dst after soap_dup__tds__Service_Capabilities(NULL, _tds__Service_Capabilities *dst, _tds__Service_Capabilities *src) (use soapcpp2 -Ed)
    struct _tds__Service_Capabilities
    {
/// <any namespace="##any">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
    }                                   *Capabilities                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The version of the service (not the ONVIF core spec version).
/// </BLOCKQUOTE></PRE>
///
/// Element "Version" of type "http://www.onvif.org/ver10/schema":OnvifVersion.
    struct tt__OnvifVersion*             Version                        1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":DeviceServiceCapabilities is a complexType.
///
/// @note struct tds__DeviceServiceCapabilities operations:
/// - tds__DeviceServiceCapabilities* soap_new_tds__DeviceServiceCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tds__DeviceServiceCapabilities(struct soap*, tds__DeviceServiceCapabilities*) default initialize members
/// - int soap_read_tds__DeviceServiceCapabilities(struct soap*, tds__DeviceServiceCapabilities*) deserialize from a source
/// - int soap_write_tds__DeviceServiceCapabilities(struct soap*, tds__DeviceServiceCapabilities*) serialize to a sink
/// - tds__DeviceServiceCapabilities* soap_dup_tds__DeviceServiceCapabilities(struct soap*, tds__DeviceServiceCapabilities* dst, tds__DeviceServiceCapabilities *src) returns deep copy of tds__DeviceServiceCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tds__DeviceServiceCapabilities(tds__DeviceServiceCapabilities*) deep deletes tds__DeviceServiceCapabilities data members, use only on dst after soap_dup_tds__DeviceServiceCapabilities(NULL, tds__DeviceServiceCapabilities *dst, tds__DeviceServiceCapabilities *src) (use soapcpp2 -Ed)
struct tds__DeviceServiceCapabilities
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetServices
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetServices is a complexType.
///
/// @note struct _tds__GetServices operations:
/// - _tds__GetServices* soap_new__tds__GetServices(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetServices(struct soap*, _tds__GetServices*) default initialize members
/// - int soap_read__tds__GetServices(struct soap*, _tds__GetServices*) deserialize from a source
/// - int soap_write__tds__GetServices(struct soap*, _tds__GetServices*) serialize to a sink
/// - _tds__GetServices* soap_dup__tds__GetServices(struct soap*, _tds__GetServices* dst, _tds__GetServices *src) returns deep copy of _tds__GetServices src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetServices(_tds__GetServices*) deep deletes _tds__GetServices data members, use only on dst after soap_dup__tds__GetServices(NULL, _tds__GetServices *dst, _tds__GetServices *src) (use soapcpp2 -Ed)
struct _tds__GetServices
{
/// <PRE><BLOCKQUOTE>
///   Indicates if the service capabilities (untyped) should be included in the response.
/// </BLOCKQUOTE></PRE>
///
/// Element "IncludeCapability" of type xs:boolean.
    enum xsd__boolean                    IncludeCapability              1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetServicesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetServicesResponse is a complexType.
///
/// @note struct _tds__GetServicesResponse operations:
/// - _tds__GetServicesResponse* soap_new__tds__GetServicesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetServicesResponse(struct soap*, _tds__GetServicesResponse*) default initialize members
/// - int soap_read__tds__GetServicesResponse(struct soap*, _tds__GetServicesResponse*) deserialize from a source
/// - int soap_write__tds__GetServicesResponse(struct soap*, _tds__GetServicesResponse*) serialize to a sink
/// - _tds__GetServicesResponse* soap_dup__tds__GetServicesResponse(struct soap*, _tds__GetServicesResponse* dst, _tds__GetServicesResponse *src) returns deep copy of _tds__GetServicesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetServicesResponse(_tds__GetServicesResponse*) deep deletes _tds__GetServicesResponse data members, use only on dst after soap_dup__tds__GetServicesResponse(NULL, _tds__GetServicesResponse *dst, _tds__GetServicesResponse *src) (use soapcpp2 -Ed)
struct _tds__GetServicesResponse
{
/// <PRE><BLOCKQUOTE>
///   Each Service element contains information about one service.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tds__Service* is 1..unbounded.
  $ int                                  __sizeService                  1;
/// Array struct tds__Service* of size 1..unbounded.
    struct tds__Service*                 Service                        1;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetServiceCapabilities is a complexType.
///
/// @note struct _tds__GetServiceCapabilities operations:
/// - _tds__GetServiceCapabilities* soap_new__tds__GetServiceCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetServiceCapabilities(struct soap*, _tds__GetServiceCapabilities*) default initialize members
/// - int soap_read__tds__GetServiceCapabilities(struct soap*, _tds__GetServiceCapabilities*) deserialize from a source
/// - int soap_write__tds__GetServiceCapabilities(struct soap*, _tds__GetServiceCapabilities*) serialize to a sink
/// - _tds__GetServiceCapabilities* soap_dup__tds__GetServiceCapabilities(struct soap*, _tds__GetServiceCapabilities* dst, _tds__GetServiceCapabilities *src) returns deep copy of _tds__GetServiceCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetServiceCapabilities(_tds__GetServiceCapabilities*) deep deletes _tds__GetServiceCapabilities data members, use only on dst after soap_dup__tds__GetServiceCapabilities(NULL, _tds__GetServiceCapabilities *dst, _tds__GetServiceCapabilities *src) (use soapcpp2 -Ed)
struct _tds__GetServiceCapabilities
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
/// @note struct _tds__GetServiceCapabilitiesResponse operations:
/// - _tds__GetServiceCapabilitiesResponse* soap_new__tds__GetServiceCapabilitiesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetServiceCapabilitiesResponse(struct soap*, _tds__GetServiceCapabilitiesResponse*) default initialize members
/// - int soap_read__tds__GetServiceCapabilitiesResponse(struct soap*, _tds__GetServiceCapabilitiesResponse*) deserialize from a source
/// - int soap_write__tds__GetServiceCapabilitiesResponse(struct soap*, _tds__GetServiceCapabilitiesResponse*) serialize to a sink
/// - _tds__GetServiceCapabilitiesResponse* soap_dup__tds__GetServiceCapabilitiesResponse(struct soap*, _tds__GetServiceCapabilitiesResponse* dst, _tds__GetServiceCapabilitiesResponse *src) returns deep copy of _tds__GetServiceCapabilitiesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetServiceCapabilitiesResponse(_tds__GetServiceCapabilitiesResponse*) deep deletes _tds__GetServiceCapabilitiesResponse data members, use only on dst after soap_dup__tds__GetServiceCapabilitiesResponse(NULL, _tds__GetServiceCapabilitiesResponse *dst, _tds__GetServiceCapabilitiesResponse *src) (use soapcpp2 -Ed)
struct _tds__GetServiceCapabilitiesResponse
{
/// <PRE><BLOCKQUOTE>
///   The capabilities for the device service is returned in the Capabilities element.
/// </BLOCKQUOTE></PRE>
///
/// Element "Capabilities" of type "http://www.onvif.org/ver10/device/wsdl":DeviceServiceCapabilities.
    struct tds__DeviceServiceCapabilities*  Capabilities                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDeviceInformation
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDeviceInformation is a complexType.
///
/// @note struct _tds__GetDeviceInformation operations:
/// - _tds__GetDeviceInformation* soap_new__tds__GetDeviceInformation(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetDeviceInformation(struct soap*, _tds__GetDeviceInformation*) default initialize members
/// - int soap_read__tds__GetDeviceInformation(struct soap*, _tds__GetDeviceInformation*) deserialize from a source
/// - int soap_write__tds__GetDeviceInformation(struct soap*, _tds__GetDeviceInformation*) serialize to a sink
/// - _tds__GetDeviceInformation* soap_dup__tds__GetDeviceInformation(struct soap*, _tds__GetDeviceInformation* dst, _tds__GetDeviceInformation *src) returns deep copy of _tds__GetDeviceInformation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetDeviceInformation(_tds__GetDeviceInformation*) deep deletes _tds__GetDeviceInformation data members, use only on dst after soap_dup__tds__GetDeviceInformation(NULL, _tds__GetDeviceInformation *dst, _tds__GetDeviceInformation *src) (use soapcpp2 -Ed)
struct _tds__GetDeviceInformation
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDeviceInformationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDeviceInformationResponse is a complexType.
///
/// @note struct _tds__GetDeviceInformationResponse operations:
/// - _tds__GetDeviceInformationResponse* soap_new__tds__GetDeviceInformationResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetDeviceInformationResponse(struct soap*, _tds__GetDeviceInformationResponse*) default initialize members
/// - int soap_read__tds__GetDeviceInformationResponse(struct soap*, _tds__GetDeviceInformationResponse*) deserialize from a source
/// - int soap_write__tds__GetDeviceInformationResponse(struct soap*, _tds__GetDeviceInformationResponse*) serialize to a sink
/// - _tds__GetDeviceInformationResponse* soap_dup__tds__GetDeviceInformationResponse(struct soap*, _tds__GetDeviceInformationResponse* dst, _tds__GetDeviceInformationResponse *src) returns deep copy of _tds__GetDeviceInformationResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetDeviceInformationResponse(_tds__GetDeviceInformationResponse*) deep deletes _tds__GetDeviceInformationResponse data members, use only on dst after soap_dup__tds__GetDeviceInformationResponse(NULL, _tds__GetDeviceInformationResponse *dst, _tds__GetDeviceInformationResponse *src) (use soapcpp2 -Ed)
struct _tds__GetDeviceInformationResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SystemReboot
/// @brief "http://www.onvif.org/ver10/device/wsdl":SystemReboot is a complexType.
///
/// @note struct _tds__SystemReboot operations:
/// - _tds__SystemReboot* soap_new__tds__SystemReboot(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SystemReboot(struct soap*, _tds__SystemReboot*) default initialize members
/// - int soap_read__tds__SystemReboot(struct soap*, _tds__SystemReboot*) deserialize from a source
/// - int soap_write__tds__SystemReboot(struct soap*, _tds__SystemReboot*) serialize to a sink
/// - _tds__SystemReboot* soap_dup__tds__SystemReboot(struct soap*, _tds__SystemReboot* dst, _tds__SystemReboot *src) returns deep copy of _tds__SystemReboot src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SystemReboot(_tds__SystemReboot*) deep deletes _tds__SystemReboot data members, use only on dst after soap_dup__tds__SystemReboot(NULL, _tds__SystemReboot *dst, _tds__SystemReboot *src) (use soapcpp2 -Ed)
struct _tds__SystemReboot
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SystemRebootResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SystemRebootResponse is a complexType.
///
/// @note struct _tds__SystemRebootResponse operations:
/// - _tds__SystemRebootResponse* soap_new__tds__SystemRebootResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__SystemRebootResponse(struct soap*, _tds__SystemRebootResponse*) default initialize members
/// - int soap_read__tds__SystemRebootResponse(struct soap*, _tds__SystemRebootResponse*) deserialize from a source
/// - int soap_write__tds__SystemRebootResponse(struct soap*, _tds__SystemRebootResponse*) serialize to a sink
/// - _tds__SystemRebootResponse* soap_dup__tds__SystemRebootResponse(struct soap*, _tds__SystemRebootResponse* dst, _tds__SystemRebootResponse *src) returns deep copy of _tds__SystemRebootResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__SystemRebootResponse(_tds__SystemRebootResponse*) deep deletes _tds__SystemRebootResponse data members, use only on dst after soap_dup__tds__SystemRebootResponse(NULL, _tds__SystemRebootResponse *dst, _tds__SystemRebootResponse *src) (use soapcpp2 -Ed)
struct _tds__SystemRebootResponse
{
/// <PRE><BLOCKQUOTE>
///   Contains the reboot message sent by the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Message" of type xs:string.
    char*                                Message                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCapabilities
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCapabilities is a complexType.
///
/// @note struct _tds__GetCapabilities operations:
/// - _tds__GetCapabilities* soap_new__tds__GetCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetCapabilities(struct soap*, _tds__GetCapabilities*) default initialize members
/// - int soap_read__tds__GetCapabilities(struct soap*, _tds__GetCapabilities*) deserialize from a source
/// - int soap_write__tds__GetCapabilities(struct soap*, _tds__GetCapabilities*) serialize to a sink
/// - _tds__GetCapabilities* soap_dup__tds__GetCapabilities(struct soap*, _tds__GetCapabilities* dst, _tds__GetCapabilities *src) returns deep copy of _tds__GetCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetCapabilities(_tds__GetCapabilities*) deep deletes _tds__GetCapabilities data members, use only on dst after soap_dup__tds__GetCapabilities(NULL, _tds__GetCapabilities *dst, _tds__GetCapabilities *src) (use soapcpp2 -Ed)
struct _tds__GetCapabilities
{
/// <PRE><BLOCKQUOTE>
///   List of categories to retrieve capability information on.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of enum tt__CapabilityCategory* is 0..unbounded.
  $ int                                  __sizeCategory                 0;
/// Array enum tt__CapabilityCategory* of size 0..unbounded.
    enum tt__CapabilityCategory*         Category                       0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCapabilitiesResponse is a complexType.
///
/// @note struct _tds__GetCapabilitiesResponse operations:
/// - _tds__GetCapabilitiesResponse* soap_new__tds__GetCapabilitiesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tds__GetCapabilitiesResponse(struct soap*, _tds__GetCapabilitiesResponse*) default initialize members
/// - int soap_read__tds__GetCapabilitiesResponse(struct soap*, _tds__GetCapabilitiesResponse*) deserialize from a source
/// - int soap_write__tds__GetCapabilitiesResponse(struct soap*, _tds__GetCapabilitiesResponse*) serialize to a sink
/// - _tds__GetCapabilitiesResponse* soap_dup__tds__GetCapabilitiesResponse(struct soap*, _tds__GetCapabilitiesResponse* dst, _tds__GetCapabilitiesResponse *src) returns deep copy of _tds__GetCapabilitiesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tds__GetCapabilitiesResponse(_tds__GetCapabilitiesResponse*) deep deletes _tds__GetCapabilitiesResponse data members, use only on dst after soap_dup__tds__GetCapabilitiesResponse(NULL, _tds__GetCapabilitiesResponse *dst, _tds__GetCapabilitiesResponse *src) (use soapcpp2 -Ed)
struct _tds__GetCapabilitiesResponse
{
/// <PRE><BLOCKQUOTE>
///   Capability information.
/// </BLOCKQUOTE></PRE>
///
/// Element "Capabilities" of type "http://www.onvif.org/ver10/schema":Capabilities.
    struct tt__Capabilities*             Capabilities                   1;	///< Required element.
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/schema":DeviceEntity is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Base class for physical entities like inputs and outputs.
/// </BLOCKQUOTE></PRE>
///
/// @note struct tt__DeviceEntity operations:
/// - tt__DeviceEntity* soap_new_tt__DeviceEntity(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__DeviceEntity(struct soap*, tt__DeviceEntity*) default initialize members
/// - int soap_read_tt__DeviceEntity(struct soap*, tt__DeviceEntity*) deserialize from a source
/// - int soap_write_tt__DeviceEntity(struct soap*, tt__DeviceEntity*) serialize to a sink
/// - tt__DeviceEntity* soap_dup_tt__DeviceEntity(struct soap*, tt__DeviceEntity* dst, tt__DeviceEntity *src) returns deep copy of tt__DeviceEntity src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__DeviceEntity(tt__DeviceEntity*) deep deletes tt__DeviceEntity data members, use only on dst after soap_dup_tt__DeviceEntity(NULL, tt__DeviceEntity *dst, tt__DeviceEntity *src) (use soapcpp2 -Ed)
struct tt__DeviceEntity
{
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":IntRectangle is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Rectangle defined by lower left corner position and size. Units are pixel.
/// </BLOCKQUOTE></PRE>
///
/// @note struct tt__IntRectangle operations:
/// - tt__IntRectangle* soap_new_tt__IntRectangle(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__IntRectangle(struct soap*, tt__IntRectangle*) default initialize members
/// - int soap_read_tt__IntRectangle(struct soap*, tt__IntRectangle*) deserialize from a source
/// - int soap_write_tt__IntRectangle(struct soap*, tt__IntRectangle*) serialize to a sink
/// - tt__IntRectangle* soap_dup_tt__IntRectangle(struct soap*, tt__IntRectangle* dst, tt__IntRectangle *src) returns deep copy of tt__IntRectangle src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IntRectangle(tt__IntRectangle*) deep deletes tt__IntRectangle data members, use only on dst after soap_dup_tt__IntRectangle(NULL, tt__IntRectangle *dst, tt__IntRectangle *src) (use soapcpp2 -Ed)
struct tt__IntRectangle
{
/// Attribute "x" of type xs:int.
  @ int                                  x                              1;	///< Required attribute.
/// Attribute "y" of type xs:int.
  @ int                                  y                              1;	///< Required attribute.
/// Attribute "width" of type xs:int.
  @ int                                  width                          1;	///< Required attribute.
/// Attribute "height" of type xs:int.
  @ int                                  height                         1;	///< Required attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":IntRectangleRange is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Range of a rectangle. The rectangle itself is defined by lower left corner position and size. Units are pixel.
/// </BLOCKQUOTE></PRE>
///
/// @note struct tt__IntRectangleRange operations:
/// - tt__IntRectangleRange* soap_new_tt__IntRectangleRange(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__IntRectangleRange(struct soap*, tt__IntRectangleRange*) default initialize members
/// - int soap_read_tt__IntRectangleRange(struct soap*, tt__IntRectangleRange*) deserialize from a source
/// - int soap_write_tt__IntRectangleRange(struct soap*, tt__IntRectangleRange*) serialize to a sink
/// - tt__IntRectangleRange* soap_dup_tt__IntRectangleRange(struct soap*, tt__IntRectangleRange* dst, tt__IntRectangleRange *src) returns deep copy of tt__IntRectangleRange src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IntRectangleRange(tt__IntRectangleRange*) deep deletes tt__IntRectangleRange data members, use only on dst after soap_dup_tt__IntRectangleRange(NULL, tt__IntRectangleRange *dst, tt__IntRectangleRange *src) (use soapcpp2 -Ed)
struct tt__IntRectangleRange
{
/// <PRE><BLOCKQUOTE>
///   Range of X-axis.
/// </BLOCKQUOTE></PRE>
///
/// Element "XRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 XRange                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range of Y-axis.
/// </BLOCKQUOTE></PRE>
///
/// Element "YRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 YRange                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range of width.
/// </BLOCKQUOTE></PRE>
///
/// Element "WidthRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 WidthRange                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range of height.
/// </BLOCKQUOTE></PRE>
///
/// Element "HeightRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 HeightRange                    1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":IntRange is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Range of values greater equal Min value and less equal Max value.
/// </BLOCKQUOTE></PRE>
///
/// @note struct tt__IntRange operations:
/// - tt__IntRange* soap_new_tt__IntRange(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__IntRange(struct soap*, tt__IntRange*) default initialize members
/// - int soap_read_tt__IntRange(struct soap*, tt__IntRange*) deserialize from a source
/// - int soap_write_tt__IntRange(struct soap*, tt__IntRange*) serialize to a sink
/// - tt__IntRange* soap_dup_tt__IntRange(struct soap*, tt__IntRange* dst, tt__IntRange *src) returns deep copy of tt__IntRange src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IntRange(tt__IntRange*) deep deletes tt__IntRange data members, use only on dst after soap_dup_tt__IntRange(NULL, tt__IntRange *dst, tt__IntRange *src) (use soapcpp2 -Ed)
struct tt__IntRange
{
/// Element "Min" of type xs:int.
    int                                  Min                            1;	///< Required element.
/// Element "Max" of type xs:int.
    int                                  Max                            1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":FloatRange is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Range of values greater equal Min value and less equal Max value.
/// </BLOCKQUOTE></PRE>
///
/// @note struct tt__FloatRange operations:
/// - tt__FloatRange* soap_new_tt__FloatRange(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__FloatRange(struct soap*, tt__FloatRange*) default initialize members
/// - int soap_read_tt__FloatRange(struct soap*, tt__FloatRange*) deserialize from a source
/// - int soap_write_tt__FloatRange(struct soap*, tt__FloatRange*) serialize to a sink
/// - tt__FloatRange* soap_dup_tt__FloatRange(struct soap*, tt__FloatRange* dst, tt__FloatRange *src) returns deep copy of tt__FloatRange src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__FloatRange(tt__FloatRange*) deep deletes tt__FloatRange data members, use only on dst after soap_dup_tt__FloatRange(NULL, tt__FloatRange *dst, tt__FloatRange *src) (use soapcpp2 -Ed)
struct tt__FloatRange
{
/// Element "Min" of type xs:float.
    float                                Min                            1;	///< Required element.
/// Element "Max" of type xs:float.
    float                                Max                            1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":DurationRange is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Range of duration greater equal Min duration and less equal Max duration.
/// </BLOCKQUOTE></PRE>
///
/// @note struct tt__DurationRange operations:
/// - tt__DurationRange* soap_new_tt__DurationRange(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__DurationRange(struct soap*, tt__DurationRange*) default initialize members
/// - int soap_read_tt__DurationRange(struct soap*, tt__DurationRange*) deserialize from a source
/// - int soap_write_tt__DurationRange(struct soap*, tt__DurationRange*) serialize to a sink
/// - tt__DurationRange* soap_dup_tt__DurationRange(struct soap*, tt__DurationRange* dst, tt__DurationRange *src) returns deep copy of tt__DurationRange src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__DurationRange(tt__DurationRange*) deep deletes tt__DurationRange data members, use only on dst after soap_dup_tt__DurationRange(NULL, tt__DurationRange *dst, tt__DurationRange *src) (use soapcpp2 -Ed)
struct tt__DurationRange
{
/// Element "Min" of type xs:duration.
    xsd__duration                        Min                            1;	///< Required element.
/// Element "Max" of type xs:duration.
    xsd__duration                        Max                            1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":IntList is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   List of values.
/// </BLOCKQUOTE></PRE>
///
/// @note struct tt__IntList operations:
/// - tt__IntList* soap_new_tt__IntList(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__IntList(struct soap*, tt__IntList*) default initialize members
/// - int soap_read_tt__IntList(struct soap*, tt__IntList*) deserialize from a source
/// - int soap_write_tt__IntList(struct soap*, tt__IntList*) serialize to a sink
/// - tt__IntList* soap_dup_tt__IntList(struct soap*, tt__IntList* dst, tt__IntList *src) returns deep copy of tt__IntList src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IntList(tt__IntList*) deep deletes tt__IntList data members, use only on dst after soap_dup_tt__IntList(NULL, tt__IntList *dst, tt__IntList *src) (use soapcpp2 -Ed)
struct tt__IntList
{
/// Size of array of int* is 0..unbounded.
  $ int                                  __sizeItems                    0;
/// Array int* of size 0..unbounded.
    int*                                 Items                          0;	///< Multiple elements.
};

/// @brief "http://www.onvif.org/ver10/schema":FloatList is a complexType.
///
/// @note struct tt__FloatList operations:
/// - tt__FloatList* soap_new_tt__FloatList(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__FloatList(struct soap*, tt__FloatList*) default initialize members
/// - int soap_read_tt__FloatList(struct soap*, tt__FloatList*) deserialize from a source
/// - int soap_write_tt__FloatList(struct soap*, tt__FloatList*) serialize to a sink
/// - tt__FloatList* soap_dup_tt__FloatList(struct soap*, tt__FloatList* dst, tt__FloatList *src) returns deep copy of tt__FloatList src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__FloatList(tt__FloatList*) deep deletes tt__FloatList data members, use only on dst after soap_dup_tt__FloatList(NULL, tt__FloatList *dst, tt__FloatList *src) (use soapcpp2 -Ed)
struct tt__FloatList
{
/// Size of array of float* is 0..unbounded.
  $ int                                  __sizeItems                    0;
/// Array float* of size 0..unbounded.
    float*                               Items                          0;	///< Multiple elements.
};

/// @brief "http://www.onvif.org/ver10/schema":AnyHolder is a complexType.
///
/// @note struct tt__AnyHolder operations:
/// - tt__AnyHolder* soap_new_tt__AnyHolder(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__AnyHolder(struct soap*, tt__AnyHolder*) default initialize members
/// - int soap_read_tt__AnyHolder(struct soap*, tt__AnyHolder*) deserialize from a source
/// - int soap_write_tt__AnyHolder(struct soap*, tt__AnyHolder*) serialize to a sink
/// - tt__AnyHolder* soap_dup_tt__AnyHolder(struct soap*, tt__AnyHolder* dst, tt__AnyHolder *src) returns deep copy of tt__AnyHolder src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__AnyHolder(tt__AnyHolder*) deep deletes tt__AnyHolder data members, use only on dst after soap_dup_tt__AnyHolder(NULL, tt__AnyHolder *dst, tt__AnyHolder *src) (use soapcpp2 -Ed)
struct tt__AnyHolder
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
};

/// @brief "http://www.onvif.org/ver10/schema":Profile is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A media profile consists of a set of media configurations. Media profiles are used by a client
///   to configure properties of a media stream from an NVT.<br/>
///   An NVT shall provide at least one media profile at boot. An NVT should provide ready to use
///   profiles for the most common media configurations that the device offers.<br/>
///   A profile consists of a set of interconnected configuration entities. Configurations are provided
///   by the NVT and can be either static or created dynamically by the NVT. For example, the
///   dynamic configurations can be created by the NVT depending on current available encoding
///   resources.
/// </BLOCKQUOTE></PRE>
///
/// @note struct tt__Profile operations:
/// - tt__Profile* soap_new_tt__Profile(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Profile(struct soap*, tt__Profile*) default initialize members
/// - int soap_read_tt__Profile(struct soap*, tt__Profile*) deserialize from a source
/// - int soap_write_tt__Profile(struct soap*, tt__Profile*) serialize to a sink
/// - tt__Profile* soap_dup_tt__Profile(struct soap*, tt__Profile* dst, tt__Profile *src) returns deep copy of tt__Profile src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Profile(tt__Profile*) deep deletes tt__Profile data members, use only on dst after soap_dup_tt__Profile(NULL, tt__Profile *dst, tt__Profile *src) (use soapcpp2 -Ed)
struct tt__Profile
{
/// <PRE><BLOCKQUOTE>
///   User readable name of the profile.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Video encoder.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoEncoderConfiguration" of type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
    struct tt__VideoEncoderConfiguration*  VideoEncoderConfiguration      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Unique identifier of the profile.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   A value of true signals that the profile cannot be deleted. Default is false.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "fixed" of type xs:boolean.
  @ enum xsd__boolean*                   fixed                          0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
};

/// @brief "http://www.onvif.org/ver10/schema":ConfigurationEntity is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Base type defining the common properties of a configuration.
/// </BLOCKQUOTE></PRE>
///
/// This type is extended by:
/// - "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration as struct tt__VideoEncoderConfiguration
///
/// @note struct tt__ConfigurationEntity operations:
/// - tt__ConfigurationEntity* soap_new_tt__ConfigurationEntity(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ConfigurationEntity(struct soap*, tt__ConfigurationEntity*) default initialize members
/// - int soap_read_tt__ConfigurationEntity(struct soap*, tt__ConfigurationEntity*) deserialize from a source
/// - int soap_write_tt__ConfigurationEntity(struct soap*, tt__ConfigurationEntity*) serialize to a sink
/// - tt__ConfigurationEntity* soap_dup_tt__ConfigurationEntity(struct soap*, tt__ConfigurationEntity* dst, tt__ConfigurationEntity *src) returns deep copy of tt__ConfigurationEntity src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ConfigurationEntity(tt__ConfigurationEntity*) deep deletes tt__ConfigurationEntity data members, use only on dst after soap_dup_tt__ConfigurationEntity(NULL, tt__ConfigurationEntity *dst, tt__ConfigurationEntity *src) (use soapcpp2 -Ed)
struct tt__ConfigurationEntity
{
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":Capabilities is a complexType.
///
/// @note struct tt__Capabilities operations:
/// - tt__Capabilities* soap_new_tt__Capabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Capabilities(struct soap*, tt__Capabilities*) default initialize members
/// - int soap_read_tt__Capabilities(struct soap*, tt__Capabilities*) deserialize from a source
/// - int soap_write_tt__Capabilities(struct soap*, tt__Capabilities*) serialize to a sink
/// - tt__Capabilities* soap_dup_tt__Capabilities(struct soap*, tt__Capabilities* dst, tt__Capabilities *src) returns deep copy of tt__Capabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Capabilities(tt__Capabilities*) deep deletes tt__Capabilities data members, use only on dst after soap_dup_tt__Capabilities(NULL, tt__Capabilities *dst, tt__Capabilities *src) (use soapcpp2 -Ed)
struct tt__Capabilities
{
/// <PRE><BLOCKQUOTE>
///   Device capabilities
/// </BLOCKQUOTE></PRE>
///
/// Element "Device" of type "http://www.onvif.org/ver10/schema":DeviceCapabilities.
    struct tt__DeviceCapabilities*       Device                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Event capabilities
/// </BLOCKQUOTE></PRE>
///
/// Element "Events" of type "http://www.onvif.org/ver10/schema":EventCapabilities.
    struct tt__EventCapabilities*        Events                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Media capabilities
/// </BLOCKQUOTE></PRE>
///
/// Element "Media" of type "http://www.onvif.org/ver10/schema":MediaCapabilities.
    struct tt__MediaCapabilities*        Media                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   PTZ capabilities
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZ" of type "http://www.onvif.org/ver10/schema":PTZCapabilities.
    struct tt__PTZCapabilities*          PTZ                            0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
};

/// @brief "http://www.onvif.org/ver10/schema":DeviceCapabilities is a complexType.
///
/// @note struct tt__DeviceCapabilities operations:
/// - tt__DeviceCapabilities* soap_new_tt__DeviceCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__DeviceCapabilities(struct soap*, tt__DeviceCapabilities*) default initialize members
/// - int soap_read_tt__DeviceCapabilities(struct soap*, tt__DeviceCapabilities*) deserialize from a source
/// - int soap_write_tt__DeviceCapabilities(struct soap*, tt__DeviceCapabilities*) serialize to a sink
/// - tt__DeviceCapabilities* soap_dup_tt__DeviceCapabilities(struct soap*, tt__DeviceCapabilities* dst, tt__DeviceCapabilities *src) returns deep copy of tt__DeviceCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__DeviceCapabilities(tt__DeviceCapabilities*) deep deletes tt__DeviceCapabilities data members, use only on dst after soap_dup_tt__DeviceCapabilities(NULL, tt__DeviceCapabilities *dst, tt__DeviceCapabilities *src) (use soapcpp2 -Ed)
struct tt__DeviceCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Device service URI.
/// </BLOCKQUOTE></PRE>
///
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   System capabilities.
/// </BLOCKQUOTE></PRE>
///
/// Element "System" of type "http://www.onvif.org/ver10/schema":SystemCapabilities.
    struct tt__SystemCapabilities*       System                         0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
};

/// @brief "http://www.onvif.org/ver10/schema":EventCapabilities is a complexType.
///
/// @note struct tt__EventCapabilities operations:
/// - tt__EventCapabilities* soap_new_tt__EventCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__EventCapabilities(struct soap*, tt__EventCapabilities*) default initialize members
/// - int soap_read_tt__EventCapabilities(struct soap*, tt__EventCapabilities*) deserialize from a source
/// - int soap_write_tt__EventCapabilities(struct soap*, tt__EventCapabilities*) serialize to a sink
/// - tt__EventCapabilities* soap_dup_tt__EventCapabilities(struct soap*, tt__EventCapabilities* dst, tt__EventCapabilities *src) returns deep copy of tt__EventCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__EventCapabilities(tt__EventCapabilities*) deep deletes tt__EventCapabilities data members, use only on dst after soap_dup_tt__EventCapabilities(NULL, tt__EventCapabilities *dst, tt__EventCapabilities *src) (use soapcpp2 -Ed)
struct tt__EventCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Event service URI.
/// </BLOCKQUOTE></PRE>
///
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS Subscription policy is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "WSSubscriptionPolicySupport" of type xs:boolean.
    enum xsd__boolean                    WSSubscriptionPolicySupport    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS Pull Point is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "WSPullPointSupport" of type xs:boolean.
    enum xsd__boolean                    WSPullPointSupport             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS Pausable Subscription Manager Interface is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "WSPausableSubscriptionManagerInterfaceSupport" of type xs:boolean.
    enum xsd__boolean                    WSPausableSubscriptionManagerInterfaceSupport 1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
};

/// @brief "http://www.onvif.org/ver10/schema":MediaCapabilities is a complexType.
///
/// @note struct tt__MediaCapabilities operations:
/// - tt__MediaCapabilities* soap_new_tt__MediaCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__MediaCapabilities(struct soap*, tt__MediaCapabilities*) default initialize members
/// - int soap_read_tt__MediaCapabilities(struct soap*, tt__MediaCapabilities*) deserialize from a source
/// - int soap_write_tt__MediaCapabilities(struct soap*, tt__MediaCapabilities*) serialize to a sink
/// - tt__MediaCapabilities* soap_dup_tt__MediaCapabilities(struct soap*, tt__MediaCapabilities* dst, tt__MediaCapabilities *src) returns deep copy of tt__MediaCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MediaCapabilities(tt__MediaCapabilities*) deep deletes tt__MediaCapabilities data members, use only on dst after soap_dup_tt__MediaCapabilities(NULL, tt__MediaCapabilities *dst, tt__MediaCapabilities *src) (use soapcpp2 -Ed)
struct tt__MediaCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Media service URI.
/// </BLOCKQUOTE></PRE>
///
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Streaming capabilities.
/// </BLOCKQUOTE></PRE>
///
/// Element "StreamingCapabilities" of type "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilities.
    struct tt__RealTimeStreamingCapabilities*  StreamingCapabilities          1;	///< Required element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":MediaCapabilitiesExtension.
    struct tt__MediaCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
};

/// @brief "http://www.onvif.org/ver10/schema":MediaCapabilitiesExtension is a complexType.
///
/// @note struct tt__MediaCapabilitiesExtension operations:
/// - tt__MediaCapabilitiesExtension* soap_new_tt__MediaCapabilitiesExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__MediaCapabilitiesExtension(struct soap*, tt__MediaCapabilitiesExtension*) default initialize members
/// - int soap_read_tt__MediaCapabilitiesExtension(struct soap*, tt__MediaCapabilitiesExtension*) deserialize from a source
/// - int soap_write_tt__MediaCapabilitiesExtension(struct soap*, tt__MediaCapabilitiesExtension*) serialize to a sink
/// - tt__MediaCapabilitiesExtension* soap_dup_tt__MediaCapabilitiesExtension(struct soap*, tt__MediaCapabilitiesExtension* dst, tt__MediaCapabilitiesExtension *src) returns deep copy of tt__MediaCapabilitiesExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MediaCapabilitiesExtension(tt__MediaCapabilitiesExtension*) deep deletes tt__MediaCapabilitiesExtension data members, use only on dst after soap_dup_tt__MediaCapabilitiesExtension(NULL, tt__MediaCapabilitiesExtension *dst, tt__MediaCapabilitiesExtension *src) (use soapcpp2 -Ed)
struct tt__MediaCapabilitiesExtension
{
/// Element "ProfileCapabilities" of type "http://www.onvif.org/ver10/schema":ProfileCapabilities.
    struct tt__ProfileCapabilities*      ProfileCapabilities            1;	///< Required element.
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
};

/// @brief "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilities is a complexType.
///
/// @note struct tt__RealTimeStreamingCapabilities operations:
/// - tt__RealTimeStreamingCapabilities* soap_new_tt__RealTimeStreamingCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__RealTimeStreamingCapabilities(struct soap*, tt__RealTimeStreamingCapabilities*) default initialize members
/// - int soap_read_tt__RealTimeStreamingCapabilities(struct soap*, tt__RealTimeStreamingCapabilities*) deserialize from a source
/// - int soap_write_tt__RealTimeStreamingCapabilities(struct soap*, tt__RealTimeStreamingCapabilities*) serialize to a sink
/// - tt__RealTimeStreamingCapabilities* soap_dup_tt__RealTimeStreamingCapabilities(struct soap*, tt__RealTimeStreamingCapabilities* dst, tt__RealTimeStreamingCapabilities *src) returns deep copy of tt__RealTimeStreamingCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__RealTimeStreamingCapabilities(tt__RealTimeStreamingCapabilities*) deep deletes tt__RealTimeStreamingCapabilities data members, use only on dst after soap_dup_tt__RealTimeStreamingCapabilities(NULL, tt__RealTimeStreamingCapabilities *dst, tt__RealTimeStreamingCapabilities *src) (use soapcpp2 -Ed)
struct tt__RealTimeStreamingCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not RTP multicast is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "RTPMulticast" of type xs:boolean.
    enum xsd__boolean*                   RTPMulticast                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not RTP over TCP is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "RTP_TCP" of type xs:boolean.
    enum xsd__boolean*                   RTP_USCORETCP                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not RTP/RTSP/TCP is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "RTP_RTSP_TCP" of type xs:boolean.
    enum xsd__boolean*                   RTP_USCORERTSP_USCORETCP       0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
};

/// @brief "http://www.onvif.org/ver10/schema":ProfileCapabilities is a complexType.
///
/// @note struct tt__ProfileCapabilities operations:
/// - tt__ProfileCapabilities* soap_new_tt__ProfileCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ProfileCapabilities(struct soap*, tt__ProfileCapabilities*) default initialize members
/// - int soap_read_tt__ProfileCapabilities(struct soap*, tt__ProfileCapabilities*) deserialize from a source
/// - int soap_write_tt__ProfileCapabilities(struct soap*, tt__ProfileCapabilities*) serialize to a sink
/// - tt__ProfileCapabilities* soap_dup_tt__ProfileCapabilities(struct soap*, tt__ProfileCapabilities* dst, tt__ProfileCapabilities *src) returns deep copy of tt__ProfileCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ProfileCapabilities(tt__ProfileCapabilities*) deep deletes tt__ProfileCapabilities data members, use only on dst after soap_dup_tt__ProfileCapabilities(NULL, tt__ProfileCapabilities *dst, tt__ProfileCapabilities *src) (use soapcpp2 -Ed)
struct tt__ProfileCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Maximum number of profiles.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaximumNumberOfProfiles" of type xs:int.
    int                                  MaximumNumberOfProfiles        1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
};

/// @brief "http://www.onvif.org/ver10/schema":SystemCapabilities is a complexType.
///
/// @note struct tt__SystemCapabilities operations:
/// - tt__SystemCapabilities* soap_new_tt__SystemCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__SystemCapabilities(struct soap*, tt__SystemCapabilities*) default initialize members
/// - int soap_read_tt__SystemCapabilities(struct soap*, tt__SystemCapabilities*) deserialize from a source
/// - int soap_write_tt__SystemCapabilities(struct soap*, tt__SystemCapabilities*) serialize to a sink
/// - tt__SystemCapabilities* soap_dup_tt__SystemCapabilities(struct soap*, tt__SystemCapabilities* dst, tt__SystemCapabilities *src) returns deep copy of tt__SystemCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__SystemCapabilities(tt__SystemCapabilities*) deep deletes tt__SystemCapabilities data members, use only on dst after soap_dup_tt__SystemCapabilities(NULL, tt__SystemCapabilities *dst, tt__SystemCapabilities *src) (use soapcpp2 -Ed)
struct tt__SystemCapabilities
{
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS Discovery resolve requests are supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "DiscoveryResolve" of type xs:boolean.
    enum xsd__boolean                    DiscoveryResolve               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS-Discovery Bye is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "DiscoveryBye" of type xs:boolean.
    enum xsd__boolean                    DiscoveryBye                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates supported ONVIF version(s).
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__OnvifVersion* is 1..unbounded.
  $ int                                  __sizeSupportedVersions        1;
/// Array struct tt__OnvifVersion* of size 1..unbounded.
    struct tt__OnvifVersion*             SupportedVersions              1;	///< Multiple elements.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
};

/// @brief "http://www.onvif.org/ver10/schema":OnvifVersion is a complexType.
///
/// @note struct tt__OnvifVersion operations:
/// - tt__OnvifVersion* soap_new_tt__OnvifVersion(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__OnvifVersion(struct soap*, tt__OnvifVersion*) default initialize members
/// - int soap_read_tt__OnvifVersion(struct soap*, tt__OnvifVersion*) deserialize from a source
/// - int soap_write_tt__OnvifVersion(struct soap*, tt__OnvifVersion*) serialize to a sink
/// - tt__OnvifVersion* soap_dup_tt__OnvifVersion(struct soap*, tt__OnvifVersion* dst, tt__OnvifVersion *src) returns deep copy of tt__OnvifVersion src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__OnvifVersion(tt__OnvifVersion*) deep deletes tt__OnvifVersion data members, use only on dst after soap_dup_tt__OnvifVersion(NULL, tt__OnvifVersion *dst, tt__OnvifVersion *src) (use soapcpp2 -Ed)
struct tt__OnvifVersion
{
/// <PRE><BLOCKQUOTE>
///   Major version number.
/// </BLOCKQUOTE></PRE>
///
/// Element "Major" of type xs:int.
    int                                  Major                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Two digit minor version number (e.g. X.0.1 maps to "01" and X.2.1 maps to "21" where X stands for Major version number).
/// </BLOCKQUOTE></PRE>
///
/// Element "Minor" of type xs:int.
    int                                  Minor                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZCapabilities is a complexType.
///
/// @note struct tt__PTZCapabilities operations:
/// - tt__PTZCapabilities* soap_new_tt__PTZCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PTZCapabilities(struct soap*, tt__PTZCapabilities*) default initialize members
/// - int soap_read_tt__PTZCapabilities(struct soap*, tt__PTZCapabilities*) deserialize from a source
/// - int soap_write_tt__PTZCapabilities(struct soap*, tt__PTZCapabilities*) serialize to a sink
/// - tt__PTZCapabilities* soap_dup_tt__PTZCapabilities(struct soap*, tt__PTZCapabilities* dst, tt__PTZCapabilities *src) returns deep copy of tt__PTZCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZCapabilities(tt__PTZCapabilities*) deep deletes tt__PTZCapabilities data members, use only on dst after soap_dup_tt__PTZCapabilities(NULL, tt__PTZCapabilities *dst, tt__PTZCapabilities *src) (use soapcpp2 -Ed)
struct tt__PTZCapabilities
{
/// <PRE><BLOCKQUOTE>
///   PTZ service URI.
/// </BLOCKQUOTE></PRE>
///
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
};

/// @brief "http://www.onvif.org/ver10/schema":PanTiltLimits is a complexType.
///
/// @note struct tt__PanTiltLimits operations:
/// - tt__PanTiltLimits* soap_new_tt__PanTiltLimits(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PanTiltLimits(struct soap*, tt__PanTiltLimits*) default initialize members
/// - int soap_read_tt__PanTiltLimits(struct soap*, tt__PanTiltLimits*) deserialize from a source
/// - int soap_write_tt__PanTiltLimits(struct soap*, tt__PanTiltLimits*) serialize to a sink
/// - tt__PanTiltLimits* soap_dup_tt__PanTiltLimits(struct soap*, tt__PanTiltLimits* dst, tt__PanTiltLimits *src) returns deep copy of tt__PanTiltLimits src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PanTiltLimits(tt__PanTiltLimits*) deep deletes tt__PanTiltLimits data members, use only on dst after soap_dup_tt__PanTiltLimits(NULL, tt__PanTiltLimits *dst, tt__PanTiltLimits *src) (use soapcpp2 -Ed)
struct tt__PanTiltLimits
{
/// <PRE><BLOCKQUOTE>
///   A range of pan tilt limits.
/// </BLOCKQUOTE></PRE>
///
/// Element "Range" of type "http://www.onvif.org/ver10/schema":Space2DDescription.
    struct tt__Space2DDescription*       Range                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":ZoomLimits is a complexType.
///
/// @note struct tt__ZoomLimits operations:
/// - tt__ZoomLimits* soap_new_tt__ZoomLimits(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ZoomLimits(struct soap*, tt__ZoomLimits*) default initialize members
/// - int soap_read_tt__ZoomLimits(struct soap*, tt__ZoomLimits*) deserialize from a source
/// - int soap_write_tt__ZoomLimits(struct soap*, tt__ZoomLimits*) serialize to a sink
/// - tt__ZoomLimits* soap_dup_tt__ZoomLimits(struct soap*, tt__ZoomLimits* dst, tt__ZoomLimits *src) returns deep copy of tt__ZoomLimits src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ZoomLimits(tt__ZoomLimits*) deep deletes tt__ZoomLimits data members, use only on dst after soap_dup_tt__ZoomLimits(NULL, tt__ZoomLimits *dst, tt__ZoomLimits *src) (use soapcpp2 -Ed)
struct tt__ZoomLimits
{
/// <PRE><BLOCKQUOTE>
///   A range of zoom limit
/// </BLOCKQUOTE></PRE>
///
/// Element "Range" of type "http://www.onvif.org/ver10/schema":Space1DDescription.
    struct tt__Space1DDescription*       Range                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZSpaces is a complexType.
///
/// @note struct tt__PTZSpaces operations:
/// - tt__PTZSpaces* soap_new_tt__PTZSpaces(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PTZSpaces(struct soap*, tt__PTZSpaces*) default initialize members
/// - int soap_read_tt__PTZSpaces(struct soap*, tt__PTZSpaces*) deserialize from a source
/// - int soap_write_tt__PTZSpaces(struct soap*, tt__PTZSpaces*) serialize to a sink
/// - tt__PTZSpaces* soap_dup_tt__PTZSpaces(struct soap*, tt__PTZSpaces* dst, tt__PTZSpaces *src) returns deep copy of tt__PTZSpaces src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZSpaces(tt__PTZSpaces*) deep deletes tt__PTZSpaces data members, use only on dst after soap_dup_tt__PTZSpaces(NULL, tt__PTZSpaces *dst, tt__PTZSpaces *src) (use soapcpp2 -Ed)
struct tt__PTZSpaces
{
/// <PRE><BLOCKQUOTE>
///   The generic Pan/Tilt velocity space shall be provided by every PTZ node, since it does not relate to a specific physical range. Instead, the range should be defined as a range of the PTZ units speed normalized to the range -1 to 1, where a positive velocity would map to clockwise rotation or movement in the right/up direction. A signed speed can be independently specified for the pan and tilt component resulting in the following space description.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__Space2DDescription* is 0..unbounded.
  $ int                                  __sizeContinuousPanTiltVelocitySpace 0;
/// Array struct tt__Space2DDescription* of size 0..unbounded.
    struct tt__Space2DDescription*       ContinuousPanTiltVelocitySpace 0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   The generic zoom velocity space specifies a zoom factor velocity without knowing the underlying physical model. The range should be normalized from -1 to 1, where a positive velocity would map to TELE direction. A generic zoom velocity space description resembles the following.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__Space1DDescription* is 0..unbounded.
  $ int                                  __sizeContinuousZoomVelocitySpace 0;
/// Array struct tt__Space1DDescription* of size 0..unbounded.
    struct tt__Space1DDescription*       ContinuousZoomVelocitySpace    0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   The speed space specifies the speed for a Pan/Tilt movement when moving to an absolute position or to a relative translation. In contrast to the velocity spaces, speed spaces do not contain any directional information. The speed of a combined Pan/Tilt movement is represented by a single non-negative scalar value.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__Space1DDescription* is 0..unbounded.
  $ int                                  __sizePanTiltSpeedSpace        0;
/// Array struct tt__Space1DDescription* of size 0..unbounded.
    struct tt__Space1DDescription*       PanTiltSpeedSpace              0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   The speed space specifies the speed for a Zoom movement when moving to an absolute position or to a relative translation. In contrast to the velocity spaces, speed spaces do not contain any directional information.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__Space1DDescription* is 0..unbounded.
  $ int                                  __sizeZoomSpeedSpace           0;
/// Array struct tt__Space1DDescription* of size 0..unbounded.
    struct tt__Space1DDescription*       ZoomSpeedSpace                 0;	///< Multiple elements.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
};

/// @brief "http://www.onvif.org/ver10/schema":Space2DDescription is a complexType.
///
/// @note struct tt__Space2DDescription operations:
/// - tt__Space2DDescription* soap_new_tt__Space2DDescription(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Space2DDescription(struct soap*, tt__Space2DDescription*) default initialize members
/// - int soap_read_tt__Space2DDescription(struct soap*, tt__Space2DDescription*) deserialize from a source
/// - int soap_write_tt__Space2DDescription(struct soap*, tt__Space2DDescription*) serialize to a sink
/// - tt__Space2DDescription* soap_dup_tt__Space2DDescription(struct soap*, tt__Space2DDescription* dst, tt__Space2DDescription *src) returns deep copy of tt__Space2DDescription src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Space2DDescription(tt__Space2DDescription*) deep deletes tt__Space2DDescription data members, use only on dst after soap_dup_tt__Space2DDescription(NULL, tt__Space2DDescription *dst, tt__Space2DDescription *src) (use soapcpp2 -Ed)
struct tt__Space2DDescription
{
/// <PRE><BLOCKQUOTE>
///   A URI of coordinate systems.
/// </BLOCKQUOTE></PRE>
///
/// Element "URI" of type xs:anyURI.
    xsd__anyURI                          URI                            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A range of x-axis.
/// </BLOCKQUOTE></PRE>
///
/// Element "XRange" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               XRange                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A range of y-axis.
/// </BLOCKQUOTE></PRE>
///
/// Element "YRange" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               YRange                         1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":Space1DDescription is a complexType.
///
/// @note struct tt__Space1DDescription operations:
/// - tt__Space1DDescription* soap_new_tt__Space1DDescription(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Space1DDescription(struct soap*, tt__Space1DDescription*) default initialize members
/// - int soap_read_tt__Space1DDescription(struct soap*, tt__Space1DDescription*) deserialize from a source
/// - int soap_write_tt__Space1DDescription(struct soap*, tt__Space1DDescription*) serialize to a sink
/// - tt__Space1DDescription* soap_dup_tt__Space1DDescription(struct soap*, tt__Space1DDescription* dst, tt__Space1DDescription *src) returns deep copy of tt__Space1DDescription src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Space1DDescription(tt__Space1DDescription*) deep deletes tt__Space1DDescription data members, use only on dst after soap_dup_tt__Space1DDescription(NULL, tt__Space1DDescription *dst, tt__Space1DDescription *src) (use soapcpp2 -Ed)
struct tt__Space1DDescription
{
/// <PRE><BLOCKQUOTE>
///   A URI of coordinate systems.
/// </BLOCKQUOTE></PRE>
///
/// Element "URI" of type xs:anyURI.
    xsd__anyURI                          URI                            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A range of x-axis.
/// </BLOCKQUOTE></PRE>
///
/// Element "XRange" of type "http://www.onvif.org/ver10/schema":FloatRange.
    struct tt__FloatRange*               XRange                         1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":Vector2D is a complexType.
///
/// @note struct tt__Vector2D operations:
/// - tt__Vector2D* soap_new_tt__Vector2D(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Vector2D(struct soap*, tt__Vector2D*) default initialize members
/// - int soap_read_tt__Vector2D(struct soap*, tt__Vector2D*) deserialize from a source
/// - int soap_write_tt__Vector2D(struct soap*, tt__Vector2D*) serialize to a sink
/// - tt__Vector2D* soap_dup_tt__Vector2D(struct soap*, tt__Vector2D* dst, tt__Vector2D *src) returns deep copy of tt__Vector2D src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Vector2D(tt__Vector2D*) deep deletes tt__Vector2D data members, use only on dst after soap_dup_tt__Vector2D(NULL, tt__Vector2D *dst, tt__Vector2D *src) (use soapcpp2 -Ed)
struct tt__Vector2D
{
/// Attribute "x" of type xs:float.
  @ float                                x                              1;	///< Required attribute.
/// Attribute "y" of type xs:float.
  @ float                                y                              1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Pan/tilt coordinate space selector. The following options are defined:<ul>
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/PositionGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/TranslationGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/VelocityGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/GenericSpeedSpace</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Attribute "space" of type xs:anyURI.
  @ xsd__anyURI                          space                          0;	///< Optional attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":Vector1D is a complexType.
///
/// @note struct tt__Vector1D operations:
/// - tt__Vector1D* soap_new_tt__Vector1D(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Vector1D(struct soap*, tt__Vector1D*) default initialize members
/// - int soap_read_tt__Vector1D(struct soap*, tt__Vector1D*) deserialize from a source
/// - int soap_write_tt__Vector1D(struct soap*, tt__Vector1D*) serialize to a sink
/// - tt__Vector1D* soap_dup_tt__Vector1D(struct soap*, tt__Vector1D* dst, tt__Vector1D *src) returns deep copy of tt__Vector1D src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Vector1D(tt__Vector1D*) deep deletes tt__Vector1D data members, use only on dst after soap_dup_tt__Vector1D(NULL, tt__Vector1D *dst, tt__Vector1D *src) (use soapcpp2 -Ed)
struct tt__Vector1D
{
/// Attribute "x" of type xs:float.
  @ float                                x                              1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Pan/tilt coordinate space selector. The following options are defined:<ul style="">
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/PositionGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/TranslationGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/VelocityGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/GenericSpeedSpace</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Attribute "space" of type xs:anyURI.
  @ xsd__anyURI                          space                          0;	///< Optional attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZVector is a complexType.
///
/// @note struct tt__PTZVector operations:
/// - tt__PTZVector* soap_new_tt__PTZVector(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PTZVector(struct soap*, tt__PTZVector*) default initialize members
/// - int soap_read_tt__PTZVector(struct soap*, tt__PTZVector*) deserialize from a source
/// - int soap_write_tt__PTZVector(struct soap*, tt__PTZVector*) serialize to a sink
/// - tt__PTZVector* soap_dup_tt__PTZVector(struct soap*, tt__PTZVector* dst, tt__PTZVector *src) returns deep copy of tt__PTZVector src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZVector(tt__PTZVector*) deep deletes tt__PTZVector data members, use only on dst after soap_dup_tt__PTZVector(NULL, tt__PTZVector *dst, tt__PTZVector *src) (use soapcpp2 -Ed)
struct tt__PTZVector
{
/// <PRE><BLOCKQUOTE>
///   Pan and tilt position. The x component corresponds to pan and the y component to tilt.
/// </BLOCKQUOTE></PRE>
///
/// Element "PanTilt" of type "http://www.onvif.org/ver10/schema":Vector2D.
    struct tt__Vector2D*                 PanTilt                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A zoom position.
/// </BLOCKQUOTE></PRE>
///
/// Element "Zoom" of type "http://www.onvif.org/ver10/schema":Vector1D.
    struct tt__Vector1D*                 Zoom                           0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZSpeed is a complexType.
///
/// @note struct tt__PTZSpeed operations:
/// - tt__PTZSpeed* soap_new_tt__PTZSpeed(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PTZSpeed(struct soap*, tt__PTZSpeed*) default initialize members
/// - int soap_read_tt__PTZSpeed(struct soap*, tt__PTZSpeed*) deserialize from a source
/// - int soap_write_tt__PTZSpeed(struct soap*, tt__PTZSpeed*) serialize to a sink
/// - tt__PTZSpeed* soap_dup_tt__PTZSpeed(struct soap*, tt__PTZSpeed* dst, tt__PTZSpeed *src) returns deep copy of tt__PTZSpeed src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZSpeed(tt__PTZSpeed*) deep deletes tt__PTZSpeed data members, use only on dst after soap_dup_tt__PTZSpeed(NULL, tt__PTZSpeed *dst, tt__PTZSpeed *src) (use soapcpp2 -Ed)
struct tt__PTZSpeed
{
/// <PRE><BLOCKQUOTE>
///   Pan and tilt speed. The x component corresponds to pan and the y component to tilt. If omitted in a request, the current (if any) PanTilt movement should not be affected.
/// </BLOCKQUOTE></PRE>
///
/// Element "PanTilt" of type "http://www.onvif.org/ver10/schema":Vector2D.
    struct tt__Vector2D*                 PanTilt                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A zoom speed. If omitted in a request, the current (if any) Zoom movement should not be affected.
/// </BLOCKQUOTE></PRE>
///
/// Element "Zoom" of type "http://www.onvif.org/ver10/schema":Vector1D.
    struct tt__Vector1D*                 Zoom                           0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPreset is a complexType.
///
/// @note struct tt__PTZPreset operations:
/// - tt__PTZPreset* soap_new_tt__PTZPreset(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PTZPreset(struct soap*, tt__PTZPreset*) default initialize members
/// - int soap_read_tt__PTZPreset(struct soap*, tt__PTZPreset*) deserialize from a source
/// - int soap_write_tt__PTZPreset(struct soap*, tt__PTZPreset*) serialize to a sink
/// - tt__PTZPreset* soap_dup_tt__PTZPreset(struct soap*, tt__PTZPreset* dst, tt__PTZPreset *src) returns deep copy of tt__PTZPreset src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZPreset(tt__PTZPreset*) deep deletes tt__PTZPreset data members, use only on dst after soap_dup_tt__PTZPreset(NULL, tt__PTZPreset *dst, tt__PTZPreset *src) (use soapcpp2 -Ed)
struct tt__PTZPreset
{
/// <PRE><BLOCKQUOTE>
///   A list of preset position name.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A list of preset position.
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZPosition" of type "http://www.onvif.org/ver10/schema":PTZVector.
    struct tt__PTZVector*                PTZPosition                    0;	///< Optional element.

/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZMoveStatus is a complexType.
///
/// @note struct tt__PTZMoveStatus operations:
/// - tt__PTZMoveStatus* soap_new_tt__PTZMoveStatus(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__PTZMoveStatus(struct soap*, tt__PTZMoveStatus*) default initialize members
/// - int soap_read_tt__PTZMoveStatus(struct soap*, tt__PTZMoveStatus*) deserialize from a source
/// - int soap_write_tt__PTZMoveStatus(struct soap*, tt__PTZMoveStatus*) serialize to a sink
/// - tt__PTZMoveStatus* soap_dup_tt__PTZMoveStatus(struct soap*, tt__PTZMoveStatus* dst, tt__PTZMoveStatus *src) returns deep copy of tt__PTZMoveStatus src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__PTZMoveStatus(tt__PTZMoveStatus*) deep deletes tt__PTZMoveStatus data members, use only on dst after soap_dup_tt__PTZMoveStatus(NULL, tt__PTZMoveStatus *dst, tt__PTZMoveStatus *src) (use soapcpp2 -Ed)
struct tt__PTZMoveStatus
{

/// </BLOCKQUOTE></PRE>
///
/// Element "PanTilt" of type "http://www.onvif.org/ver10/schema":MoveStatus.
    enum tt__MoveStatus*                 PanTilt                        0;	///< Optional element.

/// </BLOCKQUOTE></PRE>
///
/// Element "Zoom" of type "http://www.onvif.org/ver10/schema":MoveStatus.
    enum tt__MoveStatus*                 Zoom                           0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":MessageExtension is a complexType.
///
/// @note struct tt__MessageExtension operations:
/// - tt__MessageExtension* soap_new_tt__MessageExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__MessageExtension(struct soap*, tt__MessageExtension*) default initialize members
/// - int soap_read_tt__MessageExtension(struct soap*, tt__MessageExtension*) deserialize from a source
/// - int soap_write_tt__MessageExtension(struct soap*, tt__MessageExtension*) serialize to a sink
/// - tt__MessageExtension* soap_dup_tt__MessageExtension(struct soap*, tt__MessageExtension* dst, tt__MessageExtension *src) returns deep copy of tt__MessageExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MessageExtension(tt__MessageExtension*) deep deletes tt__MessageExtension data members, use only on dst after soap_dup_tt__MessageExtension(NULL, tt__MessageExtension *dst, tt__MessageExtension *src) (use soapcpp2 -Ed)
struct tt__MessageExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":ItemList is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   List of parameters according to the corresponding ItemListDescription.
///   Each item in the list shall have a unique name.
/// </BLOCKQUOTE></PRE>
///
/// @note struct tt__ItemList operations:
/// - tt__ItemList* soap_new_tt__ItemList(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ItemList(struct soap*, tt__ItemList*) default initialize members
/// - int soap_read_tt__ItemList(struct soap*, tt__ItemList*) deserialize from a source
/// - int soap_write_tt__ItemList(struct soap*, tt__ItemList*) serialize to a sink
/// - tt__ItemList* soap_dup_tt__ItemList(struct soap*, tt__ItemList* dst, tt__ItemList *src) returns deep copy of tt__ItemList src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ItemList(tt__ItemList*) deep deletes tt__ItemList data members, use only on dst after soap_dup_tt__ItemList(NULL, tt__ItemList *dst, tt__ItemList *src) (use soapcpp2 -Ed)
struct tt__ItemList
{
/// <PRE><BLOCKQUOTE>
///   Value name pair as defined by the corresponding description.
/// </BLOCKQUOTE></PRE>
///
/// Size of SimpleItem array is 0..unbounded.
  $ int                                  __sizeSimpleItem               0;
/// @note struct _tt__ItemList_SimpleItem operations:
/// - _tt__ItemList_SimpleItem* soap_new__tt__ItemList_SimpleItem(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tt__ItemList_SimpleItem(struct soap*, _tt__ItemList_SimpleItem*) default initialize members
/// - int soap_read__tt__ItemList_SimpleItem(struct soap*, _tt__ItemList_SimpleItem*) deserialize from a source
/// - int soap_write__tt__ItemList_SimpleItem(struct soap*, _tt__ItemList_SimpleItem*) serialize to a sink
/// - _tt__ItemList_SimpleItem* soap_dup__tt__ItemList_SimpleItem(struct soap*, _tt__ItemList_SimpleItem* dst, _tt__ItemList_SimpleItem *src) returns deep copy of _tt__ItemList_SimpleItem src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tt__ItemList_SimpleItem(_tt__ItemList_SimpleItem*) deep deletes _tt__ItemList_SimpleItem data members, use only on dst after soap_dup__tt__ItemList_SimpleItem(NULL, _tt__ItemList_SimpleItem *dst, _tt__ItemList_SimpleItem *src) (use soapcpp2 -Ed)
    struct _tt__ItemList_SimpleItem
    {
/// <PRE><BLOCKQUOTE>
///   Item name.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Name" of type xs:string.
  @ char*                                Name                           1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Item value. The type is defined in the corresponding description.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Value" of type xs:anySimpleType.
  @ xsd__anySimpleType                   Value                          1;	///< Required attribute.
    }                                   *SimpleItem                     0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Complex value structure.
/// </BLOCKQUOTE></PRE>
///
/// Size of ElementItem array is 0..unbounded.
  $ int                                  __sizeElementItem              0;
/// @note struct _tt__ItemList_ElementItem operations:
/// - _tt__ItemList_ElementItem* soap_new__tt__ItemList_ElementItem(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tt__ItemList_ElementItem(struct soap*, _tt__ItemList_ElementItem*) default initialize members
/// - int soap_read__tt__ItemList_ElementItem(struct soap*, _tt__ItemList_ElementItem*) deserialize from a source
/// - int soap_write__tt__ItemList_ElementItem(struct soap*, _tt__ItemList_ElementItem*) serialize to a sink
/// - _tt__ItemList_ElementItem* soap_dup__tt__ItemList_ElementItem(struct soap*, _tt__ItemList_ElementItem* dst, _tt__ItemList_ElementItem *src) returns deep copy of _tt__ItemList_ElementItem src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tt__ItemList_ElementItem(_tt__ItemList_ElementItem*) deep deletes _tt__ItemList_ElementItem data members, use only on dst after soap_dup__tt__ItemList_ElementItem(NULL, _tt__ItemList_ElementItem *dst, _tt__ItemList_ElementItem *src) (use soapcpp2 -Ed)
    struct _tt__ItemList_ElementItem
    {
/// <any namespace="##any">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Item name.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Name" of type xs:string.
  @ char*                                Name                           1;	///< Required attribute.
    }                                   *ElementItem                    0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ItemListExtension.
    struct tt__ItemListExtension*        Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
};

/// @brief "http://www.onvif.org/ver10/schema":ItemListExtension is a complexType.
///
/// @note struct tt__ItemListExtension operations:
/// - tt__ItemListExtension* soap_new_tt__ItemListExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ItemListExtension(struct soap*, tt__ItemListExtension*) default initialize members
/// - int soap_read_tt__ItemListExtension(struct soap*, tt__ItemListExtension*) deserialize from a source
/// - int soap_write_tt__ItemListExtension(struct soap*, tt__ItemListExtension*) serialize to a sink
/// - tt__ItemListExtension* soap_dup_tt__ItemListExtension(struct soap*, tt__ItemListExtension* dst, tt__ItemListExtension *src) returns deep copy of tt__ItemListExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ItemListExtension(tt__ItemListExtension*) deep deletes tt__ItemListExtension data members, use only on dst after soap_dup_tt__ItemListExtension(NULL, tt__ItemListExtension *dst, tt__ItemListExtension *src) (use soapcpp2 -Ed)
struct tt__ItemListExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":MessageDescription is a complexType.
///
/// @note struct tt__MessageDescription operations:
/// - tt__MessageDescription* soap_new_tt__MessageDescription(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__MessageDescription(struct soap*, tt__MessageDescription*) default initialize members
/// - int soap_read_tt__MessageDescription(struct soap*, tt__MessageDescription*) deserialize from a source
/// - int soap_write_tt__MessageDescription(struct soap*, tt__MessageDescription*) serialize to a sink
/// - tt__MessageDescription* soap_dup_tt__MessageDescription(struct soap*, tt__MessageDescription* dst, tt__MessageDescription *src) returns deep copy of tt__MessageDescription src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MessageDescription(tt__MessageDescription*) deep deletes tt__MessageDescription data members, use only on dst after soap_dup_tt__MessageDescription(NULL, tt__MessageDescription *dst, tt__MessageDescription *src) (use soapcpp2 -Ed)
struct tt__MessageDescription
{
/// <PRE><BLOCKQUOTE>
///   Set of tokens producing this message. The list may only contain SimpleItemDescription items.
///   The set of tokens identify the component within the WS-Endpoint, which is responsible for the producing the message.<br/>
///   For analytics events the token set shall include the VideoSourceConfigurationToken, the VideoAnalyticsConfigurationToken
///   and the name of the analytics module or rule.
/// </BLOCKQUOTE></PRE>
///
/// Element "Source" of type "http://www.onvif.org/ver10/schema":ItemListDescription.
    struct tt__ItemListDescription*      Source                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Describes optional message payload parameters that may be used as key. E.g. object IDs of tracked objects are conveyed as key.
/// </BLOCKQUOTE></PRE>
///
/// Element "Key" of type "http://www.onvif.org/ver10/schema":ItemListDescription.
    struct tt__ItemListDescription*      Key                            0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Describes the payload of the message.
/// </BLOCKQUOTE></PRE>
///
/// Element "Data" of type "http://www.onvif.org/ver10/schema":ItemListDescription.
    struct tt__ItemListDescription*      Data                           0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":MessageDescriptionExtension.
    struct tt__MessageDescriptionExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Must be set to true when the described Message relates to a property. An alternative term of "property" is a "state" in contrast to a pure event, which contains relevant information for only a single point in time.<br/>Default is false.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "IsProperty" of type xs:boolean.
  @ enum xsd__boolean*                   IsProperty                     0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
};

/// @brief "http://www.onvif.org/ver10/schema":MessageDescriptionExtension is a complexType.
///
/// @note struct tt__MessageDescriptionExtension operations:
/// - tt__MessageDescriptionExtension* soap_new_tt__MessageDescriptionExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__MessageDescriptionExtension(struct soap*, tt__MessageDescriptionExtension*) default initialize members
/// - int soap_read_tt__MessageDescriptionExtension(struct soap*, tt__MessageDescriptionExtension*) deserialize from a source
/// - int soap_write_tt__MessageDescriptionExtension(struct soap*, tt__MessageDescriptionExtension*) serialize to a sink
/// - tt__MessageDescriptionExtension* soap_dup_tt__MessageDescriptionExtension(struct soap*, tt__MessageDescriptionExtension* dst, tt__MessageDescriptionExtension *src) returns deep copy of tt__MessageDescriptionExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MessageDescriptionExtension(tt__MessageDescriptionExtension*) deep deletes tt__MessageDescriptionExtension data members, use only on dst after soap_dup_tt__MessageDescriptionExtension(NULL, tt__MessageDescriptionExtension *dst, tt__MessageDescriptionExtension *src) (use soapcpp2 -Ed)
struct tt__MessageDescriptionExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":ItemListDescription is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Describes a list of items. Each item in the list shall have a unique name.
///   The list is designed as linear structure without optional or unbounded elements.
///   Use ElementItems only when complex structures are inevitable.
/// </BLOCKQUOTE></PRE>
///
/// @note struct tt__ItemListDescription operations:
/// - tt__ItemListDescription* soap_new_tt__ItemListDescription(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ItemListDescription(struct soap*, tt__ItemListDescription*) default initialize members
/// - int soap_read_tt__ItemListDescription(struct soap*, tt__ItemListDescription*) deserialize from a source
/// - int soap_write_tt__ItemListDescription(struct soap*, tt__ItemListDescription*) serialize to a sink
/// - tt__ItemListDescription* soap_dup_tt__ItemListDescription(struct soap*, tt__ItemListDescription* dst, tt__ItemListDescription *src) returns deep copy of tt__ItemListDescription src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ItemListDescription(tt__ItemListDescription*) deep deletes tt__ItemListDescription data members, use only on dst after soap_dup_tt__ItemListDescription(NULL, tt__ItemListDescription *dst, tt__ItemListDescription *src) (use soapcpp2 -Ed)
struct tt__ItemListDescription
{
/// <PRE><BLOCKQUOTE>
///   Description of a simple item. The type must be of cathegory simpleType (xs:string, xs:integer, xs:float, ...).
/// </BLOCKQUOTE></PRE>
///
/// Size of SimpleItemDescription array is 0..unbounded.
  $ int                                  __sizeSimpleItemDescription    0;
/// @note struct _tt__ItemListDescription_SimpleItemDescription operations:
/// - _tt__ItemListDescription_SimpleItemDescription* soap_new__tt__ItemListDescription_SimpleItemDescription(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tt__ItemListDescription_SimpleItemDescription(struct soap*, _tt__ItemListDescription_SimpleItemDescription*) default initialize members
/// - int soap_read__tt__ItemListDescription_SimpleItemDescription(struct soap*, _tt__ItemListDescription_SimpleItemDescription*) deserialize from a source
/// - int soap_write__tt__ItemListDescription_SimpleItemDescription(struct soap*, _tt__ItemListDescription_SimpleItemDescription*) serialize to a sink
/// - _tt__ItemListDescription_SimpleItemDescription* soap_dup__tt__ItemListDescription_SimpleItemDescription(struct soap*, _tt__ItemListDescription_SimpleItemDescription* dst, _tt__ItemListDescription_SimpleItemDescription *src) returns deep copy of _tt__ItemListDescription_SimpleItemDescription src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tt__ItemListDescription_SimpleItemDescription(_tt__ItemListDescription_SimpleItemDescription*) deep deletes _tt__ItemListDescription_SimpleItemDescription data members, use only on dst after soap_dup__tt__ItemListDescription_SimpleItemDescription(NULL, _tt__ItemListDescription_SimpleItemDescription *dst, _tt__ItemListDescription_SimpleItemDescription *src) (use soapcpp2 -Ed)
    struct _tt__ItemListDescription_SimpleItemDescription
    {
/// <PRE><BLOCKQUOTE>
///   Item name. Must be unique within a list.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Name" of type xs:string.
  @ char*                                Name                           1;	///< Required attribute.
/// Attribute "Type" of type xs:QName.
  @ _QName                               Type                           1;	///< Required attribute.
    }                                   *SimpleItemDescription          0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Description of a complex type. The Type must reference a defined type.
/// </BLOCKQUOTE></PRE>
///
/// Size of ElementItemDescription array is 0..unbounded.
  $ int                                  __sizeElementItemDescription   0;
/// @note struct _tt__ItemListDescription_ElementItemDescription operations:
/// - _tt__ItemListDescription_ElementItemDescription* soap_new__tt__ItemListDescription_ElementItemDescription(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tt__ItemListDescription_ElementItemDescription(struct soap*, _tt__ItemListDescription_ElementItemDescription*) default initialize members
/// - int soap_read__tt__ItemListDescription_ElementItemDescription(struct soap*, _tt__ItemListDescription_ElementItemDescription*) deserialize from a source
/// - int soap_write__tt__ItemListDescription_ElementItemDescription(struct soap*, _tt__ItemListDescription_ElementItemDescription*) serialize to a sink
/// - _tt__ItemListDescription_ElementItemDescription* soap_dup__tt__ItemListDescription_ElementItemDescription(struct soap*, _tt__ItemListDescription_ElementItemDescription* dst, _tt__ItemListDescription_ElementItemDescription *src) returns deep copy of _tt__ItemListDescription_ElementItemDescription src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tt__ItemListDescription_ElementItemDescription(_tt__ItemListDescription_ElementItemDescription*) deep deletes _tt__ItemListDescription_ElementItemDescription data members, use only on dst after soap_dup__tt__ItemListDescription_ElementItemDescription(NULL, _tt__ItemListDescription_ElementItemDescription *dst, _tt__ItemListDescription_ElementItemDescription *src) (use soapcpp2 -Ed)
    struct _tt__ItemListDescription_ElementItemDescription
    {
/// <PRE><BLOCKQUOTE>
///   Item name. Must be unique within a list.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Name" of type xs:string.
  @ char*                                Name                           1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   The type of the item. The Type must reference a defined type.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Type" of type xs:QName.
  @ _QName                               Type                           1;	///< Required attribute.
    }                                   *ElementItemDescription         0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ItemListDescriptionExtension.
    struct tt__ItemListDescriptionExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
};

/// @brief "http://www.onvif.org/ver10/schema":ItemListDescriptionExtension is a complexType.
///
/// @note struct tt__ItemListDescriptionExtension operations:
/// - tt__ItemListDescriptionExtension* soap_new_tt__ItemListDescriptionExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__ItemListDescriptionExtension(struct soap*, tt__ItemListDescriptionExtension*) default initialize members
/// - int soap_read_tt__ItemListDescriptionExtension(struct soap*, tt__ItemListDescriptionExtension*) deserialize from a source
/// - int soap_write_tt__ItemListDescriptionExtension(struct soap*, tt__ItemListDescriptionExtension*) serialize to a sink
/// - tt__ItemListDescriptionExtension* soap_dup_tt__ItemListDescriptionExtension(struct soap*, tt__ItemListDescriptionExtension* dst, tt__ItemListDescriptionExtension *src) returns deep copy of tt__ItemListDescriptionExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__ItemListDescriptionExtension(tt__ItemListDescriptionExtension*) deep deletes tt__ItemListDescriptionExtension data members, use only on dst after soap_dup_tt__ItemListDescriptionExtension(NULL, tt__ItemListDescriptionExtension *dst, tt__ItemListDescriptionExtension *src) (use soapcpp2 -Ed)
struct tt__ItemListDescriptionExtension
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoResolution is a complexType.
///
/// @note struct tt__VideoResolution operations:
/// - tt__VideoResolution* soap_new_tt__VideoResolution(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__VideoResolution(struct soap*, tt__VideoResolution*) default initialize members
/// - int soap_read_tt__VideoResolution(struct soap*, tt__VideoResolution*) deserialize from a source
/// - int soap_write_tt__VideoResolution(struct soap*, tt__VideoResolution*) serialize to a sink
/// - tt__VideoResolution* soap_dup_tt__VideoResolution(struct soap*, tt__VideoResolution* dst, tt__VideoResolution *src) returns deep copy of tt__VideoResolution src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoResolution(tt__VideoResolution*) deep deletes tt__VideoResolution data members, use only on dst after soap_dup_tt__VideoResolution(NULL, tt__VideoResolution *dst, tt__VideoResolution *src) (use soapcpp2 -Ed)
struct tt__VideoResolution
{
/// <PRE><BLOCKQUOTE>
///   Number of the columns of the Video image.
/// </BLOCKQUOTE></PRE>
///
/// Element "Width" of type xs:int.
    int                                  Width                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of the lines of the Video image.
/// </BLOCKQUOTE></PRE>
///
/// Element "Height" of type xs:int.
    int                                  Height                         1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoRateControl is a complexType.
///
/// @note struct tt__VideoRateControl operations:
/// - tt__VideoRateControl* soap_new_tt__VideoRateControl(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__VideoRateControl(struct soap*, tt__VideoRateControl*) default initialize members
/// - int soap_read_tt__VideoRateControl(struct soap*, tt__VideoRateControl*) deserialize from a source
/// - int soap_write_tt__VideoRateControl(struct soap*, tt__VideoRateControl*) serialize to a sink
/// - tt__VideoRateControl* soap_dup_tt__VideoRateControl(struct soap*, tt__VideoRateControl* dst, tt__VideoRateControl *src) returns deep copy of tt__VideoRateControl src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoRateControl(tt__VideoRateControl*) deep deletes tt__VideoRateControl data members, use only on dst after soap_dup_tt__VideoRateControl(NULL, tt__VideoRateControl *dst, tt__VideoRateControl *src) (use soapcpp2 -Ed)
struct tt__VideoRateControl
{
/// <PRE><BLOCKQUOTE>
///   Maximum output framerate in fps. If an EncodingInterval is provided the resulting encoded framerate will be reduced by the given factor.
/// </BLOCKQUOTE></PRE>
///
/// Element "FrameRateLimit" of type xs:int.
    int                                  FrameRateLimit                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Interval at which images are encoded and transmitted. (A value of 1 means that every frame is encoded, a value of 2 means that every 2nd frame is encoded ...)
/// </BLOCKQUOTE></PRE>
///
/// Element "EncodingInterval" of type xs:int.
    int                                  EncodingInterval               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   the maximum output bitrate in kbps
/// </BLOCKQUOTE></PRE>
///
/// Element "BitrateLimit" of type xs:int.
    int                                  BitrateLimit                   1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":Mpeg4Configuration is a complexType.
///
/// @note struct tt__Mpeg4Configuration operations:
/// - tt__Mpeg4Configuration* soap_new_tt__Mpeg4Configuration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Mpeg4Configuration(struct soap*, tt__Mpeg4Configuration*) default initialize members
/// - int soap_read_tt__Mpeg4Configuration(struct soap*, tt__Mpeg4Configuration*) deserialize from a source
/// - int soap_write_tt__Mpeg4Configuration(struct soap*, tt__Mpeg4Configuration*) serialize to a sink
/// - tt__Mpeg4Configuration* soap_dup_tt__Mpeg4Configuration(struct soap*, tt__Mpeg4Configuration* dst, tt__Mpeg4Configuration *src) returns deep copy of tt__Mpeg4Configuration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Mpeg4Configuration(tt__Mpeg4Configuration*) deep deletes tt__Mpeg4Configuration data members, use only on dst after soap_dup_tt__Mpeg4Configuration(NULL, tt__Mpeg4Configuration *dst, tt__Mpeg4Configuration *src) (use soapcpp2 -Ed)
struct tt__Mpeg4Configuration
{
/// <PRE><BLOCKQUOTE>
///   Determines the interval in which the I-Frames will be coded. An entry of 1 indicates I-Frames are continuously generated. An entry of 2 indicates that every 2nd image is an I-Frame, and 3 only every 3rd frame, etc. The frames in between are coded as P or B Frames.
/// </BLOCKQUOTE></PRE>
///
/// Element "GovLength" of type xs:int.
    int                                  GovLength                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   the Mpeg4 profile, either simple profile (SP) or advanced simple profile (ASP)
/// </BLOCKQUOTE></PRE>
///
/// Element "Mpeg4Profile" of type "http://www.onvif.org/ver10/schema":Mpeg4Profile.
    enum tt__Mpeg4Profile                Mpeg4Profile                   1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":H264Configuration is a complexType.
///
/// @note struct tt__H264Configuration operations:
/// - tt__H264Configuration* soap_new_tt__H264Configuration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__H264Configuration(struct soap*, tt__H264Configuration*) default initialize members
/// - int soap_read_tt__H264Configuration(struct soap*, tt__H264Configuration*) deserialize from a source
/// - int soap_write_tt__H264Configuration(struct soap*, tt__H264Configuration*) serialize to a sink
/// - tt__H264Configuration* soap_dup_tt__H264Configuration(struct soap*, tt__H264Configuration* dst, tt__H264Configuration *src) returns deep copy of tt__H264Configuration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__H264Configuration(tt__H264Configuration*) deep deletes tt__H264Configuration data members, use only on dst after soap_dup_tt__H264Configuration(NULL, tt__H264Configuration *dst, tt__H264Configuration *src) (use soapcpp2 -Ed)
struct tt__H264Configuration
{
/// <PRE><BLOCKQUOTE>
///   Group of Video frames length. Determines typically the interval in which the I-Frames will be coded. An entry of 1 indicates I-Frames are continuously generated. An entry of 2 indicates that every 2nd image is an I-Frame, and 3 only every 3rd frame, etc. The frames in between are coded as P or B Frames.
/// </BLOCKQUOTE></PRE>
///
/// Element "GovLength" of type xs:int.
    int                                  GovLength                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   the H.264 profile, either baseline, main, extended or high
/// </BLOCKQUOTE></PRE>
///
/// Element "H264Profile" of type "http://www.onvif.org/ver10/schema":H264Profile.
    enum tt__H264Profile                 H264Profile                    1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoEncoderConfigurationOptions is a complexType.
///
/// @note struct tt__VideoEncoderConfigurationOptions operations:
/// - tt__VideoEncoderConfigurationOptions* soap_new_tt__VideoEncoderConfigurationOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__VideoEncoderConfigurationOptions(struct soap*, tt__VideoEncoderConfigurationOptions*) default initialize members
/// - int soap_read_tt__VideoEncoderConfigurationOptions(struct soap*, tt__VideoEncoderConfigurationOptions*) deserialize from a source
/// - int soap_write_tt__VideoEncoderConfigurationOptions(struct soap*, tt__VideoEncoderConfigurationOptions*) serialize to a sink
/// - tt__VideoEncoderConfigurationOptions* soap_dup_tt__VideoEncoderConfigurationOptions(struct soap*, tt__VideoEncoderConfigurationOptions* dst, tt__VideoEncoderConfigurationOptions *src) returns deep copy of tt__VideoEncoderConfigurationOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoEncoderConfigurationOptions(tt__VideoEncoderConfigurationOptions*) deep deletes tt__VideoEncoderConfigurationOptions data members, use only on dst after soap_dup_tt__VideoEncoderConfigurationOptions(NULL, tt__VideoEncoderConfigurationOptions *dst, tt__VideoEncoderConfigurationOptions *src) (use soapcpp2 -Ed)
struct tt__VideoEncoderConfigurationOptions
{
/// <PRE><BLOCKQUOTE>
///   Range of the quality values. A high value means higher quality.
/// </BLOCKQUOTE></PRE>
///
/// Element "QualityRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 QualityRange                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional JPEG encoder settings ranges (See also Extension element).
/// </BLOCKQUOTE></PRE>
///
/// Element "JPEG" of type "http://www.onvif.org/ver10/schema":JpegOptions.
    struct tt__JpegOptions*              JPEG                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional MPEG-4 encoder settings ranges (See also Extension element).
/// </BLOCKQUOTE></PRE>
///
/// Element "MPEG4" of type "http://www.onvif.org/ver10/schema":Mpeg4Options.
    struct tt__Mpeg4Options*             MPEG4                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional H.264 encoder settings ranges (See also Extension element).
/// </BLOCKQUOTE></PRE>
///
/// Element "H264" of type "http://www.onvif.org/ver10/schema":H264Options.
    struct tt__H264Options*              H264                           0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension.
    struct tt__VideoEncoderOptionsExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates the support for the GuaranteedFrameRate attribute on the VideoEncoderConfiguration element.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "GuaranteedFrameRateSupported" of type xs:boolean.
  @ enum xsd__boolean*                   GuaranteedFrameRateSupported   0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension is a complexType.
///
/// @note struct tt__VideoEncoderOptionsExtension operations:
/// - tt__VideoEncoderOptionsExtension* soap_new_tt__VideoEncoderOptionsExtension(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__VideoEncoderOptionsExtension(struct soap*, tt__VideoEncoderOptionsExtension*) default initialize members
/// - int soap_read_tt__VideoEncoderOptionsExtension(struct soap*, tt__VideoEncoderOptionsExtension*) deserialize from a source
/// - int soap_write_tt__VideoEncoderOptionsExtension(struct soap*, tt__VideoEncoderOptionsExtension*) serialize to a sink
/// - tt__VideoEncoderOptionsExtension* soap_dup_tt__VideoEncoderOptionsExtension(struct soap*, tt__VideoEncoderOptionsExtension* dst, tt__VideoEncoderOptionsExtension *src) returns deep copy of tt__VideoEncoderOptionsExtension src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoEncoderOptionsExtension(tt__VideoEncoderOptionsExtension*) deep deletes tt__VideoEncoderOptionsExtension data members, use only on dst after soap_dup_tt__VideoEncoderOptionsExtension(NULL, tt__VideoEncoderOptionsExtension *dst, tt__VideoEncoderOptionsExtension *src) (use soapcpp2 -Ed)
struct tt__VideoEncoderOptionsExtension
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Optional JPEG encoder settings ranges.
/// </BLOCKQUOTE></PRE>
///
/// Element "JPEG" of type "http://www.onvif.org/ver10/schema":JpegOptions2.
    struct tt__JpegOptions2*             JPEG                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional MPEG-4 encoder settings ranges.
/// </BLOCKQUOTE></PRE>
///
/// Element "MPEG4" of type "http://www.onvif.org/ver10/schema":Mpeg4Options2.
    struct tt__Mpeg4Options2*            MPEG4                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional H.264 encoder settings ranges.
/// </BLOCKQUOTE></PRE>
///
/// Element "H264" of type "http://www.onvif.org/ver10/schema":H264Options2.
    struct tt__H264Options2*             H264                           0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension2.
    struct tt__VideoEncoderOptionsExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension2 is a complexType.
///
/// @note struct tt__VideoEncoderOptionsExtension2 operations:
/// - tt__VideoEncoderOptionsExtension2* soap_new_tt__VideoEncoderOptionsExtension2(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__VideoEncoderOptionsExtension2(struct soap*, tt__VideoEncoderOptionsExtension2*) default initialize members
/// - int soap_read_tt__VideoEncoderOptionsExtension2(struct soap*, tt__VideoEncoderOptionsExtension2*) deserialize from a source
/// - int soap_write_tt__VideoEncoderOptionsExtension2(struct soap*, tt__VideoEncoderOptionsExtension2*) serialize to a sink
/// - tt__VideoEncoderOptionsExtension2* soap_dup_tt__VideoEncoderOptionsExtension2(struct soap*, tt__VideoEncoderOptionsExtension2* dst, tt__VideoEncoderOptionsExtension2 *src) returns deep copy of tt__VideoEncoderOptionsExtension2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoEncoderOptionsExtension2(tt__VideoEncoderOptionsExtension2*) deep deletes tt__VideoEncoderOptionsExtension2 data members, use only on dst after soap_dup_tt__VideoEncoderOptionsExtension2(NULL, tt__VideoEncoderOptionsExtension2 *dst, tt__VideoEncoderOptionsExtension2 *src) (use soapcpp2 -Ed)
struct tt__VideoEncoderOptionsExtension2
{
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
};

/// @brief "http://www.onvif.org/ver10/schema":JpegOptions is a complexType.
///
/// This type is extended by:
/// - "http://www.onvif.org/ver10/schema":JpegOptions2 as struct tt__JpegOptions2
///
/// @note struct tt__JpegOptions operations:
/// - tt__JpegOptions* soap_new_tt__JpegOptions(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__JpegOptions(struct soap*, tt__JpegOptions*) default initialize members
/// - int soap_read_tt__JpegOptions(struct soap*, tt__JpegOptions*) deserialize from a source
/// - int soap_write_tt__JpegOptions(struct soap*, tt__JpegOptions*) serialize to a sink
/// - tt__JpegOptions* soap_dup_tt__JpegOptions(struct soap*, tt__JpegOptions* dst, tt__JpegOptions *src) returns deep copy of tt__JpegOptions src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__JpegOptions(tt__JpegOptions*) deep deletes tt__JpegOptions data members, use only on dst after soap_dup_tt__JpegOptions(NULL, tt__JpegOptions *dst, tt__JpegOptions *src) (use soapcpp2 -Ed)
struct tt__JpegOptions
{
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__VideoResolution* is 1..unbounded.
  $ int                                  __sizeResolutionsAvailable     1;
/// Array struct tt__VideoResolution* of size 1..unbounded.
    struct tt__VideoResolution*          ResolutionsAvailable           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Supported frame rate in fps (frames per second).
/// </BLOCKQUOTE></PRE>
///
/// Element "FrameRateRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 FrameRateRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// </BLOCKQUOTE></PRE>
///
/// Element "EncodingIntervalRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 EncodingIntervalRange          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":Mpeg4Options is a complexType.
///
/// This type is extended by:
/// - "http://www.onvif.org/ver10/schema":Mpeg4Options2 as struct tt__Mpeg4Options2
///
/// @note struct tt__Mpeg4Options operations:
/// - tt__Mpeg4Options* soap_new_tt__Mpeg4Options(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Mpeg4Options(struct soap*, tt__Mpeg4Options*) default initialize members
/// - int soap_read_tt__Mpeg4Options(struct soap*, tt__Mpeg4Options*) deserialize from a source
/// - int soap_write_tt__Mpeg4Options(struct soap*, tt__Mpeg4Options*) serialize to a sink
/// - tt__Mpeg4Options* soap_dup_tt__Mpeg4Options(struct soap*, tt__Mpeg4Options* dst, tt__Mpeg4Options *src) returns deep copy of tt__Mpeg4Options src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Mpeg4Options(tt__Mpeg4Options*) deep deletes tt__Mpeg4Options data members, use only on dst after soap_dup_tt__Mpeg4Options(NULL, tt__Mpeg4Options *dst, tt__Mpeg4Options *src) (use soapcpp2 -Ed)
struct tt__Mpeg4Options
{
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__VideoResolution* is 1..unbounded.
  $ int                                  __sizeResolutionsAvailable     1;
/// Array struct tt__VideoResolution* of size 1..unbounded.
    struct tt__VideoResolution*          ResolutionsAvailable           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Supported group of Video frames length. This value typically corresponds to the I-Frame distance.
/// </BLOCKQUOTE></PRE>
///
/// Element "GovLengthRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 GovLengthRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported frame rate in fps (frames per second).
/// </BLOCKQUOTE></PRE>
///
/// Element "FrameRateRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 FrameRateRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// </BLOCKQUOTE></PRE>
///
/// Element "EncodingIntervalRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 EncodingIntervalRange          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported MPEG-4 profiles.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of enum tt__Mpeg4Profile* is 1..unbounded.
  $ int                                  __sizeMpeg4ProfilesSupported   1;
/// Array enum tt__Mpeg4Profile* of size 1..unbounded.
    enum tt__Mpeg4Profile*               Mpeg4ProfilesSupported         1;	///< Multiple elements.
};

/// @brief "http://www.onvif.org/ver10/schema":H264Options is a complexType.
///
/// This type is extended by:
/// - "http://www.onvif.org/ver10/schema":H264Options2 as struct tt__H264Options2
///
/// @note struct tt__H264Options operations:
/// - tt__H264Options* soap_new_tt__H264Options(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__H264Options(struct soap*, tt__H264Options*) default initialize members
/// - int soap_read_tt__H264Options(struct soap*, tt__H264Options*) deserialize from a source
/// - int soap_write_tt__H264Options(struct soap*, tt__H264Options*) serialize to a sink
/// - tt__H264Options* soap_dup_tt__H264Options(struct soap*, tt__H264Options* dst, tt__H264Options *src) returns deep copy of tt__H264Options src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__H264Options(tt__H264Options*) deep deletes tt__H264Options data members, use only on dst after soap_dup_tt__H264Options(NULL, tt__H264Options *dst, tt__H264Options *src) (use soapcpp2 -Ed)
struct tt__H264Options
{
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__VideoResolution* is 1..unbounded.
  $ int                                  __sizeResolutionsAvailable     1;
/// Array struct tt__VideoResolution* of size 1..unbounded.
    struct tt__VideoResolution*          ResolutionsAvailable           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Supported group of Video frames length. This value typically corresponds to the I-Frame distance.
/// </BLOCKQUOTE></PRE>
///
/// Element "GovLengthRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 GovLengthRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported frame rate in fps (frames per second).
/// </BLOCKQUOTE></PRE>
///
/// Element "FrameRateRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 FrameRateRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// </BLOCKQUOTE></PRE>
///
/// Element "EncodingIntervalRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 EncodingIntervalRange          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported H.264 profiles.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of enum tt__H264Profile* is 1..unbounded.
  $ int                                  __sizeH264ProfilesSupported    1;
/// Array enum tt__H264Profile* of size 1..unbounded.
    enum tt__H264Profile*                H264ProfilesSupported          1;	///< Multiple elements.
};

/// @brief "http://www.onvif.org/ver10/schema":IPAddress is a complexType.
///
/// @note struct tt__IPAddress operations:
/// - tt__IPAddress* soap_new_tt__IPAddress(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__IPAddress(struct soap*, tt__IPAddress*) default initialize members
/// - int soap_read_tt__IPAddress(struct soap*, tt__IPAddress*) deserialize from a source
/// - int soap_write_tt__IPAddress(struct soap*, tt__IPAddress*) serialize to a sink
/// - tt__IPAddress* soap_dup_tt__IPAddress(struct soap*, tt__IPAddress* dst, tt__IPAddress *src) returns deep copy of tt__IPAddress src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__IPAddress(tt__IPAddress*) deep deletes tt__IPAddress data members, use only on dst after soap_dup_tt__IPAddress(NULL, tt__IPAddress *dst, tt__IPAddress *src) (use soapcpp2 -Ed)
struct tt__IPAddress
{
/// <PRE><BLOCKQUOTE>
///   Indicates if the address is an IPv4 or IPv6 address.
/// </BLOCKQUOTE></PRE>
///
/// Element "Type" of type "http://www.onvif.org/ver10/schema":IPType.
    enum tt__IPType                      Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   IPv4 address.
/// </BLOCKQUOTE></PRE>
///
/// Element "IPv4Address" of type "http://www.onvif.org/ver10/schema":IPv4Address.
    tt__IPv4Address                      IPv4Address                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv6 address
/// </BLOCKQUOTE></PRE>
///
/// Element "IPv6Address" of type "http://www.onvif.org/ver10/schema":IPv6Address.
    tt__IPv6Address                      IPv6Address                    0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":MulticastConfiguration is a complexType.
///
/// @note struct tt__MulticastConfiguration operations:
/// - tt__MulticastConfiguration* soap_new_tt__MulticastConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__MulticastConfiguration(struct soap*, tt__MulticastConfiguration*) default initialize members
/// - int soap_read_tt__MulticastConfiguration(struct soap*, tt__MulticastConfiguration*) deserialize from a source
/// - int soap_write_tt__MulticastConfiguration(struct soap*, tt__MulticastConfiguration*) serialize to a sink
/// - tt__MulticastConfiguration* soap_dup_tt__MulticastConfiguration(struct soap*, tt__MulticastConfiguration* dst, tt__MulticastConfiguration *src) returns deep copy of tt__MulticastConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MulticastConfiguration(tt__MulticastConfiguration*) deep deletes tt__MulticastConfiguration data members, use only on dst after soap_dup_tt__MulticastConfiguration(NULL, tt__MulticastConfiguration *dst, tt__MulticastConfiguration *src) (use soapcpp2 -Ed)
struct tt__MulticastConfiguration
{
/// <PRE><BLOCKQUOTE>
///   The multicast address (if this address is set to 0 no multicast streaming is enaled)
/// </BLOCKQUOTE></PRE>
///
/// Element "Address" of type "http://www.onvif.org/ver10/schema":IPAddress.
    struct tt__IPAddress*                Address                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The RTP mutlicast destination port. A device may support RTCP. In this case the port value shall be even to allow the corresponding RTCP stream to be mapped to the next higher (odd) destination port number as defined in the RTSP specification.
/// </BLOCKQUOTE></PRE>
///
/// Element "Port" of type xs:int.
    int                                  Port                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   In case of IPv6 the TTL value is assumed as the hop limit. Note that for IPV6 and administratively scoped IPv4 multicast the primary use for hop limit / TTL is to prevent packets from (endlessly) circulating and not limiting scope. In these cases the address contains the scope.
/// </BLOCKQUOTE></PRE>
///
/// Element "TTL" of type xs:int.
    int                                  TTL                            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Read only property signalling that streaming is persistant. Use the methods StartMulticastStreaming and StopMulticastStreaming to switch its state.
/// </BLOCKQUOTE></PRE>
///
/// Element "AutoStart" of type xs:boolean.
    enum xsd__boolean                    AutoStart                      1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
};

/// @brief "http://www.onvif.org/ver10/schema":MediaUri is a complexType.
///
/// @note struct tt__MediaUri operations:
/// - tt__MediaUri* soap_new_tt__MediaUri(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__MediaUri(struct soap*, tt__MediaUri*) default initialize members
/// - int soap_read_tt__MediaUri(struct soap*, tt__MediaUri*) deserialize from a source
/// - int soap_write_tt__MediaUri(struct soap*, tt__MediaUri*) serialize to a sink
/// - tt__MediaUri* soap_dup_tt__MediaUri(struct soap*, tt__MediaUri* dst, tt__MediaUri *src) returns deep copy of tt__MediaUri src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__MediaUri(tt__MediaUri*) deep deletes tt__MediaUri data members, use only on dst after soap_dup_tt__MediaUri(NULL, tt__MediaUri *dst, tt__MediaUri *src) (use soapcpp2 -Ed)
struct tt__MediaUri
{
/// <PRE><BLOCKQUOTE>
///   Stable Uri to be used for requesting the media stream
/// </BLOCKQUOTE></PRE>
///
/// Element "Uri" of type xs:anyURI.
    xsd__anyURI                          Uri                            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates if the Uri is only valid until the connection is established. The value shall be set to "false".
/// </BLOCKQUOTE></PRE>
///
/// Element "InvalidAfterConnect" of type xs:boolean.
    enum xsd__boolean                    InvalidAfterConnect            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates if the Uri is invalid after a reboot of the device. The value shall be set to "false".
/// </BLOCKQUOTE></PRE>
///
/// Element "InvalidAfterReboot" of type xs:boolean.
    enum xsd__boolean                    InvalidAfterReboot             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Duration how long the Uri is valid. This parameter shall be set to PT0S to indicate that this stream URI is indefinitely valid even if the profile changes
/// </BLOCKQUOTE></PRE>
///
/// Element "Timeout" of type xs:duration.
    xsd__duration                        Timeout                        1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":Message
/// @brief "http://www.onvif.org/ver10/schema":Message is a complexType.
///
/// @note struct _tt__Message operations:
/// - _tt__Message* soap_new__tt__Message(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__tt__Message(struct soap*, _tt__Message*) default initialize members
/// - int soap_read__tt__Message(struct soap*, _tt__Message*) deserialize from a source
/// - int soap_write__tt__Message(struct soap*, _tt__Message*) serialize to a sink
/// - _tt__Message* soap_dup__tt__Message(struct soap*, _tt__Message* dst, _tt__Message *src) returns deep copy of _tt__Message src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__tt__Message(_tt__Message*) deep deletes _tt__Message data members, use only on dst after soap_dup__tt__Message(NULL, _tt__Message *dst, _tt__Message *src) (use soapcpp2 -Ed)
struct _tt__Message
{
/// <PRE><BLOCKQUOTE>
///   Token value pairs that triggered this message. Typically only one item is present.
/// </BLOCKQUOTE></PRE>
///
/// Element "Source" of type "http://www.onvif.org/ver10/schema":ItemList.
    struct tt__ItemList*                 Source                         0;	///< Optional element.
/// Element "Key" of type "http://www.onvif.org/ver10/schema":ItemList.
    struct tt__ItemList*                 Key                            0;	///< Optional element.
/// Element "Data" of type "http://www.onvif.org/ver10/schema":ItemList.
    struct tt__ItemList*                 Data                           0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":MessageExtension.
    struct tt__MessageExtension*         Extension                      0;	///< Optional element.
/// Attribute "UtcTime" of type xs:dateTime.
  @ time_t                               UtcTime                        1;	///< Required attribute.
/// Attribute "PropertyOperation" of type "http://www.onvif.org/ver10/schema":PropertyOperation.
  @ enum tt__PropertyOperation*          PropertyOperation              0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/

/// @brief "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType is a complexType.
///
/// @note struct wsnt__QueryExpressionType operations:
/// - wsnt__QueryExpressionType* soap_new_wsnt__QueryExpressionType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__QueryExpressionType(struct soap*, wsnt__QueryExpressionType*) default initialize members
/// - int soap_read_wsnt__QueryExpressionType(struct soap*, wsnt__QueryExpressionType*) deserialize from a source
/// - int soap_write_wsnt__QueryExpressionType(struct soap*, wsnt__QueryExpressionType*) serialize to a sink
/// - wsnt__QueryExpressionType* soap_dup_wsnt__QueryExpressionType(struct soap*, wsnt__QueryExpressionType* dst, wsnt__QueryExpressionType *src) returns deep copy of wsnt__QueryExpressionType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__QueryExpressionType(wsnt__QueryExpressionType*) deep deletes wsnt__QueryExpressionType data members, use only on dst after soap_dup_wsnt__QueryExpressionType(NULL, wsnt__QueryExpressionType *dst, wsnt__QueryExpressionType *src) (use soapcpp2 -Ed)
struct wsnt__QueryExpressionType
{
/// <any namespace="##any" minOccurs="0" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
/// Attribute "Dialect" of type xs:anyURI.
  @ xsd__anyURI                          Dialect                        1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType is a complexType.
///
/// @note struct wsnt__TopicExpressionType operations:
/// - wsnt__TopicExpressionType* soap_new_wsnt__TopicExpressionType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__TopicExpressionType(struct soap*, wsnt__TopicExpressionType*) default initialize members
/// - int soap_read_wsnt__TopicExpressionType(struct soap*, wsnt__TopicExpressionType*) deserialize from a source
/// - int soap_write_wsnt__TopicExpressionType(struct soap*, wsnt__TopicExpressionType*) serialize to a sink
/// - wsnt__TopicExpressionType* soap_dup_wsnt__TopicExpressionType(struct soap*, wsnt__TopicExpressionType* dst, wsnt__TopicExpressionType *src) returns deep copy of wsnt__TopicExpressionType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__TopicExpressionType(wsnt__TopicExpressionType*) deep deletes wsnt__TopicExpressionType data members, use only on dst after soap_dup_wsnt__TopicExpressionType(NULL, wsnt__TopicExpressionType *dst, wsnt__TopicExpressionType *src) (use soapcpp2 -Ed)
struct wsnt__TopicExpressionType
{
/// <any namespace="##any" minOccurs="0" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
/// Attribute "Dialect" of type xs:anyURI.
  @ xsd__anyURI                          Dialect                        1;	///< Required attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":FilterType is a complexType.
///
/// @note struct wsnt__FilterType operations:
/// - wsnt__FilterType* soap_new_wsnt__FilterType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__FilterType(struct soap*, wsnt__FilterType*) default initialize members
/// - int soap_read_wsnt__FilterType(struct soap*, wsnt__FilterType*) deserialize from a source
/// - int soap_write_wsnt__FilterType(struct soap*, wsnt__FilterType*) serialize to a sink
/// - wsnt__FilterType* soap_dup_wsnt__FilterType(struct soap*, wsnt__FilterType* dst, wsnt__FilterType *src) returns deep copy of wsnt__FilterType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__FilterType(wsnt__FilterType*) deep deletes wsnt__FilterType data members, use only on dst after soap_dup_wsnt__FilterType(NULL, wsnt__FilterType *dst, wsnt__FilterType *src) (use soapcpp2 -Ed)
struct wsnt__FilterType
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicyType is a complexType.
///
/// @note struct wsnt__SubscriptionPolicyType operations:
/// - wsnt__SubscriptionPolicyType* soap_new_wsnt__SubscriptionPolicyType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__SubscriptionPolicyType(struct soap*, wsnt__SubscriptionPolicyType*) default initialize members
/// - int soap_read_wsnt__SubscriptionPolicyType(struct soap*, wsnt__SubscriptionPolicyType*) deserialize from a source
/// - int soap_write_wsnt__SubscriptionPolicyType(struct soap*, wsnt__SubscriptionPolicyType*) serialize to a sink
/// - wsnt__SubscriptionPolicyType* soap_dup_wsnt__SubscriptionPolicyType(struct soap*, wsnt__SubscriptionPolicyType* dst, wsnt__SubscriptionPolicyType *src) returns deep copy of wsnt__SubscriptionPolicyType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__SubscriptionPolicyType(wsnt__SubscriptionPolicyType*) deep deletes wsnt__SubscriptionPolicyType data members, use only on dst after soap_dup_wsnt__SubscriptionPolicyType(NULL, wsnt__SubscriptionPolicyType *dst, wsnt__SubscriptionPolicyType *src) (use soapcpp2 -Ed)
struct wsnt__SubscriptionPolicyType
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":NotificationMessageHolderType is a complexType.
///
/// @note struct wsnt__NotificationMessageHolderType operations:
/// - wsnt__NotificationMessageHolderType* soap_new_wsnt__NotificationMessageHolderType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__NotificationMessageHolderType(struct soap*, wsnt__NotificationMessageHolderType*) default initialize members
/// - int soap_read_wsnt__NotificationMessageHolderType(struct soap*, wsnt__NotificationMessageHolderType*) deserialize from a source
/// - int soap_write_wsnt__NotificationMessageHolderType(struct soap*, wsnt__NotificationMessageHolderType*) serialize to a sink
/// - wsnt__NotificationMessageHolderType* soap_dup_wsnt__NotificationMessageHolderType(struct soap*, wsnt__NotificationMessageHolderType* dst, wsnt__NotificationMessageHolderType *src) returns deep copy of wsnt__NotificationMessageHolderType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__NotificationMessageHolderType(wsnt__NotificationMessageHolderType*) deep deletes wsnt__NotificationMessageHolderType data members, use only on dst after soap_dup_wsnt__NotificationMessageHolderType(NULL, wsnt__NotificationMessageHolderType *dst, wsnt__NotificationMessageHolderType *src) (use soapcpp2 -Ed)
struct wsnt__NotificationMessageHolderType
{
/// Element reference "http://docs.oasis-open.org/wsn/b-2:"SubscriptionReference.
    wsa5__EndpointReferenceType*         SubscriptionReference          0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:"Topic.
    struct wsnt__TopicExpressionType*    Topic                          0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:"ProducerReference.
    wsa5__EndpointReferenceType*         ProducerReference              0;	///< Optional element.
/// @note struct _wsnt__NotificationMessageHolderType_Message operations:
/// - _wsnt__NotificationMessageHolderType_Message* soap_new__wsnt__NotificationMessageHolderType_Message(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__NotificationMessageHolderType_Message(struct soap*, _wsnt__NotificationMessageHolderType_Message*) default initialize members
/// - int soap_read__wsnt__NotificationMessageHolderType_Message(struct soap*, _wsnt__NotificationMessageHolderType_Message*) deserialize from a source
/// - int soap_write__wsnt__NotificationMessageHolderType_Message(struct soap*, _wsnt__NotificationMessageHolderType_Message*) serialize to a sink
/// - _wsnt__NotificationMessageHolderType_Message* soap_dup__wsnt__NotificationMessageHolderType_Message(struct soap*, _wsnt__NotificationMessageHolderType_Message* dst, _wsnt__NotificationMessageHolderType_Message *src) returns deep copy of _wsnt__NotificationMessageHolderType_Message src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__NotificationMessageHolderType_Message(_wsnt__NotificationMessageHolderType_Message*) deep deletes _wsnt__NotificationMessageHolderType_Message data members, use only on dst after soap_dup__wsnt__NotificationMessageHolderType_Message(NULL, _wsnt__NotificationMessageHolderType_Message *dst, _wsnt__NotificationMessageHolderType_Message *src) (use soapcpp2 -Ed)
    struct _wsnt__NotificationMessageHolderType_Message
    {
/// <any namespace="##any" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
    }                                    Message                        1;	///< Required element.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotificationProducerRP
/// @brief "http://docs.oasis-open.org/wsn/b-2":NotificationProducerRP is a complexType.
///
/// @note struct _wsnt__NotificationProducerRP operations:
/// - _wsnt__NotificationProducerRP* soap_new__wsnt__NotificationProducerRP(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__NotificationProducerRP(struct soap*, _wsnt__NotificationProducerRP*) default initialize members
/// - int soap_read__wsnt__NotificationProducerRP(struct soap*, _wsnt__NotificationProducerRP*) deserialize from a source
/// - int soap_write__wsnt__NotificationProducerRP(struct soap*, _wsnt__NotificationProducerRP*) serialize to a sink
/// - _wsnt__NotificationProducerRP* soap_dup__wsnt__NotificationProducerRP(struct soap*, _wsnt__NotificationProducerRP* dst, _wsnt__NotificationProducerRP *src) returns deep copy of _wsnt__NotificationProducerRP src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__NotificationProducerRP(_wsnt__NotificationProducerRP*) deep deletes _wsnt__NotificationProducerRP data members, use only on dst after soap_dup__wsnt__NotificationProducerRP(NULL, _wsnt__NotificationProducerRP *dst, _wsnt__NotificationProducerRP *src) (use soapcpp2 -Ed)
struct _wsnt__NotificationProducerRP
{
/// Size of the dynamic array of values of type struct wsnt__TopicExpressionType* is 0..unbounded.
  $ int                                  __sizeTopicExpression          0;
/// Array struct wsnt__TopicExpressionType* of size 0..unbounded.
    struct wsnt__TopicExpressionType*    TopicExpression_               0;	///< Multiple elements.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:"FixedTopicSet.
    enum xsd__boolean*                   FixedTopicSet                  0 = xsd__boolean__true_;	///< Optional element with default value="true".
/// Size of the dynamic array of values of type xsd__anyURI* is 0..unbounded.
  $ int                                  __sizeTopicExpressionDialect   0;
/// Array xsd__anyURI* of size 0..unbounded.
    xsd__anyURI*                         TopicExpressionDialect_        0;	///< Multiple elements.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:"TopicSet.
    struct wstop__TopicSetType*          wstop__TopicSet                0;	///< Optional element.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionManagerRP
/// @brief "http://docs.oasis-open.org/wsn/b-2":SubscriptionManagerRP is a complexType.
///
/// @note struct _wsnt__SubscriptionManagerRP operations:
/// - _wsnt__SubscriptionManagerRP* soap_new__wsnt__SubscriptionManagerRP(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__SubscriptionManagerRP(struct soap*, _wsnt__SubscriptionManagerRP*) default initialize members
/// - int soap_read__wsnt__SubscriptionManagerRP(struct soap*, _wsnt__SubscriptionManagerRP*) deserialize from a source
/// - int soap_write__wsnt__SubscriptionManagerRP(struct soap*, _wsnt__SubscriptionManagerRP*) serialize to a sink
/// - _wsnt__SubscriptionManagerRP* soap_dup__wsnt__SubscriptionManagerRP(struct soap*, _wsnt__SubscriptionManagerRP* dst, _wsnt__SubscriptionManagerRP *src) returns deep copy of _wsnt__SubscriptionManagerRP src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__SubscriptionManagerRP(_wsnt__SubscriptionManagerRP*) deep deletes _wsnt__SubscriptionManagerRP data members, use only on dst after soap_dup__wsnt__SubscriptionManagerRP(NULL, _wsnt__SubscriptionManagerRP *dst, _wsnt__SubscriptionManagerRP *src) (use soapcpp2 -Ed)
struct _wsnt__SubscriptionManagerRP
{
/// Element reference "http://docs.oasis-open.org/wsn/b-2:"ConsumerReference.
    wsa5__EndpointReferenceType          ConsumerReference              1;	///< Required element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:"Filter.
    struct wsnt__FilterType*             Filter                         0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:"SubscriptionPolicy.
    struct wsnt__SubscriptionPolicyType*  SubscriptionPolicy             0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:"CreationTime.
    time_t*                              CreationTime                   0;	///< Optional element.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Notify
/// @brief "http://docs.oasis-open.org/wsn/b-2":Notify is a complexType.
///
/// @note struct _wsnt__Notify operations:
/// - _wsnt__Notify* soap_new__wsnt__Notify(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__Notify(struct soap*, _wsnt__Notify*) default initialize members
/// - int soap_read__wsnt__Notify(struct soap*, _wsnt__Notify*) deserialize from a source
/// - int soap_write__wsnt__Notify(struct soap*, _wsnt__Notify*) serialize to a sink
/// - _wsnt__Notify* soap_dup__wsnt__Notify(struct soap*, _wsnt__Notify* dst, _wsnt__Notify *src) returns deep copy of _wsnt__Notify src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__Notify(_wsnt__Notify*) deep deletes _wsnt__Notify data members, use only on dst after soap_dup__wsnt__Notify(NULL, _wsnt__Notify *dst, _wsnt__Notify *src) (use soapcpp2 -Ed)
struct _wsnt__Notify
{
/// Size of the dynamic array of values of type struct wsnt__NotificationMessageHolderType* is 1..unbounded.
  $ int                                  __sizeNotificationMessage      1;
/// Array struct wsnt__NotificationMessageHolderType* of size 1..unbounded.
    struct wsnt__NotificationMessageHolderType*  NotificationMessage_           1;	///< Multiple elements.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UseRaw
/// @brief "http://docs.oasis-open.org/wsn/b-2":UseRaw is a complexType.
///
/// @note struct _wsnt__UseRaw operations:
/// - _wsnt__UseRaw* soap_new__wsnt__UseRaw(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UseRaw(struct soap*, _wsnt__UseRaw*) default initialize members
/// - int soap_read__wsnt__UseRaw(struct soap*, _wsnt__UseRaw*) deserialize from a source
/// - int soap_write__wsnt__UseRaw(struct soap*, _wsnt__UseRaw*) serialize to a sink
/// - _wsnt__UseRaw* soap_dup__wsnt__UseRaw(struct soap*, _wsnt__UseRaw* dst, _wsnt__UseRaw *src) returns deep copy of _wsnt__UseRaw src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UseRaw(_wsnt__UseRaw*) deep deletes _wsnt__UseRaw data members, use only on dst after soap_dup__wsnt__UseRaw(NULL, _wsnt__UseRaw *dst, _wsnt__UseRaw *src) (use soapcpp2 -Ed)
struct _wsnt__UseRaw
{
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Subscribe
/// @brief "http://docs.oasis-open.org/wsn/b-2":Subscribe is a complexType.
///
/// @note struct _wsnt__Subscribe operations:
/// - _wsnt__Subscribe* soap_new__wsnt__Subscribe(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__Subscribe(struct soap*, _wsnt__Subscribe*) default initialize members
/// - int soap_read__wsnt__Subscribe(struct soap*, _wsnt__Subscribe*) deserialize from a source
/// - int soap_write__wsnt__Subscribe(struct soap*, _wsnt__Subscribe*) serialize to a sink
/// - _wsnt__Subscribe* soap_dup__wsnt__Subscribe(struct soap*, _wsnt__Subscribe* dst, _wsnt__Subscribe *src) returns deep copy of _wsnt__Subscribe src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__Subscribe(_wsnt__Subscribe*) deep deletes _wsnt__Subscribe data members, use only on dst after soap_dup__wsnt__Subscribe(NULL, _wsnt__Subscribe *dst, _wsnt__Subscribe *src) (use soapcpp2 -Ed)
struct _wsnt__Subscribe
{
/// Element "ConsumerReference" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType          ConsumerReference              1;	///< Required element.
/// Element "Filter" of type "http://docs.oasis-open.org/wsn/b-2":FilterType.
    struct wsnt__FilterType*             Filter                         0;	///< Optional element.
/// Element "InitialTerminationTime" of type "http://docs.oasis-open.org/wsn/b-2":AbsoluteOrRelativeTimeType.
    wsnt__AbsoluteOrRelativeTimeType     InitialTerminationTime         0;	///< Optional element.
/// @note struct _wsnt__Subscribe_SubscriptionPolicy operations:
/// - _wsnt__Subscribe_SubscriptionPolicy* soap_new__wsnt__Subscribe_SubscriptionPolicy(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__Subscribe_SubscriptionPolicy(struct soap*, _wsnt__Subscribe_SubscriptionPolicy*) default initialize members
/// - int soap_read__wsnt__Subscribe_SubscriptionPolicy(struct soap*, _wsnt__Subscribe_SubscriptionPolicy*) deserialize from a source
/// - int soap_write__wsnt__Subscribe_SubscriptionPolicy(struct soap*, _wsnt__Subscribe_SubscriptionPolicy*) serialize to a sink
/// - _wsnt__Subscribe_SubscriptionPolicy* soap_dup__wsnt__Subscribe_SubscriptionPolicy(struct soap*, _wsnt__Subscribe_SubscriptionPolicy* dst, _wsnt__Subscribe_SubscriptionPolicy *src) returns deep copy of _wsnt__Subscribe_SubscriptionPolicy src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__Subscribe_SubscriptionPolicy(_wsnt__Subscribe_SubscriptionPolicy*) deep deletes _wsnt__Subscribe_SubscriptionPolicy data members, use only on dst after soap_dup__wsnt__Subscribe_SubscriptionPolicy(NULL, _wsnt__Subscribe_SubscriptionPolicy *dst, _wsnt__Subscribe_SubscriptionPolicy *src) (use soapcpp2 -Ed)
    struct _wsnt__Subscribe_SubscriptionPolicy
    {
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
    }                                   *SubscriptionPolicy             0;	///< Optional element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscribeResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":SubscribeResponse is a complexType.
///
/// @note struct _wsnt__SubscribeResponse operations:
/// - _wsnt__SubscribeResponse* soap_new__wsnt__SubscribeResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__SubscribeResponse(struct soap*, _wsnt__SubscribeResponse*) default initialize members
/// - int soap_read__wsnt__SubscribeResponse(struct soap*, _wsnt__SubscribeResponse*) deserialize from a source
/// - int soap_write__wsnt__SubscribeResponse(struct soap*, _wsnt__SubscribeResponse*) serialize to a sink
/// - _wsnt__SubscribeResponse* soap_dup__wsnt__SubscribeResponse(struct soap*, _wsnt__SubscribeResponse* dst, _wsnt__SubscribeResponse *src) returns deep copy of _wsnt__SubscribeResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__SubscribeResponse(_wsnt__SubscribeResponse*) deep deletes _wsnt__SubscribeResponse data members, use only on dst after soap_dup__wsnt__SubscribeResponse(NULL, _wsnt__SubscribeResponse *dst, _wsnt__SubscribeResponse *src) (use soapcpp2 -Ed)
struct _wsnt__SubscribeResponse
{
/// Element "SubscriptionReference" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType          SubscriptionReference          1;	///< Required element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:"CurrentTime.
    time_t*                              CurrentTime                    0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:"TerminationTime.
    time_t*                              TerminationTime                0;	///< Optional element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessage
/// @brief "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessage is a complexType.
///
/// @note struct _wsnt__GetCurrentMessage operations:
/// - _wsnt__GetCurrentMessage* soap_new__wsnt__GetCurrentMessage(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__GetCurrentMessage(struct soap*, _wsnt__GetCurrentMessage*) default initialize members
/// - int soap_read__wsnt__GetCurrentMessage(struct soap*, _wsnt__GetCurrentMessage*) deserialize from a source
/// - int soap_write__wsnt__GetCurrentMessage(struct soap*, _wsnt__GetCurrentMessage*) serialize to a sink
/// - _wsnt__GetCurrentMessage* soap_dup__wsnt__GetCurrentMessage(struct soap*, _wsnt__GetCurrentMessage* dst, _wsnt__GetCurrentMessage *src) returns deep copy of _wsnt__GetCurrentMessage src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__GetCurrentMessage(_wsnt__GetCurrentMessage*) deep deletes _wsnt__GetCurrentMessage data members, use only on dst after soap_dup__wsnt__GetCurrentMessage(NULL, _wsnt__GetCurrentMessage *dst, _wsnt__GetCurrentMessage *src) (use soapcpp2 -Ed)
struct _wsnt__GetCurrentMessage
{
/// Element "Topic" of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
    struct wsnt__TopicExpressionType*    Topic                          1;	///< Required element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessageResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessageResponse is a complexType.
///
/// @note struct _wsnt__GetCurrentMessageResponse operations:
/// - _wsnt__GetCurrentMessageResponse* soap_new__wsnt__GetCurrentMessageResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__GetCurrentMessageResponse(struct soap*, _wsnt__GetCurrentMessageResponse*) default initialize members
/// - int soap_read__wsnt__GetCurrentMessageResponse(struct soap*, _wsnt__GetCurrentMessageResponse*) deserialize from a source
/// - int soap_write__wsnt__GetCurrentMessageResponse(struct soap*, _wsnt__GetCurrentMessageResponse*) serialize to a sink
/// - _wsnt__GetCurrentMessageResponse* soap_dup__wsnt__GetCurrentMessageResponse(struct soap*, _wsnt__GetCurrentMessageResponse* dst, _wsnt__GetCurrentMessageResponse *src) returns deep copy of _wsnt__GetCurrentMessageResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__GetCurrentMessageResponse(_wsnt__GetCurrentMessageResponse*) deep deletes _wsnt__GetCurrentMessageResponse data members, use only on dst after soap_dup__wsnt__GetCurrentMessageResponse(NULL, _wsnt__GetCurrentMessageResponse *dst, _wsnt__GetCurrentMessageResponse *src) (use soapcpp2 -Ed)
struct _wsnt__GetCurrentMessageResponse
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetMessages
/// @brief "http://docs.oasis-open.org/wsn/b-2":GetMessages is a complexType.
///
/// @note struct _wsnt__GetMessages operations:
/// - _wsnt__GetMessages* soap_new__wsnt__GetMessages(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__GetMessages(struct soap*, _wsnt__GetMessages*) default initialize members
/// - int soap_read__wsnt__GetMessages(struct soap*, _wsnt__GetMessages*) deserialize from a source
/// - int soap_write__wsnt__GetMessages(struct soap*, _wsnt__GetMessages*) serialize to a sink
/// - _wsnt__GetMessages* soap_dup__wsnt__GetMessages(struct soap*, _wsnt__GetMessages* dst, _wsnt__GetMessages *src) returns deep copy of _wsnt__GetMessages src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__GetMessages(_wsnt__GetMessages*) deep deletes _wsnt__GetMessages data members, use only on dst after soap_dup__wsnt__GetMessages(NULL, _wsnt__GetMessages *dst, _wsnt__GetMessages *src) (use soapcpp2 -Ed)
struct _wsnt__GetMessages
{
/// Element "MaximumNumber" of type xs:nonNegativeInteger.
    xsd__nonNegativeInteger              MaximumNumber                  0;	///< Optional element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetMessagesResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":GetMessagesResponse is a complexType.
///
/// @note struct _wsnt__GetMessagesResponse operations:
/// - _wsnt__GetMessagesResponse* soap_new__wsnt__GetMessagesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__GetMessagesResponse(struct soap*, _wsnt__GetMessagesResponse*) default initialize members
/// - int soap_read__wsnt__GetMessagesResponse(struct soap*, _wsnt__GetMessagesResponse*) deserialize from a source
/// - int soap_write__wsnt__GetMessagesResponse(struct soap*, _wsnt__GetMessagesResponse*) serialize to a sink
/// - _wsnt__GetMessagesResponse* soap_dup__wsnt__GetMessagesResponse(struct soap*, _wsnt__GetMessagesResponse* dst, _wsnt__GetMessagesResponse *src) returns deep copy of _wsnt__GetMessagesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__GetMessagesResponse(_wsnt__GetMessagesResponse*) deep deletes _wsnt__GetMessagesResponse data members, use only on dst after soap_dup__wsnt__GetMessagesResponse(NULL, _wsnt__GetMessagesResponse *dst, _wsnt__GetMessagesResponse *src) (use soapcpp2 -Ed)
struct _wsnt__GetMessagesResponse
{
/// Size of the dynamic array of values of type struct wsnt__NotificationMessageHolderType* is 0..unbounded.
  $ int                                  __sizeNotificationMessage      0;
/// Array struct wsnt__NotificationMessageHolderType* of size 0..unbounded.
    struct wsnt__NotificationMessageHolderType*  NotificationMessage_           0;	///< Multiple elements.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":DestroyPullPoint
/// @brief "http://docs.oasis-open.org/wsn/b-2":DestroyPullPoint is a complexType.
///
/// @note struct _wsnt__DestroyPullPoint operations:
/// - _wsnt__DestroyPullPoint* soap_new__wsnt__DestroyPullPoint(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__DestroyPullPoint(struct soap*, _wsnt__DestroyPullPoint*) default initialize members
/// - int soap_read__wsnt__DestroyPullPoint(struct soap*, _wsnt__DestroyPullPoint*) deserialize from a source
/// - int soap_write__wsnt__DestroyPullPoint(struct soap*, _wsnt__DestroyPullPoint*) serialize to a sink
/// - _wsnt__DestroyPullPoint* soap_dup__wsnt__DestroyPullPoint(struct soap*, _wsnt__DestroyPullPoint* dst, _wsnt__DestroyPullPoint *src) returns deep copy of _wsnt__DestroyPullPoint src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__DestroyPullPoint(_wsnt__DestroyPullPoint*) deep deletes _wsnt__DestroyPullPoint data members, use only on dst after soap_dup__wsnt__DestroyPullPoint(NULL, _wsnt__DestroyPullPoint *dst, _wsnt__DestroyPullPoint *src) (use soapcpp2 -Ed)
struct _wsnt__DestroyPullPoint
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":DestroyPullPointResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":DestroyPullPointResponse is a complexType.
///
/// @note struct _wsnt__DestroyPullPointResponse operations:
/// - _wsnt__DestroyPullPointResponse* soap_new__wsnt__DestroyPullPointResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__DestroyPullPointResponse(struct soap*, _wsnt__DestroyPullPointResponse*) default initialize members
/// - int soap_read__wsnt__DestroyPullPointResponse(struct soap*, _wsnt__DestroyPullPointResponse*) deserialize from a source
/// - int soap_write__wsnt__DestroyPullPointResponse(struct soap*, _wsnt__DestroyPullPointResponse*) serialize to a sink
/// - _wsnt__DestroyPullPointResponse* soap_dup__wsnt__DestroyPullPointResponse(struct soap*, _wsnt__DestroyPullPointResponse* dst, _wsnt__DestroyPullPointResponse *src) returns deep copy of _wsnt__DestroyPullPointResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__DestroyPullPointResponse(_wsnt__DestroyPullPointResponse*) deep deletes _wsnt__DestroyPullPointResponse data members, use only on dst after soap_dup__wsnt__DestroyPullPointResponse(NULL, _wsnt__DestroyPullPointResponse *dst, _wsnt__DestroyPullPointResponse *src) (use soapcpp2 -Ed)
struct _wsnt__DestroyPullPointResponse
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreatePullPoint
/// @brief "http://docs.oasis-open.org/wsn/b-2":CreatePullPoint is a complexType.
///
/// @note struct _wsnt__CreatePullPoint operations:
/// - _wsnt__CreatePullPoint* soap_new__wsnt__CreatePullPoint(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__CreatePullPoint(struct soap*, _wsnt__CreatePullPoint*) default initialize members
/// - int soap_read__wsnt__CreatePullPoint(struct soap*, _wsnt__CreatePullPoint*) deserialize from a source
/// - int soap_write__wsnt__CreatePullPoint(struct soap*, _wsnt__CreatePullPoint*) serialize to a sink
/// - _wsnt__CreatePullPoint* soap_dup__wsnt__CreatePullPoint(struct soap*, _wsnt__CreatePullPoint* dst, _wsnt__CreatePullPoint *src) returns deep copy of _wsnt__CreatePullPoint src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__CreatePullPoint(_wsnt__CreatePullPoint*) deep deletes _wsnt__CreatePullPoint data members, use only on dst after soap_dup__wsnt__CreatePullPoint(NULL, _wsnt__CreatePullPoint *dst, _wsnt__CreatePullPoint *src) (use soapcpp2 -Ed)
struct _wsnt__CreatePullPoint
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreatePullPointResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":CreatePullPointResponse is a complexType.
///
/// @note struct _wsnt__CreatePullPointResponse operations:
/// - _wsnt__CreatePullPointResponse* soap_new__wsnt__CreatePullPointResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__CreatePullPointResponse(struct soap*, _wsnt__CreatePullPointResponse*) default initialize members
/// - int soap_read__wsnt__CreatePullPointResponse(struct soap*, _wsnt__CreatePullPointResponse*) deserialize from a source
/// - int soap_write__wsnt__CreatePullPointResponse(struct soap*, _wsnt__CreatePullPointResponse*) serialize to a sink
/// - _wsnt__CreatePullPointResponse* soap_dup__wsnt__CreatePullPointResponse(struct soap*, _wsnt__CreatePullPointResponse* dst, _wsnt__CreatePullPointResponse *src) returns deep copy of _wsnt__CreatePullPointResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__CreatePullPointResponse(_wsnt__CreatePullPointResponse*) deep deletes _wsnt__CreatePullPointResponse data members, use only on dst after soap_dup__wsnt__CreatePullPointResponse(NULL, _wsnt__CreatePullPointResponse *dst, _wsnt__CreatePullPointResponse *src) (use soapcpp2 -Ed)
struct _wsnt__CreatePullPointResponse
{
/// Element "PullPoint" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType          PullPoint                      1;	///< Required element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Renew
/// @brief "http://docs.oasis-open.org/wsn/b-2":Renew is a complexType.
///
/// @note struct _wsnt__Renew operations:
/// - _wsnt__Renew* soap_new__wsnt__Renew(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__Renew(struct soap*, _wsnt__Renew*) default initialize members
/// - int soap_read__wsnt__Renew(struct soap*, _wsnt__Renew*) deserialize from a source
/// - int soap_write__wsnt__Renew(struct soap*, _wsnt__Renew*) serialize to a sink
/// - _wsnt__Renew* soap_dup__wsnt__Renew(struct soap*, _wsnt__Renew* dst, _wsnt__Renew *src) returns deep copy of _wsnt__Renew src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__Renew(_wsnt__Renew*) deep deletes _wsnt__Renew data members, use only on dst after soap_dup__wsnt__Renew(NULL, _wsnt__Renew *dst, _wsnt__Renew *src) (use soapcpp2 -Ed)
struct _wsnt__Renew
{
/// Element "TerminationTime" of type "http://docs.oasis-open.org/wsn/b-2":AbsoluteOrRelativeTimeType.
    wsnt__AbsoluteOrRelativeTimeType     TerminationTime                nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":RenewResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":RenewResponse is a complexType.
///
/// @note struct _wsnt__RenewResponse operations:
/// - _wsnt__RenewResponse* soap_new__wsnt__RenewResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__RenewResponse(struct soap*, _wsnt__RenewResponse*) default initialize members
/// - int soap_read__wsnt__RenewResponse(struct soap*, _wsnt__RenewResponse*) deserialize from a source
/// - int soap_write__wsnt__RenewResponse(struct soap*, _wsnt__RenewResponse*) serialize to a sink
/// - _wsnt__RenewResponse* soap_dup__wsnt__RenewResponse(struct soap*, _wsnt__RenewResponse* dst, _wsnt__RenewResponse *src) returns deep copy of _wsnt__RenewResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__RenewResponse(_wsnt__RenewResponse*) deep deletes _wsnt__RenewResponse data members, use only on dst after soap_dup__wsnt__RenewResponse(NULL, _wsnt__RenewResponse *dst, _wsnt__RenewResponse *src) (use soapcpp2 -Ed)
struct _wsnt__RenewResponse
{
/// Element reference "http://docs.oasis-open.org/wsn/b-2:"TerminationTime.
    time_t                               TerminationTime                1;	///< Required element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:"CurrentTime.
    time_t*                              CurrentTime                    0;	///< Optional element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Unsubscribe
/// @brief "http://docs.oasis-open.org/wsn/b-2":Unsubscribe is a complexType.
///
/// @note struct _wsnt__Unsubscribe operations:
/// - _wsnt__Unsubscribe* soap_new__wsnt__Unsubscribe(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__Unsubscribe(struct soap*, _wsnt__Unsubscribe*) default initialize members
/// - int soap_read__wsnt__Unsubscribe(struct soap*, _wsnt__Unsubscribe*) deserialize from a source
/// - int soap_write__wsnt__Unsubscribe(struct soap*, _wsnt__Unsubscribe*) serialize to a sink
/// - _wsnt__Unsubscribe* soap_dup__wsnt__Unsubscribe(struct soap*, _wsnt__Unsubscribe* dst, _wsnt__Unsubscribe *src) returns deep copy of _wsnt__Unsubscribe src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__Unsubscribe(_wsnt__Unsubscribe*) deep deletes _wsnt__Unsubscribe data members, use only on dst after soap_dup__wsnt__Unsubscribe(NULL, _wsnt__Unsubscribe *dst, _wsnt__Unsubscribe *src) (use soapcpp2 -Ed)
struct _wsnt__Unsubscribe
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnsubscribeResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":UnsubscribeResponse is a complexType.
///
/// @note struct _wsnt__UnsubscribeResponse operations:
/// - _wsnt__UnsubscribeResponse* soap_new__wsnt__UnsubscribeResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnsubscribeResponse(struct soap*, _wsnt__UnsubscribeResponse*) default initialize members
/// - int soap_read__wsnt__UnsubscribeResponse(struct soap*, _wsnt__UnsubscribeResponse*) deserialize from a source
/// - int soap_write__wsnt__UnsubscribeResponse(struct soap*, _wsnt__UnsubscribeResponse*) serialize to a sink
/// - _wsnt__UnsubscribeResponse* soap_dup__wsnt__UnsubscribeResponse(struct soap*, _wsnt__UnsubscribeResponse* dst, _wsnt__UnsubscribeResponse *src) returns deep copy of _wsnt__UnsubscribeResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnsubscribeResponse(_wsnt__UnsubscribeResponse*) deep deletes _wsnt__UnsubscribeResponse data members, use only on dst after soap_dup__wsnt__UnsubscribeResponse(NULL, _wsnt__UnsubscribeResponse *dst, _wsnt__UnsubscribeResponse *src) (use soapcpp2 -Ed)
struct _wsnt__UnsubscribeResponse
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseSubscription
/// @brief "http://docs.oasis-open.org/wsn/b-2":PauseSubscription is a complexType.
///
/// @note struct _wsnt__PauseSubscription operations:
/// - _wsnt__PauseSubscription* soap_new__wsnt__PauseSubscription(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__PauseSubscription(struct soap*, _wsnt__PauseSubscription*) default initialize members
/// - int soap_read__wsnt__PauseSubscription(struct soap*, _wsnt__PauseSubscription*) deserialize from a source
/// - int soap_write__wsnt__PauseSubscription(struct soap*, _wsnt__PauseSubscription*) serialize to a sink
/// - _wsnt__PauseSubscription* soap_dup__wsnt__PauseSubscription(struct soap*, _wsnt__PauseSubscription* dst, _wsnt__PauseSubscription *src) returns deep copy of _wsnt__PauseSubscription src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__PauseSubscription(_wsnt__PauseSubscription*) deep deletes _wsnt__PauseSubscription data members, use only on dst after soap_dup__wsnt__PauseSubscription(NULL, _wsnt__PauseSubscription *dst, _wsnt__PauseSubscription *src) (use soapcpp2 -Ed)
struct _wsnt__PauseSubscription
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseSubscriptionResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":PauseSubscriptionResponse is a complexType.
///
/// @note struct _wsnt__PauseSubscriptionResponse operations:
/// - _wsnt__PauseSubscriptionResponse* soap_new__wsnt__PauseSubscriptionResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__PauseSubscriptionResponse(struct soap*, _wsnt__PauseSubscriptionResponse*) default initialize members
/// - int soap_read__wsnt__PauseSubscriptionResponse(struct soap*, _wsnt__PauseSubscriptionResponse*) deserialize from a source
/// - int soap_write__wsnt__PauseSubscriptionResponse(struct soap*, _wsnt__PauseSubscriptionResponse*) serialize to a sink
/// - _wsnt__PauseSubscriptionResponse* soap_dup__wsnt__PauseSubscriptionResponse(struct soap*, _wsnt__PauseSubscriptionResponse* dst, _wsnt__PauseSubscriptionResponse *src) returns deep copy of _wsnt__PauseSubscriptionResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__PauseSubscriptionResponse(_wsnt__PauseSubscriptionResponse*) deep deletes _wsnt__PauseSubscriptionResponse data members, use only on dst after soap_dup__wsnt__PauseSubscriptionResponse(NULL, _wsnt__PauseSubscriptionResponse *dst, _wsnt__PauseSubscriptionResponse *src) (use soapcpp2 -Ed)
struct _wsnt__PauseSubscriptionResponse
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeSubscription
/// @brief "http://docs.oasis-open.org/wsn/b-2":ResumeSubscription is a complexType.
///
/// @note struct _wsnt__ResumeSubscription operations:
/// - _wsnt__ResumeSubscription* soap_new__wsnt__ResumeSubscription(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__ResumeSubscription(struct soap*, _wsnt__ResumeSubscription*) default initialize members
/// - int soap_read__wsnt__ResumeSubscription(struct soap*, _wsnt__ResumeSubscription*) deserialize from a source
/// - int soap_write__wsnt__ResumeSubscription(struct soap*, _wsnt__ResumeSubscription*) serialize to a sink
/// - _wsnt__ResumeSubscription* soap_dup__wsnt__ResumeSubscription(struct soap*, _wsnt__ResumeSubscription* dst, _wsnt__ResumeSubscription *src) returns deep copy of _wsnt__ResumeSubscription src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__ResumeSubscription(_wsnt__ResumeSubscription*) deep deletes _wsnt__ResumeSubscription data members, use only on dst after soap_dup__wsnt__ResumeSubscription(NULL, _wsnt__ResumeSubscription *dst, _wsnt__ResumeSubscription *src) (use soapcpp2 -Ed)
struct _wsnt__ResumeSubscription
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeSubscriptionResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":ResumeSubscriptionResponse is a complexType.
///
/// @note struct _wsnt__ResumeSubscriptionResponse operations:
/// - _wsnt__ResumeSubscriptionResponse* soap_new__wsnt__ResumeSubscriptionResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__ResumeSubscriptionResponse(struct soap*, _wsnt__ResumeSubscriptionResponse*) default initialize members
/// - int soap_read__wsnt__ResumeSubscriptionResponse(struct soap*, _wsnt__ResumeSubscriptionResponse*) deserialize from a source
/// - int soap_write__wsnt__ResumeSubscriptionResponse(struct soap*, _wsnt__ResumeSubscriptionResponse*) serialize to a sink
/// - _wsnt__ResumeSubscriptionResponse* soap_dup__wsnt__ResumeSubscriptionResponse(struct soap*, _wsnt__ResumeSubscriptionResponse* dst, _wsnt__ResumeSubscriptionResponse *src) returns deep copy of _wsnt__ResumeSubscriptionResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__ResumeSubscriptionResponse(_wsnt__ResumeSubscriptionResponse*) deep deletes _wsnt__ResumeSubscriptionResponse data members, use only on dst after soap_dup__wsnt__ResumeSubscriptionResponse(NULL, _wsnt__ResumeSubscriptionResponse *dst, _wsnt__ResumeSubscriptionResponse *src) (use soapcpp2 -Ed)
struct _wsnt__ResumeSubscriptionResponse
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/

/// @brief "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType is a complexType.
///
/// This type is extended by:
/// - "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFaultType as struct wsnt__SubscribeCreationFailedFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFaultType as struct wsnt__InvalidFilterFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFaultType as struct wsnt__TopicExpressionDialectUnknownFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFaultType as struct wsnt__InvalidTopicExpressionFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFaultType as struct wsnt__TopicNotSupportedFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFaultType as struct wsnt__MultipleTopicsSpecifiedFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFaultType as struct wsnt__InvalidProducerPropertiesExpressionFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFaultType as struct wsnt__InvalidMessageContentExpressionFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFaultType as struct wsnt__UnrecognizedPolicyRequestFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFaultType as struct wsnt__UnsupportedPolicyRequestFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFaultType as struct wsnt__NotifyMessageNotSupportedFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFaultType as struct wsnt__UnacceptableInitialTerminationTimeFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFaultType as struct wsnt__NoCurrentMessageOnTopicFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFaultType as struct wsnt__UnableToGetMessagesFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFaultType as struct wsnt__UnableToDestroyPullPointFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFaultType as struct wsnt__UnableToCreatePullPointFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFaultType as struct wsnt__UnacceptableTerminationTimeFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFaultType as struct wsnt__UnableToDestroySubscriptionFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":PauseFailedFaultType as struct wsnt__PauseFailedFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFaultType as struct wsnt__ResumeFailedFaultType
///
/// @note struct wsrfbf__BaseFaultType operations:
/// - wsrfbf__BaseFaultType* soap_new_wsrfbf__BaseFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsrfbf__BaseFaultType(struct soap*, wsrfbf__BaseFaultType*) default initialize members
/// - int soap_read_wsrfbf__BaseFaultType(struct soap*, wsrfbf__BaseFaultType*) deserialize from a source
/// - int soap_write_wsrfbf__BaseFaultType(struct soap*, wsrfbf__BaseFaultType*) serialize to a sink
/// - wsrfbf__BaseFaultType* soap_dup_wsrfbf__BaseFaultType(struct soap*, wsrfbf__BaseFaultType* dst, wsrfbf__BaseFaultType *src) returns deep copy of wsrfbf__BaseFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsrfbf__BaseFaultType(wsrfbf__BaseFaultType*) deep deletes wsrfbf__BaseFaultType data members, use only on dst after soap_dup_wsrfbf__BaseFaultType(NULL, wsrfbf__BaseFaultType *dst, wsrfbf__BaseFaultType *src) (use soapcpp2 -Ed)
struct wsrfbf__BaseFaultType
{
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// @note struct _wsrfbf__BaseFaultType_ErrorCode operations:
/// - _wsrfbf__BaseFaultType_ErrorCode* soap_new__wsrfbf__BaseFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsrfbf__BaseFaultType_ErrorCode(struct soap*, _wsrfbf__BaseFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsrfbf__BaseFaultType_ErrorCode(struct soap*, _wsrfbf__BaseFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsrfbf__BaseFaultType_ErrorCode(struct soap*, _wsrfbf__BaseFaultType_ErrorCode*) serialize to a sink
/// - _wsrfbf__BaseFaultType_ErrorCode* soap_dup__wsrfbf__BaseFaultType_ErrorCode(struct soap*, _wsrfbf__BaseFaultType_ErrorCode* dst, _wsrfbf__BaseFaultType_ErrorCode *src) returns deep copy of _wsrfbf__BaseFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsrfbf__BaseFaultType_ErrorCode(_wsrfbf__BaseFaultType_ErrorCode*) deep deletes _wsrfbf__BaseFaultType_ErrorCode data members, use only on dst after soap_dup__wsrfbf__BaseFaultType_ErrorCode(NULL, _wsrfbf__BaseFaultType_ErrorCode *dst, _wsrfbf__BaseFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsrfbf__BaseFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          dialect                        1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsrfbf__BaseFaultType_Description operations:
/// - _wsrfbf__BaseFaultType_Description* soap_new__wsrfbf__BaseFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsrfbf__BaseFaultType_Description(struct soap*, _wsrfbf__BaseFaultType_Description*) default initialize members
/// - int soap_read__wsrfbf__BaseFaultType_Description(struct soap*, _wsrfbf__BaseFaultType_Description*) deserialize from a source
/// - int soap_write__wsrfbf__BaseFaultType_Description(struct soap*, _wsrfbf__BaseFaultType_Description*) serialize to a sink
/// - _wsrfbf__BaseFaultType_Description* soap_dup__wsrfbf__BaseFaultType_Description(struct soap*, _wsrfbf__BaseFaultType_Description* dst, _wsrfbf__BaseFaultType_Description *src) returns deep copy of _wsrfbf__BaseFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsrfbf__BaseFaultType_Description(_wsrfbf__BaseFaultType_Description*) deep deletes _wsrfbf__BaseFaultType_Description data members, use only on dst after soap_dup__wsrfbf__BaseFaultType_Description(NULL, _wsrfbf__BaseFaultType_Description *dst, _wsrfbf__BaseFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsrfbf__BaseFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;	///< Multiple elements.
/// @note struct _wsrfbf__BaseFaultType_FaultCause operations:
/// - _wsrfbf__BaseFaultType_FaultCause* soap_new__wsrfbf__BaseFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsrfbf__BaseFaultType_FaultCause(struct soap*, _wsrfbf__BaseFaultType_FaultCause*) default initialize members
/// - int soap_read__wsrfbf__BaseFaultType_FaultCause(struct soap*, _wsrfbf__BaseFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsrfbf__BaseFaultType_FaultCause(struct soap*, _wsrfbf__BaseFaultType_FaultCause*) serialize to a sink
/// - _wsrfbf__BaseFaultType_FaultCause* soap_dup__wsrfbf__BaseFaultType_FaultCause(struct soap*, _wsrfbf__BaseFaultType_FaultCause* dst, _wsrfbf__BaseFaultType_FaultCause *src) returns deep copy of _wsrfbf__BaseFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsrfbf__BaseFaultType_FaultCause(_wsrfbf__BaseFaultType_FaultCause*) deep deletes _wsrfbf__BaseFaultType_FaultCause data members, use only on dst after soap_dup__wsrfbf__BaseFaultType_FaultCause(NULL, _wsrfbf__BaseFaultType_FaultCause *dst, _wsrfbf__BaseFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsrfbf__BaseFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

/// @brief "http://docs.oasis-open.org/wsn/t-1":Documentation is a complexType.
///
/// @note struct wstop__Documentation operations:
/// - wstop__Documentation* soap_new_wstop__Documentation(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wstop__Documentation(struct soap*, wstop__Documentation*) default initialize members
/// - int soap_read_wstop__Documentation(struct soap*, wstop__Documentation*) deserialize from a source
/// - int soap_write_wstop__Documentation(struct soap*, wstop__Documentation*) serialize to a sink
/// - wstop__Documentation* soap_dup_wstop__Documentation(struct soap*, wstop__Documentation* dst, wstop__Documentation *src) returns deep copy of wstop__Documentation src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wstop__Documentation(wstop__Documentation*) deep deletes wstop__Documentation data members, use only on dst after soap_dup_wstop__Documentation(NULL, wstop__Documentation *dst, wstop__Documentation *src) (use soapcpp2 -Ed)
struct wstop__Documentation
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
};

/// @brief "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented is an abstract complexType.
///
/// This type is extended by:
/// - "http://docs.oasis-open.org/wsn/t-1":TopicNamespaceType as struct wstop__TopicNamespaceType
/// - "http://docs.oasis-open.org/wsn/t-1":TopicType as struct wstop__TopicType
/// - "http://docs.oasis-open.org/wsn/t-1":TopicSetType as struct wstop__TopicSetType
///
/// @note struct wstop__ExtensibleDocumented operations:
/// - wstop__ExtensibleDocumented* soap_new_wstop__ExtensibleDocumented(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wstop__ExtensibleDocumented(struct soap*, wstop__ExtensibleDocumented*) default initialize members
/// - int soap_read_wstop__ExtensibleDocumented(struct soap*, wstop__ExtensibleDocumented*) deserialize from a source
/// - int soap_write_wstop__ExtensibleDocumented(struct soap*, wstop__ExtensibleDocumented*) serialize to a sink
/// - wstop__ExtensibleDocumented* soap_dup_wstop__ExtensibleDocumented(struct soap*, wstop__ExtensibleDocumented* dst, wstop__ExtensibleDocumented *src) returns deep copy of wstop__ExtensibleDocumented src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wstop__ExtensibleDocumented(wstop__ExtensibleDocumented*) deep deletes wstop__ExtensibleDocumented data members, use only on dst after soap_dup_wstop__ExtensibleDocumented(NULL, wstop__ExtensibleDocumented *dst, wstop__ExtensibleDocumented *src) (use soapcpp2 -Ed)
struct wstop__ExtensibleDocumented
{
/// Element "documentation" of type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    struct wstop__Documentation*         documentation                  0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
};

/// @brief "http://docs.oasis-open.org/wsn/t-1":QueryExpressionType is a complexType.
///
/// @note struct wstop__QueryExpressionType operations:
/// - wstop__QueryExpressionType* soap_new_wstop__QueryExpressionType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wstop__QueryExpressionType(struct soap*, wstop__QueryExpressionType*) default initialize members
/// - int soap_read_wstop__QueryExpressionType(struct soap*, wstop__QueryExpressionType*) deserialize from a source
/// - int soap_write_wstop__QueryExpressionType(struct soap*, wstop__QueryExpressionType*) serialize to a sink
/// - wstop__QueryExpressionType* soap_dup_wstop__QueryExpressionType(struct soap*, wstop__QueryExpressionType* dst, wstop__QueryExpressionType *src) returns deep copy of wstop__QueryExpressionType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wstop__QueryExpressionType(wstop__QueryExpressionType*) deep deletes wstop__QueryExpressionType data members, use only on dst after soap_dup_wstop__QueryExpressionType(NULL, wstop__QueryExpressionType *dst, wstop__QueryExpressionType *src) (use soapcpp2 -Ed)
struct wstop__QueryExpressionType
{
/// <any namespace="##any" minOccurs="0" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
/// Attribute "Dialect" of type xs:anyURI.
  @ xsd__anyURI                          Dialect                        1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/media/wsdl":Capabilities is a complexType.
///
/// @note struct trt__Capabilities operations:
/// - trt__Capabilities* soap_new_trt__Capabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_trt__Capabilities(struct soap*, trt__Capabilities*) default initialize members
/// - int soap_read_trt__Capabilities(struct soap*, trt__Capabilities*) deserialize from a source
/// - int soap_write_trt__Capabilities(struct soap*, trt__Capabilities*) serialize to a sink
/// - trt__Capabilities* soap_dup_trt__Capabilities(struct soap*, trt__Capabilities* dst, trt__Capabilities *src) returns deep copy of trt__Capabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_trt__Capabilities(trt__Capabilities*) deep deletes trt__Capabilities data members, use only on dst after soap_dup_trt__Capabilities(NULL, trt__Capabilities *dst, trt__Capabilities *src) (use soapcpp2 -Ed)
struct trt__Capabilities
{
/// <PRE><BLOCKQUOTE>
///   Media profile capabilities.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileCapabilities" of type "http://www.onvif.org/ver10/media/wsdl":ProfileCapabilities.
    struct trt__ProfileCapabilities*     ProfileCapabilities            1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Indicates if GetSnapshotUri is supported.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "SnapshotUri" of type xs:boolean.
  @ enum xsd__boolean*                   SnapshotUri                    0;	///< Optional attribute.
};

/// @brief "http://www.onvif.org/ver10/media/wsdl":ProfileCapabilities is a complexType.
///
/// @note struct trt__ProfileCapabilities operations:
/// - trt__ProfileCapabilities* soap_new_trt__ProfileCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_trt__ProfileCapabilities(struct soap*, trt__ProfileCapabilities*) default initialize members
/// - int soap_read_trt__ProfileCapabilities(struct soap*, trt__ProfileCapabilities*) deserialize from a source
/// - int soap_write_trt__ProfileCapabilities(struct soap*, trt__ProfileCapabilities*) serialize to a sink
/// - trt__ProfileCapabilities* soap_dup_trt__ProfileCapabilities(struct soap*, trt__ProfileCapabilities* dst, trt__ProfileCapabilities *src) returns deep copy of trt__ProfileCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_trt__ProfileCapabilities(trt__ProfileCapabilities*) deep deletes trt__ProfileCapabilities data members, use only on dst after soap_dup_trt__ProfileCapabilities(NULL, trt__ProfileCapabilities *dst, trt__ProfileCapabilities *src) (use soapcpp2 -Ed)
struct trt__ProfileCapabilities
{
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   Maximum number of profiles supported.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaximumNumberOfProfiles" of type xs:int.
  @ int*                                 MaximumNumberOfProfiles        0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetServiceCapabilities is a complexType.
///
/// @note struct _trt__GetServiceCapabilities operations:
/// - _trt__GetServiceCapabilities* soap_new__trt__GetServiceCapabilities(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetServiceCapabilities(struct soap*, _trt__GetServiceCapabilities*) default initialize members
/// - int soap_read__trt__GetServiceCapabilities(struct soap*, _trt__GetServiceCapabilities*) deserialize from a source
/// - int soap_write__trt__GetServiceCapabilities(struct soap*, _trt__GetServiceCapabilities*) serialize to a sink
/// - _trt__GetServiceCapabilities* soap_dup__trt__GetServiceCapabilities(struct soap*, _trt__GetServiceCapabilities* dst, _trt__GetServiceCapabilities *src) returns deep copy of _trt__GetServiceCapabilities src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetServiceCapabilities(_trt__GetServiceCapabilities*) deep deletes _trt__GetServiceCapabilities data members, use only on dst after soap_dup__trt__GetServiceCapabilities(NULL, _trt__GetServiceCapabilities *dst, _trt__GetServiceCapabilities *src) (use soapcpp2 -Ed)
struct _trt__GetServiceCapabilities
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
/// @note struct _trt__GetServiceCapabilitiesResponse operations:
/// - _trt__GetServiceCapabilitiesResponse* soap_new__trt__GetServiceCapabilitiesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetServiceCapabilitiesResponse(struct soap*, _trt__GetServiceCapabilitiesResponse*) default initialize members
/// - int soap_read__trt__GetServiceCapabilitiesResponse(struct soap*, _trt__GetServiceCapabilitiesResponse*) deserialize from a source
/// - int soap_write__trt__GetServiceCapabilitiesResponse(struct soap*, _trt__GetServiceCapabilitiesResponse*) serialize to a sink
/// - _trt__GetServiceCapabilitiesResponse* soap_dup__trt__GetServiceCapabilitiesResponse(struct soap*, _trt__GetServiceCapabilitiesResponse* dst, _trt__GetServiceCapabilitiesResponse *src) returns deep copy of _trt__GetServiceCapabilitiesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetServiceCapabilitiesResponse(_trt__GetServiceCapabilitiesResponse*) deep deletes _trt__GetServiceCapabilitiesResponse data members, use only on dst after soap_dup__trt__GetServiceCapabilitiesResponse(NULL, _trt__GetServiceCapabilitiesResponse *dst, _trt__GetServiceCapabilitiesResponse *src) (use soapcpp2 -Ed)
struct _trt__GetServiceCapabilitiesResponse
{
/// <PRE><BLOCKQUOTE>
///   The capabilities for the media service is returned in the Capabilities element.
/// </BLOCKQUOTE></PRE>
///
/// Element "Capabilities" of type "http://www.onvif.org/ver10/media/wsdl":Capabilities.
    struct trt__Capabilities*            Capabilities                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":CreateProfile
/// @brief "http://www.onvif.org/ver10/media/wsdl":CreateProfile is a complexType.
///
/// @note struct _trt__CreateProfile operations:
/// - _trt__CreateProfile* soap_new__trt__CreateProfile(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__CreateProfile(struct soap*, _trt__CreateProfile*) default initialize members
/// - int soap_read__trt__CreateProfile(struct soap*, _trt__CreateProfile*) deserialize from a source
/// - int soap_write__trt__CreateProfile(struct soap*, _trt__CreateProfile*) serialize to a sink
/// - _trt__CreateProfile* soap_dup__trt__CreateProfile(struct soap*, _trt__CreateProfile* dst, _trt__CreateProfile *src) returns deep copy of _trt__CreateProfile src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__CreateProfile(_trt__CreateProfile*) deep deletes _trt__CreateProfile data members, use only on dst after soap_dup__trt__CreateProfile(NULL, _trt__CreateProfile *dst, _trt__CreateProfile *src) (use soapcpp2 -Ed)
struct _trt__CreateProfile
{
/// <PRE><BLOCKQUOTE>
///   friendly name of the profile to be created
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional token, specifying the unique identifier of the new profile. <br/>A device supports at least a token length of 12 characters and characters "A-Z" | "a-z" | "0-9" | "-.".
/// </BLOCKQUOTE></PRE>
///
/// Element "Token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          0;	///< Optional element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":CreateProfileResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":CreateProfileResponse is a complexType.
///
/// @note struct _trt__CreateProfileResponse operations:
/// - _trt__CreateProfileResponse* soap_new__trt__CreateProfileResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__CreateProfileResponse(struct soap*, _trt__CreateProfileResponse*) default initialize members
/// - int soap_read__trt__CreateProfileResponse(struct soap*, _trt__CreateProfileResponse*) deserialize from a source
/// - int soap_write__trt__CreateProfileResponse(struct soap*, _trt__CreateProfileResponse*) serialize to a sink
/// - _trt__CreateProfileResponse* soap_dup__trt__CreateProfileResponse(struct soap*, _trt__CreateProfileResponse* dst, _trt__CreateProfileResponse *src) returns deep copy of _trt__CreateProfileResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__CreateProfileResponse(_trt__CreateProfileResponse*) deep deletes _trt__CreateProfileResponse data members, use only on dst after soap_dup__trt__CreateProfileResponse(NULL, _trt__CreateProfileResponse *dst, _trt__CreateProfileResponse *src) (use soapcpp2 -Ed)
struct _trt__CreateProfileResponse
{
/// <PRE><BLOCKQUOTE>
///   returns the new created profile
/// </BLOCKQUOTE></PRE>
///
/// Element "Profile" of type "http://www.onvif.org/ver10/schema":Profile.
    struct tt__Profile*                  Profile                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetProfile
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetProfile is a complexType.
///
/// @note struct _trt__GetProfile operations:
/// - _trt__GetProfile* soap_new__trt__GetProfile(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetProfile(struct soap*, _trt__GetProfile*) default initialize members
/// - int soap_read__trt__GetProfile(struct soap*, _trt__GetProfile*) deserialize from a source
/// - int soap_write__trt__GetProfile(struct soap*, _trt__GetProfile*) serialize to a sink
/// - _trt__GetProfile* soap_dup__trt__GetProfile(struct soap*, _trt__GetProfile* dst, _trt__GetProfile *src) returns deep copy of _trt__GetProfile src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetProfile(_trt__GetProfile*) deep deletes _trt__GetProfile data members, use only on dst after soap_dup__trt__GetProfile(NULL, _trt__GetProfile *dst, _trt__GetProfile *src) (use soapcpp2 -Ed)
struct _trt__GetProfile
{
/// <PRE><BLOCKQUOTE>
///   this command requests a specific profile
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetProfileResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetProfileResponse is a complexType.
///
/// @note struct _trt__GetProfileResponse operations:
/// - _trt__GetProfileResponse* soap_new__trt__GetProfileResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetProfileResponse(struct soap*, _trt__GetProfileResponse*) default initialize members
/// - int soap_read__trt__GetProfileResponse(struct soap*, _trt__GetProfileResponse*) deserialize from a source
/// - int soap_write__trt__GetProfileResponse(struct soap*, _trt__GetProfileResponse*) serialize to a sink
/// - _trt__GetProfileResponse* soap_dup__trt__GetProfileResponse(struct soap*, _trt__GetProfileResponse* dst, _trt__GetProfileResponse *src) returns deep copy of _trt__GetProfileResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetProfileResponse(_trt__GetProfileResponse*) deep deletes _trt__GetProfileResponse data members, use only on dst after soap_dup__trt__GetProfileResponse(NULL, _trt__GetProfileResponse *dst, _trt__GetProfileResponse *src) (use soapcpp2 -Ed)
struct _trt__GetProfileResponse
{
/// <PRE><BLOCKQUOTE>
///   returns the requested media profile
/// </BLOCKQUOTE></PRE>
///
/// Element "Profile" of type "http://www.onvif.org/ver10/schema":Profile.
    struct tt__Profile*                  Profile                        1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetProfiles
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetProfiles is a complexType.
///
/// @note struct _trt__GetProfiles operations:
/// - _trt__GetProfiles* soap_new__trt__GetProfiles(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetProfiles(struct soap*, _trt__GetProfiles*) default initialize members
/// - int soap_read__trt__GetProfiles(struct soap*, _trt__GetProfiles*) deserialize from a source
/// - int soap_write__trt__GetProfiles(struct soap*, _trt__GetProfiles*) serialize to a sink
/// - _trt__GetProfiles* soap_dup__trt__GetProfiles(struct soap*, _trt__GetProfiles* dst, _trt__GetProfiles *src) returns deep copy of _trt__GetProfiles src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetProfiles(_trt__GetProfiles*) deep deletes _trt__GetProfiles data members, use only on dst after soap_dup__trt__GetProfiles(NULL, _trt__GetProfiles *dst, _trt__GetProfiles *src) (use soapcpp2 -Ed)
struct _trt__GetProfiles
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetProfilesResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetProfilesResponse is a complexType.
///
/// @note struct _trt__GetProfilesResponse operations:
/// - _trt__GetProfilesResponse* soap_new__trt__GetProfilesResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetProfilesResponse(struct soap*, _trt__GetProfilesResponse*) default initialize members
/// - int soap_read__trt__GetProfilesResponse(struct soap*, _trt__GetProfilesResponse*) deserialize from a source
/// - int soap_write__trt__GetProfilesResponse(struct soap*, _trt__GetProfilesResponse*) serialize to a sink
/// - _trt__GetProfilesResponse* soap_dup__trt__GetProfilesResponse(struct soap*, _trt__GetProfilesResponse* dst, _trt__GetProfilesResponse *src) returns deep copy of _trt__GetProfilesResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetProfilesResponse(_trt__GetProfilesResponse*) deep deletes _trt__GetProfilesResponse data members, use only on dst after soap_dup__trt__GetProfilesResponse(NULL, _trt__GetProfilesResponse *dst, _trt__GetProfilesResponse *src) (use soapcpp2 -Ed)
struct _trt__GetProfilesResponse
{
/// <PRE><BLOCKQUOTE>
///   lists all profiles that exist in the media service
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__Profile* is 0..unbounded.
  $ int                                  __sizeProfiles                 0;
/// Array struct tt__Profile* of size 0..unbounded.
    struct tt__Profile*                  Profiles                       0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":DeleteProfile
/// @brief "http://www.onvif.org/ver10/media/wsdl":DeleteProfile is a complexType.
///
/// @note struct _trt__DeleteProfile operations:
/// - _trt__DeleteProfile* soap_new__trt__DeleteProfile(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__DeleteProfile(struct soap*, _trt__DeleteProfile*) default initialize members
/// - int soap_read__trt__DeleteProfile(struct soap*, _trt__DeleteProfile*) deserialize from a source
/// - int soap_write__trt__DeleteProfile(struct soap*, _trt__DeleteProfile*) serialize to a sink
/// - _trt__DeleteProfile* soap_dup__trt__DeleteProfile(struct soap*, _trt__DeleteProfile* dst, _trt__DeleteProfile *src) returns deep copy of _trt__DeleteProfile src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__DeleteProfile(_trt__DeleteProfile*) deep deletes _trt__DeleteProfile data members, use only on dst after soap_dup__trt__DeleteProfile(NULL, _trt__DeleteProfile *dst, _trt__DeleteProfile *src) (use soapcpp2 -Ed)
struct _trt__DeleteProfile
{
/// <PRE><BLOCKQUOTE>
///   This element contains a reference to the profile that should be deleted.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":DeleteProfileResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":DeleteProfileResponse is a complexType.
///
/// @note struct _trt__DeleteProfileResponse operations:
/// - _trt__DeleteProfileResponse* soap_new__trt__DeleteProfileResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__DeleteProfileResponse(struct soap*, _trt__DeleteProfileResponse*) default initialize members
/// - int soap_read__trt__DeleteProfileResponse(struct soap*, _trt__DeleteProfileResponse*) deserialize from a source
/// - int soap_write__trt__DeleteProfileResponse(struct soap*, _trt__DeleteProfileResponse*) serialize to a sink
/// - _trt__DeleteProfileResponse* soap_dup__trt__DeleteProfileResponse(struct soap*, _trt__DeleteProfileResponse* dst, _trt__DeleteProfileResponse *src) returns deep copy of _trt__DeleteProfileResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__DeleteProfileResponse(_trt__DeleteProfileResponse*) deep deletes _trt__DeleteProfileResponse data members, use only on dst after soap_dup__trt__DeleteProfileResponse(NULL, _trt__DeleteProfileResponse *dst, _trt__DeleteProfileResponse *src) (use soapcpp2 -Ed)
struct _trt__DeleteProfileResponse
{
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetSnapshotUri
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetSnapshotUri is a complexType.
///
/// @note struct _trt__GetSnapshotUri operations:
/// - _trt__GetSnapshotUri* soap_new__trt__GetSnapshotUri(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetSnapshotUri(struct soap*, _trt__GetSnapshotUri*) default initialize members
/// - int soap_read__trt__GetSnapshotUri(struct soap*, _trt__GetSnapshotUri*) deserialize from a source
/// - int soap_write__trt__GetSnapshotUri(struct soap*, _trt__GetSnapshotUri*) serialize to a sink
/// - _trt__GetSnapshotUri* soap_dup__trt__GetSnapshotUri(struct soap*, _trt__GetSnapshotUri* dst, _trt__GetSnapshotUri *src) returns deep copy of _trt__GetSnapshotUri src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetSnapshotUri(_trt__GetSnapshotUri*) deep deletes _trt__GetSnapshotUri data members, use only on dst after soap_dup__trt__GetSnapshotUri(NULL, _trt__GetSnapshotUri *dst, _trt__GetSnapshotUri *src) (use soapcpp2 -Ed)
struct _trt__GetSnapshotUri
{
/// <PRE><BLOCKQUOTE>
///   The ProfileToken element indicates the media profile to use and will define the source and dimensions of the snapshot.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetSnapshotUriResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetSnapshotUriResponse is a complexType.
///
/// @note struct _trt__GetSnapshotUriResponse operations:
/// - _trt__GetSnapshotUriResponse* soap_new__trt__GetSnapshotUriResponse(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__trt__GetSnapshotUriResponse(struct soap*, _trt__GetSnapshotUriResponse*) default initialize members
/// - int soap_read__trt__GetSnapshotUriResponse(struct soap*, _trt__GetSnapshotUriResponse*) deserialize from a source
/// - int soap_write__trt__GetSnapshotUriResponse(struct soap*, _trt__GetSnapshotUriResponse*) serialize to a sink
/// - _trt__GetSnapshotUriResponse* soap_dup__trt__GetSnapshotUriResponse(struct soap*, _trt__GetSnapshotUriResponse* dst, _trt__GetSnapshotUriResponse *src) returns deep copy of _trt__GetSnapshotUriResponse src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__trt__GetSnapshotUriResponse(_trt__GetSnapshotUriResponse*) deep deletes _trt__GetSnapshotUriResponse data members, use only on dst after soap_dup__trt__GetSnapshotUriResponse(NULL, _trt__GetSnapshotUriResponse *dst, _trt__GetSnapshotUriResponse *src) (use soapcpp2 -Ed)
struct _trt__GetSnapshotUriResponse
{

/// </BLOCKQUOTE></PRE>
///
/// Element "MediaUri" of type "http://www.onvif.org/ver10/schema":MediaUri.
    struct tt__MediaUri*                 MediaUri                       1;	///< Required element.
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/network/wsdl                                  *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// @note struct tt__VideoEncoderConfiguration operations:
/// - tt__VideoEncoderConfiguration* soap_new_tt__VideoEncoderConfiguration(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__VideoEncoderConfiguration(struct soap*, tt__VideoEncoderConfiguration*) default initialize members
/// - int soap_read_tt__VideoEncoderConfiguration(struct soap*, tt__VideoEncoderConfiguration*) deserialize from a source
/// - int soap_write_tt__VideoEncoderConfiguration(struct soap*, tt__VideoEncoderConfiguration*) serialize to a sink
/// - tt__VideoEncoderConfiguration* soap_dup_tt__VideoEncoderConfiguration(struct soap*, tt__VideoEncoderConfiguration* dst, tt__VideoEncoderConfiguration *src) returns deep copy of tt__VideoEncoderConfiguration src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__VideoEncoderConfiguration(tt__VideoEncoderConfiguration*) deep deletes tt__VideoEncoderConfiguration data members, use only on dst after soap_dup_tt__VideoEncoderConfiguration(NULL, tt__VideoEncoderConfiguration *dst, tt__VideoEncoderConfiguration *src) (use soapcpp2 -Ed)
struct tt__VideoEncoderConfiguration
{
/// INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely refernces this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
//  END OF INHERITED FROM tt__ConfigurationEntity
/// <PRE><BLOCKQUOTE>
///   Used video codec, either Jpeg, H.264 or Mpeg4
/// </BLOCKQUOTE></PRE>
///
/// Element "Encoding" of type "http://www.onvif.org/ver10/schema":VideoEncoding.
    enum tt__VideoEncoding               Encoding                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Configured video resolution
/// </BLOCKQUOTE></PRE>
///
/// Element "Resolution" of type "http://www.onvif.org/ver10/schema":VideoResolution.
    struct tt__VideoResolution*          Resolution                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Relative value for the video quantizers and the quality of the video. A high value within supported quality range means higher quality
/// </BLOCKQUOTE></PRE>
///
/// Element "Quality" of type xs:float.
    float                                Quality                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure rate control related parameters.
/// </BLOCKQUOTE></PRE>
///
/// Element "RateControl" of type "http://www.onvif.org/ver10/schema":VideoRateControl.
    struct tt__VideoRateControl*         RateControl                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure Mpeg4 related parameters.
/// </BLOCKQUOTE></PRE>
///
/// Element "MPEG4" of type "http://www.onvif.org/ver10/schema":Mpeg4Configuration.
    struct tt__Mpeg4Configuration*       MPEG4                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure H.264 related parameters.
/// </BLOCKQUOTE></PRE>
///
/// Element "H264" of type "http://www.onvif.org/ver10/schema":H264Configuration.
    struct tt__H264Configuration*        H264                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Defines the multicast settings that could be used for video streaming.
/// </BLOCKQUOTE></PRE>
///
/// Element "Multicast" of type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    struct tt__MulticastConfiguration*   Multicast                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The rtsp session timeout for the related video stream
/// </BLOCKQUOTE></PRE>
///
/// Element "SessionTimeout" of type xs:duration.
    xsd__duration                        SessionTimeout                 1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// <PRE><BLOCKQUOTE>
///   A value of true indicates that frame rate is a fixed value rather than an upper limit,
///   and that the video encoder shall prioritize frame rate over all other adaptable
///   configuration values such as bitrate. Default is false.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "GuaranteedFrameRate" of type xs:boolean.
  @ enum xsd__boolean*                   GuaranteedFrameRate            0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
};

/// @brief "http://www.onvif.org/ver10/schema":JpegOptions2 is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":JpegOptions.
///
/// @note struct tt__JpegOptions2 operations:
/// - tt__JpegOptions2* soap_new_tt__JpegOptions2(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__JpegOptions2(struct soap*, tt__JpegOptions2*) default initialize members
/// - int soap_read_tt__JpegOptions2(struct soap*, tt__JpegOptions2*) deserialize from a source
/// - int soap_write_tt__JpegOptions2(struct soap*, tt__JpegOptions2*) serialize to a sink
/// - tt__JpegOptions2* soap_dup_tt__JpegOptions2(struct soap*, tt__JpegOptions2* dst, tt__JpegOptions2 *src) returns deep copy of tt__JpegOptions2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__JpegOptions2(tt__JpegOptions2*) deep deletes tt__JpegOptions2 data members, use only on dst after soap_dup_tt__JpegOptions2(NULL, tt__JpegOptions2 *dst, tt__JpegOptions2 *src) (use soapcpp2 -Ed)
struct tt__JpegOptions2
{
/// INHERITED FROM tt__JpegOptions:
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__VideoResolution* is 1..unbounded.
  $ int                                  __sizeResolutionsAvailable     1;
/// Array struct tt__VideoResolution* of size 1..unbounded.
    struct tt__VideoResolution*          ResolutionsAvailable           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Supported frame rate in fps (frames per second).
/// </BLOCKQUOTE></PRE>
///
/// Element "FrameRateRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 FrameRateRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// </BLOCKQUOTE></PRE>
///
/// Element "EncodingIntervalRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 EncodingIntervalRange          1;	///< Required element.
//  END OF INHERITED FROM tt__JpegOptions
/// <PRE><BLOCKQUOTE>
///   Supported range of encoded bitrate in kbps.
/// </BLOCKQUOTE></PRE>
///
/// Element "BitrateRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 BitrateRange                   1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
};

/// @brief "http://www.onvif.org/ver10/schema":Mpeg4Options2 is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":Mpeg4Options.
///
/// @note struct tt__Mpeg4Options2 operations:
/// - tt__Mpeg4Options2* soap_new_tt__Mpeg4Options2(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__Mpeg4Options2(struct soap*, tt__Mpeg4Options2*) default initialize members
/// - int soap_read_tt__Mpeg4Options2(struct soap*, tt__Mpeg4Options2*) deserialize from a source
/// - int soap_write_tt__Mpeg4Options2(struct soap*, tt__Mpeg4Options2*) serialize to a sink
/// - tt__Mpeg4Options2* soap_dup_tt__Mpeg4Options2(struct soap*, tt__Mpeg4Options2* dst, tt__Mpeg4Options2 *src) returns deep copy of tt__Mpeg4Options2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__Mpeg4Options2(tt__Mpeg4Options2*) deep deletes tt__Mpeg4Options2 data members, use only on dst after soap_dup_tt__Mpeg4Options2(NULL, tt__Mpeg4Options2 *dst, tt__Mpeg4Options2 *src) (use soapcpp2 -Ed)
struct tt__Mpeg4Options2
{
/// INHERITED FROM tt__Mpeg4Options:
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__VideoResolution* is 1..unbounded.
  $ int                                  __sizeResolutionsAvailable     1;
/// Array struct tt__VideoResolution* of size 1..unbounded.
    struct tt__VideoResolution*          ResolutionsAvailable           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Supported group of Video frames length. This value typically corresponds to the I-Frame distance.
/// </BLOCKQUOTE></PRE>
///
/// Element "GovLengthRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 GovLengthRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported frame rate in fps (frames per second).
/// </BLOCKQUOTE></PRE>
///
/// Element "FrameRateRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 FrameRateRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// </BLOCKQUOTE></PRE>
///
/// Element "EncodingIntervalRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 EncodingIntervalRange          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported MPEG-4 profiles.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of enum tt__Mpeg4Profile* is 1..unbounded.
  $ int                                  __sizeMpeg4ProfilesSupported   1;
/// Array enum tt__Mpeg4Profile* of size 1..unbounded.
    enum tt__Mpeg4Profile*               Mpeg4ProfilesSupported         1;	///< Multiple elements.
//  END OF INHERITED FROM tt__Mpeg4Options
/// <PRE><BLOCKQUOTE>
///   Supported range of encoded bitrate in kbps.
/// </BLOCKQUOTE></PRE>
///
/// Element "BitrateRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 BitrateRange                   1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
};

/// @brief "http://www.onvif.org/ver10/schema":H264Options2 is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":H264Options.
///
/// @note struct tt__H264Options2 operations:
/// - tt__H264Options2* soap_new_tt__H264Options2(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_tt__H264Options2(struct soap*, tt__H264Options2*) default initialize members
/// - int soap_read_tt__H264Options2(struct soap*, tt__H264Options2*) deserialize from a source
/// - int soap_write_tt__H264Options2(struct soap*, tt__H264Options2*) serialize to a sink
/// - tt__H264Options2* soap_dup_tt__H264Options2(struct soap*, tt__H264Options2* dst, tt__H264Options2 *src) returns deep copy of tt__H264Options2 src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_tt__H264Options2(tt__H264Options2*) deep deletes tt__H264Options2 data members, use only on dst after soap_dup_tt__H264Options2(NULL, tt__H264Options2 *dst, tt__H264Options2 *src) (use soapcpp2 -Ed)
struct tt__H264Options2
{
/// INHERITED FROM tt__H264Options:
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of struct tt__VideoResolution* is 1..unbounded.
  $ int                                  __sizeResolutionsAvailable     1;
/// Array struct tt__VideoResolution* of size 1..unbounded.
    struct tt__VideoResolution*          ResolutionsAvailable           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Supported group of Video frames length. This value typically corresponds to the I-Frame distance.
/// </BLOCKQUOTE></PRE>
///
/// Element "GovLengthRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 GovLengthRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported frame rate in fps (frames per second).
/// </BLOCKQUOTE></PRE>
///
/// Element "FrameRateRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 FrameRateRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// </BLOCKQUOTE></PRE>
///
/// Element "EncodingIntervalRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 EncodingIntervalRange          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported H.264 profiles.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of enum tt__H264Profile* is 1..unbounded.
  $ int                                  __sizeH264ProfilesSupported    1;
/// Array enum tt__H264Profile* of size 1..unbounded.
    enum tt__H264Profile*                H264ProfilesSupported          1;	///< Multiple elements.
//  END OF INHERITED FROM tt__H264Options
/// <PRE><BLOCKQUOTE>
///   Supported range of encoded bitrate in kbps.
/// </BLOCKQUOTE></PRE>
///
/// Element "BitrateRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    struct tt__IntRange*                 BitrateRange                   1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__SubscribeCreationFailedFaultType operations:
/// - wsnt__SubscribeCreationFailedFaultType* soap_new_wsnt__SubscribeCreationFailedFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__SubscribeCreationFailedFaultType(struct soap*, wsnt__SubscribeCreationFailedFaultType*) default initialize members
/// - int soap_read_wsnt__SubscribeCreationFailedFaultType(struct soap*, wsnt__SubscribeCreationFailedFaultType*) deserialize from a source
/// - int soap_write_wsnt__SubscribeCreationFailedFaultType(struct soap*, wsnt__SubscribeCreationFailedFaultType*) serialize to a sink
/// - wsnt__SubscribeCreationFailedFaultType* soap_dup_wsnt__SubscribeCreationFailedFaultType(struct soap*, wsnt__SubscribeCreationFailedFaultType* dst, wsnt__SubscribeCreationFailedFaultType *src) returns deep copy of wsnt__SubscribeCreationFailedFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__SubscribeCreationFailedFaultType(wsnt__SubscribeCreationFailedFaultType*) deep deletes wsnt__SubscribeCreationFailedFaultType data members, use only on dst after soap_dup_wsnt__SubscribeCreationFailedFaultType(NULL, wsnt__SubscribeCreationFailedFaultType *dst, wsnt__SubscribeCreationFailedFaultType *src) (use soapcpp2 -Ed)
struct wsnt__SubscribeCreationFailedFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__SubscribeCreationFailedFaultType_ErrorCode operations:
/// - _wsnt__SubscribeCreationFailedFaultType_ErrorCode* soap_new__wsnt__SubscribeCreationFailedFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__SubscribeCreationFailedFaultType_ErrorCode(struct soap*, _wsnt__SubscribeCreationFailedFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__SubscribeCreationFailedFaultType_ErrorCode(struct soap*, _wsnt__SubscribeCreationFailedFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__SubscribeCreationFailedFaultType_ErrorCode(struct soap*, _wsnt__SubscribeCreationFailedFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__SubscribeCreationFailedFaultType_ErrorCode* soap_dup__wsnt__SubscribeCreationFailedFaultType_ErrorCode(struct soap*, _wsnt__SubscribeCreationFailedFaultType_ErrorCode* dst, _wsnt__SubscribeCreationFailedFaultType_ErrorCode *src) returns deep copy of _wsnt__SubscribeCreationFailedFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__SubscribeCreationFailedFaultType_ErrorCode(_wsnt__SubscribeCreationFailedFaultType_ErrorCode*) deep deletes _wsnt__SubscribeCreationFailedFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__SubscribeCreationFailedFaultType_ErrorCode(NULL, _wsnt__SubscribeCreationFailedFaultType_ErrorCode *dst, _wsnt__SubscribeCreationFailedFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__SubscribeCreationFailedFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__SubscribeCreationFailedFaultType_Description operations:
/// - _wsnt__SubscribeCreationFailedFaultType_Description* soap_new__wsnt__SubscribeCreationFailedFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__SubscribeCreationFailedFaultType_Description(struct soap*, _wsnt__SubscribeCreationFailedFaultType_Description*) default initialize members
/// - int soap_read__wsnt__SubscribeCreationFailedFaultType_Description(struct soap*, _wsnt__SubscribeCreationFailedFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__SubscribeCreationFailedFaultType_Description(struct soap*, _wsnt__SubscribeCreationFailedFaultType_Description*) serialize to a sink
/// - _wsnt__SubscribeCreationFailedFaultType_Description* soap_dup__wsnt__SubscribeCreationFailedFaultType_Description(struct soap*, _wsnt__SubscribeCreationFailedFaultType_Description* dst, _wsnt__SubscribeCreationFailedFaultType_Description *src) returns deep copy of _wsnt__SubscribeCreationFailedFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__SubscribeCreationFailedFaultType_Description(_wsnt__SubscribeCreationFailedFaultType_Description*) deep deletes _wsnt__SubscribeCreationFailedFaultType_Description data members, use only on dst after soap_dup__wsnt__SubscribeCreationFailedFaultType_Description(NULL, _wsnt__SubscribeCreationFailedFaultType_Description *dst, _wsnt__SubscribeCreationFailedFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__SubscribeCreationFailedFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__SubscribeCreationFailedFaultType_FaultCause operations:
/// - _wsnt__SubscribeCreationFailedFaultType_FaultCause* soap_new__wsnt__SubscribeCreationFailedFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__SubscribeCreationFailedFaultType_FaultCause(struct soap*, _wsnt__SubscribeCreationFailedFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__SubscribeCreationFailedFaultType_FaultCause(struct soap*, _wsnt__SubscribeCreationFailedFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__SubscribeCreationFailedFaultType_FaultCause(struct soap*, _wsnt__SubscribeCreationFailedFaultType_FaultCause*) serialize to a sink
/// - _wsnt__SubscribeCreationFailedFaultType_FaultCause* soap_dup__wsnt__SubscribeCreationFailedFaultType_FaultCause(struct soap*, _wsnt__SubscribeCreationFailedFaultType_FaultCause* dst, _wsnt__SubscribeCreationFailedFaultType_FaultCause *src) returns deep copy of _wsnt__SubscribeCreationFailedFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__SubscribeCreationFailedFaultType_FaultCause(_wsnt__SubscribeCreationFailedFaultType_FaultCause*) deep deletes _wsnt__SubscribeCreationFailedFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__SubscribeCreationFailedFaultType_FaultCause(NULL, _wsnt__SubscribeCreationFailedFaultType_FaultCause *dst, _wsnt__SubscribeCreationFailedFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__SubscribeCreationFailedFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__InvalidFilterFaultType operations:
/// - wsnt__InvalidFilterFaultType* soap_new_wsnt__InvalidFilterFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__InvalidFilterFaultType(struct soap*, wsnt__InvalidFilterFaultType*) default initialize members
/// - int soap_read_wsnt__InvalidFilterFaultType(struct soap*, wsnt__InvalidFilterFaultType*) deserialize from a source
/// - int soap_write_wsnt__InvalidFilterFaultType(struct soap*, wsnt__InvalidFilterFaultType*) serialize to a sink
/// - wsnt__InvalidFilterFaultType* soap_dup_wsnt__InvalidFilterFaultType(struct soap*, wsnt__InvalidFilterFaultType* dst, wsnt__InvalidFilterFaultType *src) returns deep copy of wsnt__InvalidFilterFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__InvalidFilterFaultType(wsnt__InvalidFilterFaultType*) deep deletes wsnt__InvalidFilterFaultType data members, use only on dst after soap_dup_wsnt__InvalidFilterFaultType(NULL, wsnt__InvalidFilterFaultType *dst, wsnt__InvalidFilterFaultType *src) (use soapcpp2 -Ed)
struct wsnt__InvalidFilterFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__InvalidFilterFaultType_ErrorCode operations:
/// - _wsnt__InvalidFilterFaultType_ErrorCode* soap_new__wsnt__InvalidFilterFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__InvalidFilterFaultType_ErrorCode(struct soap*, _wsnt__InvalidFilterFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__InvalidFilterFaultType_ErrorCode(struct soap*, _wsnt__InvalidFilterFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__InvalidFilterFaultType_ErrorCode(struct soap*, _wsnt__InvalidFilterFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__InvalidFilterFaultType_ErrorCode* soap_dup__wsnt__InvalidFilterFaultType_ErrorCode(struct soap*, _wsnt__InvalidFilterFaultType_ErrorCode* dst, _wsnt__InvalidFilterFaultType_ErrorCode *src) returns deep copy of _wsnt__InvalidFilterFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__InvalidFilterFaultType_ErrorCode(_wsnt__InvalidFilterFaultType_ErrorCode*) deep deletes _wsnt__InvalidFilterFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__InvalidFilterFaultType_ErrorCode(NULL, _wsnt__InvalidFilterFaultType_ErrorCode *dst, _wsnt__InvalidFilterFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__InvalidFilterFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__InvalidFilterFaultType_Description operations:
/// - _wsnt__InvalidFilterFaultType_Description* soap_new__wsnt__InvalidFilterFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__InvalidFilterFaultType_Description(struct soap*, _wsnt__InvalidFilterFaultType_Description*) default initialize members
/// - int soap_read__wsnt__InvalidFilterFaultType_Description(struct soap*, _wsnt__InvalidFilterFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__InvalidFilterFaultType_Description(struct soap*, _wsnt__InvalidFilterFaultType_Description*) serialize to a sink
/// - _wsnt__InvalidFilterFaultType_Description* soap_dup__wsnt__InvalidFilterFaultType_Description(struct soap*, _wsnt__InvalidFilterFaultType_Description* dst, _wsnt__InvalidFilterFaultType_Description *src) returns deep copy of _wsnt__InvalidFilterFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__InvalidFilterFaultType_Description(_wsnt__InvalidFilterFaultType_Description*) deep deletes _wsnt__InvalidFilterFaultType_Description data members, use only on dst after soap_dup__wsnt__InvalidFilterFaultType_Description(NULL, _wsnt__InvalidFilterFaultType_Description *dst, _wsnt__InvalidFilterFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__InvalidFilterFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__InvalidFilterFaultType_FaultCause operations:
/// - _wsnt__InvalidFilterFaultType_FaultCause* soap_new__wsnt__InvalidFilterFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__InvalidFilterFaultType_FaultCause(struct soap*, _wsnt__InvalidFilterFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__InvalidFilterFaultType_FaultCause(struct soap*, _wsnt__InvalidFilterFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__InvalidFilterFaultType_FaultCause(struct soap*, _wsnt__InvalidFilterFaultType_FaultCause*) serialize to a sink
/// - _wsnt__InvalidFilterFaultType_FaultCause* soap_dup__wsnt__InvalidFilterFaultType_FaultCause(struct soap*, _wsnt__InvalidFilterFaultType_FaultCause* dst, _wsnt__InvalidFilterFaultType_FaultCause *src) returns deep copy of _wsnt__InvalidFilterFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__InvalidFilterFaultType_FaultCause(_wsnt__InvalidFilterFaultType_FaultCause*) deep deletes _wsnt__InvalidFilterFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__InvalidFilterFaultType_FaultCause(NULL, _wsnt__InvalidFilterFaultType_FaultCause *dst, _wsnt__InvalidFilterFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__InvalidFilterFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
/// Size of array of _QName* is 1..unbounded.
  $ int                                  __sizeUnknownFilter            1;
/// Array _QName* of size 1..unbounded.
    _QName*                              UnknownFilter                  1;	///< Multiple elements.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__TopicExpressionDialectUnknownFaultType operations:
/// - wsnt__TopicExpressionDialectUnknownFaultType* soap_new_wsnt__TopicExpressionDialectUnknownFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__TopicExpressionDialectUnknownFaultType(struct soap*, wsnt__TopicExpressionDialectUnknownFaultType*) default initialize members
/// - int soap_read_wsnt__TopicExpressionDialectUnknownFaultType(struct soap*, wsnt__TopicExpressionDialectUnknownFaultType*) deserialize from a source
/// - int soap_write_wsnt__TopicExpressionDialectUnknownFaultType(struct soap*, wsnt__TopicExpressionDialectUnknownFaultType*) serialize to a sink
/// - wsnt__TopicExpressionDialectUnknownFaultType* soap_dup_wsnt__TopicExpressionDialectUnknownFaultType(struct soap*, wsnt__TopicExpressionDialectUnknownFaultType* dst, wsnt__TopicExpressionDialectUnknownFaultType *src) returns deep copy of wsnt__TopicExpressionDialectUnknownFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__TopicExpressionDialectUnknownFaultType(wsnt__TopicExpressionDialectUnknownFaultType*) deep deletes wsnt__TopicExpressionDialectUnknownFaultType data members, use only on dst after soap_dup_wsnt__TopicExpressionDialectUnknownFaultType(NULL, wsnt__TopicExpressionDialectUnknownFaultType *dst, wsnt__TopicExpressionDialectUnknownFaultType *src) (use soapcpp2 -Ed)
struct wsnt__TopicExpressionDialectUnknownFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode operations:
/// - _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode* soap_new__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(struct soap*, _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(struct soap*, _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(struct soap*, _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode* soap_dup__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(struct soap*, _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode* dst, _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode *src) returns deep copy of _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(_wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode*) deep deletes _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(NULL, _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode *dst, _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__TopicExpressionDialectUnknownFaultType_Description operations:
/// - _wsnt__TopicExpressionDialectUnknownFaultType_Description* soap_new__wsnt__TopicExpressionDialectUnknownFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__TopicExpressionDialectUnknownFaultType_Description(struct soap*, _wsnt__TopicExpressionDialectUnknownFaultType_Description*) default initialize members
/// - int soap_read__wsnt__TopicExpressionDialectUnknownFaultType_Description(struct soap*, _wsnt__TopicExpressionDialectUnknownFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__TopicExpressionDialectUnknownFaultType_Description(struct soap*, _wsnt__TopicExpressionDialectUnknownFaultType_Description*) serialize to a sink
/// - _wsnt__TopicExpressionDialectUnknownFaultType_Description* soap_dup__wsnt__TopicExpressionDialectUnknownFaultType_Description(struct soap*, _wsnt__TopicExpressionDialectUnknownFaultType_Description* dst, _wsnt__TopicExpressionDialectUnknownFaultType_Description *src) returns deep copy of _wsnt__TopicExpressionDialectUnknownFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__TopicExpressionDialectUnknownFaultType_Description(_wsnt__TopicExpressionDialectUnknownFaultType_Description*) deep deletes _wsnt__TopicExpressionDialectUnknownFaultType_Description data members, use only on dst after soap_dup__wsnt__TopicExpressionDialectUnknownFaultType_Description(NULL, _wsnt__TopicExpressionDialectUnknownFaultType_Description *dst, _wsnt__TopicExpressionDialectUnknownFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__TopicExpressionDialectUnknownFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause operations:
/// - _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause* soap_new__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(struct soap*, _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(struct soap*, _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(struct soap*, _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause*) serialize to a sink
/// - _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause* soap_dup__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(struct soap*, _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause* dst, _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause *src) returns deep copy of _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(_wsnt__TopicExpressionDialectUnknownFaultType_FaultCause*) deep deletes _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(NULL, _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause *dst, _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__InvalidTopicExpressionFaultType operations:
/// - wsnt__InvalidTopicExpressionFaultType* soap_new_wsnt__InvalidTopicExpressionFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__InvalidTopicExpressionFaultType(struct soap*, wsnt__InvalidTopicExpressionFaultType*) default initialize members
/// - int soap_read_wsnt__InvalidTopicExpressionFaultType(struct soap*, wsnt__InvalidTopicExpressionFaultType*) deserialize from a source
/// - int soap_write_wsnt__InvalidTopicExpressionFaultType(struct soap*, wsnt__InvalidTopicExpressionFaultType*) serialize to a sink
/// - wsnt__InvalidTopicExpressionFaultType* soap_dup_wsnt__InvalidTopicExpressionFaultType(struct soap*, wsnt__InvalidTopicExpressionFaultType* dst, wsnt__InvalidTopicExpressionFaultType *src) returns deep copy of wsnt__InvalidTopicExpressionFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__InvalidTopicExpressionFaultType(wsnt__InvalidTopicExpressionFaultType*) deep deletes wsnt__InvalidTopicExpressionFaultType data members, use only on dst after soap_dup_wsnt__InvalidTopicExpressionFaultType(NULL, wsnt__InvalidTopicExpressionFaultType *dst, wsnt__InvalidTopicExpressionFaultType *src) (use soapcpp2 -Ed)
struct wsnt__InvalidTopicExpressionFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__InvalidTopicExpressionFaultType_ErrorCode operations:
/// - _wsnt__InvalidTopicExpressionFaultType_ErrorCode* soap_new__wsnt__InvalidTopicExpressionFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__InvalidTopicExpressionFaultType_ErrorCode(struct soap*, _wsnt__InvalidTopicExpressionFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__InvalidTopicExpressionFaultType_ErrorCode(struct soap*, _wsnt__InvalidTopicExpressionFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__InvalidTopicExpressionFaultType_ErrorCode(struct soap*, _wsnt__InvalidTopicExpressionFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__InvalidTopicExpressionFaultType_ErrorCode* soap_dup__wsnt__InvalidTopicExpressionFaultType_ErrorCode(struct soap*, _wsnt__InvalidTopicExpressionFaultType_ErrorCode* dst, _wsnt__InvalidTopicExpressionFaultType_ErrorCode *src) returns deep copy of _wsnt__InvalidTopicExpressionFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__InvalidTopicExpressionFaultType_ErrorCode(_wsnt__InvalidTopicExpressionFaultType_ErrorCode*) deep deletes _wsnt__InvalidTopicExpressionFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__InvalidTopicExpressionFaultType_ErrorCode(NULL, _wsnt__InvalidTopicExpressionFaultType_ErrorCode *dst, _wsnt__InvalidTopicExpressionFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__InvalidTopicExpressionFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__InvalidTopicExpressionFaultType_Description operations:
/// - _wsnt__InvalidTopicExpressionFaultType_Description* soap_new__wsnt__InvalidTopicExpressionFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__InvalidTopicExpressionFaultType_Description(struct soap*, _wsnt__InvalidTopicExpressionFaultType_Description*) default initialize members
/// - int soap_read__wsnt__InvalidTopicExpressionFaultType_Description(struct soap*, _wsnt__InvalidTopicExpressionFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__InvalidTopicExpressionFaultType_Description(struct soap*, _wsnt__InvalidTopicExpressionFaultType_Description*) serialize to a sink
/// - _wsnt__InvalidTopicExpressionFaultType_Description* soap_dup__wsnt__InvalidTopicExpressionFaultType_Description(struct soap*, _wsnt__InvalidTopicExpressionFaultType_Description* dst, _wsnt__InvalidTopicExpressionFaultType_Description *src) returns deep copy of _wsnt__InvalidTopicExpressionFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__InvalidTopicExpressionFaultType_Description(_wsnt__InvalidTopicExpressionFaultType_Description*) deep deletes _wsnt__InvalidTopicExpressionFaultType_Description data members, use only on dst after soap_dup__wsnt__InvalidTopicExpressionFaultType_Description(NULL, _wsnt__InvalidTopicExpressionFaultType_Description *dst, _wsnt__InvalidTopicExpressionFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__InvalidTopicExpressionFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__InvalidTopicExpressionFaultType_FaultCause operations:
/// - _wsnt__InvalidTopicExpressionFaultType_FaultCause* soap_new__wsnt__InvalidTopicExpressionFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__InvalidTopicExpressionFaultType_FaultCause(struct soap*, _wsnt__InvalidTopicExpressionFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__InvalidTopicExpressionFaultType_FaultCause(struct soap*, _wsnt__InvalidTopicExpressionFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__InvalidTopicExpressionFaultType_FaultCause(struct soap*, _wsnt__InvalidTopicExpressionFaultType_FaultCause*) serialize to a sink
/// - _wsnt__InvalidTopicExpressionFaultType_FaultCause* soap_dup__wsnt__InvalidTopicExpressionFaultType_FaultCause(struct soap*, _wsnt__InvalidTopicExpressionFaultType_FaultCause* dst, _wsnt__InvalidTopicExpressionFaultType_FaultCause *src) returns deep copy of _wsnt__InvalidTopicExpressionFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__InvalidTopicExpressionFaultType_FaultCause(_wsnt__InvalidTopicExpressionFaultType_FaultCause*) deep deletes _wsnt__InvalidTopicExpressionFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__InvalidTopicExpressionFaultType_FaultCause(NULL, _wsnt__InvalidTopicExpressionFaultType_FaultCause *dst, _wsnt__InvalidTopicExpressionFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__InvalidTopicExpressionFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__TopicNotSupportedFaultType operations:
/// - wsnt__TopicNotSupportedFaultType* soap_new_wsnt__TopicNotSupportedFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__TopicNotSupportedFaultType(struct soap*, wsnt__TopicNotSupportedFaultType*) default initialize members
/// - int soap_read_wsnt__TopicNotSupportedFaultType(struct soap*, wsnt__TopicNotSupportedFaultType*) deserialize from a source
/// - int soap_write_wsnt__TopicNotSupportedFaultType(struct soap*, wsnt__TopicNotSupportedFaultType*) serialize to a sink
/// - wsnt__TopicNotSupportedFaultType* soap_dup_wsnt__TopicNotSupportedFaultType(struct soap*, wsnt__TopicNotSupportedFaultType* dst, wsnt__TopicNotSupportedFaultType *src) returns deep copy of wsnt__TopicNotSupportedFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__TopicNotSupportedFaultType(wsnt__TopicNotSupportedFaultType*) deep deletes wsnt__TopicNotSupportedFaultType data members, use only on dst after soap_dup_wsnt__TopicNotSupportedFaultType(NULL, wsnt__TopicNotSupportedFaultType *dst, wsnt__TopicNotSupportedFaultType *src) (use soapcpp2 -Ed)
struct wsnt__TopicNotSupportedFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__TopicNotSupportedFaultType_ErrorCode operations:
/// - _wsnt__TopicNotSupportedFaultType_ErrorCode* soap_new__wsnt__TopicNotSupportedFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__TopicNotSupportedFaultType_ErrorCode(struct soap*, _wsnt__TopicNotSupportedFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__TopicNotSupportedFaultType_ErrorCode(struct soap*, _wsnt__TopicNotSupportedFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__TopicNotSupportedFaultType_ErrorCode(struct soap*, _wsnt__TopicNotSupportedFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__TopicNotSupportedFaultType_ErrorCode* soap_dup__wsnt__TopicNotSupportedFaultType_ErrorCode(struct soap*, _wsnt__TopicNotSupportedFaultType_ErrorCode* dst, _wsnt__TopicNotSupportedFaultType_ErrorCode *src) returns deep copy of _wsnt__TopicNotSupportedFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__TopicNotSupportedFaultType_ErrorCode(_wsnt__TopicNotSupportedFaultType_ErrorCode*) deep deletes _wsnt__TopicNotSupportedFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__TopicNotSupportedFaultType_ErrorCode(NULL, _wsnt__TopicNotSupportedFaultType_ErrorCode *dst, _wsnt__TopicNotSupportedFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__TopicNotSupportedFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__TopicNotSupportedFaultType_Description operations:
/// - _wsnt__TopicNotSupportedFaultType_Description* soap_new__wsnt__TopicNotSupportedFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__TopicNotSupportedFaultType_Description(struct soap*, _wsnt__TopicNotSupportedFaultType_Description*) default initialize members
/// - int soap_read__wsnt__TopicNotSupportedFaultType_Description(struct soap*, _wsnt__TopicNotSupportedFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__TopicNotSupportedFaultType_Description(struct soap*, _wsnt__TopicNotSupportedFaultType_Description*) serialize to a sink
/// - _wsnt__TopicNotSupportedFaultType_Description* soap_dup__wsnt__TopicNotSupportedFaultType_Description(struct soap*, _wsnt__TopicNotSupportedFaultType_Description* dst, _wsnt__TopicNotSupportedFaultType_Description *src) returns deep copy of _wsnt__TopicNotSupportedFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__TopicNotSupportedFaultType_Description(_wsnt__TopicNotSupportedFaultType_Description*) deep deletes _wsnt__TopicNotSupportedFaultType_Description data members, use only on dst after soap_dup__wsnt__TopicNotSupportedFaultType_Description(NULL, _wsnt__TopicNotSupportedFaultType_Description *dst, _wsnt__TopicNotSupportedFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__TopicNotSupportedFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__TopicNotSupportedFaultType_FaultCause operations:
/// - _wsnt__TopicNotSupportedFaultType_FaultCause* soap_new__wsnt__TopicNotSupportedFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__TopicNotSupportedFaultType_FaultCause(struct soap*, _wsnt__TopicNotSupportedFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__TopicNotSupportedFaultType_FaultCause(struct soap*, _wsnt__TopicNotSupportedFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__TopicNotSupportedFaultType_FaultCause(struct soap*, _wsnt__TopicNotSupportedFaultType_FaultCause*) serialize to a sink
/// - _wsnt__TopicNotSupportedFaultType_FaultCause* soap_dup__wsnt__TopicNotSupportedFaultType_FaultCause(struct soap*, _wsnt__TopicNotSupportedFaultType_FaultCause* dst, _wsnt__TopicNotSupportedFaultType_FaultCause *src) returns deep copy of _wsnt__TopicNotSupportedFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__TopicNotSupportedFaultType_FaultCause(_wsnt__TopicNotSupportedFaultType_FaultCause*) deep deletes _wsnt__TopicNotSupportedFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__TopicNotSupportedFaultType_FaultCause(NULL, _wsnt__TopicNotSupportedFaultType_FaultCause *dst, _wsnt__TopicNotSupportedFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__TopicNotSupportedFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__MultipleTopicsSpecifiedFaultType operations:
/// - wsnt__MultipleTopicsSpecifiedFaultType* soap_new_wsnt__MultipleTopicsSpecifiedFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__MultipleTopicsSpecifiedFaultType(struct soap*, wsnt__MultipleTopicsSpecifiedFaultType*) default initialize members
/// - int soap_read_wsnt__MultipleTopicsSpecifiedFaultType(struct soap*, wsnt__MultipleTopicsSpecifiedFaultType*) deserialize from a source
/// - int soap_write_wsnt__MultipleTopicsSpecifiedFaultType(struct soap*, wsnt__MultipleTopicsSpecifiedFaultType*) serialize to a sink
/// - wsnt__MultipleTopicsSpecifiedFaultType* soap_dup_wsnt__MultipleTopicsSpecifiedFaultType(struct soap*, wsnt__MultipleTopicsSpecifiedFaultType* dst, wsnt__MultipleTopicsSpecifiedFaultType *src) returns deep copy of wsnt__MultipleTopicsSpecifiedFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__MultipleTopicsSpecifiedFaultType(wsnt__MultipleTopicsSpecifiedFaultType*) deep deletes wsnt__MultipleTopicsSpecifiedFaultType data members, use only on dst after soap_dup_wsnt__MultipleTopicsSpecifiedFaultType(NULL, wsnt__MultipleTopicsSpecifiedFaultType *dst, wsnt__MultipleTopicsSpecifiedFaultType *src) (use soapcpp2 -Ed)
struct wsnt__MultipleTopicsSpecifiedFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode operations:
/// - _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode* soap_new__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(struct soap*, _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(struct soap*, _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(struct soap*, _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode* soap_dup__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(struct soap*, _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode* dst, _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode *src) returns deep copy of _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(_wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode*) deep deletes _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(NULL, _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode *dst, _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__MultipleTopicsSpecifiedFaultType_Description operations:
/// - _wsnt__MultipleTopicsSpecifiedFaultType_Description* soap_new__wsnt__MultipleTopicsSpecifiedFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__MultipleTopicsSpecifiedFaultType_Description(struct soap*, _wsnt__MultipleTopicsSpecifiedFaultType_Description*) default initialize members
/// - int soap_read__wsnt__MultipleTopicsSpecifiedFaultType_Description(struct soap*, _wsnt__MultipleTopicsSpecifiedFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__MultipleTopicsSpecifiedFaultType_Description(struct soap*, _wsnt__MultipleTopicsSpecifiedFaultType_Description*) serialize to a sink
/// - _wsnt__MultipleTopicsSpecifiedFaultType_Description* soap_dup__wsnt__MultipleTopicsSpecifiedFaultType_Description(struct soap*, _wsnt__MultipleTopicsSpecifiedFaultType_Description* dst, _wsnt__MultipleTopicsSpecifiedFaultType_Description *src) returns deep copy of _wsnt__MultipleTopicsSpecifiedFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__MultipleTopicsSpecifiedFaultType_Description(_wsnt__MultipleTopicsSpecifiedFaultType_Description*) deep deletes _wsnt__MultipleTopicsSpecifiedFaultType_Description data members, use only on dst after soap_dup__wsnt__MultipleTopicsSpecifiedFaultType_Description(NULL, _wsnt__MultipleTopicsSpecifiedFaultType_Description *dst, _wsnt__MultipleTopicsSpecifiedFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__MultipleTopicsSpecifiedFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause operations:
/// - _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause* soap_new__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(struct soap*, _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(struct soap*, _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(struct soap*, _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause*) serialize to a sink
/// - _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause* soap_dup__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(struct soap*, _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause* dst, _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause *src) returns deep copy of _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(_wsnt__MultipleTopicsSpecifiedFaultType_FaultCause*) deep deletes _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(NULL, _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause *dst, _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__InvalidProducerPropertiesExpressionFaultType operations:
/// - wsnt__InvalidProducerPropertiesExpressionFaultType* soap_new_wsnt__InvalidProducerPropertiesExpressionFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__InvalidProducerPropertiesExpressionFaultType(struct soap*, wsnt__InvalidProducerPropertiesExpressionFaultType*) default initialize members
/// - int soap_read_wsnt__InvalidProducerPropertiesExpressionFaultType(struct soap*, wsnt__InvalidProducerPropertiesExpressionFaultType*) deserialize from a source
/// - int soap_write_wsnt__InvalidProducerPropertiesExpressionFaultType(struct soap*, wsnt__InvalidProducerPropertiesExpressionFaultType*) serialize to a sink
/// - wsnt__InvalidProducerPropertiesExpressionFaultType* soap_dup_wsnt__InvalidProducerPropertiesExpressionFaultType(struct soap*, wsnt__InvalidProducerPropertiesExpressionFaultType* dst, wsnt__InvalidProducerPropertiesExpressionFaultType *src) returns deep copy of wsnt__InvalidProducerPropertiesExpressionFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__InvalidProducerPropertiesExpressionFaultType(wsnt__InvalidProducerPropertiesExpressionFaultType*) deep deletes wsnt__InvalidProducerPropertiesExpressionFaultType data members, use only on dst after soap_dup_wsnt__InvalidProducerPropertiesExpressionFaultType(NULL, wsnt__InvalidProducerPropertiesExpressionFaultType *dst, wsnt__InvalidProducerPropertiesExpressionFaultType *src) (use soapcpp2 -Ed)
struct wsnt__InvalidProducerPropertiesExpressionFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode operations:
/// - _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode* soap_new__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(struct soap*, _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(struct soap*, _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(struct soap*, _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode* soap_dup__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(struct soap*, _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode* dst, _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode *src) returns deep copy of _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(_wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode*) deep deletes _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(NULL, _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode *dst, _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__InvalidProducerPropertiesExpressionFaultType_Description operations:
/// - _wsnt__InvalidProducerPropertiesExpressionFaultType_Description* soap_new__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(struct soap*, _wsnt__InvalidProducerPropertiesExpressionFaultType_Description*) default initialize members
/// - int soap_read__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(struct soap*, _wsnt__InvalidProducerPropertiesExpressionFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(struct soap*, _wsnt__InvalidProducerPropertiesExpressionFaultType_Description*) serialize to a sink
/// - _wsnt__InvalidProducerPropertiesExpressionFaultType_Description* soap_dup__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(struct soap*, _wsnt__InvalidProducerPropertiesExpressionFaultType_Description* dst, _wsnt__InvalidProducerPropertiesExpressionFaultType_Description *src) returns deep copy of _wsnt__InvalidProducerPropertiesExpressionFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(_wsnt__InvalidProducerPropertiesExpressionFaultType_Description*) deep deletes _wsnt__InvalidProducerPropertiesExpressionFaultType_Description data members, use only on dst after soap_dup__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(NULL, _wsnt__InvalidProducerPropertiesExpressionFaultType_Description *dst, _wsnt__InvalidProducerPropertiesExpressionFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__InvalidProducerPropertiesExpressionFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause operations:
/// - _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause* soap_new__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(struct soap*, _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(struct soap*, _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(struct soap*, _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause*) serialize to a sink
/// - _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause* soap_dup__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(struct soap*, _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause* dst, _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause *src) returns deep copy of _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(_wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause*) deep deletes _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(NULL, _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause *dst, _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__InvalidMessageContentExpressionFaultType operations:
/// - wsnt__InvalidMessageContentExpressionFaultType* soap_new_wsnt__InvalidMessageContentExpressionFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__InvalidMessageContentExpressionFaultType(struct soap*, wsnt__InvalidMessageContentExpressionFaultType*) default initialize members
/// - int soap_read_wsnt__InvalidMessageContentExpressionFaultType(struct soap*, wsnt__InvalidMessageContentExpressionFaultType*) deserialize from a source
/// - int soap_write_wsnt__InvalidMessageContentExpressionFaultType(struct soap*, wsnt__InvalidMessageContentExpressionFaultType*) serialize to a sink
/// - wsnt__InvalidMessageContentExpressionFaultType* soap_dup_wsnt__InvalidMessageContentExpressionFaultType(struct soap*, wsnt__InvalidMessageContentExpressionFaultType* dst, wsnt__InvalidMessageContentExpressionFaultType *src) returns deep copy of wsnt__InvalidMessageContentExpressionFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__InvalidMessageContentExpressionFaultType(wsnt__InvalidMessageContentExpressionFaultType*) deep deletes wsnt__InvalidMessageContentExpressionFaultType data members, use only on dst after soap_dup_wsnt__InvalidMessageContentExpressionFaultType(NULL, wsnt__InvalidMessageContentExpressionFaultType *dst, wsnt__InvalidMessageContentExpressionFaultType *src) (use soapcpp2 -Ed)
struct wsnt__InvalidMessageContentExpressionFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode operations:
/// - _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode* soap_new__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(struct soap*, _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(struct soap*, _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(struct soap*, _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode* soap_dup__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(struct soap*, _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode* dst, _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode *src) returns deep copy of _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(_wsnt__InvalidMessageContentExpressionFaultType_ErrorCode*) deep deletes _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(NULL, _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode *dst, _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__InvalidMessageContentExpressionFaultType_Description operations:
/// - _wsnt__InvalidMessageContentExpressionFaultType_Description* soap_new__wsnt__InvalidMessageContentExpressionFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__InvalidMessageContentExpressionFaultType_Description(struct soap*, _wsnt__InvalidMessageContentExpressionFaultType_Description*) default initialize members
/// - int soap_read__wsnt__InvalidMessageContentExpressionFaultType_Description(struct soap*, _wsnt__InvalidMessageContentExpressionFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__InvalidMessageContentExpressionFaultType_Description(struct soap*, _wsnt__InvalidMessageContentExpressionFaultType_Description*) serialize to a sink
/// - _wsnt__InvalidMessageContentExpressionFaultType_Description* soap_dup__wsnt__InvalidMessageContentExpressionFaultType_Description(struct soap*, _wsnt__InvalidMessageContentExpressionFaultType_Description* dst, _wsnt__InvalidMessageContentExpressionFaultType_Description *src) returns deep copy of _wsnt__InvalidMessageContentExpressionFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__InvalidMessageContentExpressionFaultType_Description(_wsnt__InvalidMessageContentExpressionFaultType_Description*) deep deletes _wsnt__InvalidMessageContentExpressionFaultType_Description data members, use only on dst after soap_dup__wsnt__InvalidMessageContentExpressionFaultType_Description(NULL, _wsnt__InvalidMessageContentExpressionFaultType_Description *dst, _wsnt__InvalidMessageContentExpressionFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__InvalidMessageContentExpressionFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__InvalidMessageContentExpressionFaultType_FaultCause operations:
/// - _wsnt__InvalidMessageContentExpressionFaultType_FaultCause* soap_new__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(struct soap*, _wsnt__InvalidMessageContentExpressionFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(struct soap*, _wsnt__InvalidMessageContentExpressionFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(struct soap*, _wsnt__InvalidMessageContentExpressionFaultType_FaultCause*) serialize to a sink
/// - _wsnt__InvalidMessageContentExpressionFaultType_FaultCause* soap_dup__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(struct soap*, _wsnt__InvalidMessageContentExpressionFaultType_FaultCause* dst, _wsnt__InvalidMessageContentExpressionFaultType_FaultCause *src) returns deep copy of _wsnt__InvalidMessageContentExpressionFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(_wsnt__InvalidMessageContentExpressionFaultType_FaultCause*) deep deletes _wsnt__InvalidMessageContentExpressionFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(NULL, _wsnt__InvalidMessageContentExpressionFaultType_FaultCause *dst, _wsnt__InvalidMessageContentExpressionFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__InvalidMessageContentExpressionFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__UnrecognizedPolicyRequestFaultType operations:
/// - wsnt__UnrecognizedPolicyRequestFaultType* soap_new_wsnt__UnrecognizedPolicyRequestFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__UnrecognizedPolicyRequestFaultType(struct soap*, wsnt__UnrecognizedPolicyRequestFaultType*) default initialize members
/// - int soap_read_wsnt__UnrecognizedPolicyRequestFaultType(struct soap*, wsnt__UnrecognizedPolicyRequestFaultType*) deserialize from a source
/// - int soap_write_wsnt__UnrecognizedPolicyRequestFaultType(struct soap*, wsnt__UnrecognizedPolicyRequestFaultType*) serialize to a sink
/// - wsnt__UnrecognizedPolicyRequestFaultType* soap_dup_wsnt__UnrecognizedPolicyRequestFaultType(struct soap*, wsnt__UnrecognizedPolicyRequestFaultType* dst, wsnt__UnrecognizedPolicyRequestFaultType *src) returns deep copy of wsnt__UnrecognizedPolicyRequestFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__UnrecognizedPolicyRequestFaultType(wsnt__UnrecognizedPolicyRequestFaultType*) deep deletes wsnt__UnrecognizedPolicyRequestFaultType data members, use only on dst after soap_dup_wsnt__UnrecognizedPolicyRequestFaultType(NULL, wsnt__UnrecognizedPolicyRequestFaultType *dst, wsnt__UnrecognizedPolicyRequestFaultType *src) (use soapcpp2 -Ed)
struct wsnt__UnrecognizedPolicyRequestFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode operations:
/// - _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode* soap_new__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(struct soap*, _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(struct soap*, _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(struct soap*, _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode* soap_dup__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(struct soap*, _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode* dst, _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode *src) returns deep copy of _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(_wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode*) deep deletes _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(NULL, _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode *dst, _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__UnrecognizedPolicyRequestFaultType_Description operations:
/// - _wsnt__UnrecognizedPolicyRequestFaultType_Description* soap_new__wsnt__UnrecognizedPolicyRequestFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnrecognizedPolicyRequestFaultType_Description(struct soap*, _wsnt__UnrecognizedPolicyRequestFaultType_Description*) default initialize members
/// - int soap_read__wsnt__UnrecognizedPolicyRequestFaultType_Description(struct soap*, _wsnt__UnrecognizedPolicyRequestFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__UnrecognizedPolicyRequestFaultType_Description(struct soap*, _wsnt__UnrecognizedPolicyRequestFaultType_Description*) serialize to a sink
/// - _wsnt__UnrecognizedPolicyRequestFaultType_Description* soap_dup__wsnt__UnrecognizedPolicyRequestFaultType_Description(struct soap*, _wsnt__UnrecognizedPolicyRequestFaultType_Description* dst, _wsnt__UnrecognizedPolicyRequestFaultType_Description *src) returns deep copy of _wsnt__UnrecognizedPolicyRequestFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnrecognizedPolicyRequestFaultType_Description(_wsnt__UnrecognizedPolicyRequestFaultType_Description*) deep deletes _wsnt__UnrecognizedPolicyRequestFaultType_Description data members, use only on dst after soap_dup__wsnt__UnrecognizedPolicyRequestFaultType_Description(NULL, _wsnt__UnrecognizedPolicyRequestFaultType_Description *dst, _wsnt__UnrecognizedPolicyRequestFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__UnrecognizedPolicyRequestFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause operations:
/// - _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause* soap_new__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(struct soap*, _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(struct soap*, _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(struct soap*, _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause*) serialize to a sink
/// - _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause* soap_dup__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(struct soap*, _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause* dst, _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause *src) returns deep copy of _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(_wsnt__UnrecognizedPolicyRequestFaultType_FaultCause*) deep deletes _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(NULL, _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause *dst, _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
/// Size of array of _QName* is 0..unbounded.
  $ int                                  __sizeUnrecognizedPolicy       0;
/// Array _QName* of size 0..unbounded.
    _QName*                              UnrecognizedPolicy             0;	///< Multiple elements.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__UnsupportedPolicyRequestFaultType operations:
/// - wsnt__UnsupportedPolicyRequestFaultType* soap_new_wsnt__UnsupportedPolicyRequestFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__UnsupportedPolicyRequestFaultType(struct soap*, wsnt__UnsupportedPolicyRequestFaultType*) default initialize members
/// - int soap_read_wsnt__UnsupportedPolicyRequestFaultType(struct soap*, wsnt__UnsupportedPolicyRequestFaultType*) deserialize from a source
/// - int soap_write_wsnt__UnsupportedPolicyRequestFaultType(struct soap*, wsnt__UnsupportedPolicyRequestFaultType*) serialize to a sink
/// - wsnt__UnsupportedPolicyRequestFaultType* soap_dup_wsnt__UnsupportedPolicyRequestFaultType(struct soap*, wsnt__UnsupportedPolicyRequestFaultType* dst, wsnt__UnsupportedPolicyRequestFaultType *src) returns deep copy of wsnt__UnsupportedPolicyRequestFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__UnsupportedPolicyRequestFaultType(wsnt__UnsupportedPolicyRequestFaultType*) deep deletes wsnt__UnsupportedPolicyRequestFaultType data members, use only on dst after soap_dup_wsnt__UnsupportedPolicyRequestFaultType(NULL, wsnt__UnsupportedPolicyRequestFaultType *dst, wsnt__UnsupportedPolicyRequestFaultType *src) (use soapcpp2 -Ed)
struct wsnt__UnsupportedPolicyRequestFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode operations:
/// - _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode* soap_new__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(struct soap*, _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(struct soap*, _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(struct soap*, _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode* soap_dup__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(struct soap*, _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode* dst, _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode *src) returns deep copy of _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(_wsnt__UnsupportedPolicyRequestFaultType_ErrorCode*) deep deletes _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(NULL, _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode *dst, _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__UnsupportedPolicyRequestFaultType_Description operations:
/// - _wsnt__UnsupportedPolicyRequestFaultType_Description* soap_new__wsnt__UnsupportedPolicyRequestFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnsupportedPolicyRequestFaultType_Description(struct soap*, _wsnt__UnsupportedPolicyRequestFaultType_Description*) default initialize members
/// - int soap_read__wsnt__UnsupportedPolicyRequestFaultType_Description(struct soap*, _wsnt__UnsupportedPolicyRequestFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__UnsupportedPolicyRequestFaultType_Description(struct soap*, _wsnt__UnsupportedPolicyRequestFaultType_Description*) serialize to a sink
/// - _wsnt__UnsupportedPolicyRequestFaultType_Description* soap_dup__wsnt__UnsupportedPolicyRequestFaultType_Description(struct soap*, _wsnt__UnsupportedPolicyRequestFaultType_Description* dst, _wsnt__UnsupportedPolicyRequestFaultType_Description *src) returns deep copy of _wsnt__UnsupportedPolicyRequestFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnsupportedPolicyRequestFaultType_Description(_wsnt__UnsupportedPolicyRequestFaultType_Description*) deep deletes _wsnt__UnsupportedPolicyRequestFaultType_Description data members, use only on dst after soap_dup__wsnt__UnsupportedPolicyRequestFaultType_Description(NULL, _wsnt__UnsupportedPolicyRequestFaultType_Description *dst, _wsnt__UnsupportedPolicyRequestFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__UnsupportedPolicyRequestFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__UnsupportedPolicyRequestFaultType_FaultCause operations:
/// - _wsnt__UnsupportedPolicyRequestFaultType_FaultCause* soap_new__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(struct soap*, _wsnt__UnsupportedPolicyRequestFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(struct soap*, _wsnt__UnsupportedPolicyRequestFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(struct soap*, _wsnt__UnsupportedPolicyRequestFaultType_FaultCause*) serialize to a sink
/// - _wsnt__UnsupportedPolicyRequestFaultType_FaultCause* soap_dup__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(struct soap*, _wsnt__UnsupportedPolicyRequestFaultType_FaultCause* dst, _wsnt__UnsupportedPolicyRequestFaultType_FaultCause *src) returns deep copy of _wsnt__UnsupportedPolicyRequestFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(_wsnt__UnsupportedPolicyRequestFaultType_FaultCause*) deep deletes _wsnt__UnsupportedPolicyRequestFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(NULL, _wsnt__UnsupportedPolicyRequestFaultType_FaultCause *dst, _wsnt__UnsupportedPolicyRequestFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__UnsupportedPolicyRequestFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
/// Size of array of _QName* is 0..unbounded.
  $ int                                  __sizeUnsupportedPolicy        0;
/// Array _QName* of size 0..unbounded.
    _QName*                              UnsupportedPolicy              0;	///< Multiple elements.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__NotifyMessageNotSupportedFaultType operations:
/// - wsnt__NotifyMessageNotSupportedFaultType* soap_new_wsnt__NotifyMessageNotSupportedFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__NotifyMessageNotSupportedFaultType(struct soap*, wsnt__NotifyMessageNotSupportedFaultType*) default initialize members
/// - int soap_read_wsnt__NotifyMessageNotSupportedFaultType(struct soap*, wsnt__NotifyMessageNotSupportedFaultType*) deserialize from a source
/// - int soap_write_wsnt__NotifyMessageNotSupportedFaultType(struct soap*, wsnt__NotifyMessageNotSupportedFaultType*) serialize to a sink
/// - wsnt__NotifyMessageNotSupportedFaultType* soap_dup_wsnt__NotifyMessageNotSupportedFaultType(struct soap*, wsnt__NotifyMessageNotSupportedFaultType* dst, wsnt__NotifyMessageNotSupportedFaultType *src) returns deep copy of wsnt__NotifyMessageNotSupportedFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__NotifyMessageNotSupportedFaultType(wsnt__NotifyMessageNotSupportedFaultType*) deep deletes wsnt__NotifyMessageNotSupportedFaultType data members, use only on dst after soap_dup_wsnt__NotifyMessageNotSupportedFaultType(NULL, wsnt__NotifyMessageNotSupportedFaultType *dst, wsnt__NotifyMessageNotSupportedFaultType *src) (use soapcpp2 -Ed)
struct wsnt__NotifyMessageNotSupportedFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode operations:
/// - _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode* soap_new__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(struct soap*, _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(struct soap*, _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(struct soap*, _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode* soap_dup__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(struct soap*, _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode* dst, _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode *src) returns deep copy of _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(_wsnt__NotifyMessageNotSupportedFaultType_ErrorCode*) deep deletes _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(NULL, _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode *dst, _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__NotifyMessageNotSupportedFaultType_Description operations:
/// - _wsnt__NotifyMessageNotSupportedFaultType_Description* soap_new__wsnt__NotifyMessageNotSupportedFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__NotifyMessageNotSupportedFaultType_Description(struct soap*, _wsnt__NotifyMessageNotSupportedFaultType_Description*) default initialize members
/// - int soap_read__wsnt__NotifyMessageNotSupportedFaultType_Description(struct soap*, _wsnt__NotifyMessageNotSupportedFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__NotifyMessageNotSupportedFaultType_Description(struct soap*, _wsnt__NotifyMessageNotSupportedFaultType_Description*) serialize to a sink
/// - _wsnt__NotifyMessageNotSupportedFaultType_Description* soap_dup__wsnt__NotifyMessageNotSupportedFaultType_Description(struct soap*, _wsnt__NotifyMessageNotSupportedFaultType_Description* dst, _wsnt__NotifyMessageNotSupportedFaultType_Description *src) returns deep copy of _wsnt__NotifyMessageNotSupportedFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__NotifyMessageNotSupportedFaultType_Description(_wsnt__NotifyMessageNotSupportedFaultType_Description*) deep deletes _wsnt__NotifyMessageNotSupportedFaultType_Description data members, use only on dst after soap_dup__wsnt__NotifyMessageNotSupportedFaultType_Description(NULL, _wsnt__NotifyMessageNotSupportedFaultType_Description *dst, _wsnt__NotifyMessageNotSupportedFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__NotifyMessageNotSupportedFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__NotifyMessageNotSupportedFaultType_FaultCause operations:
/// - _wsnt__NotifyMessageNotSupportedFaultType_FaultCause* soap_new__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(struct soap*, _wsnt__NotifyMessageNotSupportedFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(struct soap*, _wsnt__NotifyMessageNotSupportedFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(struct soap*, _wsnt__NotifyMessageNotSupportedFaultType_FaultCause*) serialize to a sink
/// - _wsnt__NotifyMessageNotSupportedFaultType_FaultCause* soap_dup__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(struct soap*, _wsnt__NotifyMessageNotSupportedFaultType_FaultCause* dst, _wsnt__NotifyMessageNotSupportedFaultType_FaultCause *src) returns deep copy of _wsnt__NotifyMessageNotSupportedFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(_wsnt__NotifyMessageNotSupportedFaultType_FaultCause*) deep deletes _wsnt__NotifyMessageNotSupportedFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(NULL, _wsnt__NotifyMessageNotSupportedFaultType_FaultCause *dst, _wsnt__NotifyMessageNotSupportedFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__NotifyMessageNotSupportedFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__UnacceptableInitialTerminationTimeFaultType operations:
/// - wsnt__UnacceptableInitialTerminationTimeFaultType* soap_new_wsnt__UnacceptableInitialTerminationTimeFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__UnacceptableInitialTerminationTimeFaultType(struct soap*, wsnt__UnacceptableInitialTerminationTimeFaultType*) default initialize members
/// - int soap_read_wsnt__UnacceptableInitialTerminationTimeFaultType(struct soap*, wsnt__UnacceptableInitialTerminationTimeFaultType*) deserialize from a source
/// - int soap_write_wsnt__UnacceptableInitialTerminationTimeFaultType(struct soap*, wsnt__UnacceptableInitialTerminationTimeFaultType*) serialize to a sink
/// - wsnt__UnacceptableInitialTerminationTimeFaultType* soap_dup_wsnt__UnacceptableInitialTerminationTimeFaultType(struct soap*, wsnt__UnacceptableInitialTerminationTimeFaultType* dst, wsnt__UnacceptableInitialTerminationTimeFaultType *src) returns deep copy of wsnt__UnacceptableInitialTerminationTimeFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__UnacceptableInitialTerminationTimeFaultType(wsnt__UnacceptableInitialTerminationTimeFaultType*) deep deletes wsnt__UnacceptableInitialTerminationTimeFaultType data members, use only on dst after soap_dup_wsnt__UnacceptableInitialTerminationTimeFaultType(NULL, wsnt__UnacceptableInitialTerminationTimeFaultType *dst, wsnt__UnacceptableInitialTerminationTimeFaultType *src) (use soapcpp2 -Ed)
struct wsnt__UnacceptableInitialTerminationTimeFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode operations:
/// - _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode* soap_new__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(struct soap*, _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(struct soap*, _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(struct soap*, _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode* soap_dup__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(struct soap*, _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode* dst, _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode *src) returns deep copy of _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(_wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode*) deep deletes _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(NULL, _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode *dst, _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__UnacceptableInitialTerminationTimeFaultType_Description operations:
/// - _wsnt__UnacceptableInitialTerminationTimeFaultType_Description* soap_new__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(struct soap*, _wsnt__UnacceptableInitialTerminationTimeFaultType_Description*) default initialize members
/// - int soap_read__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(struct soap*, _wsnt__UnacceptableInitialTerminationTimeFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(struct soap*, _wsnt__UnacceptableInitialTerminationTimeFaultType_Description*) serialize to a sink
/// - _wsnt__UnacceptableInitialTerminationTimeFaultType_Description* soap_dup__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(struct soap*, _wsnt__UnacceptableInitialTerminationTimeFaultType_Description* dst, _wsnt__UnacceptableInitialTerminationTimeFaultType_Description *src) returns deep copy of _wsnt__UnacceptableInitialTerminationTimeFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(_wsnt__UnacceptableInitialTerminationTimeFaultType_Description*) deep deletes _wsnt__UnacceptableInitialTerminationTimeFaultType_Description data members, use only on dst after soap_dup__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(NULL, _wsnt__UnacceptableInitialTerminationTimeFaultType_Description *dst, _wsnt__UnacceptableInitialTerminationTimeFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__UnacceptableInitialTerminationTimeFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause operations:
/// - _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause* soap_new__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(struct soap*, _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(struct soap*, _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(struct soap*, _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause*) serialize to a sink
/// - _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause* soap_dup__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(struct soap*, _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause* dst, _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause *src) returns deep copy of _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(_wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause*) deep deletes _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(NULL, _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause *dst, _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
/// Element "MinimumTime" of type xs:dateTime.
    time_t                               MinimumTime                    1;	///< Required element.
/// Element "MaximumTime" of type xs:dateTime.
    time_t*                              MaximumTime                    0;	///< Optional element.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__NoCurrentMessageOnTopicFaultType operations:
/// - wsnt__NoCurrentMessageOnTopicFaultType* soap_new_wsnt__NoCurrentMessageOnTopicFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__NoCurrentMessageOnTopicFaultType(struct soap*, wsnt__NoCurrentMessageOnTopicFaultType*) default initialize members
/// - int soap_read_wsnt__NoCurrentMessageOnTopicFaultType(struct soap*, wsnt__NoCurrentMessageOnTopicFaultType*) deserialize from a source
/// - int soap_write_wsnt__NoCurrentMessageOnTopicFaultType(struct soap*, wsnt__NoCurrentMessageOnTopicFaultType*) serialize to a sink
/// - wsnt__NoCurrentMessageOnTopicFaultType* soap_dup_wsnt__NoCurrentMessageOnTopicFaultType(struct soap*, wsnt__NoCurrentMessageOnTopicFaultType* dst, wsnt__NoCurrentMessageOnTopicFaultType *src) returns deep copy of wsnt__NoCurrentMessageOnTopicFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__NoCurrentMessageOnTopicFaultType(wsnt__NoCurrentMessageOnTopicFaultType*) deep deletes wsnt__NoCurrentMessageOnTopicFaultType data members, use only on dst after soap_dup_wsnt__NoCurrentMessageOnTopicFaultType(NULL, wsnt__NoCurrentMessageOnTopicFaultType *dst, wsnt__NoCurrentMessageOnTopicFaultType *src) (use soapcpp2 -Ed)
struct wsnt__NoCurrentMessageOnTopicFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode operations:
/// - _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode* soap_new__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(struct soap*, _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(struct soap*, _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(struct soap*, _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode* soap_dup__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(struct soap*, _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode* dst, _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode *src) returns deep copy of _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(_wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode*) deep deletes _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(NULL, _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode *dst, _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__NoCurrentMessageOnTopicFaultType_Description operations:
/// - _wsnt__NoCurrentMessageOnTopicFaultType_Description* soap_new__wsnt__NoCurrentMessageOnTopicFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__NoCurrentMessageOnTopicFaultType_Description(struct soap*, _wsnt__NoCurrentMessageOnTopicFaultType_Description*) default initialize members
/// - int soap_read__wsnt__NoCurrentMessageOnTopicFaultType_Description(struct soap*, _wsnt__NoCurrentMessageOnTopicFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__NoCurrentMessageOnTopicFaultType_Description(struct soap*, _wsnt__NoCurrentMessageOnTopicFaultType_Description*) serialize to a sink
/// - _wsnt__NoCurrentMessageOnTopicFaultType_Description* soap_dup__wsnt__NoCurrentMessageOnTopicFaultType_Description(struct soap*, _wsnt__NoCurrentMessageOnTopicFaultType_Description* dst, _wsnt__NoCurrentMessageOnTopicFaultType_Description *src) returns deep copy of _wsnt__NoCurrentMessageOnTopicFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__NoCurrentMessageOnTopicFaultType_Description(_wsnt__NoCurrentMessageOnTopicFaultType_Description*) deep deletes _wsnt__NoCurrentMessageOnTopicFaultType_Description data members, use only on dst after soap_dup__wsnt__NoCurrentMessageOnTopicFaultType_Description(NULL, _wsnt__NoCurrentMessageOnTopicFaultType_Description *dst, _wsnt__NoCurrentMessageOnTopicFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__NoCurrentMessageOnTopicFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause operations:
/// - _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause* soap_new__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(struct soap*, _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(struct soap*, _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(struct soap*, _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause*) serialize to a sink
/// - _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause* soap_dup__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(struct soap*, _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause* dst, _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause *src) returns deep copy of _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(_wsnt__NoCurrentMessageOnTopicFaultType_FaultCause*) deep deletes _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(NULL, _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause *dst, _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__UnableToGetMessagesFaultType operations:
/// - wsnt__UnableToGetMessagesFaultType* soap_new_wsnt__UnableToGetMessagesFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__UnableToGetMessagesFaultType(struct soap*, wsnt__UnableToGetMessagesFaultType*) default initialize members
/// - int soap_read_wsnt__UnableToGetMessagesFaultType(struct soap*, wsnt__UnableToGetMessagesFaultType*) deserialize from a source
/// - int soap_write_wsnt__UnableToGetMessagesFaultType(struct soap*, wsnt__UnableToGetMessagesFaultType*) serialize to a sink
/// - wsnt__UnableToGetMessagesFaultType* soap_dup_wsnt__UnableToGetMessagesFaultType(struct soap*, wsnt__UnableToGetMessagesFaultType* dst, wsnt__UnableToGetMessagesFaultType *src) returns deep copy of wsnt__UnableToGetMessagesFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__UnableToGetMessagesFaultType(wsnt__UnableToGetMessagesFaultType*) deep deletes wsnt__UnableToGetMessagesFaultType data members, use only on dst after soap_dup_wsnt__UnableToGetMessagesFaultType(NULL, wsnt__UnableToGetMessagesFaultType *dst, wsnt__UnableToGetMessagesFaultType *src) (use soapcpp2 -Ed)
struct wsnt__UnableToGetMessagesFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__UnableToGetMessagesFaultType_ErrorCode operations:
/// - _wsnt__UnableToGetMessagesFaultType_ErrorCode* soap_new__wsnt__UnableToGetMessagesFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnableToGetMessagesFaultType_ErrorCode(struct soap*, _wsnt__UnableToGetMessagesFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__UnableToGetMessagesFaultType_ErrorCode(struct soap*, _wsnt__UnableToGetMessagesFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__UnableToGetMessagesFaultType_ErrorCode(struct soap*, _wsnt__UnableToGetMessagesFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__UnableToGetMessagesFaultType_ErrorCode* soap_dup__wsnt__UnableToGetMessagesFaultType_ErrorCode(struct soap*, _wsnt__UnableToGetMessagesFaultType_ErrorCode* dst, _wsnt__UnableToGetMessagesFaultType_ErrorCode *src) returns deep copy of _wsnt__UnableToGetMessagesFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnableToGetMessagesFaultType_ErrorCode(_wsnt__UnableToGetMessagesFaultType_ErrorCode*) deep deletes _wsnt__UnableToGetMessagesFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__UnableToGetMessagesFaultType_ErrorCode(NULL, _wsnt__UnableToGetMessagesFaultType_ErrorCode *dst, _wsnt__UnableToGetMessagesFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__UnableToGetMessagesFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__UnableToGetMessagesFaultType_Description operations:
/// - _wsnt__UnableToGetMessagesFaultType_Description* soap_new__wsnt__UnableToGetMessagesFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnableToGetMessagesFaultType_Description(struct soap*, _wsnt__UnableToGetMessagesFaultType_Description*) default initialize members
/// - int soap_read__wsnt__UnableToGetMessagesFaultType_Description(struct soap*, _wsnt__UnableToGetMessagesFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__UnableToGetMessagesFaultType_Description(struct soap*, _wsnt__UnableToGetMessagesFaultType_Description*) serialize to a sink
/// - _wsnt__UnableToGetMessagesFaultType_Description* soap_dup__wsnt__UnableToGetMessagesFaultType_Description(struct soap*, _wsnt__UnableToGetMessagesFaultType_Description* dst, _wsnt__UnableToGetMessagesFaultType_Description *src) returns deep copy of _wsnt__UnableToGetMessagesFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnableToGetMessagesFaultType_Description(_wsnt__UnableToGetMessagesFaultType_Description*) deep deletes _wsnt__UnableToGetMessagesFaultType_Description data members, use only on dst after soap_dup__wsnt__UnableToGetMessagesFaultType_Description(NULL, _wsnt__UnableToGetMessagesFaultType_Description *dst, _wsnt__UnableToGetMessagesFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__UnableToGetMessagesFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__UnableToGetMessagesFaultType_FaultCause operations:
/// - _wsnt__UnableToGetMessagesFaultType_FaultCause* soap_new__wsnt__UnableToGetMessagesFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnableToGetMessagesFaultType_FaultCause(struct soap*, _wsnt__UnableToGetMessagesFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__UnableToGetMessagesFaultType_FaultCause(struct soap*, _wsnt__UnableToGetMessagesFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__UnableToGetMessagesFaultType_FaultCause(struct soap*, _wsnt__UnableToGetMessagesFaultType_FaultCause*) serialize to a sink
/// - _wsnt__UnableToGetMessagesFaultType_FaultCause* soap_dup__wsnt__UnableToGetMessagesFaultType_FaultCause(struct soap*, _wsnt__UnableToGetMessagesFaultType_FaultCause* dst, _wsnt__UnableToGetMessagesFaultType_FaultCause *src) returns deep copy of _wsnt__UnableToGetMessagesFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnableToGetMessagesFaultType_FaultCause(_wsnt__UnableToGetMessagesFaultType_FaultCause*) deep deletes _wsnt__UnableToGetMessagesFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__UnableToGetMessagesFaultType_FaultCause(NULL, _wsnt__UnableToGetMessagesFaultType_FaultCause *dst, _wsnt__UnableToGetMessagesFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__UnableToGetMessagesFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__UnableToDestroyPullPointFaultType operations:
/// - wsnt__UnableToDestroyPullPointFaultType* soap_new_wsnt__UnableToDestroyPullPointFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__UnableToDestroyPullPointFaultType(struct soap*, wsnt__UnableToDestroyPullPointFaultType*) default initialize members
/// - int soap_read_wsnt__UnableToDestroyPullPointFaultType(struct soap*, wsnt__UnableToDestroyPullPointFaultType*) deserialize from a source
/// - int soap_write_wsnt__UnableToDestroyPullPointFaultType(struct soap*, wsnt__UnableToDestroyPullPointFaultType*) serialize to a sink
/// - wsnt__UnableToDestroyPullPointFaultType* soap_dup_wsnt__UnableToDestroyPullPointFaultType(struct soap*, wsnt__UnableToDestroyPullPointFaultType* dst, wsnt__UnableToDestroyPullPointFaultType *src) returns deep copy of wsnt__UnableToDestroyPullPointFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__UnableToDestroyPullPointFaultType(wsnt__UnableToDestroyPullPointFaultType*) deep deletes wsnt__UnableToDestroyPullPointFaultType data members, use only on dst after soap_dup_wsnt__UnableToDestroyPullPointFaultType(NULL, wsnt__UnableToDestroyPullPointFaultType *dst, wsnt__UnableToDestroyPullPointFaultType *src) (use soapcpp2 -Ed)
struct wsnt__UnableToDestroyPullPointFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__UnableToDestroyPullPointFaultType_ErrorCode operations:
/// - _wsnt__UnableToDestroyPullPointFaultType_ErrorCode* soap_new__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(struct soap*, _wsnt__UnableToDestroyPullPointFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(struct soap*, _wsnt__UnableToDestroyPullPointFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(struct soap*, _wsnt__UnableToDestroyPullPointFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__UnableToDestroyPullPointFaultType_ErrorCode* soap_dup__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(struct soap*, _wsnt__UnableToDestroyPullPointFaultType_ErrorCode* dst, _wsnt__UnableToDestroyPullPointFaultType_ErrorCode *src) returns deep copy of _wsnt__UnableToDestroyPullPointFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(_wsnt__UnableToDestroyPullPointFaultType_ErrorCode*) deep deletes _wsnt__UnableToDestroyPullPointFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(NULL, _wsnt__UnableToDestroyPullPointFaultType_ErrorCode *dst, _wsnt__UnableToDestroyPullPointFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__UnableToDestroyPullPointFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__UnableToDestroyPullPointFaultType_Description operations:
/// - _wsnt__UnableToDestroyPullPointFaultType_Description* soap_new__wsnt__UnableToDestroyPullPointFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnableToDestroyPullPointFaultType_Description(struct soap*, _wsnt__UnableToDestroyPullPointFaultType_Description*) default initialize members
/// - int soap_read__wsnt__UnableToDestroyPullPointFaultType_Description(struct soap*, _wsnt__UnableToDestroyPullPointFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__UnableToDestroyPullPointFaultType_Description(struct soap*, _wsnt__UnableToDestroyPullPointFaultType_Description*) serialize to a sink
/// - _wsnt__UnableToDestroyPullPointFaultType_Description* soap_dup__wsnt__UnableToDestroyPullPointFaultType_Description(struct soap*, _wsnt__UnableToDestroyPullPointFaultType_Description* dst, _wsnt__UnableToDestroyPullPointFaultType_Description *src) returns deep copy of _wsnt__UnableToDestroyPullPointFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnableToDestroyPullPointFaultType_Description(_wsnt__UnableToDestroyPullPointFaultType_Description*) deep deletes _wsnt__UnableToDestroyPullPointFaultType_Description data members, use only on dst after soap_dup__wsnt__UnableToDestroyPullPointFaultType_Description(NULL, _wsnt__UnableToDestroyPullPointFaultType_Description *dst, _wsnt__UnableToDestroyPullPointFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__UnableToDestroyPullPointFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__UnableToDestroyPullPointFaultType_FaultCause operations:
/// - _wsnt__UnableToDestroyPullPointFaultType_FaultCause* soap_new__wsnt__UnableToDestroyPullPointFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnableToDestroyPullPointFaultType_FaultCause(struct soap*, _wsnt__UnableToDestroyPullPointFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__UnableToDestroyPullPointFaultType_FaultCause(struct soap*, _wsnt__UnableToDestroyPullPointFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__UnableToDestroyPullPointFaultType_FaultCause(struct soap*, _wsnt__UnableToDestroyPullPointFaultType_FaultCause*) serialize to a sink
/// - _wsnt__UnableToDestroyPullPointFaultType_FaultCause* soap_dup__wsnt__UnableToDestroyPullPointFaultType_FaultCause(struct soap*, _wsnt__UnableToDestroyPullPointFaultType_FaultCause* dst, _wsnt__UnableToDestroyPullPointFaultType_FaultCause *src) returns deep copy of _wsnt__UnableToDestroyPullPointFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnableToDestroyPullPointFaultType_FaultCause(_wsnt__UnableToDestroyPullPointFaultType_FaultCause*) deep deletes _wsnt__UnableToDestroyPullPointFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__UnableToDestroyPullPointFaultType_FaultCause(NULL, _wsnt__UnableToDestroyPullPointFaultType_FaultCause *dst, _wsnt__UnableToDestroyPullPointFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__UnableToDestroyPullPointFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__UnableToCreatePullPointFaultType operations:
/// - wsnt__UnableToCreatePullPointFaultType* soap_new_wsnt__UnableToCreatePullPointFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__UnableToCreatePullPointFaultType(struct soap*, wsnt__UnableToCreatePullPointFaultType*) default initialize members
/// - int soap_read_wsnt__UnableToCreatePullPointFaultType(struct soap*, wsnt__UnableToCreatePullPointFaultType*) deserialize from a source
/// - int soap_write_wsnt__UnableToCreatePullPointFaultType(struct soap*, wsnt__UnableToCreatePullPointFaultType*) serialize to a sink
/// - wsnt__UnableToCreatePullPointFaultType* soap_dup_wsnt__UnableToCreatePullPointFaultType(struct soap*, wsnt__UnableToCreatePullPointFaultType* dst, wsnt__UnableToCreatePullPointFaultType *src) returns deep copy of wsnt__UnableToCreatePullPointFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__UnableToCreatePullPointFaultType(wsnt__UnableToCreatePullPointFaultType*) deep deletes wsnt__UnableToCreatePullPointFaultType data members, use only on dst after soap_dup_wsnt__UnableToCreatePullPointFaultType(NULL, wsnt__UnableToCreatePullPointFaultType *dst, wsnt__UnableToCreatePullPointFaultType *src) (use soapcpp2 -Ed)
struct wsnt__UnableToCreatePullPointFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__UnableToCreatePullPointFaultType_ErrorCode operations:
/// - _wsnt__UnableToCreatePullPointFaultType_ErrorCode* soap_new__wsnt__UnableToCreatePullPointFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnableToCreatePullPointFaultType_ErrorCode(struct soap*, _wsnt__UnableToCreatePullPointFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__UnableToCreatePullPointFaultType_ErrorCode(struct soap*, _wsnt__UnableToCreatePullPointFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__UnableToCreatePullPointFaultType_ErrorCode(struct soap*, _wsnt__UnableToCreatePullPointFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__UnableToCreatePullPointFaultType_ErrorCode* soap_dup__wsnt__UnableToCreatePullPointFaultType_ErrorCode(struct soap*, _wsnt__UnableToCreatePullPointFaultType_ErrorCode* dst, _wsnt__UnableToCreatePullPointFaultType_ErrorCode *src) returns deep copy of _wsnt__UnableToCreatePullPointFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnableToCreatePullPointFaultType_ErrorCode(_wsnt__UnableToCreatePullPointFaultType_ErrorCode*) deep deletes _wsnt__UnableToCreatePullPointFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__UnableToCreatePullPointFaultType_ErrorCode(NULL, _wsnt__UnableToCreatePullPointFaultType_ErrorCode *dst, _wsnt__UnableToCreatePullPointFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__UnableToCreatePullPointFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__UnableToCreatePullPointFaultType_Description operations:
/// - _wsnt__UnableToCreatePullPointFaultType_Description* soap_new__wsnt__UnableToCreatePullPointFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnableToCreatePullPointFaultType_Description(struct soap*, _wsnt__UnableToCreatePullPointFaultType_Description*) default initialize members
/// - int soap_read__wsnt__UnableToCreatePullPointFaultType_Description(struct soap*, _wsnt__UnableToCreatePullPointFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__UnableToCreatePullPointFaultType_Description(struct soap*, _wsnt__UnableToCreatePullPointFaultType_Description*) serialize to a sink
/// - _wsnt__UnableToCreatePullPointFaultType_Description* soap_dup__wsnt__UnableToCreatePullPointFaultType_Description(struct soap*, _wsnt__UnableToCreatePullPointFaultType_Description* dst, _wsnt__UnableToCreatePullPointFaultType_Description *src) returns deep copy of _wsnt__UnableToCreatePullPointFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnableToCreatePullPointFaultType_Description(_wsnt__UnableToCreatePullPointFaultType_Description*) deep deletes _wsnt__UnableToCreatePullPointFaultType_Description data members, use only on dst after soap_dup__wsnt__UnableToCreatePullPointFaultType_Description(NULL, _wsnt__UnableToCreatePullPointFaultType_Description *dst, _wsnt__UnableToCreatePullPointFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__UnableToCreatePullPointFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__UnableToCreatePullPointFaultType_FaultCause operations:
/// - _wsnt__UnableToCreatePullPointFaultType_FaultCause* soap_new__wsnt__UnableToCreatePullPointFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnableToCreatePullPointFaultType_FaultCause(struct soap*, _wsnt__UnableToCreatePullPointFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__UnableToCreatePullPointFaultType_FaultCause(struct soap*, _wsnt__UnableToCreatePullPointFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__UnableToCreatePullPointFaultType_FaultCause(struct soap*, _wsnt__UnableToCreatePullPointFaultType_FaultCause*) serialize to a sink
/// - _wsnt__UnableToCreatePullPointFaultType_FaultCause* soap_dup__wsnt__UnableToCreatePullPointFaultType_FaultCause(struct soap*, _wsnt__UnableToCreatePullPointFaultType_FaultCause* dst, _wsnt__UnableToCreatePullPointFaultType_FaultCause *src) returns deep copy of _wsnt__UnableToCreatePullPointFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnableToCreatePullPointFaultType_FaultCause(_wsnt__UnableToCreatePullPointFaultType_FaultCause*) deep deletes _wsnt__UnableToCreatePullPointFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__UnableToCreatePullPointFaultType_FaultCause(NULL, _wsnt__UnableToCreatePullPointFaultType_FaultCause *dst, _wsnt__UnableToCreatePullPointFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__UnableToCreatePullPointFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__UnacceptableTerminationTimeFaultType operations:
/// - wsnt__UnacceptableTerminationTimeFaultType* soap_new_wsnt__UnacceptableTerminationTimeFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__UnacceptableTerminationTimeFaultType(struct soap*, wsnt__UnacceptableTerminationTimeFaultType*) default initialize members
/// - int soap_read_wsnt__UnacceptableTerminationTimeFaultType(struct soap*, wsnt__UnacceptableTerminationTimeFaultType*) deserialize from a source
/// - int soap_write_wsnt__UnacceptableTerminationTimeFaultType(struct soap*, wsnt__UnacceptableTerminationTimeFaultType*) serialize to a sink
/// - wsnt__UnacceptableTerminationTimeFaultType* soap_dup_wsnt__UnacceptableTerminationTimeFaultType(struct soap*, wsnt__UnacceptableTerminationTimeFaultType* dst, wsnt__UnacceptableTerminationTimeFaultType *src) returns deep copy of wsnt__UnacceptableTerminationTimeFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__UnacceptableTerminationTimeFaultType(wsnt__UnacceptableTerminationTimeFaultType*) deep deletes wsnt__UnacceptableTerminationTimeFaultType data members, use only on dst after soap_dup_wsnt__UnacceptableTerminationTimeFaultType(NULL, wsnt__UnacceptableTerminationTimeFaultType *dst, wsnt__UnacceptableTerminationTimeFaultType *src) (use soapcpp2 -Ed)
struct wsnt__UnacceptableTerminationTimeFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode operations:
/// - _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode* soap_new__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(struct soap*, _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(struct soap*, _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(struct soap*, _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode* soap_dup__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(struct soap*, _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode* dst, _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode *src) returns deep copy of _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(_wsnt__UnacceptableTerminationTimeFaultType_ErrorCode*) deep deletes _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(NULL, _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode *dst, _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__UnacceptableTerminationTimeFaultType_Description operations:
/// - _wsnt__UnacceptableTerminationTimeFaultType_Description* soap_new__wsnt__UnacceptableTerminationTimeFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnacceptableTerminationTimeFaultType_Description(struct soap*, _wsnt__UnacceptableTerminationTimeFaultType_Description*) default initialize members
/// - int soap_read__wsnt__UnacceptableTerminationTimeFaultType_Description(struct soap*, _wsnt__UnacceptableTerminationTimeFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__UnacceptableTerminationTimeFaultType_Description(struct soap*, _wsnt__UnacceptableTerminationTimeFaultType_Description*) serialize to a sink
/// - _wsnt__UnacceptableTerminationTimeFaultType_Description* soap_dup__wsnt__UnacceptableTerminationTimeFaultType_Description(struct soap*, _wsnt__UnacceptableTerminationTimeFaultType_Description* dst, _wsnt__UnacceptableTerminationTimeFaultType_Description *src) returns deep copy of _wsnt__UnacceptableTerminationTimeFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnacceptableTerminationTimeFaultType_Description(_wsnt__UnacceptableTerminationTimeFaultType_Description*) deep deletes _wsnt__UnacceptableTerminationTimeFaultType_Description data members, use only on dst after soap_dup__wsnt__UnacceptableTerminationTimeFaultType_Description(NULL, _wsnt__UnacceptableTerminationTimeFaultType_Description *dst, _wsnt__UnacceptableTerminationTimeFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__UnacceptableTerminationTimeFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__UnacceptableTerminationTimeFaultType_FaultCause operations:
/// - _wsnt__UnacceptableTerminationTimeFaultType_FaultCause* soap_new__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(struct soap*, _wsnt__UnacceptableTerminationTimeFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(struct soap*, _wsnt__UnacceptableTerminationTimeFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(struct soap*, _wsnt__UnacceptableTerminationTimeFaultType_FaultCause*) serialize to a sink
/// - _wsnt__UnacceptableTerminationTimeFaultType_FaultCause* soap_dup__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(struct soap*, _wsnt__UnacceptableTerminationTimeFaultType_FaultCause* dst, _wsnt__UnacceptableTerminationTimeFaultType_FaultCause *src) returns deep copy of _wsnt__UnacceptableTerminationTimeFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(_wsnt__UnacceptableTerminationTimeFaultType_FaultCause*) deep deletes _wsnt__UnacceptableTerminationTimeFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(NULL, _wsnt__UnacceptableTerminationTimeFaultType_FaultCause *dst, _wsnt__UnacceptableTerminationTimeFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__UnacceptableTerminationTimeFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
/// Element "MinimumTime" of type xs:dateTime.
    time_t                               MinimumTime                    1;	///< Required element.
/// Element "MaximumTime" of type xs:dateTime.
    time_t*                              MaximumTime                    0;	///< Optional element.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__UnableToDestroySubscriptionFaultType operations:
/// - wsnt__UnableToDestroySubscriptionFaultType* soap_new_wsnt__UnableToDestroySubscriptionFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__UnableToDestroySubscriptionFaultType(struct soap*, wsnt__UnableToDestroySubscriptionFaultType*) default initialize members
/// - int soap_read_wsnt__UnableToDestroySubscriptionFaultType(struct soap*, wsnt__UnableToDestroySubscriptionFaultType*) deserialize from a source
/// - int soap_write_wsnt__UnableToDestroySubscriptionFaultType(struct soap*, wsnt__UnableToDestroySubscriptionFaultType*) serialize to a sink
/// - wsnt__UnableToDestroySubscriptionFaultType* soap_dup_wsnt__UnableToDestroySubscriptionFaultType(struct soap*, wsnt__UnableToDestroySubscriptionFaultType* dst, wsnt__UnableToDestroySubscriptionFaultType *src) returns deep copy of wsnt__UnableToDestroySubscriptionFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__UnableToDestroySubscriptionFaultType(wsnt__UnableToDestroySubscriptionFaultType*) deep deletes wsnt__UnableToDestroySubscriptionFaultType data members, use only on dst after soap_dup_wsnt__UnableToDestroySubscriptionFaultType(NULL, wsnt__UnableToDestroySubscriptionFaultType *dst, wsnt__UnableToDestroySubscriptionFaultType *src) (use soapcpp2 -Ed)
struct wsnt__UnableToDestroySubscriptionFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode operations:
/// - _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode* soap_new__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(struct soap*, _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(struct soap*, _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(struct soap*, _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode* soap_dup__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(struct soap*, _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode* dst, _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode *src) returns deep copy of _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(_wsnt__UnableToDestroySubscriptionFaultType_ErrorCode*) deep deletes _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(NULL, _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode *dst, _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__UnableToDestroySubscriptionFaultType_Description operations:
/// - _wsnt__UnableToDestroySubscriptionFaultType_Description* soap_new__wsnt__UnableToDestroySubscriptionFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnableToDestroySubscriptionFaultType_Description(struct soap*, _wsnt__UnableToDestroySubscriptionFaultType_Description*) default initialize members
/// - int soap_read__wsnt__UnableToDestroySubscriptionFaultType_Description(struct soap*, _wsnt__UnableToDestroySubscriptionFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__UnableToDestroySubscriptionFaultType_Description(struct soap*, _wsnt__UnableToDestroySubscriptionFaultType_Description*) serialize to a sink
/// - _wsnt__UnableToDestroySubscriptionFaultType_Description* soap_dup__wsnt__UnableToDestroySubscriptionFaultType_Description(struct soap*, _wsnt__UnableToDestroySubscriptionFaultType_Description* dst, _wsnt__UnableToDestroySubscriptionFaultType_Description *src) returns deep copy of _wsnt__UnableToDestroySubscriptionFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnableToDestroySubscriptionFaultType_Description(_wsnt__UnableToDestroySubscriptionFaultType_Description*) deep deletes _wsnt__UnableToDestroySubscriptionFaultType_Description data members, use only on dst after soap_dup__wsnt__UnableToDestroySubscriptionFaultType_Description(NULL, _wsnt__UnableToDestroySubscriptionFaultType_Description *dst, _wsnt__UnableToDestroySubscriptionFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__UnableToDestroySubscriptionFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__UnableToDestroySubscriptionFaultType_FaultCause operations:
/// - _wsnt__UnableToDestroySubscriptionFaultType_FaultCause* soap_new__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(struct soap*, _wsnt__UnableToDestroySubscriptionFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(struct soap*, _wsnt__UnableToDestroySubscriptionFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(struct soap*, _wsnt__UnableToDestroySubscriptionFaultType_FaultCause*) serialize to a sink
/// - _wsnt__UnableToDestroySubscriptionFaultType_FaultCause* soap_dup__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(struct soap*, _wsnt__UnableToDestroySubscriptionFaultType_FaultCause* dst, _wsnt__UnableToDestroySubscriptionFaultType_FaultCause *src) returns deep copy of _wsnt__UnableToDestroySubscriptionFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(_wsnt__UnableToDestroySubscriptionFaultType_FaultCause*) deep deletes _wsnt__UnableToDestroySubscriptionFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(NULL, _wsnt__UnableToDestroySubscriptionFaultType_FaultCause *dst, _wsnt__UnableToDestroySubscriptionFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__UnableToDestroySubscriptionFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":PauseFailedFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__PauseFailedFaultType operations:
/// - wsnt__PauseFailedFaultType* soap_new_wsnt__PauseFailedFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__PauseFailedFaultType(struct soap*, wsnt__PauseFailedFaultType*) default initialize members
/// - int soap_read_wsnt__PauseFailedFaultType(struct soap*, wsnt__PauseFailedFaultType*) deserialize from a source
/// - int soap_write_wsnt__PauseFailedFaultType(struct soap*, wsnt__PauseFailedFaultType*) serialize to a sink
/// - wsnt__PauseFailedFaultType* soap_dup_wsnt__PauseFailedFaultType(struct soap*, wsnt__PauseFailedFaultType* dst, wsnt__PauseFailedFaultType *src) returns deep copy of wsnt__PauseFailedFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__PauseFailedFaultType(wsnt__PauseFailedFaultType*) deep deletes wsnt__PauseFailedFaultType data members, use only on dst after soap_dup_wsnt__PauseFailedFaultType(NULL, wsnt__PauseFailedFaultType *dst, wsnt__PauseFailedFaultType *src) (use soapcpp2 -Ed)
struct wsnt__PauseFailedFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__PauseFailedFaultType_ErrorCode operations:
/// - _wsnt__PauseFailedFaultType_ErrorCode* soap_new__wsnt__PauseFailedFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__PauseFailedFaultType_ErrorCode(struct soap*, _wsnt__PauseFailedFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__PauseFailedFaultType_ErrorCode(struct soap*, _wsnt__PauseFailedFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__PauseFailedFaultType_ErrorCode(struct soap*, _wsnt__PauseFailedFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__PauseFailedFaultType_ErrorCode* soap_dup__wsnt__PauseFailedFaultType_ErrorCode(struct soap*, _wsnt__PauseFailedFaultType_ErrorCode* dst, _wsnt__PauseFailedFaultType_ErrorCode *src) returns deep copy of _wsnt__PauseFailedFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__PauseFailedFaultType_ErrorCode(_wsnt__PauseFailedFaultType_ErrorCode*) deep deletes _wsnt__PauseFailedFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__PauseFailedFaultType_ErrorCode(NULL, _wsnt__PauseFailedFaultType_ErrorCode *dst, _wsnt__PauseFailedFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__PauseFailedFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__PauseFailedFaultType_Description operations:
/// - _wsnt__PauseFailedFaultType_Description* soap_new__wsnt__PauseFailedFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__PauseFailedFaultType_Description(struct soap*, _wsnt__PauseFailedFaultType_Description*) default initialize members
/// - int soap_read__wsnt__PauseFailedFaultType_Description(struct soap*, _wsnt__PauseFailedFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__PauseFailedFaultType_Description(struct soap*, _wsnt__PauseFailedFaultType_Description*) serialize to a sink
/// - _wsnt__PauseFailedFaultType_Description* soap_dup__wsnt__PauseFailedFaultType_Description(struct soap*, _wsnt__PauseFailedFaultType_Description* dst, _wsnt__PauseFailedFaultType_Description *src) returns deep copy of _wsnt__PauseFailedFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__PauseFailedFaultType_Description(_wsnt__PauseFailedFaultType_Description*) deep deletes _wsnt__PauseFailedFaultType_Description data members, use only on dst after soap_dup__wsnt__PauseFailedFaultType_Description(NULL, _wsnt__PauseFailedFaultType_Description *dst, _wsnt__PauseFailedFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__PauseFailedFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__PauseFailedFaultType_FaultCause operations:
/// - _wsnt__PauseFailedFaultType_FaultCause* soap_new__wsnt__PauseFailedFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__PauseFailedFaultType_FaultCause(struct soap*, _wsnt__PauseFailedFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__PauseFailedFaultType_FaultCause(struct soap*, _wsnt__PauseFailedFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__PauseFailedFaultType_FaultCause(struct soap*, _wsnt__PauseFailedFaultType_FaultCause*) serialize to a sink
/// - _wsnt__PauseFailedFaultType_FaultCause* soap_dup__wsnt__PauseFailedFaultType_FaultCause(struct soap*, _wsnt__PauseFailedFaultType_FaultCause* dst, _wsnt__PauseFailedFaultType_FaultCause *src) returns deep copy of _wsnt__PauseFailedFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__PauseFailedFaultType_FaultCause(_wsnt__PauseFailedFaultType_FaultCause*) deep deletes _wsnt__PauseFailedFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__PauseFailedFaultType_FaultCause(NULL, _wsnt__PauseFailedFaultType_FaultCause *dst, _wsnt__PauseFailedFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__PauseFailedFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
/// @note struct wsnt__ResumeFailedFaultType operations:
/// - wsnt__ResumeFailedFaultType* soap_new_wsnt__ResumeFailedFaultType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wsnt__ResumeFailedFaultType(struct soap*, wsnt__ResumeFailedFaultType*) default initialize members
/// - int soap_read_wsnt__ResumeFailedFaultType(struct soap*, wsnt__ResumeFailedFaultType*) deserialize from a source
/// - int soap_write_wsnt__ResumeFailedFaultType(struct soap*, wsnt__ResumeFailedFaultType*) serialize to a sink
/// - wsnt__ResumeFailedFaultType* soap_dup_wsnt__ResumeFailedFaultType(struct soap*, wsnt__ResumeFailedFaultType* dst, wsnt__ResumeFailedFaultType *src) returns deep copy of wsnt__ResumeFailedFaultType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wsnt__ResumeFailedFaultType(wsnt__ResumeFailedFaultType*) deep deletes wsnt__ResumeFailedFaultType data members, use only on dst after soap_dup_wsnt__ResumeFailedFaultType(NULL, wsnt__ResumeFailedFaultType *dst, wsnt__ResumeFailedFaultType *src) (use soapcpp2 -Ed)
struct wsnt__ResumeFailedFaultType
{
/// INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Element "Timestamp" of type xs:dateTime.
    time_t                               wsrfbf__Timestamp              1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         wsrfbf__Originator             0;	///< Optional element.
/// @note struct _wsnt__ResumeFailedFaultType_ErrorCode operations:
/// - _wsnt__ResumeFailedFaultType_ErrorCode* soap_new__wsnt__ResumeFailedFaultType_ErrorCode(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__ResumeFailedFaultType_ErrorCode(struct soap*, _wsnt__ResumeFailedFaultType_ErrorCode*) default initialize members
/// - int soap_read__wsnt__ResumeFailedFaultType_ErrorCode(struct soap*, _wsnt__ResumeFailedFaultType_ErrorCode*) deserialize from a source
/// - int soap_write__wsnt__ResumeFailedFaultType_ErrorCode(struct soap*, _wsnt__ResumeFailedFaultType_ErrorCode*) serialize to a sink
/// - _wsnt__ResumeFailedFaultType_ErrorCode* soap_dup__wsnt__ResumeFailedFaultType_ErrorCode(struct soap*, _wsnt__ResumeFailedFaultType_ErrorCode* dst, _wsnt__ResumeFailedFaultType_ErrorCode *src) returns deep copy of _wsnt__ResumeFailedFaultType_ErrorCode src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__ResumeFailedFaultType_ErrorCode(_wsnt__ResumeFailedFaultType_ErrorCode*) deep deletes _wsnt__ResumeFailedFaultType_ErrorCode data members, use only on dst after soap_dup__wsnt__ResumeFailedFaultType_ErrorCode(NULL, _wsnt__ResumeFailedFaultType_ErrorCode *dst, _wsnt__ResumeFailedFaultType_ErrorCode *src) (use soapcpp2 -Ed)
    struct _wsnt__ResumeFailedFaultType_ErrorCode
    {
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          :dialect                       1;	///< Required attribute.
/// Mixed content.
/// @note Mixed content is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for DOM (soap_dom_element) to store mixed content.
    _XML                                 __mixed                       0;	///< Store mixed content as an xsd:any (an XML string by default).
    }                                   *wsrfbf__ErrorCode              0;	///< Optional element.
/// Size of Description array is 0..unbounded.
  $ int                                  __sizeDescription              0;
/// @note struct _wsnt__ResumeFailedFaultType_Description operations:
/// - _wsnt__ResumeFailedFaultType_Description* soap_new__wsnt__ResumeFailedFaultType_Description(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__ResumeFailedFaultType_Description(struct soap*, _wsnt__ResumeFailedFaultType_Description*) default initialize members
/// - int soap_read__wsnt__ResumeFailedFaultType_Description(struct soap*, _wsnt__ResumeFailedFaultType_Description*) deserialize from a source
/// - int soap_write__wsnt__ResumeFailedFaultType_Description(struct soap*, _wsnt__ResumeFailedFaultType_Description*) serialize to a sink
/// - _wsnt__ResumeFailedFaultType_Description* soap_dup__wsnt__ResumeFailedFaultType_Description(struct soap*, _wsnt__ResumeFailedFaultType_Description* dst, _wsnt__ResumeFailedFaultType_Description *src) returns deep copy of _wsnt__ResumeFailedFaultType_Description src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__ResumeFailedFaultType_Description(_wsnt__ResumeFailedFaultType_Description*) deep deletes _wsnt__ResumeFailedFaultType_Description data members, use only on dst after soap_dup__wsnt__ResumeFailedFaultType_Description(NULL, _wsnt__ResumeFailedFaultType_Description *dst, _wsnt__ResumeFailedFaultType_Description *src) (use soapcpp2 -Ed)
    struct _wsnt__ResumeFailedFaultType_Description
    {
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang                           xml__lang                      0;	///< Optional attribute.
    }                                   *wsrfbf__Description            0;	///< Multiple elements.
/// @note struct _wsnt__ResumeFailedFaultType_FaultCause operations:
/// - _wsnt__ResumeFailedFaultType_FaultCause* soap_new__wsnt__ResumeFailedFaultType_FaultCause(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wsnt__ResumeFailedFaultType_FaultCause(struct soap*, _wsnt__ResumeFailedFaultType_FaultCause*) default initialize members
/// - int soap_read__wsnt__ResumeFailedFaultType_FaultCause(struct soap*, _wsnt__ResumeFailedFaultType_FaultCause*) deserialize from a source
/// - int soap_write__wsnt__ResumeFailedFaultType_FaultCause(struct soap*, _wsnt__ResumeFailedFaultType_FaultCause*) serialize to a sink
/// - _wsnt__ResumeFailedFaultType_FaultCause* soap_dup__wsnt__ResumeFailedFaultType_FaultCause(struct soap*, _wsnt__ResumeFailedFaultType_FaultCause* dst, _wsnt__ResumeFailedFaultType_FaultCause *src) returns deep copy of _wsnt__ResumeFailedFaultType_FaultCause src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wsnt__ResumeFailedFaultType_FaultCause(_wsnt__ResumeFailedFaultType_FaultCause*) deep deletes _wsnt__ResumeFailedFaultType_FaultCause data members, use only on dst after soap_dup__wsnt__ResumeFailedFaultType_FaultCause(NULL, _wsnt__ResumeFailedFaultType_FaultCause *dst, _wsnt__ResumeFailedFaultType_FaultCause *src) (use soapcpp2 -Ed)
    struct _wsnt__ResumeFailedFaultType_FaultCause
    {
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    _XML                                 __any                         0;	///< Store any element content in XML string.
    }                                   *wsrfbf__FaultCause             0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
//  END OF INHERITED FROM wsrfbf__BaseFaultType
};

/// @brief "http://docs.oasis-open.org/wsn/t-1":TopicNamespaceType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented.
///
/// @note struct wstop__TopicNamespaceType operations:
/// - wstop__TopicNamespaceType* soap_new_wstop__TopicNamespaceType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wstop__TopicNamespaceType(struct soap*, wstop__TopicNamespaceType*) default initialize members
/// - int soap_read_wstop__TopicNamespaceType(struct soap*, wstop__TopicNamespaceType*) deserialize from a source
/// - int soap_write_wstop__TopicNamespaceType(struct soap*, wstop__TopicNamespaceType*) serialize to a sink
/// - wstop__TopicNamespaceType* soap_dup_wstop__TopicNamespaceType(struct soap*, wstop__TopicNamespaceType* dst, wstop__TopicNamespaceType *src) returns deep copy of wstop__TopicNamespaceType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wstop__TopicNamespaceType(wstop__TopicNamespaceType*) deep deletes wstop__TopicNamespaceType data members, use only on dst after soap_dup_wstop__TopicNamespaceType(NULL, wstop__TopicNamespaceType *dst, wstop__TopicNamespaceType *src) (use soapcpp2 -Ed)
struct wstop__TopicNamespaceType
{
/// INHERITED FROM wstop__ExtensibleDocumented:
/// Element "documentation" of type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    struct wstop__Documentation*         documentation                  0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
//  END OF INHERITED FROM wstop__ExtensibleDocumented
/// Size of Topic array is 0..unbounded.
  $ int                                  __sizeTopic                    0;
/// @note struct _wstop__TopicNamespaceType_Topic operations:
/// - _wstop__TopicNamespaceType_Topic* soap_new__wstop__TopicNamespaceType_Topic(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default__wstop__TopicNamespaceType_Topic(struct soap*, _wstop__TopicNamespaceType_Topic*) default initialize members
/// - int soap_read__wstop__TopicNamespaceType_Topic(struct soap*, _wstop__TopicNamespaceType_Topic*) deserialize from a source
/// - int soap_write__wstop__TopicNamespaceType_Topic(struct soap*, _wstop__TopicNamespaceType_Topic*) serialize to a sink
/// - _wstop__TopicNamespaceType_Topic* soap_dup__wstop__TopicNamespaceType_Topic(struct soap*, _wstop__TopicNamespaceType_Topic* dst, _wstop__TopicNamespaceType_Topic *src) returns deep copy of _wstop__TopicNamespaceType_Topic src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del__wstop__TopicNamespaceType_Topic(_wstop__TopicNamespaceType_Topic*) deep deletes _wstop__TopicNamespaceType_Topic data members, use only on dst after soap_dup__wstop__TopicNamespaceType_Topic(NULL, _wstop__TopicNamespaceType_Topic *dst, _wstop__TopicNamespaceType_Topic *src) (use soapcpp2 -Ed)
    struct _wstop__TopicNamespaceType_Topic
    {
/// INHERITED FROM wstop__ExtensibleDocumented:
/// Element "documentation" of type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    struct wstop__Documentation*         documentation                  0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
//  END OF INHERITED FROM wstop__ExtensibleDocumented
/// INHERITED FROM wstop__TopicType:
/// Element "MessagePattern" of type "http://docs.oasis-open.org/wsn/t-1":QueryExpressionType.
    struct wstop__QueryExpressionType*   MessagePattern                 0;	///< Optional element.
/// Size of array of struct wstop__TopicType* is 0..unbounded.
  $ int                                  __sizeTopic                    0;
/// Array struct wstop__TopicType* of size 0..unbounded.
    struct wstop__TopicType*             Topic                          0;	///< Multiple elements.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Attribute "name" of type xs:NCName.
  @ xsd__NCName                          name                           1;	///< Required attribute.
@    _QName                                                             

                                        *messageTypes                   0;	///< Optional attribute.
/// Attribute "final" of type xs:boolean.
  @ enum xsd__boolean                    final_                         0 = xsd__boolean__false_;	///< Optional attribute with default value="false".
//  END OF INHERITED FROM wstop__TopicType
/// Attribute "parent" of type "http://docs.oasis-open.org/wsn/t-1":ConcreteTopicExpression.
  @ wstop__ConcreteTopicExpression       parent                         0;	///< Optional attribute.
    }                                   *Topic                          0;	///< Multiple elements.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Attribute "name" of type xs:NCName.
  @ xsd__NCName                          name                           0;	///< Optional attribute.
/// Attribute "targetNamespace" of type xs:anyURI.
  @ xsd__anyURI                          targetNamespace                1;	///< Required attribute.
/// Attribute "final" of type xs:boolean.
  @ enum xsd__boolean                    final_                         0 = xsd__boolean__false_;	///< Optional attribute with default value="false".
};

/// @brief "http://docs.oasis-open.org/wsn/t-1":TopicType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented.
///
/// @note struct wstop__TopicType operations:
/// - wstop__TopicType* soap_new_wstop__TopicType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wstop__TopicType(struct soap*, wstop__TopicType*) default initialize members
/// - int soap_read_wstop__TopicType(struct soap*, wstop__TopicType*) deserialize from a source
/// - int soap_write_wstop__TopicType(struct soap*, wstop__TopicType*) serialize to a sink
/// - wstop__TopicType* soap_dup_wstop__TopicType(struct soap*, wstop__TopicType* dst, wstop__TopicType *src) returns deep copy of wstop__TopicType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wstop__TopicType(wstop__TopicType*) deep deletes wstop__TopicType data members, use only on dst after soap_dup_wstop__TopicType(NULL, wstop__TopicType *dst, wstop__TopicType *src) (use soapcpp2 -Ed)
struct wstop__TopicType
{
/// INHERITED FROM wstop__ExtensibleDocumented:
/// Element "documentation" of type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    struct wstop__Documentation*         documentation                  0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
//  END OF INHERITED FROM wstop__ExtensibleDocumented
/// Element "MessagePattern" of type "http://docs.oasis-open.org/wsn/t-1":QueryExpressionType.
    struct wstop__QueryExpressionType*   MessagePattern                 0;	///< Optional element.
/// Size of array of struct wstop__TopicType* is 0..unbounded.
  $ int                                  __sizeTopic                    0;
/// Array struct wstop__TopicType* of size 0..unbounded.
    struct wstop__TopicType*             Topic                          0;	///< Multiple elements.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
/// Attribute "name" of type xs:NCName.
  @ xsd__NCName                          name                           1;	///< Required attribute.
@    _QName                                                             

                                        *messageTypes                   0;	///< Optional attribute.
/// Attribute "final" of type xs:boolean.
  @ enum xsd__boolean                    final_                         0 = xsd__boolean__false_;	///< Optional attribute with default value="false".
};

/// @brief "http://docs.oasis-open.org/wsn/t-1":TopicSetType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented.
///
/// @note struct wstop__TopicSetType operations:
/// - wstop__TopicSetType* soap_new_wstop__TopicSetType(struct soap*, int num) allocate and default initialize one or more values (an array)
/// - soap_default_wstop__TopicSetType(struct soap*, wstop__TopicSetType*) default initialize members
/// - int soap_read_wstop__TopicSetType(struct soap*, wstop__TopicSetType*) deserialize from a source
/// - int soap_write_wstop__TopicSetType(struct soap*, wstop__TopicSetType*) serialize to a sink
/// - wstop__TopicSetType* soap_dup_wstop__TopicSetType(struct soap*, wstop__TopicSetType* dst, wstop__TopicSetType *src) returns deep copy of wstop__TopicSetType src into dst, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - soap_del_wstop__TopicSetType(wstop__TopicSetType*) deep deletes wstop__TopicSetType data members, use only on dst after soap_dup_wstop__TopicSetType(NULL, wstop__TopicSetType *dst, wstop__TopicSetType *src) (use soapcpp2 -Ed)
struct wstop__TopicSetType
{
/// INHERITED FROM wstop__ExtensibleDocumented:
/// Element "documentation" of type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    struct wstop__Documentation*         documentation                  0;	///< Optional element.
/// <anyAttribute namespace="##other">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
  @ _XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment on enabling xsd__anyAttribute DOM with option -d.
//  END OF INHERITED FROM wstop__ExtensibleDocumented
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of the array of XML or DOM nodes is 0..unbounded.
  $ int                                  __size                        0;
    _XML                                *__any                         0;	///< Store any element content in XML string.
};


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":Capabilities of type "http://www.onvif.org/ver10/device/wsdl":DeviceServiceCapabilities.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration of type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpression of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":FixedTopicSet of type xs:boolean.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialect of type xs:anyURI.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ConsumerReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Filter of type "http://docs.oasis-open.org/wsn/b-2":FilterType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicy of type "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicyType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreationTime of type xs:dateTime.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Topic of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ProducerReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotificationMessage of type "http://docs.oasis-open.org/wsn/b-2":NotificationMessageHolderType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":CurrentTime of type xs:dateTime.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TerminationTime of type xs:dateTime.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ProducerProperties of type "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":MessageContent of type "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFault of type "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFault of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFault of type "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFault of type "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFault of type "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFault of type "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFault of type "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFault of type "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFault of type "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFault of type "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseFailedFault of type "http://docs.oasis-open.org/wsn/b-2":PauseFailedFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFault of type "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://docs.oasis-open.org/wsrf/bf-2":BaseFault of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/t-1":TopicNamespace of type "http://docs.oasis-open.org/wsn/t-1":TopicNamespaceType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/t-1":TopicSet of type "http://docs.oasis-open.org/wsn/t-1":TopicSetType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level attribute "http://docs.oasis-open.org/wsn/t-1":topicNamespaceLocation of simpleType xs:anyURI.
/// @note Use wsdl2h option -g to auto-generate a top-level attribute declaration.

/// @brief Top-level attribute "http://docs.oasis-open.org/wsn/t-1":topic of simpleType xs:boolean.
/// @note Use wsdl2h option -g to auto-generate a top-level attribute declaration.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":Capabilities of type "http://www.onvif.org/ver10/media/wsdl":Capabilities.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/network/wsdl                                  *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/network/wsdl":Hello of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":HelloType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver10/network/wsdl":HelloResponse of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ResolveType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver10/network/wsdl":Probe of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ProbeType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver10/network/wsdl":ProbeResponse of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ProbeMatchesType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver10/network/wsdl":Bye of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ByeType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.

/// @brief Top-level root element "http://www.onvif.org/ver10/network/wsdl":ByeResponse of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ResolveType.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/network/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/

// This service supports SOAP 1.2 namespaces:
#import "soap12.h"

//gsoap tdn  service name:	RemoteDiscoveryBinding 
//gsoap tdn  service type:	RemoteDiscoveryPort 
//gsoap tdn  service namespace:	http://www.onvif.org/ver10/network/wsdl 
//gsoap tdn  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap tds  service name:	DeviceBinding 
//gsoap tds  service type:	Device 
//gsoap tds  service namespace:	http://www.onvif.org/ver10/device/wsdl 
//gsoap tds  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap trt  service name:	MediaBinding 
//gsoap trt  service type:	Media 
//gsoap trt  service namespace:	http://www.onvif.org/ver10/media/wsdl 
//gsoap trt  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage WSDL Definitions

@section WSDL_bindings Service Bindings

  - @ref RemoteDiscoveryBinding

  - @ref DeviceBinding

  - @ref MediaBinding

@section WSDL_more More Information

  - @ref page_notes "Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/** @page RemoteDiscoveryBinding Binding "RemoteDiscoveryBinding"

@section RemoteDiscoveryBinding_operations Operations of Binding "RemoteDiscoveryBinding"

  - @ref __tdn__Hello

  - @ref __tdn__Bye

  - @ref __tdn__Probe

@section RemoteDiscoveryBinding_ports Default endpoints of Binding "RemoteDiscoveryBinding"

@note Multiple service bindings collected as one, use wsdl2h option -Nname to produce a separate service for each binding


*/

/** @page DeviceBinding Binding "DeviceBinding"

@section DeviceBinding_operations Operations of Binding "DeviceBinding"

  - @ref __tds__GetServices

  - @ref __tds__GetServiceCapabilities

  - @ref __tds__GetDeviceInformation

  - @ref __tds__SystemReboot

  - @ref __tds__GetCapabilities

@section DeviceBinding_ports Default endpoints of Binding "DeviceBinding"

@note Multiple service bindings collected as one, use wsdl2h option -Nname to produce a separate service for each binding


*/

/** @page MediaBinding Binding "MediaBinding"

@section MediaBinding_operations Operations of Binding "MediaBinding"

  - @ref __trt__GetServiceCapabilities

  - @ref __trt__CreateProfile

  - @ref __trt__GetProfile

  - @ref __trt__GetProfiles

  - @ref __trt__GetSnapshotUri

@section MediaBinding_ports Default endpoints of Binding "MediaBinding"

@note Multiple service bindings collected as one, use wsdl2h option -Nname to produce a separate service for each binding


*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   RemoteDiscoveryBinding                                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tdn__Hello                                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tdn__Hello" of service binding "RemoteDiscoveryBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/network/wsdl/Hello"

  - Addressing input action: "http://www.onvif.org/ver10/network/wsdl/Hello"

  - Addressing output action: "http://www.onvif.org/ver10/network/wsdl/HelloResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tdn__Hello(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    wsdd__HelloType                     tdn__Hello,
    // output parameters:
    wsdd__ResolveType                  *tdn__HelloResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tdn__Hello(
    struct soap *soap,
    // input parameters:
    wsdd__HelloType                     tdn__Hello,
    // output parameters:
    wsdd__ResolveType                  *tdn__HelloResponse
  );
@endcode

*/

//gsoap tdn  service method-protocol:	Hello SOAP
//gsoap tdn  service method-style:	Hello document
//gsoap tdn  service method-encoding:	Hello literal
//gsoap tdn  service method-input-action:	Hello http://www.onvif.org/ver10/network/wsdl/Hello
//gsoap tdn  service method-output-action:	Hello http://www.onvif.org/ver10/network/wsdl/HelloResponse
int __tdn__Hello(
    wsdd__HelloType                     tdn__Hello,	///< Input parameter
    wsdd__ResolveType                  *tdn__HelloResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tdn__Bye                                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tdn__Bye" of service binding "RemoteDiscoveryBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/network/wsdl/Bye"

  - Addressing input action: "http://www.onvif.org/ver10/network/wsdl/Bye"

  - Addressing output action: "http://www.onvif.org/ver10/network/wsdl/ByeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tdn__Bye(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    wsdd__ByeType                       tdn__Bye,
    // output parameters:
    wsdd__ResolveType                  *tdn__ByeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tdn__Bye(
    struct soap *soap,
    // input parameters:
    wsdd__ByeType                       tdn__Bye,
    // output parameters:
    wsdd__ResolveType                  *tdn__ByeResponse
  );
@endcode

*/

//gsoap tdn  service method-protocol:	Bye SOAP
//gsoap tdn  service method-style:	Bye document
//gsoap tdn  service method-encoding:	Bye literal
//gsoap tdn  service method-input-action:	Bye http://www.onvif.org/ver10/network/wsdl/Bye
//gsoap tdn  service method-output-action:	Bye http://www.onvif.org/ver10/network/wsdl/ByeResponse
int __tdn__Bye(
    wsdd__ByeType                       tdn__Bye,	///< Input parameter
    wsdd__ResolveType                  *tdn__ByeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tdn__Probe                                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tdn__Probe" of service binding "RemoteDiscoveryBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/network/wsdl/Probe"

  - Addressing input action: "http://www.onvif.org/ver10/network/wsdl/Probe"

  - Addressing output action: "http://www.onvif.org/ver10/network/wsdl/ProbeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tdn__Probe(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    wsdd__ProbeType                     tdn__Probe,
    // output parameters:
    wsdd__ProbeMatchesType             *tdn__ProbeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tdn__Probe(
    struct soap *soap,
    // input parameters:
    wsdd__ProbeType                     tdn__Probe,
    // output parameters:
    wsdd__ProbeMatchesType             *tdn__ProbeResponse
  );
@endcode

*/

//gsoap tdn  service method-protocol:	Probe SOAP
//gsoap tdn  service method-style:	Probe document
//gsoap tdn  service method-encoding:	Probe literal
//gsoap tdn  service method-input-action:	Probe http://www.onvif.org/ver10/network/wsdl/Probe
//gsoap tdn  service method-output-action:	Probe http://www.onvif.org/ver10/network/wsdl/ProbeResponse
int __tdn__Probe(
    wsdd__ProbeType                     tdn__Probe,	///< Input parameter
    wsdd__ProbeMatchesType             *tdn__ProbeResponse	///< Output parameter
);

/** @page RemoteDiscoveryBinding Binding "RemoteDiscoveryBinding"

@section RemoteDiscoveryBinding_policy_enablers Policy Enablers of Binding "RemoteDiscoveryBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   DeviceBinding                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetServices                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetServices" of service binding "DeviceBinding".
Returns information about services on the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetServices"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetServices"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetServicesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetServices(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetServices*           tds__GetServices,
    // output parameters:
    struct _tds__GetServicesResponse   *tds__GetServicesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetServices(
    struct soap *soap,
    // input parameters:
    struct _tds__GetServices*           tds__GetServices,
    // output parameters:
    struct _tds__GetServicesResponse   *tds__GetServicesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetServices SOAP
//gsoap tds  service method-style:	GetServices document
//gsoap tds  service method-encoding:	GetServices literal
//gsoap tds  service method-input-action:	GetServices http://www.onvif.org/ver10/device/wsdl/GetServices
//gsoap tds  service method-output-action:	GetServices http://www.onvif.org/ver10/device/wsdl/GetServicesResponse
int __tds__GetServices(
    struct _tds__GetServices*           tds__GetServices,	///< Input parameter
    struct _tds__GetServicesResponse   *tds__GetServicesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetServiceCapabilities" of service binding "DeviceBinding".
Returns the capabilities of the device service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetServiceCapabilities* tds__GetServiceCapabilities,
    // output parameters:
    struct _tds__GetServiceCapabilitiesResponse*tds__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    struct _tds__GetServiceCapabilities* tds__GetServiceCapabilities,
    // output parameters:
    struct _tds__GetServiceCapabilitiesResponse*tds__GetServiceCapabilitiesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetServiceCapabilities SOAP
//gsoap tds  service method-style:	GetServiceCapabilities document
//gsoap tds  service method-encoding:	GetServiceCapabilities literal
//gsoap tds  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilities
//gsoap tds  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilitiesResponse
int __tds__GetServiceCapabilities(
    struct _tds__GetServiceCapabilities* tds__GetServiceCapabilities,	///< Input parameter
    struct _tds__GetServiceCapabilitiesResponse*tds__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDeviceInformation                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDeviceInformation" of service binding "DeviceBinding".
This operation gets basic device information from the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetDeviceInformation"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDeviceInformation"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDeviceInformationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDeviceInformation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetDeviceInformation*  tds__GetDeviceInformation,
    // output parameters:
    struct _tds__GetDeviceInformationResponse*tds__GetDeviceInformationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDeviceInformation(
    struct soap *soap,
    // input parameters:
    struct _tds__GetDeviceInformation*  tds__GetDeviceInformation,
    // output parameters:
    struct _tds__GetDeviceInformationResponse*tds__GetDeviceInformationResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetDeviceInformation SOAP
//gsoap tds  service method-style:	GetDeviceInformation document
//gsoap tds  service method-encoding:	GetDeviceInformation literal
//gsoap tds  service method-input-action:	GetDeviceInformation http://www.onvif.org/ver10/device/wsdl/GetDeviceInformation
//gsoap tds  service method-output-action:	GetDeviceInformation http://www.onvif.org/ver10/device/wsdl/GetDeviceInformationResponse
int __tds__GetDeviceInformation(
    struct _tds__GetDeviceInformation*  tds__GetDeviceInformation,	///< Input parameter
    struct _tds__GetDeviceInformationResponse*tds__GetDeviceInformationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SystemReboot                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SystemReboot" of service binding "DeviceBinding".
This operation reboots the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SystemReboot"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SystemReboot"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SystemRebootResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SystemReboot(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__SystemReboot*          tds__SystemReboot,
    // output parameters:
    struct _tds__SystemRebootResponse  *tds__SystemRebootResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SystemReboot(
    struct soap *soap,
    // input parameters:
    struct _tds__SystemReboot*          tds__SystemReboot,
    // output parameters:
    struct _tds__SystemRebootResponse  *tds__SystemRebootResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	SystemReboot SOAP
//gsoap tds  service method-style:	SystemReboot document
//gsoap tds  service method-encoding:	SystemReboot literal
//gsoap tds  service method-input-action:	SystemReboot http://www.onvif.org/ver10/device/wsdl/SystemReboot
//gsoap tds  service method-output-action:	SystemReboot http://www.onvif.org/ver10/device/wsdl/SystemRebootResponse
int __tds__SystemReboot(
    struct _tds__SystemReboot*          tds__SystemReboot,	///< Input parameter
    struct _tds__SystemRebootResponse  *tds__SystemRebootResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetCapabilities                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetCapabilities" of service binding "DeviceBinding".
Any endpoint can ask for the capabilities of a device using the capability exchange
request
				response operation. The device shall indicate all
its ONVIF compliant capabilities through the
				GetCapabilities command.
				The capability list includes references to the addresses
(XAddr) of the service implementing
				the interface operations in the category. Apart
from the addresses, the
				capabilities only reflect optional functions.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tds__GetCapabilities*       tds__GetCapabilities,
    // output parameters:
    struct _tds__GetCapabilitiesResponse*tds__GetCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetCapabilities(
    struct soap *soap,
    // input parameters:
    struct _tds__GetCapabilities*       tds__GetCapabilities,
    // output parameters:
    struct _tds__GetCapabilitiesResponse*tds__GetCapabilitiesResponse
  );
@endcode

*/

//gsoap tds  service method-protocol:	GetCapabilities SOAP
//gsoap tds  service method-style:	GetCapabilities document
//gsoap tds  service method-encoding:	GetCapabilities literal
//gsoap tds  service method-input-action:	GetCapabilities http://www.onvif.org/ver10/device/wsdl/GetCapabilities
//gsoap tds  service method-output-action:	GetCapabilities http://www.onvif.org/ver10/device/wsdl/GetCapabilitiesResponse
int __tds__GetCapabilities(
    struct _tds__GetCapabilities*       tds__GetCapabilities,	///< Input parameter
    struct _tds__GetCapabilitiesResponse*tds__GetCapabilitiesResponse	///< Output parameter
);

/** @page DeviceBinding Binding "DeviceBinding"

@section DeviceBinding_policy_enablers Policy Enablers of Binding "DeviceBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   MediaBinding                                                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetServiceCapabilities" of service binding "MediaBinding".
Returns the capabilities of the media service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetServiceCapabilities* trt__GetServiceCapabilities,
    // output parameters:
    struct _trt__GetServiceCapabilitiesResponse*trt__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    struct _trt__GetServiceCapabilities* trt__GetServiceCapabilities,
    // output parameters:
    struct _trt__GetServiceCapabilitiesResponse*trt__GetServiceCapabilitiesResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetServiceCapabilities SOAP
//gsoap trt  service method-style:	GetServiceCapabilities document
//gsoap trt  service method-encoding:	GetServiceCapabilities literal
//gsoap trt  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver10/media/wsdl/GetServiceCapabilities
//gsoap trt  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/media/wsdl/GetServiceCapabilitiesResponse
int __trt__GetServiceCapabilities(
    struct _trt__GetServiceCapabilities* trt__GetServiceCapabilities,	///< Input parameter
    struct _trt__GetServiceCapabilitiesResponse*trt__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__CreateProfile                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__CreateProfile" of service binding "MediaBinding".
This operation creates a new empty media profile. The media profile shall be created
in the
device and shall be persistent (remain after reboot). A created profile shall be
deletable and a device shall set the fixed attribute to false in the
returned Profile.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/CreateProfile"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/CreateProfile"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/CreateProfileResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__CreateProfile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__CreateProfile*         trt__CreateProfile,
    // output parameters:
    struct _trt__CreateProfileResponse *trt__CreateProfileResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__CreateProfile(
    struct soap *soap,
    // input parameters:
    struct _trt__CreateProfile*         trt__CreateProfile,
    // output parameters:
    struct _trt__CreateProfileResponse *trt__CreateProfileResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	CreateProfile SOAP
//gsoap trt  service method-style:	CreateProfile document
//gsoap trt  service method-encoding:	CreateProfile literal
//gsoap trt  service method-input-action:	CreateProfile http://www.onvif.org/ver10/media/wsdl/CreateProfile
//gsoap trt  service method-output-action:	CreateProfile http://www.onvif.org/ver10/media/wsdl/CreateProfileResponse
int __trt__CreateProfile(
    struct _trt__CreateProfile*         trt__CreateProfile,	///< Input parameter
    struct _trt__CreateProfileResponse *trt__CreateProfileResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetProfile                                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetProfile" of service binding "MediaBinding".
If the profile token is already known, a profile can be fetched through the GetProfile
command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdlGetProfile/"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdlGetProfile/"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdlGetProfile/Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetProfile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetProfile*            trt__GetProfile,
    // output parameters:
    struct _trt__GetProfileResponse    *trt__GetProfileResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetProfile(
    struct soap *soap,
    // input parameters:
    struct _trt__GetProfile*            trt__GetProfile,
    // output parameters:
    struct _trt__GetProfileResponse    *trt__GetProfileResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetProfile SOAP
//gsoap trt  service method-style:	GetProfile document
//gsoap trt  service method-encoding:	GetProfile literal
//gsoap trt  service method-input-action:	GetProfile http://www.onvif.org/ver10/media/wsdlGetProfile/
//gsoap trt  service method-output-action:	GetProfile http://www.onvif.org/ver10/media/wsdlGetProfile/Response
int __trt__GetProfile(
    struct _trt__GetProfile*            trt__GetProfile,	///< Input parameter
    struct _trt__GetProfileResponse    *trt__GetProfileResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetProfiles                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetProfiles" of service binding "MediaBinding".
Any endpoint can ask for the existing media profiles of a device using the GetProfiles
command. Pre-configured or dynamically configured profiles can be retrieved using
this
command. This command lists all configured profiles in a device. The client does
not need to
know the media profile in order to use the command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetProfiles"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetProfiles"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetProfilesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetProfiles(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetProfiles*           trt__GetProfiles,
    // output parameters:
    struct _trt__GetProfilesResponse   *trt__GetProfilesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetProfiles(
    struct soap *soap,
    // input parameters:
    struct _trt__GetProfiles*           trt__GetProfiles,
    // output parameters:
    struct _trt__GetProfilesResponse   *trt__GetProfilesResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetProfiles SOAP
//gsoap trt  service method-style:	GetProfiles document
//gsoap trt  service method-encoding:	GetProfiles literal
//gsoap trt  service method-input-action:	GetProfiles http://www.onvif.org/ver10/media/wsdl/GetProfiles
//gsoap trt  service method-output-action:	GetProfiles http://www.onvif.org/ver10/media/wsdl/GetProfilesResponse
int __trt__GetProfiles(
    struct _trt__GetProfiles*           trt__GetProfiles,	///< Input parameter
    struct _trt__GetProfilesResponse   *trt__GetProfilesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetSnapshotUri                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetSnapshotUri" of service binding "MediaBinding".
A client uses the GetSnapshotUri command to obtain a JPEG snapshot from the
device. The returned URI shall remain valid indefinitely even if the profile is
changed. The
ValidUntilConnect, ValidUntilReboot and Timeout Parameter shall be set accordingly
(ValidUntilConnect=false, ValidUntilReboot=false, timeout=PT0S). The URI can be
used for
acquiring a JPEG image through a HTTP GET operation. The image encoding will always
be
JPEG regardless of the encoding setting in the media profile. The Jpeg settings
(like resolution or quality) may be taken from the profile if suitable. The provided
image will be updated automatically and independent from calls to GetSnapshotUri.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetSnapshotUri"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetSnapshotUri"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetSnapshotUriResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetSnapshotUri(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _trt__GetSnapshotUri*        trt__GetSnapshotUri,
    // output parameters:
    struct _trt__GetSnapshotUriResponse*trt__GetSnapshotUriResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetSnapshotUri(
    struct soap *soap,
    // input parameters:
    struct _trt__GetSnapshotUri*        trt__GetSnapshotUri,
    // output parameters:
    struct _trt__GetSnapshotUriResponse*trt__GetSnapshotUriResponse
  );
@endcode

*/

//gsoap trt  service method-protocol:	GetSnapshotUri SOAP
//gsoap trt  service method-style:	GetSnapshotUri document
//gsoap trt  service method-encoding:	GetSnapshotUri literal
//gsoap trt  service method-input-action:	GetSnapshotUri http://www.onvif.org/ver10/media/wsdl/GetSnapshotUri
//gsoap trt  service method-output-action:	GetSnapshotUri http://www.onvif.org/ver10/media/wsdl/GetSnapshotUriResponse
int __trt__GetSnapshotUri(
    struct _trt__GetSnapshotUri*        trt__GetSnapshotUri,	///< Input parameter
    struct _trt__GetSnapshotUriResponse*trt__GetSnapshotUriResponse	///< Output parameter
);

/** @page MediaBinding Binding "MediaBinding"

@section MediaBinding_policy_enablers Policy Enablers of Binding "MediaBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/** @page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings that are contractually bound by WSDLs and
are auto-generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data
bindings are adopted from XML schemas as part of the WSDL types section or when
running wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

@note The following readers and writers are C/C++ data type (de)serializers
auto-generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

@note Data can be read and deserialized from:
  - an int file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = (int)...
  - a C++ stream (istream, stringstream), using soap->is = (istream*)...
  - a C string, using soap->is = (const char*)...
  - any input, using the soap->frecv() callback

@note Data can be serialized and written to:
  - an int file descriptor, using soap->sendfd = (int)...
  - a socket, using soap->socket = (int)...
  - a C++ stream (ostream, stringstream), using soap->os = (ostream*)...
  - a C string, using soap->os = (const char**)...
  - any output, using the soap->fsend() callback

@note The following options are available for (de)serialization control:
  - soap->encodingStyle = NULL; to remove SOAP 1.1/1.2 encodingStyle
  - soap_set_mode(soap, SOAP_XML_TREE); XML without id-ref (no cycles!)
  - soap_set_mode(soap, SOAP_XML_GRAPH); XML with id-ref (including cycles)
  - soap_set_namespaces(soap, struct Namespace *nsmap); to set xmlns bindings


*/

/**

@section tds Top-level root elements of schema "http://www.onvif.org/ver10/device/wsdl"

  - <tds:GetServices> @ref _tds__GetServices
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetServices(struct soap*, struct _tds__GetServices*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetServices(struct soap*, struct _tds__GetServices*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetServices(struct soap*, const char *URL, struct _tds__GetServices*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetServices(struct soap*, const char *URL, struct _tds__GetServices*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetServices(struct soap*, const char *URL, struct _tds__GetServices*);
    soap_POST_recv__tds__GetServices(struct soap*, struct _tds__GetServices*);
    @endcode

  - <tds:GetServicesResponse> @ref _tds__GetServicesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetServicesResponse(struct soap*, struct _tds__GetServicesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetServicesResponse(struct soap*, struct _tds__GetServicesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetServicesResponse(struct soap*, const char *URL, struct _tds__GetServicesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetServicesResponse(struct soap*, const char *URL, struct _tds__GetServicesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetServicesResponse(struct soap*, const char *URL, struct _tds__GetServicesResponse*);
    soap_POST_recv__tds__GetServicesResponse(struct soap*, struct _tds__GetServicesResponse*);
    @endcode

  - <tds:GetServiceCapabilities> @ref _tds__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetServiceCapabilities(struct soap*, struct _tds__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetServiceCapabilities(struct soap*, struct _tds__GetServiceCapabilities*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetServiceCapabilities(struct soap*, const char *URL, struct _tds__GetServiceCapabilities*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetServiceCapabilities(struct soap*, const char *URL, struct _tds__GetServiceCapabilities*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetServiceCapabilities(struct soap*, const char *URL, struct _tds__GetServiceCapabilities*);
    soap_POST_recv__tds__GetServiceCapabilities(struct soap*, struct _tds__GetServiceCapabilities*);
    @endcode

  - <tds:GetServiceCapabilitiesResponse> @ref _tds__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetServiceCapabilitiesResponse(struct soap*, struct _tds__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetServiceCapabilitiesResponse(struct soap*, struct _tds__GetServiceCapabilitiesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetServiceCapabilitiesResponse(struct soap*, const char *URL, struct _tds__GetServiceCapabilitiesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetServiceCapabilitiesResponse(struct soap*, const char *URL, struct _tds__GetServiceCapabilitiesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetServiceCapabilitiesResponse(struct soap*, const char *URL, struct _tds__GetServiceCapabilitiesResponse*);
    soap_POST_recv__tds__GetServiceCapabilitiesResponse(struct soap*, struct _tds__GetServiceCapabilitiesResponse*);
    @endcode

  - <tds:Capabilities> (use wsdl2h option -g to auto-generate type _tds__Capabilities)

  - <tds:GetDeviceInformation> @ref _tds__GetDeviceInformation
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDeviceInformation(struct soap*, struct _tds__GetDeviceInformation*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDeviceInformation(struct soap*, struct _tds__GetDeviceInformation*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDeviceInformation(struct soap*, const char *URL, struct _tds__GetDeviceInformation*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDeviceInformation(struct soap*, const char *URL, struct _tds__GetDeviceInformation*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDeviceInformation(struct soap*, const char *URL, struct _tds__GetDeviceInformation*);
    soap_POST_recv__tds__GetDeviceInformation(struct soap*, struct _tds__GetDeviceInformation*);
    @endcode

  - <tds:GetDeviceInformationResponse> @ref _tds__GetDeviceInformationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDeviceInformationResponse(struct soap*, struct _tds__GetDeviceInformationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDeviceInformationResponse(struct soap*, struct _tds__GetDeviceInformationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDeviceInformationResponse(struct soap*, const char *URL, struct _tds__GetDeviceInformationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDeviceInformationResponse(struct soap*, const char *URL, struct _tds__GetDeviceInformationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDeviceInformationResponse(struct soap*, const char *URL, struct _tds__GetDeviceInformationResponse*);
    soap_POST_recv__tds__GetDeviceInformationResponse(struct soap*, struct _tds__GetDeviceInformationResponse*);
    @endcode

  - <tds:SystemReboot> @ref _tds__SystemReboot
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SystemReboot(struct soap*, struct _tds__SystemReboot*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SystemReboot(struct soap*, struct _tds__SystemReboot*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SystemReboot(struct soap*, const char *URL, struct _tds__SystemReboot*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SystemReboot(struct soap*, const char *URL, struct _tds__SystemReboot*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SystemReboot(struct soap*, const char *URL, struct _tds__SystemReboot*);
    soap_POST_recv__tds__SystemReboot(struct soap*, struct _tds__SystemReboot*);
    @endcode

  - <tds:SystemRebootResponse> @ref _tds__SystemRebootResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SystemRebootResponse(struct soap*, struct _tds__SystemRebootResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SystemRebootResponse(struct soap*, struct _tds__SystemRebootResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SystemRebootResponse(struct soap*, const char *URL, struct _tds__SystemRebootResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SystemRebootResponse(struct soap*, const char *URL, struct _tds__SystemRebootResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SystemRebootResponse(struct soap*, const char *URL, struct _tds__SystemRebootResponse*);
    soap_POST_recv__tds__SystemRebootResponse(struct soap*, struct _tds__SystemRebootResponse*);
    @endcode

  - <tds:GetCapabilities> @ref _tds__GetCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCapabilities(struct soap*, struct _tds__GetCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCapabilities(struct soap*, struct _tds__GetCapabilities*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetCapabilities(struct soap*, const char *URL, struct _tds__GetCapabilities*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetCapabilities(struct soap*, const char *URL, struct _tds__GetCapabilities*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetCapabilities(struct soap*, const char *URL, struct _tds__GetCapabilities*);
    soap_POST_recv__tds__GetCapabilities(struct soap*, struct _tds__GetCapabilities*);
    @endcode

  - <tds:GetCapabilitiesResponse> @ref _tds__GetCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCapabilitiesResponse(struct soap*, struct _tds__GetCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCapabilitiesResponse(struct soap*, struct _tds__GetCapabilitiesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetCapabilitiesResponse(struct soap*, const char *URL, struct _tds__GetCapabilitiesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetCapabilitiesResponse(struct soap*, const char *URL, struct _tds__GetCapabilitiesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetCapabilitiesResponse(struct soap*, const char *URL, struct _tds__GetCapabilitiesResponse*);
    soap_POST_recv__tds__GetCapabilitiesResponse(struct soap*, struct _tds__GetCapabilitiesResponse*);
    @endcode

*/

/**

@section tt Top-level root elements of schema "http://www.onvif.org/ver10/schema"

  - <tt:VideoEncoderConfiguration> (use wsdl2h option -g to auto-generate type _tt__VideoEncoderConfiguration)

  - <tt:Message> @ref _tt__Message
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tt__Message(struct soap*, struct _tt__Message*);
    // Writer (returns SOAP_OK on success):
    soap_write__tt__Message(struct soap*, struct _tt__Message*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tt__Message(struct soap*, const char *URL, struct _tt__Message*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tt__Message(struct soap*, const char *URL, struct _tt__Message*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tt__Message(struct soap*, const char *URL, struct _tt__Message*);
    soap_POST_recv__tt__Message(struct soap*, struct _tt__Message*);
    @endcode

*/

/**

@section wsnt Top-level root elements of schema "http://docs.oasis-open.org/wsn/b-2"

  - <wsnt:TopicExpression> (use wsdl2h option -g to auto-generate type _wsnt__TopicExpression)

  - <wsnt:FixedTopicSet> (use wsdl2h option -g to auto-generate type _wsnt__FixedTopicSet)

  - <wsnt:TopicExpressionDialect> (use wsdl2h option -g to auto-generate type _wsnt__TopicExpressionDialect)

  - <wsnt:NotificationProducerRP> @ref _wsnt__NotificationProducerRP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__NotificationProducerRP(struct soap*, struct _wsnt__NotificationProducerRP*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__NotificationProducerRP(struct soap*, struct _wsnt__NotificationProducerRP*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__NotificationProducerRP(struct soap*, const char *URL, struct _wsnt__NotificationProducerRP*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__NotificationProducerRP(struct soap*, const char *URL, struct _wsnt__NotificationProducerRP*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__NotificationProducerRP(struct soap*, const char *URL, struct _wsnt__NotificationProducerRP*);
    soap_POST_recv__wsnt__NotificationProducerRP(struct soap*, struct _wsnt__NotificationProducerRP*);
    @endcode

  - <wsnt:ConsumerReference> (use wsdl2h option -g to auto-generate type _wsnt__ConsumerReference)

  - <wsnt:Filter> (use wsdl2h option -g to auto-generate type _wsnt__Filter)

  - <wsnt:SubscriptionPolicy> (use wsdl2h option -g to auto-generate type _wsnt__SubscriptionPolicy)

  - <wsnt:CreationTime> (use wsdl2h option -g to auto-generate type _wsnt__CreationTime)

  - <wsnt:SubscriptionManagerRP> @ref _wsnt__SubscriptionManagerRP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__SubscriptionManagerRP(struct soap*, struct _wsnt__SubscriptionManagerRP*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__SubscriptionManagerRP(struct soap*, struct _wsnt__SubscriptionManagerRP*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__SubscriptionManagerRP(struct soap*, const char *URL, struct _wsnt__SubscriptionManagerRP*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__SubscriptionManagerRP(struct soap*, const char *URL, struct _wsnt__SubscriptionManagerRP*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__SubscriptionManagerRP(struct soap*, const char *URL, struct _wsnt__SubscriptionManagerRP*);
    soap_POST_recv__wsnt__SubscriptionManagerRP(struct soap*, struct _wsnt__SubscriptionManagerRP*);
    @endcode

  - <wsnt:SubscriptionReference> (use wsdl2h option -g to auto-generate type _wsnt__SubscriptionReference)

  - <wsnt:Topic> (use wsdl2h option -g to auto-generate type _wsnt__Topic)

  - <wsnt:ProducerReference> (use wsdl2h option -g to auto-generate type _wsnt__ProducerReference)

  - <wsnt:NotificationMessage> (use wsdl2h option -g to auto-generate type _wsnt__NotificationMessage)

  - <wsnt:Notify> @ref _wsnt__Notify
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__Notify(struct soap*, struct _wsnt__Notify*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__Notify(struct soap*, struct _wsnt__Notify*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__Notify(struct soap*, const char *URL, struct _wsnt__Notify*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__Notify(struct soap*, const char *URL, struct _wsnt__Notify*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__Notify(struct soap*, const char *URL, struct _wsnt__Notify*);
    soap_POST_recv__wsnt__Notify(struct soap*, struct _wsnt__Notify*);
    @endcode

  - <wsnt:CurrentTime> (use wsdl2h option -g to auto-generate type _wsnt__CurrentTime)

  - <wsnt:TerminationTime> (use wsdl2h option -g to auto-generate type _wsnt__TerminationTime)

  - <wsnt:ProducerProperties> (use wsdl2h option -g to auto-generate type _wsnt__ProducerProperties)

  - <wsnt:MessageContent> (use wsdl2h option -g to auto-generate type _wsnt__MessageContent)

  - <wsnt:UseRaw> @ref _wsnt__UseRaw
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__UseRaw(struct soap*, struct _wsnt__UseRaw*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__UseRaw(struct soap*, struct _wsnt__UseRaw*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__UseRaw(struct soap*, const char *URL, struct _wsnt__UseRaw*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__UseRaw(struct soap*, const char *URL, struct _wsnt__UseRaw*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__UseRaw(struct soap*, const char *URL, struct _wsnt__UseRaw*);
    soap_POST_recv__wsnt__UseRaw(struct soap*, struct _wsnt__UseRaw*);
    @endcode

  - <wsnt:Subscribe> @ref _wsnt__Subscribe
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__Subscribe(struct soap*, struct _wsnt__Subscribe*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__Subscribe(struct soap*, struct _wsnt__Subscribe*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__Subscribe(struct soap*, const char *URL, struct _wsnt__Subscribe*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__Subscribe(struct soap*, const char *URL, struct _wsnt__Subscribe*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__Subscribe(struct soap*, const char *URL, struct _wsnt__Subscribe*);
    soap_POST_recv__wsnt__Subscribe(struct soap*, struct _wsnt__Subscribe*);
    @endcode

  - <wsnt:SubscribeResponse> @ref _wsnt__SubscribeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__SubscribeResponse(struct soap*, struct _wsnt__SubscribeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__SubscribeResponse(struct soap*, struct _wsnt__SubscribeResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__SubscribeResponse(struct soap*, const char *URL, struct _wsnt__SubscribeResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__SubscribeResponse(struct soap*, const char *URL, struct _wsnt__SubscribeResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__SubscribeResponse(struct soap*, const char *URL, struct _wsnt__SubscribeResponse*);
    soap_POST_recv__wsnt__SubscribeResponse(struct soap*, struct _wsnt__SubscribeResponse*);
    @endcode

  - <wsnt:GetCurrentMessage> @ref _wsnt__GetCurrentMessage
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__GetCurrentMessage(struct soap*, struct _wsnt__GetCurrentMessage*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__GetCurrentMessage(struct soap*, struct _wsnt__GetCurrentMessage*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__GetCurrentMessage(struct soap*, const char *URL, struct _wsnt__GetCurrentMessage*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__GetCurrentMessage(struct soap*, const char *URL, struct _wsnt__GetCurrentMessage*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__GetCurrentMessage(struct soap*, const char *URL, struct _wsnt__GetCurrentMessage*);
    soap_POST_recv__wsnt__GetCurrentMessage(struct soap*, struct _wsnt__GetCurrentMessage*);
    @endcode

  - <wsnt:GetCurrentMessageResponse> @ref _wsnt__GetCurrentMessageResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__GetCurrentMessageResponse(struct soap*, struct _wsnt__GetCurrentMessageResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__GetCurrentMessageResponse(struct soap*, struct _wsnt__GetCurrentMessageResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__GetCurrentMessageResponse(struct soap*, const char *URL, struct _wsnt__GetCurrentMessageResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__GetCurrentMessageResponse(struct soap*, const char *URL, struct _wsnt__GetCurrentMessageResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__GetCurrentMessageResponse(struct soap*, const char *URL, struct _wsnt__GetCurrentMessageResponse*);
    soap_POST_recv__wsnt__GetCurrentMessageResponse(struct soap*, struct _wsnt__GetCurrentMessageResponse*);
    @endcode

  - <wsnt:SubscribeCreationFailedFault> (use wsdl2h option -g to auto-generate type _wsnt__SubscribeCreationFailedFault)

  - <wsnt:InvalidFilterFault> (use wsdl2h option -g to auto-generate type _wsnt__InvalidFilterFault)

  - <wsnt:TopicExpressionDialectUnknownFault> (use wsdl2h option -g to auto-generate type _wsnt__TopicExpressionDialectUnknownFault)

  - <wsnt:InvalidTopicExpressionFault> (use wsdl2h option -g to auto-generate type _wsnt__InvalidTopicExpressionFault)

  - <wsnt:TopicNotSupportedFault> (use wsdl2h option -g to auto-generate type _wsnt__TopicNotSupportedFault)

  - <wsnt:MultipleTopicsSpecifiedFault> (use wsdl2h option -g to auto-generate type _wsnt__MultipleTopicsSpecifiedFault)

  - <wsnt:InvalidProducerPropertiesExpressionFault> (use wsdl2h option -g to auto-generate type _wsnt__InvalidProducerPropertiesExpressionFault)

  - <wsnt:InvalidMessageContentExpressionFault> (use wsdl2h option -g to auto-generate type _wsnt__InvalidMessageContentExpressionFault)

  - <wsnt:UnrecognizedPolicyRequestFault> (use wsdl2h option -g to auto-generate type _wsnt__UnrecognizedPolicyRequestFault)

  - <wsnt:UnsupportedPolicyRequestFault> (use wsdl2h option -g to auto-generate type _wsnt__UnsupportedPolicyRequestFault)

  - <wsnt:NotifyMessageNotSupportedFault> (use wsdl2h option -g to auto-generate type _wsnt__NotifyMessageNotSupportedFault)

  - <wsnt:UnacceptableInitialTerminationTimeFault> (use wsdl2h option -g to auto-generate type _wsnt__UnacceptableInitialTerminationTimeFault)

  - <wsnt:NoCurrentMessageOnTopicFault> (use wsdl2h option -g to auto-generate type _wsnt__NoCurrentMessageOnTopicFault)

  - <wsnt:GetMessages> @ref _wsnt__GetMessages
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__GetMessages(struct soap*, struct _wsnt__GetMessages*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__GetMessages(struct soap*, struct _wsnt__GetMessages*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__GetMessages(struct soap*, const char *URL, struct _wsnt__GetMessages*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__GetMessages(struct soap*, const char *URL, struct _wsnt__GetMessages*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__GetMessages(struct soap*, const char *URL, struct _wsnt__GetMessages*);
    soap_POST_recv__wsnt__GetMessages(struct soap*, struct _wsnt__GetMessages*);
    @endcode

  - <wsnt:GetMessagesResponse> @ref _wsnt__GetMessagesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__GetMessagesResponse(struct soap*, struct _wsnt__GetMessagesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__GetMessagesResponse(struct soap*, struct _wsnt__GetMessagesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__GetMessagesResponse(struct soap*, const char *URL, struct _wsnt__GetMessagesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__GetMessagesResponse(struct soap*, const char *URL, struct _wsnt__GetMessagesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__GetMessagesResponse(struct soap*, const char *URL, struct _wsnt__GetMessagesResponse*);
    soap_POST_recv__wsnt__GetMessagesResponse(struct soap*, struct _wsnt__GetMessagesResponse*);
    @endcode

  - <wsnt:DestroyPullPoint> @ref _wsnt__DestroyPullPoint
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__DestroyPullPoint(struct soap*, struct _wsnt__DestroyPullPoint*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__DestroyPullPoint(struct soap*, struct _wsnt__DestroyPullPoint*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__DestroyPullPoint(struct soap*, const char *URL, struct _wsnt__DestroyPullPoint*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__DestroyPullPoint(struct soap*, const char *URL, struct _wsnt__DestroyPullPoint*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__DestroyPullPoint(struct soap*, const char *URL, struct _wsnt__DestroyPullPoint*);
    soap_POST_recv__wsnt__DestroyPullPoint(struct soap*, struct _wsnt__DestroyPullPoint*);
    @endcode

  - <wsnt:DestroyPullPointResponse> @ref _wsnt__DestroyPullPointResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__DestroyPullPointResponse(struct soap*, struct _wsnt__DestroyPullPointResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__DestroyPullPointResponse(struct soap*, struct _wsnt__DestroyPullPointResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__DestroyPullPointResponse(struct soap*, const char *URL, struct _wsnt__DestroyPullPointResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__DestroyPullPointResponse(struct soap*, const char *URL, struct _wsnt__DestroyPullPointResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__DestroyPullPointResponse(struct soap*, const char *URL, struct _wsnt__DestroyPullPointResponse*);
    soap_POST_recv__wsnt__DestroyPullPointResponse(struct soap*, struct _wsnt__DestroyPullPointResponse*);
    @endcode

  - <wsnt:UnableToGetMessagesFault> (use wsdl2h option -g to auto-generate type _wsnt__UnableToGetMessagesFault)

  - <wsnt:UnableToDestroyPullPointFault> (use wsdl2h option -g to auto-generate type _wsnt__UnableToDestroyPullPointFault)

  - <wsnt:CreatePullPoint> @ref _wsnt__CreatePullPoint
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__CreatePullPoint(struct soap*, struct _wsnt__CreatePullPoint*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__CreatePullPoint(struct soap*, struct _wsnt__CreatePullPoint*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__CreatePullPoint(struct soap*, const char *URL, struct _wsnt__CreatePullPoint*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__CreatePullPoint(struct soap*, const char *URL, struct _wsnt__CreatePullPoint*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__CreatePullPoint(struct soap*, const char *URL, struct _wsnt__CreatePullPoint*);
    soap_POST_recv__wsnt__CreatePullPoint(struct soap*, struct _wsnt__CreatePullPoint*);
    @endcode

  - <wsnt:CreatePullPointResponse> @ref _wsnt__CreatePullPointResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__CreatePullPointResponse(struct soap*, struct _wsnt__CreatePullPointResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__CreatePullPointResponse(struct soap*, struct _wsnt__CreatePullPointResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__CreatePullPointResponse(struct soap*, const char *URL, struct _wsnt__CreatePullPointResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__CreatePullPointResponse(struct soap*, const char *URL, struct _wsnt__CreatePullPointResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__CreatePullPointResponse(struct soap*, const char *URL, struct _wsnt__CreatePullPointResponse*);
    soap_POST_recv__wsnt__CreatePullPointResponse(struct soap*, struct _wsnt__CreatePullPointResponse*);
    @endcode

  - <wsnt:UnableToCreatePullPointFault> (use wsdl2h option -g to auto-generate type _wsnt__UnableToCreatePullPointFault)

  - <wsnt:Renew> @ref _wsnt__Renew
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__Renew(struct soap*, struct _wsnt__Renew*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__Renew(struct soap*, struct _wsnt__Renew*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__Renew(struct soap*, const char *URL, struct _wsnt__Renew*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__Renew(struct soap*, const char *URL, struct _wsnt__Renew*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__Renew(struct soap*, const char *URL, struct _wsnt__Renew*);
    soap_POST_recv__wsnt__Renew(struct soap*, struct _wsnt__Renew*);
    @endcode

  - <wsnt:RenewResponse> @ref _wsnt__RenewResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__RenewResponse(struct soap*, struct _wsnt__RenewResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__RenewResponse(struct soap*, struct _wsnt__RenewResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__RenewResponse(struct soap*, const char *URL, struct _wsnt__RenewResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__RenewResponse(struct soap*, const char *URL, struct _wsnt__RenewResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__RenewResponse(struct soap*, const char *URL, struct _wsnt__RenewResponse*);
    soap_POST_recv__wsnt__RenewResponse(struct soap*, struct _wsnt__RenewResponse*);
    @endcode

  - <wsnt:UnacceptableTerminationTimeFault> (use wsdl2h option -g to auto-generate type _wsnt__UnacceptableTerminationTimeFault)

  - <wsnt:Unsubscribe> @ref _wsnt__Unsubscribe
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__Unsubscribe(struct soap*, struct _wsnt__Unsubscribe*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__Unsubscribe(struct soap*, struct _wsnt__Unsubscribe*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__Unsubscribe(struct soap*, const char *URL, struct _wsnt__Unsubscribe*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__Unsubscribe(struct soap*, const char *URL, struct _wsnt__Unsubscribe*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__Unsubscribe(struct soap*, const char *URL, struct _wsnt__Unsubscribe*);
    soap_POST_recv__wsnt__Unsubscribe(struct soap*, struct _wsnt__Unsubscribe*);
    @endcode

  - <wsnt:UnsubscribeResponse> @ref _wsnt__UnsubscribeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__UnsubscribeResponse(struct soap*, struct _wsnt__UnsubscribeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__UnsubscribeResponse(struct soap*, struct _wsnt__UnsubscribeResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__UnsubscribeResponse(struct soap*, const char *URL, struct _wsnt__UnsubscribeResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__UnsubscribeResponse(struct soap*, const char *URL, struct _wsnt__UnsubscribeResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__UnsubscribeResponse(struct soap*, const char *URL, struct _wsnt__UnsubscribeResponse*);
    soap_POST_recv__wsnt__UnsubscribeResponse(struct soap*, struct _wsnt__UnsubscribeResponse*);
    @endcode

  - <wsnt:UnableToDestroySubscriptionFault> (use wsdl2h option -g to auto-generate type _wsnt__UnableToDestroySubscriptionFault)

  - <wsnt:PauseSubscription> @ref _wsnt__PauseSubscription
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__PauseSubscription(struct soap*, struct _wsnt__PauseSubscription*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__PauseSubscription(struct soap*, struct _wsnt__PauseSubscription*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__PauseSubscription(struct soap*, const char *URL, struct _wsnt__PauseSubscription*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__PauseSubscription(struct soap*, const char *URL, struct _wsnt__PauseSubscription*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__PauseSubscription(struct soap*, const char *URL, struct _wsnt__PauseSubscription*);
    soap_POST_recv__wsnt__PauseSubscription(struct soap*, struct _wsnt__PauseSubscription*);
    @endcode

  - <wsnt:PauseSubscriptionResponse> @ref _wsnt__PauseSubscriptionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__PauseSubscriptionResponse(struct soap*, struct _wsnt__PauseSubscriptionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__PauseSubscriptionResponse(struct soap*, struct _wsnt__PauseSubscriptionResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__PauseSubscriptionResponse(struct soap*, const char *URL, struct _wsnt__PauseSubscriptionResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__PauseSubscriptionResponse(struct soap*, const char *URL, struct _wsnt__PauseSubscriptionResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__PauseSubscriptionResponse(struct soap*, const char *URL, struct _wsnt__PauseSubscriptionResponse*);
    soap_POST_recv__wsnt__PauseSubscriptionResponse(struct soap*, struct _wsnt__PauseSubscriptionResponse*);
    @endcode

  - <wsnt:ResumeSubscription> @ref _wsnt__ResumeSubscription
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__ResumeSubscription(struct soap*, struct _wsnt__ResumeSubscription*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__ResumeSubscription(struct soap*, struct _wsnt__ResumeSubscription*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__ResumeSubscription(struct soap*, const char *URL, struct _wsnt__ResumeSubscription*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__ResumeSubscription(struct soap*, const char *URL, struct _wsnt__ResumeSubscription*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__ResumeSubscription(struct soap*, const char *URL, struct _wsnt__ResumeSubscription*);
    soap_POST_recv__wsnt__ResumeSubscription(struct soap*, struct _wsnt__ResumeSubscription*);
    @endcode

  - <wsnt:ResumeSubscriptionResponse> @ref _wsnt__ResumeSubscriptionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__ResumeSubscriptionResponse(struct soap*, struct _wsnt__ResumeSubscriptionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__ResumeSubscriptionResponse(struct soap*, struct _wsnt__ResumeSubscriptionResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__wsnt__ResumeSubscriptionResponse(struct soap*, const char *URL, struct _wsnt__ResumeSubscriptionResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__wsnt__ResumeSubscriptionResponse(struct soap*, const char *URL, struct _wsnt__ResumeSubscriptionResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__wsnt__ResumeSubscriptionResponse(struct soap*, const char *URL, struct _wsnt__ResumeSubscriptionResponse*);
    soap_POST_recv__wsnt__ResumeSubscriptionResponse(struct soap*, struct _wsnt__ResumeSubscriptionResponse*);
    @endcode

  - <wsnt:PauseFailedFault> (use wsdl2h option -g to auto-generate type _wsnt__PauseFailedFault)

  - <wsnt:ResumeFailedFault> (use wsdl2h option -g to auto-generate type _wsnt__ResumeFailedFault)

*/

/**

@section wsrfbf Top-level root elements of schema "http://docs.oasis-open.org/wsrf/bf-2"

  - <wsrfbf:BaseFault> (use wsdl2h option -g to auto-generate type _wsrfbf__BaseFault)

*/

/**

@section wstop Top-level root elements of schema "http://docs.oasis-open.org/wsn/t-1"

  - <wstop:TopicNamespace> (use wsdl2h option -g to auto-generate type _wstop__TopicNamespace)

  - <wstop:TopicSet> (use wsdl2h option -g to auto-generate type _wstop__TopicSet)

*/

/**

@section trt Top-level root elements of schema "http://www.onvif.org/ver10/media/wsdl"

  - <trt:GetServiceCapabilities> @ref _trt__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetServiceCapabilities(struct soap*, struct _trt__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetServiceCapabilities(struct soap*, struct _trt__GetServiceCapabilities*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetServiceCapabilities(struct soap*, const char *URL, struct _trt__GetServiceCapabilities*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetServiceCapabilities(struct soap*, const char *URL, struct _trt__GetServiceCapabilities*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetServiceCapabilities(struct soap*, const char *URL, struct _trt__GetServiceCapabilities*);
    soap_POST_recv__trt__GetServiceCapabilities(struct soap*, struct _trt__GetServiceCapabilities*);
    @endcode

  - <trt:GetServiceCapabilitiesResponse> @ref _trt__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetServiceCapabilitiesResponse(struct soap*, struct _trt__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetServiceCapabilitiesResponse(struct soap*, struct _trt__GetServiceCapabilitiesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetServiceCapabilitiesResponse(struct soap*, const char *URL, struct _trt__GetServiceCapabilitiesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetServiceCapabilitiesResponse(struct soap*, const char *URL, struct _trt__GetServiceCapabilitiesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetServiceCapabilitiesResponse(struct soap*, const char *URL, struct _trt__GetServiceCapabilitiesResponse*);
    soap_POST_recv__trt__GetServiceCapabilitiesResponse(struct soap*, struct _trt__GetServiceCapabilitiesResponse*);
    @endcode

  - <trt:Capabilities> (use wsdl2h option -g to auto-generate type _trt__Capabilities)

  - <trt:CreateProfile> @ref _trt__CreateProfile
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__CreateProfile(struct soap*, struct _trt__CreateProfile*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__CreateProfile(struct soap*, struct _trt__CreateProfile*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__CreateProfile(struct soap*, const char *URL, struct _trt__CreateProfile*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__CreateProfile(struct soap*, const char *URL, struct _trt__CreateProfile*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__CreateProfile(struct soap*, const char *URL, struct _trt__CreateProfile*);
    soap_POST_recv__trt__CreateProfile(struct soap*, struct _trt__CreateProfile*);
    @endcode

  - <trt:CreateProfileResponse> @ref _trt__CreateProfileResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__CreateProfileResponse(struct soap*, struct _trt__CreateProfileResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__CreateProfileResponse(struct soap*, struct _trt__CreateProfileResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__CreateProfileResponse(struct soap*, const char *URL, struct _trt__CreateProfileResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__CreateProfileResponse(struct soap*, const char *URL, struct _trt__CreateProfileResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__CreateProfileResponse(struct soap*, const char *URL, struct _trt__CreateProfileResponse*);
    soap_POST_recv__trt__CreateProfileResponse(struct soap*, struct _trt__CreateProfileResponse*);
    @endcode

  - <trt:GetProfile> @ref _trt__GetProfile
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetProfile(struct soap*, struct _trt__GetProfile*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetProfile(struct soap*, struct _trt__GetProfile*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetProfile(struct soap*, const char *URL, struct _trt__GetProfile*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetProfile(struct soap*, const char *URL, struct _trt__GetProfile*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetProfile(struct soap*, const char *URL, struct _trt__GetProfile*);
    soap_POST_recv__trt__GetProfile(struct soap*, struct _trt__GetProfile*);
    @endcode

  - <trt:GetProfileResponse> @ref _trt__GetProfileResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetProfileResponse(struct soap*, struct _trt__GetProfileResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetProfileResponse(struct soap*, struct _trt__GetProfileResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetProfileResponse(struct soap*, const char *URL, struct _trt__GetProfileResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetProfileResponse(struct soap*, const char *URL, struct _trt__GetProfileResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetProfileResponse(struct soap*, const char *URL, struct _trt__GetProfileResponse*);
    soap_POST_recv__trt__GetProfileResponse(struct soap*, struct _trt__GetProfileResponse*);
    @endcode

  - <trt:GetProfiles> @ref _trt__GetProfiles
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetProfiles(struct soap*, struct _trt__GetProfiles*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetProfiles(struct soap*, struct _trt__GetProfiles*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetProfiles(struct soap*, const char *URL, struct _trt__GetProfiles*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetProfiles(struct soap*, const char *URL, struct _trt__GetProfiles*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetProfiles(struct soap*, const char *URL, struct _trt__GetProfiles*);
    soap_POST_recv__trt__GetProfiles(struct soap*, struct _trt__GetProfiles*);
    @endcode

  - <trt:GetProfilesResponse> @ref _trt__GetProfilesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetProfilesResponse(struct soap*, struct _trt__GetProfilesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetProfilesResponse(struct soap*, struct _trt__GetProfilesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetProfilesResponse(struct soap*, const char *URL, struct _trt__GetProfilesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetProfilesResponse(struct soap*, const char *URL, struct _trt__GetProfilesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetProfilesResponse(struct soap*, const char *URL, struct _trt__GetProfilesResponse*);
    soap_POST_recv__trt__GetProfilesResponse(struct soap*, struct _trt__GetProfilesResponse*);
    @endcode

  - <trt:DeleteProfile> @ref _trt__DeleteProfile
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__DeleteProfile(struct soap*, struct _trt__DeleteProfile*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__DeleteProfile(struct soap*, struct _trt__DeleteProfile*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__DeleteProfile(struct soap*, const char *URL, struct _trt__DeleteProfile*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__DeleteProfile(struct soap*, const char *URL, struct _trt__DeleteProfile*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__DeleteProfile(struct soap*, const char *URL, struct _trt__DeleteProfile*);
    soap_POST_recv__trt__DeleteProfile(struct soap*, struct _trt__DeleteProfile*);
    @endcode

  - <trt:DeleteProfileResponse> @ref _trt__DeleteProfileResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__DeleteProfileResponse(struct soap*, struct _trt__DeleteProfileResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__DeleteProfileResponse(struct soap*, struct _trt__DeleteProfileResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__DeleteProfileResponse(struct soap*, const char *URL, struct _trt__DeleteProfileResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__DeleteProfileResponse(struct soap*, const char *URL, struct _trt__DeleteProfileResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__DeleteProfileResponse(struct soap*, const char *URL, struct _trt__DeleteProfileResponse*);
    soap_POST_recv__trt__DeleteProfileResponse(struct soap*, struct _trt__DeleteProfileResponse*);
    @endcode

  - <trt:GetSnapshotUri> @ref _trt__GetSnapshotUri
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetSnapshotUri(struct soap*, struct _trt__GetSnapshotUri*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetSnapshotUri(struct soap*, struct _trt__GetSnapshotUri*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetSnapshotUri(struct soap*, const char *URL, struct _trt__GetSnapshotUri*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetSnapshotUri(struct soap*, const char *URL, struct _trt__GetSnapshotUri*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetSnapshotUri(struct soap*, const char *URL, struct _trt__GetSnapshotUri*);
    soap_POST_recv__trt__GetSnapshotUri(struct soap*, struct _trt__GetSnapshotUri*);
    @endcode

  - <trt:GetSnapshotUriResponse> @ref _trt__GetSnapshotUriResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetSnapshotUriResponse(struct soap*, struct _trt__GetSnapshotUriResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetSnapshotUriResponse(struct soap*, struct _trt__GetSnapshotUriResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetSnapshotUriResponse(struct soap*, const char *URL, struct _trt__GetSnapshotUriResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetSnapshotUriResponse(struct soap*, const char *URL, struct _trt__GetSnapshotUriResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetSnapshotUriResponse(struct soap*, const char *URL, struct _trt__GetSnapshotUriResponse*);
    soap_POST_recv__trt__GetSnapshotUriResponse(struct soap*, struct _trt__GetSnapshotUriResponse*);
    @endcode

*/

/**

@section tdn Top-level root elements of schema "http://www.onvif.org/ver10/network/wsdl"

  - <tdn:Hello> (use wsdl2h option -g to auto-generate type _tdn__Hello)

  - <tdn:HelloResponse> (use wsdl2h option -g to auto-generate type _tdn__HelloResponse)

  - <tdn:Probe> (use wsdl2h option -g to auto-generate type _tdn__Probe)

  - <tdn:ProbeResponse> (use wsdl2h option -g to auto-generate type _tdn__ProbeResponse)

  - <tdn:Bye> (use wsdl2h option -g to auto-generate type _tdn__Bye)

  - <tdn:ByeResponse> (use wsdl2h option -g to auto-generate type _tdn__ByeResponse)

*/

/* End of onvif.h */
