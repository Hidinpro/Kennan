/* soapH.h
   Generated by gSOAP 2.8.131 for onvif.h

gSOAP XML Web services tools
Copyright (C) 2000-2023, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 void * SOAP_FMAC4 soap_getelement(struct soap*, const char*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 void * SOAP_FMAC4 soap_dupelement(struct soap*, const void*, int);
SOAP_FMAC3 void SOAP_FMAC4 soap_delelement(const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

#ifndef SOAP_TYPE_byte_DEFINED
#define SOAP_TYPE_byte_DEFINED

#ifdef SOAP_DEFAULT_byte
#define soap_default_byte(soap, a) (*(a) = SOAP_DEFAULT_byte)
#else
#define soap_default_byte(soap, a) (*(a) = (char)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

SOAP_FMAC3 char * SOAP_FMAC4 soap_new_byte(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_byte(soap, data, "byte", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_byte
#define soap_PUT_byte(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_byte(soap, data, "byte", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_byte
#define soap_PATCH_byte(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_byte(soap, data, "byte", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_byte
#define soap_POST_send_byte(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_byte(soap, data, "byte", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_byte
#define soap_GET_byte(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_byte(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_byte
#define soap_POST_recv_byte(soap, data) ( soap_read_byte(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_int_DEFINED
#define SOAP_TYPE_int_DEFINED

#ifdef SOAP_DEFAULT_int
#define soap_default_int(soap, a) (*(a) = SOAP_DEFAULT_int)
#else
#define soap_default_int(soap, a) (*(a) = (int)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

SOAP_FMAC3 int * SOAP_FMAC4 soap_new_int(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_int(soap, data, "int", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_int
#define soap_PUT_int(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_int(soap, data, "int", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_int
#define soap_PATCH_int(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_int(soap, data, "int", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_int
#define soap_POST_send_int(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_int(soap, data, "int", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_int
#define soap_GET_int(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_int(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_int
#define soap_POST_recv_int(soap, data) ( soap_read_int(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_xsd__duration_DEFINED
#define SOAP_TYPE_xsd__duration_DEFINED
SOAP_FMAC1 void SOAP_FMAC2 soap_default_xsd__duration(struct soap*, LONG64 *);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_xsd__duration2s(struct soap*, LONG64);
SOAP_FMAC1 int SOAP_FMAC2 soap_out_xsd__duration(struct soap*, const char*, int, const LONG64 *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2xsd__duration(struct soap*, const char*, LONG64 *);
SOAP_FMAC1 LONG64 * SOAP_FMAC2 soap_in_xsd__duration(struct soap*, const char*, LONG64 *, const char*);

SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_new_xsd__duration(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__duration(struct soap*, const LONG64 *, const char*, const char*);

#ifndef soap_write_xsd__duration
#define soap_write_xsd__duration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_xsd__duration(soap, data, "xsd:duration", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_xsd__duration
#define soap_PUT_xsd__duration(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_xsd__duration(soap, data, "xsd:duration", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_xsd__duration
#define soap_PATCH_xsd__duration(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_xsd__duration(soap, data, "xsd:duration", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_xsd__duration
#define soap_POST_send_xsd__duration(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_xsd__duration(soap, data, "xsd:duration", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_get_xsd__duration(struct soap*, LONG64 *, const char*, const char*);

#ifndef soap_read_xsd__duration
#define soap_read_xsd__duration(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__duration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_xsd__duration
#define soap_GET_xsd__duration(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_xsd__duration(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_xsd__duration
#define soap_POST_recv_xsd__duration(soap, data) ( soap_read_xsd__duration(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_float_DEFINED
#define SOAP_TYPE_float_DEFINED

#ifdef SOAP_DEFAULT_float
#define soap_default_float(soap, a) (*(a) = SOAP_DEFAULT_float)
#else
#define soap_default_float(soap, a) (*(a) = (float)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_float(struct soap*, const char*, int, const float *, const char*);
SOAP_FMAC3 float * SOAP_FMAC4 soap_in_float(struct soap*, const char*, float *, const char*);

SOAP_FMAC3 float * SOAP_FMAC4 soap_new_float(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_float(struct soap*, const float *, const char*, const char*);

#ifndef soap_write_float
#define soap_write_float(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_float(soap, data, "float", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_float
#define soap_PUT_float(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_float(soap, data, "float", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_float
#define soap_PATCH_float(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_float(soap, data, "float", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_float
#define soap_POST_send_float(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_float(soap, data, "float", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 float * SOAP_FMAC4 soap_get_float(struct soap*, float *, const char*, const char*);

#ifndef soap_read_float
#define soap_read_float(soap, data) ( soap_begin_recv(soap) || !soap_get_float(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_float
#define soap_GET_float(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_float(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_float
#define soap_POST_recv_float(soap, data) ( soap_read_float(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif
/* _wsdd__MetadataVersion is a typedef synonym of unsignedInt */

#ifndef SOAP_TYPE__wsdd__MetadataVersion_DEFINED
#define SOAP_TYPE__wsdd__MetadataVersion_DEFINED

#define soap_default__wsdd__MetadataVersion soap_default_unsignedInt


#define soap__wsdd__MetadataVersion2s soap_unsignedInt2s


#define soap_out__wsdd__MetadataVersion soap_out_unsignedInt


#define soap_s2_wsdd__MetadataVersion soap_s2unsignedInt


#define soap_in__wsdd__MetadataVersion soap_in_unsignedInt

#define soap_new__wsdd__MetadataVersion soap_new_unsignedInt

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsdd__MetadataVersion(struct soap*, const unsigned int *, const char*, const char*);

#ifndef soap_write__wsdd__MetadataVersion
#define soap_write__wsdd__MetadataVersion(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__wsdd__MetadataVersion(soap, data, "wsdd:MetadataVersion", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsdd__MetadataVersion
#define soap_PUT__wsdd__MetadataVersion(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsdd__MetadataVersion(soap, data, "wsdd:MetadataVersion", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsdd__MetadataVersion
#define soap_PATCH__wsdd__MetadataVersion(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsdd__MetadataVersion(soap, data, "wsdd:MetadataVersion", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsdd__MetadataVersion
#define soap_POST_send__wsdd__MetadataVersion(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsdd__MetadataVersion(soap, data, "wsdd:MetadataVersion", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsdd__MetadataVersion soap_get_unsignedInt


#define soap_read__wsdd__MetadataVersion soap_read_unsignedInt


#define soap_GET__wsdd__MetadataVersion soap_GET_unsignedInt


#define soap_POST_recv__wsdd__MetadataVersion soap_POST_recv_unsignedInt

#endif
/* _wsa__ReplyAfter is a typedef synonym of unsignedInt */

#ifndef SOAP_TYPE__wsa__ReplyAfter_DEFINED
#define SOAP_TYPE__wsa__ReplyAfter_DEFINED

#define soap_default__wsa__ReplyAfter soap_default_unsignedInt


#define soap__wsa__ReplyAfter2s soap_unsignedInt2s


#define soap_out__wsa__ReplyAfter soap_out_unsignedInt


#define soap_s2_wsa__ReplyAfter soap_s2unsignedInt


#define soap_in__wsa__ReplyAfter soap_in_unsignedInt

#define soap_new__wsa__ReplyAfter soap_new_unsignedInt

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa__ReplyAfter(struct soap*, const unsigned int *, const char*, const char*);

#ifndef soap_write__wsa__ReplyAfter
#define soap_write__wsa__ReplyAfter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__wsa__ReplyAfter(soap, data, "wsa:ReplyAfter", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsa__ReplyAfter
#define soap_PUT__wsa__ReplyAfter(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa__ReplyAfter(soap, data, "wsa:ReplyAfter", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsa__ReplyAfter
#define soap_PATCH__wsa__ReplyAfter(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa__ReplyAfter(soap, data, "wsa:ReplyAfter", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsa__ReplyAfter
#define soap_POST_send__wsa__ReplyAfter(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa__ReplyAfter(soap, data, "wsa:ReplyAfter", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsa__ReplyAfter soap_get_unsignedInt


#define soap_read__wsa__ReplyAfter soap_read_unsignedInt


#define soap_GET__wsa__ReplyAfter soap_GET_unsignedInt


#define soap_POST_recv__wsa__ReplyAfter soap_POST_recv_unsignedInt

#endif

#ifndef SOAP_TYPE_unsignedInt_DEFINED
#define SOAP_TYPE_unsignedInt_DEFINED

#ifdef SOAP_DEFAULT_unsignedInt
#define soap_default_unsignedInt(soap, a) (*(a) = SOAP_DEFAULT_unsignedInt)
#else
#define soap_default_unsignedInt(soap, a) (*(a) = (unsigned int)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedInt(struct soap*, const char*, int, const unsigned int *, const char*);
SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_in_unsignedInt(struct soap*, const char*, unsigned int *, const char*);

SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_new_unsignedInt(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedInt(struct soap*, const unsigned int *, const char*, const char*);

#ifndef soap_write_unsignedInt
#define soap_write_unsignedInt(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_unsignedInt(soap, data, "unsignedInt", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_unsignedInt
#define soap_PUT_unsignedInt(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_unsignedInt(soap, data, "unsignedInt", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_unsignedInt
#define soap_PATCH_unsignedInt(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_unsignedInt(soap, data, "unsignedInt", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_unsignedInt
#define soap_POST_send_unsignedInt(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_unsignedInt(soap, data, "unsignedInt", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_get_unsignedInt(struct soap*, unsigned int *, const char*, const char*);

#ifndef soap_read_unsignedInt
#define soap_read_unsignedInt(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedInt(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_unsignedInt
#define soap_GET_unsignedInt(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_unsignedInt(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_unsignedInt
#define soap_POST_recv_unsignedInt(soap, data) ( soap_read_unsignedInt(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif
/* _wsa5__RetryAfter is a typedef synonym of ULONG64 */

#ifndef SOAP_TYPE__wsa5__RetryAfter_DEFINED
#define SOAP_TYPE__wsa5__RetryAfter_DEFINED

#define soap_default__wsa5__RetryAfter soap_default_ULONG64


#define soap__wsa5__RetryAfter2s soap_ULONG642s


#define soap_out__wsa5__RetryAfter soap_out_ULONG64


#define soap_s2_wsa5__RetryAfter soap_s2ULONG64


#define soap_in__wsa5__RetryAfter soap_in_ULONG64

#define soap_new__wsa5__RetryAfter soap_new_ULONG64

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa5__RetryAfter(struct soap*, const ULONG64 *, const char*, const char*);

#ifndef soap_write__wsa5__RetryAfter
#define soap_write__wsa5__RetryAfter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__wsa5__RetryAfter(soap, data, "wsa5:RetryAfter", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsa5__RetryAfter
#define soap_PUT__wsa5__RetryAfter(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__RetryAfter(soap, data, "wsa5:RetryAfter", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsa5__RetryAfter
#define soap_PATCH__wsa5__RetryAfter(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__RetryAfter(soap, data, "wsa5:RetryAfter", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsa5__RetryAfter
#define soap_POST_send__wsa5__RetryAfter(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__RetryAfter(soap, data, "wsa5:RetryAfter", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsa5__RetryAfter soap_get_ULONG64


#define soap_read__wsa5__RetryAfter soap_read_ULONG64


#define soap_GET__wsa5__RetryAfter soap_GET_ULONG64


#define soap_POST_recv__wsa5__RetryAfter soap_POST_recv_ULONG64

#endif

#ifndef SOAP_TYPE_ULONG64_DEFINED
#define SOAP_TYPE_ULONG64_DEFINED

#ifdef SOAP_DEFAULT_ULONG64
#define soap_default_ULONG64(soap, a) (*(a) = SOAP_DEFAULT_ULONG64)
#else
#define soap_default_ULONG64(soap, a) (*(a) = (ULONG64)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ULONG64(struct soap*, const char*, int, const ULONG64 *, const char*);
SOAP_FMAC3 ULONG64 * SOAP_FMAC4 soap_in_ULONG64(struct soap*, const char*, ULONG64 *, const char*);

SOAP_FMAC3 ULONG64 * SOAP_FMAC4 soap_new_ULONG64(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ULONG64(struct soap*, const ULONG64 *, const char*, const char*);

#ifndef soap_write_ULONG64
#define soap_write_ULONG64(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_ULONG64(soap, data, "unsignedLong", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ULONG64
#define soap_PUT_ULONG64(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_ULONG64(soap, data, "unsignedLong", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_ULONG64
#define soap_PATCH_ULONG64(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_ULONG64(soap, data, "unsignedLong", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ULONG64
#define soap_POST_send_ULONG64(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_ULONG64(soap, data, "unsignedLong", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 ULONG64 * SOAP_FMAC4 soap_get_ULONG64(struct soap*, ULONG64 *, const char*, const char*);

#ifndef soap_read_ULONG64
#define soap_read_ULONG64(soap, data) ( soap_begin_recv(soap) || !soap_get_ULONG64(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ULONG64
#define soap_GET_ULONG64(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ULONG64(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ULONG64
#define soap_POST_recv_ULONG64(soap, data) ( soap_read_ULONG64(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_dateTime_DEFINED
#define SOAP_TYPE_dateTime_DEFINED

#ifdef SOAP_DEFAULT_dateTime
#define soap_default_dateTime(soap, a) (*(a) = SOAP_DEFAULT_dateTime)
#else
#define soap_default_dateTime(soap, a) (*(a) = (time_t)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_dateTime(struct soap*, const char*, int, const time_t *, const char*);
SOAP_FMAC3 time_t * SOAP_FMAC4 soap_in_dateTime(struct soap*, const char*, time_t *, const char*);

SOAP_FMAC3 time_t * SOAP_FMAC4 soap_new_dateTime(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_dateTime(struct soap*, const time_t *, const char*, const char*);

#ifndef soap_write_dateTime
#define soap_write_dateTime(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_dateTime(soap, data, "dateTime", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_dateTime
#define soap_PUT_dateTime(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_dateTime(soap, data, "dateTime", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_dateTime
#define soap_PATCH_dateTime(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_dateTime(soap, data, "dateTime", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_dateTime
#define soap_POST_send_dateTime(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_dateTime(soap, data, "dateTime", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 time_t * SOAP_FMAC4 soap_get_dateTime(struct soap*, time_t *, const char*, const char*);

#ifndef soap_read_dateTime
#define soap_read_dateTime(soap, data) ( soap_begin_recv(soap) || !soap_get_dateTime(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_dateTime
#define soap_GET_dateTime(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_dateTime(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_dateTime
#define soap_POST_recv_dateTime(soap, data) ( soap_read_dateTime(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__IPType_DEFINED
#define SOAP_TYPE_tt__IPType_DEFINED

#ifdef SOAP_DEFAULT_tt__IPType
#define soap_default_tt__IPType(soap, a) (*(a) = SOAP_DEFAULT_tt__IPType)
#else
#define soap_default_tt__IPType(soap, a) (*(a) = (enum tt__IPType)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IPType(struct soap*, const char*, int, const enum tt__IPType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__IPType2s(struct soap*, enum tt__IPType);
SOAP_FMAC3 enum tt__IPType * SOAP_FMAC4 soap_in_tt__IPType(struct soap*, const char*, enum tt__IPType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__IPType(struct soap*, const char*, enum tt__IPType *);

SOAP_FMAC3 enum tt__IPType * SOAP_FMAC4 soap_new_tt__IPType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__IPType(struct soap*, const enum tt__IPType *, const char*, const char*);

#ifndef soap_write_tt__IPType
#define soap_write_tt__IPType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__IPType(soap, data, "tt:IPType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__IPType
#define soap_PUT_tt__IPType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_tt__IPType(soap, data, "tt:IPType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__IPType
#define soap_PATCH_tt__IPType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_tt__IPType(soap, data, "tt:IPType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__IPType
#define soap_POST_send_tt__IPType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_tt__IPType(soap, data, "tt:IPType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__IPType * SOAP_FMAC4 soap_get_tt__IPType(struct soap*, enum tt__IPType *, const char*, const char*);

#ifndef soap_read_tt__IPType
#define soap_read_tt__IPType(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__IPType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__IPType
#define soap_GET_tt__IPType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__IPType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__IPType
#define soap_POST_recv_tt__IPType(soap, data) ( soap_read_tt__IPType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__H264Profile_DEFINED
#define SOAP_TYPE_tt__H264Profile_DEFINED

#ifdef SOAP_DEFAULT_tt__H264Profile
#define soap_default_tt__H264Profile(soap, a) (*(a) = SOAP_DEFAULT_tt__H264Profile)
#else
#define soap_default_tt__H264Profile(soap, a) (*(a) = (enum tt__H264Profile)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__H264Profile(struct soap*, const char*, int, const enum tt__H264Profile *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__H264Profile2s(struct soap*, enum tt__H264Profile);
SOAP_FMAC3 enum tt__H264Profile * SOAP_FMAC4 soap_in_tt__H264Profile(struct soap*, const char*, enum tt__H264Profile *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__H264Profile(struct soap*, const char*, enum tt__H264Profile *);

SOAP_FMAC3 enum tt__H264Profile * SOAP_FMAC4 soap_new_tt__H264Profile(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__H264Profile(struct soap*, const enum tt__H264Profile *, const char*, const char*);

#ifndef soap_write_tt__H264Profile
#define soap_write_tt__H264Profile(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__H264Profile(soap, data, "tt:H264Profile", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__H264Profile
#define soap_PUT_tt__H264Profile(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_tt__H264Profile(soap, data, "tt:H264Profile", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__H264Profile
#define soap_PATCH_tt__H264Profile(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_tt__H264Profile(soap, data, "tt:H264Profile", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__H264Profile
#define soap_POST_send_tt__H264Profile(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_tt__H264Profile(soap, data, "tt:H264Profile", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__H264Profile * SOAP_FMAC4 soap_get_tt__H264Profile(struct soap*, enum tt__H264Profile *, const char*, const char*);

#ifndef soap_read_tt__H264Profile
#define soap_read_tt__H264Profile(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__H264Profile(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__H264Profile
#define soap_GET_tt__H264Profile(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__H264Profile(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__H264Profile
#define soap_POST_recv_tt__H264Profile(soap, data) ( soap_read_tt__H264Profile(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__Mpeg4Profile_DEFINED
#define SOAP_TYPE_tt__Mpeg4Profile_DEFINED

#ifdef SOAP_DEFAULT_tt__Mpeg4Profile
#define soap_default_tt__Mpeg4Profile(soap, a) (*(a) = SOAP_DEFAULT_tt__Mpeg4Profile)
#else
#define soap_default_tt__Mpeg4Profile(soap, a) (*(a) = (enum tt__Mpeg4Profile)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Mpeg4Profile(struct soap*, const char*, int, const enum tt__Mpeg4Profile *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__Mpeg4Profile2s(struct soap*, enum tt__Mpeg4Profile);
SOAP_FMAC3 enum tt__Mpeg4Profile * SOAP_FMAC4 soap_in_tt__Mpeg4Profile(struct soap*, const char*, enum tt__Mpeg4Profile *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__Mpeg4Profile(struct soap*, const char*, enum tt__Mpeg4Profile *);

SOAP_FMAC3 enum tt__Mpeg4Profile * SOAP_FMAC4 soap_new_tt__Mpeg4Profile(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__Mpeg4Profile(struct soap*, const enum tt__Mpeg4Profile *, const char*, const char*);

#ifndef soap_write_tt__Mpeg4Profile
#define soap_write_tt__Mpeg4Profile(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__Mpeg4Profile(soap, data, "tt:Mpeg4Profile", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__Mpeg4Profile
#define soap_PUT_tt__Mpeg4Profile(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_tt__Mpeg4Profile(soap, data, "tt:Mpeg4Profile", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__Mpeg4Profile
#define soap_PATCH_tt__Mpeg4Profile(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_tt__Mpeg4Profile(soap, data, "tt:Mpeg4Profile", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__Mpeg4Profile
#define soap_POST_send_tt__Mpeg4Profile(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_tt__Mpeg4Profile(soap, data, "tt:Mpeg4Profile", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__Mpeg4Profile * SOAP_FMAC4 soap_get_tt__Mpeg4Profile(struct soap*, enum tt__Mpeg4Profile *, const char*, const char*);

#ifndef soap_read_tt__Mpeg4Profile
#define soap_read_tt__Mpeg4Profile(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Mpeg4Profile(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__Mpeg4Profile
#define soap_GET_tt__Mpeg4Profile(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__Mpeg4Profile(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__Mpeg4Profile
#define soap_POST_recv_tt__Mpeg4Profile(soap, data) ( soap_read_tt__Mpeg4Profile(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__VideoEncoding_DEFINED
#define SOAP_TYPE_tt__VideoEncoding_DEFINED

#ifdef SOAP_DEFAULT_tt__VideoEncoding
#define soap_default_tt__VideoEncoding(soap, a) (*(a) = SOAP_DEFAULT_tt__VideoEncoding)
#else
#define soap_default_tt__VideoEncoding(soap, a) (*(a) = (enum tt__VideoEncoding)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoEncoding(struct soap*, const char*, int, const enum tt__VideoEncoding *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__VideoEncoding2s(struct soap*, enum tt__VideoEncoding);
SOAP_FMAC3 enum tt__VideoEncoding * SOAP_FMAC4 soap_in_tt__VideoEncoding(struct soap*, const char*, enum tt__VideoEncoding *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__VideoEncoding(struct soap*, const char*, enum tt__VideoEncoding *);

SOAP_FMAC3 enum tt__VideoEncoding * SOAP_FMAC4 soap_new_tt__VideoEncoding(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__VideoEncoding(struct soap*, const enum tt__VideoEncoding *, const char*, const char*);

#ifndef soap_write_tt__VideoEncoding
#define soap_write_tt__VideoEncoding(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__VideoEncoding(soap, data, "tt:VideoEncoding", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__VideoEncoding
#define soap_PUT_tt__VideoEncoding(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_tt__VideoEncoding(soap, data, "tt:VideoEncoding", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__VideoEncoding
#define soap_PATCH_tt__VideoEncoding(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_tt__VideoEncoding(soap, data, "tt:VideoEncoding", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__VideoEncoding
#define soap_POST_send_tt__VideoEncoding(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_tt__VideoEncoding(soap, data, "tt:VideoEncoding", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__VideoEncoding * SOAP_FMAC4 soap_get_tt__VideoEncoding(struct soap*, enum tt__VideoEncoding *, const char*, const char*);

#ifndef soap_read_tt__VideoEncoding
#define soap_read_tt__VideoEncoding(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__VideoEncoding(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__VideoEncoding
#define soap_GET_tt__VideoEncoding(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__VideoEncoding(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__VideoEncoding
#define soap_POST_recv_tt__VideoEncoding(soap, data) ( soap_read_tt__VideoEncoding(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__PropertyOperation_DEFINED
#define SOAP_TYPE_tt__PropertyOperation_DEFINED

#ifdef SOAP_DEFAULT_tt__PropertyOperation
#define soap_default_tt__PropertyOperation(soap, a) (*(a) = SOAP_DEFAULT_tt__PropertyOperation)
#else
#define soap_default_tt__PropertyOperation(soap, a) (*(a) = (enum tt__PropertyOperation)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PropertyOperation(struct soap*, const char*, int, const enum tt__PropertyOperation *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__PropertyOperation2s(struct soap*, enum tt__PropertyOperation);
SOAP_FMAC3 enum tt__PropertyOperation * SOAP_FMAC4 soap_in_tt__PropertyOperation(struct soap*, const char*, enum tt__PropertyOperation *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__PropertyOperation(struct soap*, const char*, enum tt__PropertyOperation *);

SOAP_FMAC3 enum tt__PropertyOperation * SOAP_FMAC4 soap_new_tt__PropertyOperation(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__PropertyOperation(struct soap*, const enum tt__PropertyOperation *, const char*, const char*);

#ifndef soap_write_tt__PropertyOperation
#define soap_write_tt__PropertyOperation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__PropertyOperation(soap, data, "tt:PropertyOperation", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__PropertyOperation
#define soap_PUT_tt__PropertyOperation(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_tt__PropertyOperation(soap, data, "tt:PropertyOperation", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__PropertyOperation
#define soap_PATCH_tt__PropertyOperation(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_tt__PropertyOperation(soap, data, "tt:PropertyOperation", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__PropertyOperation
#define soap_POST_send_tt__PropertyOperation(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_tt__PropertyOperation(soap, data, "tt:PropertyOperation", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__PropertyOperation * SOAP_FMAC4 soap_get_tt__PropertyOperation(struct soap*, enum tt__PropertyOperation *, const char*, const char*);

#ifndef soap_read_tt__PropertyOperation
#define soap_read_tt__PropertyOperation(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__PropertyOperation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__PropertyOperation
#define soap_GET_tt__PropertyOperation(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__PropertyOperation(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__PropertyOperation
#define soap_POST_recv_tt__PropertyOperation(soap, data) ( soap_read_tt__PropertyOperation(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__MoveStatus_DEFINED
#define SOAP_TYPE_tt__MoveStatus_DEFINED

#ifdef SOAP_DEFAULT_tt__MoveStatus
#define soap_default_tt__MoveStatus(soap, a) (*(a) = SOAP_DEFAULT_tt__MoveStatus)
#else
#define soap_default_tt__MoveStatus(soap, a) (*(a) = (enum tt__MoveStatus)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MoveStatus(struct soap*, const char*, int, const enum tt__MoveStatus *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__MoveStatus2s(struct soap*, enum tt__MoveStatus);
SOAP_FMAC3 enum tt__MoveStatus * SOAP_FMAC4 soap_in_tt__MoveStatus(struct soap*, const char*, enum tt__MoveStatus *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__MoveStatus(struct soap*, const char*, enum tt__MoveStatus *);

SOAP_FMAC3 enum tt__MoveStatus * SOAP_FMAC4 soap_new_tt__MoveStatus(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__MoveStatus(struct soap*, const enum tt__MoveStatus *, const char*, const char*);

#ifndef soap_write_tt__MoveStatus
#define soap_write_tt__MoveStatus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__MoveStatus(soap, data, "tt:MoveStatus", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__MoveStatus
#define soap_PUT_tt__MoveStatus(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_tt__MoveStatus(soap, data, "tt:MoveStatus", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__MoveStatus
#define soap_PATCH_tt__MoveStatus(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_tt__MoveStatus(soap, data, "tt:MoveStatus", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__MoveStatus
#define soap_POST_send_tt__MoveStatus(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_tt__MoveStatus(soap, data, "tt:MoveStatus", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__MoveStatus * SOAP_FMAC4 soap_get_tt__MoveStatus(struct soap*, enum tt__MoveStatus *, const char*, const char*);

#ifndef soap_read_tt__MoveStatus
#define soap_read_tt__MoveStatus(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__MoveStatus(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__MoveStatus
#define soap_GET_tt__MoveStatus(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__MoveStatus(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__MoveStatus
#define soap_POST_recv_tt__MoveStatus(soap, data) ( soap_read_tt__MoveStatus(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__CapabilityCategory_DEFINED
#define SOAP_TYPE_tt__CapabilityCategory_DEFINED

#ifdef SOAP_DEFAULT_tt__CapabilityCategory
#define soap_default_tt__CapabilityCategory(soap, a) (*(a) = SOAP_DEFAULT_tt__CapabilityCategory)
#else
#define soap_default_tt__CapabilityCategory(soap, a) (*(a) = (enum tt__CapabilityCategory)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__CapabilityCategory(struct soap*, const char*, int, const enum tt__CapabilityCategory *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__CapabilityCategory2s(struct soap*, enum tt__CapabilityCategory);
SOAP_FMAC3 enum tt__CapabilityCategory * SOAP_FMAC4 soap_in_tt__CapabilityCategory(struct soap*, const char*, enum tt__CapabilityCategory *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__CapabilityCategory(struct soap*, const char*, enum tt__CapabilityCategory *);

SOAP_FMAC3 enum tt__CapabilityCategory * SOAP_FMAC4 soap_new_tt__CapabilityCategory(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__CapabilityCategory(struct soap*, const enum tt__CapabilityCategory *, const char*, const char*);

#ifndef soap_write_tt__CapabilityCategory
#define soap_write_tt__CapabilityCategory(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__CapabilityCategory(soap, data, "tt:CapabilityCategory", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__CapabilityCategory
#define soap_PUT_tt__CapabilityCategory(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_tt__CapabilityCategory(soap, data, "tt:CapabilityCategory", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__CapabilityCategory
#define soap_PATCH_tt__CapabilityCategory(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_tt__CapabilityCategory(soap, data, "tt:CapabilityCategory", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__CapabilityCategory
#define soap_POST_send_tt__CapabilityCategory(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_tt__CapabilityCategory(soap, data, "tt:CapabilityCategory", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__CapabilityCategory * SOAP_FMAC4 soap_get_tt__CapabilityCategory(struct soap*, enum tt__CapabilityCategory *, const char*, const char*);

#ifndef soap_read_tt__CapabilityCategory
#define soap_read_tt__CapabilityCategory(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__CapabilityCategory(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__CapabilityCategory
#define soap_GET_tt__CapabilityCategory(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__CapabilityCategory(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__CapabilityCategory
#define soap_POST_recv_tt__CapabilityCategory(soap, data) ( soap_read_tt__CapabilityCategory(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_xsd__boolean_DEFINED
#define SOAP_TYPE_xsd__boolean_DEFINED

#ifdef SOAP_DEFAULT_xsd__boolean
#define soap_default_xsd__boolean(soap, a) (*(a) = SOAP_DEFAULT_xsd__boolean)
#else
#define soap_default_xsd__boolean(soap, a) (*(a) = (enum xsd__boolean)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__boolean(struct soap*, const char*, int, const enum xsd__boolean *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_xsd__boolean2s(struct soap*, enum xsd__boolean);
SOAP_FMAC3 enum xsd__boolean * SOAP_FMAC4 soap_in_xsd__boolean(struct soap*, const char*, enum xsd__boolean *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2xsd__boolean(struct soap*, const char*, enum xsd__boolean *);

SOAP_FMAC3 enum xsd__boolean * SOAP_FMAC4 soap_new_xsd__boolean(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__boolean(struct soap*, const enum xsd__boolean *, const char*, const char*);

#ifndef soap_write_xsd__boolean
#define soap_write_xsd__boolean(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_xsd__boolean(soap, data, "xsd:boolean", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_xsd__boolean
#define soap_PUT_xsd__boolean(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_xsd__boolean(soap, data, "xsd:boolean", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_xsd__boolean
#define soap_PATCH_xsd__boolean(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_xsd__boolean(soap, data, "xsd:boolean", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_xsd__boolean
#define soap_POST_send_xsd__boolean(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_xsd__boolean(soap, data, "xsd:boolean", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 enum xsd__boolean * SOAP_FMAC4 soap_get_xsd__boolean(struct soap*, enum xsd__boolean *, const char*, const char*);

#ifndef soap_read_xsd__boolean
#define soap_read_xsd__boolean(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__boolean(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_xsd__boolean
#define soap_GET_xsd__boolean(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_xsd__boolean(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_xsd__boolean
#define soap_POST_recv_xsd__boolean(soap, data) ( soap_read_xsd__boolean(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml2__DecisionType_DEFINED
#define SOAP_TYPE_saml2__DecisionType_DEFINED

#ifdef SOAP_DEFAULT_saml2__DecisionType
#define soap_default_saml2__DecisionType(soap, a) (*(a) = SOAP_DEFAULT_saml2__DecisionType)
#else
#define soap_default_saml2__DecisionType(soap, a) (*(a) = (enum saml2__DecisionType)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml2__DecisionType(struct soap*, const char*, int, const enum saml2__DecisionType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_saml2__DecisionType2s(struct soap*, enum saml2__DecisionType);
SOAP_FMAC3 enum saml2__DecisionType * SOAP_FMAC4 soap_in_saml2__DecisionType(struct soap*, const char*, enum saml2__DecisionType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2saml2__DecisionType(struct soap*, const char*, enum saml2__DecisionType *);

SOAP_FMAC3 enum saml2__DecisionType * SOAP_FMAC4 soap_new_saml2__DecisionType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml2__DecisionType(struct soap*, const enum saml2__DecisionType *, const char*, const char*);

#ifndef soap_write_saml2__DecisionType
#define soap_write_saml2__DecisionType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_saml2__DecisionType(soap, data, "saml2:DecisionType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml2__DecisionType
#define soap_PUT_saml2__DecisionType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_saml2__DecisionType(soap, data, "saml2:DecisionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml2__DecisionType
#define soap_PATCH_saml2__DecisionType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_saml2__DecisionType(soap, data, "saml2:DecisionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml2__DecisionType
#define soap_POST_send_saml2__DecisionType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_saml2__DecisionType(soap, data, "saml2:DecisionType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 enum saml2__DecisionType * SOAP_FMAC4 soap_get_saml2__DecisionType(struct soap*, enum saml2__DecisionType *, const char*, const char*);

#ifndef soap_read_saml2__DecisionType
#define soap_read_saml2__DecisionType(soap, data) ( soap_begin_recv(soap) || !soap_get_saml2__DecisionType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml2__DecisionType
#define soap_GET_saml2__DecisionType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml2__DecisionType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml2__DecisionType
#define soap_POST_recv_saml2__DecisionType(soap, data) ( soap_read_saml2__DecisionType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml1__DecisionType_DEFINED
#define SOAP_TYPE_saml1__DecisionType_DEFINED

#ifdef SOAP_DEFAULT_saml1__DecisionType
#define soap_default_saml1__DecisionType(soap, a) (*(a) = SOAP_DEFAULT_saml1__DecisionType)
#else
#define soap_default_saml1__DecisionType(soap, a) (*(a) = (enum saml1__DecisionType)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml1__DecisionType(struct soap*, const char*, int, const enum saml1__DecisionType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_saml1__DecisionType2s(struct soap*, enum saml1__DecisionType);
SOAP_FMAC3 enum saml1__DecisionType * SOAP_FMAC4 soap_in_saml1__DecisionType(struct soap*, const char*, enum saml1__DecisionType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2saml1__DecisionType(struct soap*, const char*, enum saml1__DecisionType *);

SOAP_FMAC3 enum saml1__DecisionType * SOAP_FMAC4 soap_new_saml1__DecisionType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml1__DecisionType(struct soap*, const enum saml1__DecisionType *, const char*, const char*);

#ifndef soap_write_saml1__DecisionType
#define soap_write_saml1__DecisionType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_saml1__DecisionType(soap, data, "saml1:DecisionType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml1__DecisionType
#define soap_PUT_saml1__DecisionType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_saml1__DecisionType(soap, data, "saml1:DecisionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml1__DecisionType
#define soap_PATCH_saml1__DecisionType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_saml1__DecisionType(soap, data, "saml1:DecisionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml1__DecisionType
#define soap_POST_send_saml1__DecisionType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_saml1__DecisionType(soap, data, "saml1:DecisionType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 enum saml1__DecisionType * SOAP_FMAC4 soap_get_saml1__DecisionType(struct soap*, enum saml1__DecisionType *, const char*, const char*);

#ifndef soap_read_saml1__DecisionType
#define soap_read_saml1__DecisionType(soap, data) ( soap_begin_recv(soap) || !soap_get_saml1__DecisionType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml1__DecisionType
#define soap_GET_saml1__DecisionType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml1__DecisionType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml1__DecisionType
#define soap_POST_recv_saml1__DecisionType(soap, data) ( soap_read_saml1__DecisionType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsc__FaultCodeType_DEFINED
#define SOAP_TYPE_wsc__FaultCodeType_DEFINED

#ifdef SOAP_DEFAULT_wsc__FaultCodeType
#define soap_default_wsc__FaultCodeType(soap, a) (*(a) = SOAP_DEFAULT_wsc__FaultCodeType)
#else
#define soap_default_wsc__FaultCodeType(soap, a) (*(a) = (enum wsc__FaultCodeType)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsc__FaultCodeType(struct soap*, const char*, int, const enum wsc__FaultCodeType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_wsc__FaultCodeType2s(struct soap*, enum wsc__FaultCodeType);
SOAP_FMAC3 enum wsc__FaultCodeType * SOAP_FMAC4 soap_in_wsc__FaultCodeType(struct soap*, const char*, enum wsc__FaultCodeType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2wsc__FaultCodeType(struct soap*, const char*, enum wsc__FaultCodeType *);

SOAP_FMAC3 enum wsc__FaultCodeType * SOAP_FMAC4 soap_new_wsc__FaultCodeType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsc__FaultCodeType(struct soap*, const enum wsc__FaultCodeType *, const char*, const char*);

#ifndef soap_write_wsc__FaultCodeType
#define soap_write_wsc__FaultCodeType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_wsc__FaultCodeType(soap, data, "wsc:FaultCodeType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsc__FaultCodeType
#define soap_PUT_wsc__FaultCodeType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsc__FaultCodeType(soap, data, "wsc:FaultCodeType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsc__FaultCodeType
#define soap_PATCH_wsc__FaultCodeType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsc__FaultCodeType(soap, data, "wsc:FaultCodeType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsc__FaultCodeType
#define soap_POST_send_wsc__FaultCodeType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsc__FaultCodeType(soap, data, "wsc:FaultCodeType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 enum wsc__FaultCodeType * SOAP_FMAC4 soap_get_wsc__FaultCodeType(struct soap*, enum wsc__FaultCodeType *, const char*, const char*);

#ifndef soap_read_wsc__FaultCodeType
#define soap_read_wsc__FaultCodeType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsc__FaultCodeType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsc__FaultCodeType
#define soap_GET_wsc__FaultCodeType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsc__FaultCodeType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsc__FaultCodeType
#define soap_POST_recv_wsc__FaultCodeType(soap, data) ( soap_read_wsc__FaultCodeType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsse__FaultcodeEnum_DEFINED
#define SOAP_TYPE_wsse__FaultcodeEnum_DEFINED

#ifdef SOAP_DEFAULT_wsse__FaultcodeEnum
#define soap_default_wsse__FaultcodeEnum(soap, a) (*(a) = SOAP_DEFAULT_wsse__FaultcodeEnum)
#else
#define soap_default_wsse__FaultcodeEnum(soap, a) (*(a) = (enum wsse__FaultcodeEnum)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsse__FaultcodeEnum(struct soap*, const char*, int, const enum wsse__FaultcodeEnum *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_wsse__FaultcodeEnum2s(struct soap*, enum wsse__FaultcodeEnum);
SOAP_FMAC3 enum wsse__FaultcodeEnum * SOAP_FMAC4 soap_in_wsse__FaultcodeEnum(struct soap*, const char*, enum wsse__FaultcodeEnum *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2wsse__FaultcodeEnum(struct soap*, const char*, enum wsse__FaultcodeEnum *);

SOAP_FMAC3 enum wsse__FaultcodeEnum * SOAP_FMAC4 soap_new_wsse__FaultcodeEnum(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsse__FaultcodeEnum(struct soap*, const enum wsse__FaultcodeEnum *, const char*, const char*);

#ifndef soap_write_wsse__FaultcodeEnum
#define soap_write_wsse__FaultcodeEnum(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_wsse__FaultcodeEnum(soap, data, "wsse:FaultcodeEnum", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsse__FaultcodeEnum
#define soap_PUT_wsse__FaultcodeEnum(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsse__FaultcodeEnum(soap, data, "wsse:FaultcodeEnum", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsse__FaultcodeEnum
#define soap_PATCH_wsse__FaultcodeEnum(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsse__FaultcodeEnum(soap, data, "wsse:FaultcodeEnum", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsse__FaultcodeEnum
#define soap_POST_send_wsse__FaultcodeEnum(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsse__FaultcodeEnum(soap, data, "wsse:FaultcodeEnum", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 enum wsse__FaultcodeEnum * SOAP_FMAC4 soap_get_wsse__FaultcodeEnum(struct soap*, enum wsse__FaultcodeEnum *, const char*, const char*);

#ifndef soap_read_wsse__FaultcodeEnum
#define soap_read_wsse__FaultcodeEnum(soap, data) ( soap_begin_recv(soap) || !soap_get_wsse__FaultcodeEnum(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsse__FaultcodeEnum
#define soap_GET_wsse__FaultcodeEnum(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsse__FaultcodeEnum(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsse__FaultcodeEnum
#define soap_POST_recv_wsse__FaultcodeEnum(soap, data) ( soap_read_wsse__FaultcodeEnum(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsu__tTimestampFault_DEFINED
#define SOAP_TYPE_wsu__tTimestampFault_DEFINED

#ifdef SOAP_DEFAULT_wsu__tTimestampFault
#define soap_default_wsu__tTimestampFault(soap, a) (*(a) = SOAP_DEFAULT_wsu__tTimestampFault)
#else
#define soap_default_wsu__tTimestampFault(soap, a) (*(a) = (enum wsu__tTimestampFault)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsu__tTimestampFault(struct soap*, const char*, int, const enum wsu__tTimestampFault *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_wsu__tTimestampFault2s(struct soap*, enum wsu__tTimestampFault);
SOAP_FMAC3 enum wsu__tTimestampFault * SOAP_FMAC4 soap_in_wsu__tTimestampFault(struct soap*, const char*, enum wsu__tTimestampFault *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2wsu__tTimestampFault(struct soap*, const char*, enum wsu__tTimestampFault *);

SOAP_FMAC3 enum wsu__tTimestampFault * SOAP_FMAC4 soap_new_wsu__tTimestampFault(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsu__tTimestampFault(struct soap*, const enum wsu__tTimestampFault *, const char*, const char*);

#ifndef soap_write_wsu__tTimestampFault
#define soap_write_wsu__tTimestampFault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_wsu__tTimestampFault(soap, data, "wsu:tTimestampFault", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsu__tTimestampFault
#define soap_PUT_wsu__tTimestampFault(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsu__tTimestampFault(soap, data, "wsu:tTimestampFault", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsu__tTimestampFault
#define soap_PATCH_wsu__tTimestampFault(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsu__tTimestampFault(soap, data, "wsu:tTimestampFault", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsu__tTimestampFault
#define soap_POST_send_wsu__tTimestampFault(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsu__tTimestampFault(soap, data, "wsu:tTimestampFault", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 enum wsu__tTimestampFault * SOAP_FMAC4 soap_get_wsu__tTimestampFault(struct soap*, enum wsu__tTimestampFault *, const char*, const char*);

#ifndef soap_read_wsu__tTimestampFault
#define soap_read_wsu__tTimestampFault(soap, data) ( soap_begin_recv(soap) || !soap_get_wsu__tTimestampFault(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsu__tTimestampFault
#define soap_GET_wsu__tTimestampFault(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsu__tTimestampFault(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsu__tTimestampFault
#define soap_POST_recv_wsu__tTimestampFault(soap, data) ( soap_read_wsu__tTimestampFault(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsa5__IsReferenceParameter_DEFINED
#define SOAP_TYPE__wsa5__IsReferenceParameter_DEFINED

#ifdef SOAP_DEFAULT__wsa5__IsReferenceParameter
#define soap_default__wsa5__IsReferenceParameter(soap, a) (*(a) = SOAP_DEFAULT__wsa5__IsReferenceParameter)
#else
#define soap_default__wsa5__IsReferenceParameter(soap, a) (*(a) = (enum _wsa5__IsReferenceParameter)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsa5__IsReferenceParameter(struct soap*, const char*, int, const enum _wsa5__IsReferenceParameter *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap__wsa5__IsReferenceParameter2s(struct soap*, enum _wsa5__IsReferenceParameter);
SOAP_FMAC3 enum _wsa5__IsReferenceParameter * SOAP_FMAC4 soap_in__wsa5__IsReferenceParameter(struct soap*, const char*, enum _wsa5__IsReferenceParameter *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2_wsa5__IsReferenceParameter(struct soap*, const char*, enum _wsa5__IsReferenceParameter *);

SOAP_FMAC3 enum _wsa5__IsReferenceParameter * SOAP_FMAC4 soap_new__wsa5__IsReferenceParameter(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa5__IsReferenceParameter(struct soap*, const enum _wsa5__IsReferenceParameter *, const char*, const char*);

#ifndef soap_write__wsa5__IsReferenceParameter
#define soap_write__wsa5__IsReferenceParameter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__wsa5__IsReferenceParameter(soap, data, "wsa5:IsReferenceParameter", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsa5__IsReferenceParameter
#define soap_PUT__wsa5__IsReferenceParameter(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__IsReferenceParameter(soap, data, "wsa5:IsReferenceParameter", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsa5__IsReferenceParameter
#define soap_PATCH__wsa5__IsReferenceParameter(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__IsReferenceParameter(soap, data, "wsa5:IsReferenceParameter", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsa5__IsReferenceParameter
#define soap_POST_send__wsa5__IsReferenceParameter(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__IsReferenceParameter(soap, data, "wsa5:IsReferenceParameter", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 enum _wsa5__IsReferenceParameter * SOAP_FMAC4 soap_get__wsa5__IsReferenceParameter(struct soap*, enum _wsa5__IsReferenceParameter *, const char*, const char*);

#ifndef soap_read__wsa5__IsReferenceParameter
#define soap_read__wsa5__IsReferenceParameter(soap, data) ( soap_begin_recv(soap) || !soap_get__wsa5__IsReferenceParameter(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsa5__IsReferenceParameter
#define soap_GET__wsa5__IsReferenceParameter(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsa5__IsReferenceParameter(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsa5__IsReferenceParameter
#define soap_POST_recv__wsa5__IsReferenceParameter(soap, data) ( soap_read__wsa5__IsReferenceParameter(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsa5__FaultCodesType_DEFINED
#define SOAP_TYPE_wsa5__FaultCodesType_DEFINED

#ifdef SOAP_DEFAULT_wsa5__FaultCodesType
#define soap_default_wsa5__FaultCodesType(soap, a) (*(a) = SOAP_DEFAULT_wsa5__FaultCodesType)
#else
#define soap_default_wsa5__FaultCodesType(soap, a) (*(a) = (enum wsa5__FaultCodesType)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__FaultCodesType(struct soap*, const char*, int, const enum wsa5__FaultCodesType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_wsa5__FaultCodesType2s(struct soap*, enum wsa5__FaultCodesType);
SOAP_FMAC3 enum wsa5__FaultCodesType * SOAP_FMAC4 soap_in_wsa5__FaultCodesType(struct soap*, const char*, enum wsa5__FaultCodesType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2wsa5__FaultCodesType(struct soap*, const char*, enum wsa5__FaultCodesType *);

SOAP_FMAC3 enum wsa5__FaultCodesType * SOAP_FMAC4 soap_new_wsa5__FaultCodesType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__FaultCodesType(struct soap*, const enum wsa5__FaultCodesType *, const char*, const char*);

#ifndef soap_write_wsa5__FaultCodesType
#define soap_write_wsa5__FaultCodesType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_wsa5__FaultCodesType(soap, data, "wsa5:FaultCodesType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsa5__FaultCodesType
#define soap_PUT_wsa5__FaultCodesType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsa5__FaultCodesType(soap, data, "wsa5:FaultCodesType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsa5__FaultCodesType
#define soap_PATCH_wsa5__FaultCodesType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsa5__FaultCodesType(soap, data, "wsa5:FaultCodesType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsa5__FaultCodesType
#define soap_POST_send_wsa5__FaultCodesType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsa5__FaultCodesType(soap, data, "wsa5:FaultCodesType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 enum wsa5__FaultCodesType * SOAP_FMAC4 soap_get_wsa5__FaultCodesType(struct soap*, enum wsa5__FaultCodesType *, const char*, const char*);

#ifndef soap_read_wsa5__FaultCodesType
#define soap_read_wsa5__FaultCodesType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsa5__FaultCodesType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsa5__FaultCodesType
#define soap_GET_wsa5__FaultCodesType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsa5__FaultCodesType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsa5__FaultCodesType
#define soap_POST_recv_wsa5__FaultCodesType(soap, data) ( soap_read_wsa5__FaultCodesType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsa5__RelationshipType_DEFINED
#define SOAP_TYPE_wsa5__RelationshipType_DEFINED

#ifdef SOAP_DEFAULT_wsa5__RelationshipType
#define soap_default_wsa5__RelationshipType(soap, a) (*(a) = SOAP_DEFAULT_wsa5__RelationshipType)
#else
#define soap_default_wsa5__RelationshipType(soap, a) (*(a) = (enum wsa5__RelationshipType)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__RelationshipType(struct soap*, const char*, int, const enum wsa5__RelationshipType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_wsa5__RelationshipType2s(struct soap*, enum wsa5__RelationshipType);
SOAP_FMAC3 enum wsa5__RelationshipType * SOAP_FMAC4 soap_in_wsa5__RelationshipType(struct soap*, const char*, enum wsa5__RelationshipType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2wsa5__RelationshipType(struct soap*, const char*, enum wsa5__RelationshipType *);

SOAP_FMAC3 enum wsa5__RelationshipType * SOAP_FMAC4 soap_new_wsa5__RelationshipType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__RelationshipType(struct soap*, const enum wsa5__RelationshipType *, const char*, const char*);

#ifndef soap_write_wsa5__RelationshipType
#define soap_write_wsa5__RelationshipType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_wsa5__RelationshipType(soap, data, "wsa5:RelationshipType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsa5__RelationshipType
#define soap_PUT_wsa5__RelationshipType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsa5__RelationshipType(soap, data, "wsa5:RelationshipType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsa5__RelationshipType
#define soap_PATCH_wsa5__RelationshipType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsa5__RelationshipType(soap, data, "wsa5:RelationshipType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsa5__RelationshipType
#define soap_POST_send_wsa5__RelationshipType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsa5__RelationshipType(soap, data, "wsa5:RelationshipType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 enum wsa5__RelationshipType * SOAP_FMAC4 soap_get_wsa5__RelationshipType(struct soap*, enum wsa5__RelationshipType *, const char*, const char*);

#ifndef soap_read_wsa5__RelationshipType
#define soap_read_wsa5__RelationshipType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsa5__RelationshipType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsa5__RelationshipType
#define soap_GET_wsa5__RelationshipType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsa5__RelationshipType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsa5__RelationshipType
#define soap_POST_recv_wsa5__RelationshipType(soap, data) ( soap_read_wsa5__RelationshipType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsdd__FaultCodeType_DEFINED
#define SOAP_TYPE_wsdd__FaultCodeType_DEFINED

#ifdef SOAP_DEFAULT_wsdd__FaultCodeType
#define soap_default_wsdd__FaultCodeType(soap, a) (*(a) = SOAP_DEFAULT_wsdd__FaultCodeType)
#else
#define soap_default_wsdd__FaultCodeType(soap, a) (*(a) = (enum wsdd__FaultCodeType)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdd__FaultCodeType(struct soap*, const char*, int, const enum wsdd__FaultCodeType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_wsdd__FaultCodeType2s(struct soap*, enum wsdd__FaultCodeType);
SOAP_FMAC3 enum wsdd__FaultCodeType * SOAP_FMAC4 soap_in_wsdd__FaultCodeType(struct soap*, const char*, enum wsdd__FaultCodeType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2wsdd__FaultCodeType(struct soap*, const char*, enum wsdd__FaultCodeType *);

SOAP_FMAC3 enum wsdd__FaultCodeType * SOAP_FMAC4 soap_new_wsdd__FaultCodeType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsdd__FaultCodeType(struct soap*, const enum wsdd__FaultCodeType *, const char*, const char*);

#ifndef soap_write_wsdd__FaultCodeType
#define soap_write_wsdd__FaultCodeType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_wsdd__FaultCodeType(soap, data, "wsdd:FaultCodeType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsdd__FaultCodeType
#define soap_PUT_wsdd__FaultCodeType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsdd__FaultCodeType(soap, data, "wsdd:FaultCodeType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsdd__FaultCodeType
#define soap_PATCH_wsdd__FaultCodeType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsdd__FaultCodeType(soap, data, "wsdd:FaultCodeType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsdd__FaultCodeType
#define soap_POST_send_wsdd__FaultCodeType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsdd__FaultCodeType(soap, data, "wsdd:FaultCodeType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 enum wsdd__FaultCodeType * SOAP_FMAC4 soap_get_wsdd__FaultCodeType(struct soap*, enum wsdd__FaultCodeType *, const char*, const char*);

#ifndef soap_read_wsdd__FaultCodeType
#define soap_read_wsdd__FaultCodeType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsdd__FaultCodeType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsdd__FaultCodeType
#define soap_GET_wsdd__FaultCodeType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsdd__FaultCodeType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsdd__FaultCodeType
#define soap_POST_recv_wsdd__FaultCodeType(soap, data) ( soap_read_wsdd__FaultCodeType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsa__FaultSubcodeValues_DEFINED
#define SOAP_TYPE_wsa__FaultSubcodeValues_DEFINED

#ifdef SOAP_DEFAULT_wsa__FaultSubcodeValues
#define soap_default_wsa__FaultSubcodeValues(soap, a) (*(a) = SOAP_DEFAULT_wsa__FaultSubcodeValues)
#else
#define soap_default_wsa__FaultSubcodeValues(soap, a) (*(a) = (enum wsa__FaultSubcodeValues)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa__FaultSubcodeValues(struct soap*, const char*, int, const enum wsa__FaultSubcodeValues *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_wsa__FaultSubcodeValues2s(struct soap*, enum wsa__FaultSubcodeValues);
SOAP_FMAC3 enum wsa__FaultSubcodeValues * SOAP_FMAC4 soap_in_wsa__FaultSubcodeValues(struct soap*, const char*, enum wsa__FaultSubcodeValues *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2wsa__FaultSubcodeValues(struct soap*, const char*, enum wsa__FaultSubcodeValues *);

SOAP_FMAC3 enum wsa__FaultSubcodeValues * SOAP_FMAC4 soap_new_wsa__FaultSubcodeValues(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa__FaultSubcodeValues(struct soap*, const enum wsa__FaultSubcodeValues *, const char*, const char*);

#ifndef soap_write_wsa__FaultSubcodeValues
#define soap_write_wsa__FaultSubcodeValues(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_wsa__FaultSubcodeValues(soap, data, "wsa:FaultSubcodeValues", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsa__FaultSubcodeValues
#define soap_PUT_wsa__FaultSubcodeValues(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsa__FaultSubcodeValues(soap, data, "wsa:FaultSubcodeValues", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsa__FaultSubcodeValues
#define soap_PATCH_wsa__FaultSubcodeValues(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsa__FaultSubcodeValues(soap, data, "wsa:FaultSubcodeValues", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsa__FaultSubcodeValues
#define soap_POST_send_wsa__FaultSubcodeValues(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsa__FaultSubcodeValues(soap, data, "wsa:FaultSubcodeValues", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 enum wsa__FaultSubcodeValues * SOAP_FMAC4 soap_get_wsa__FaultSubcodeValues(struct soap*, enum wsa__FaultSubcodeValues *, const char*, const char*);

#ifndef soap_read_wsa__FaultSubcodeValues
#define soap_read_wsa__FaultSubcodeValues(soap, data) ( soap_begin_recv(soap) || !soap_get_wsa__FaultSubcodeValues(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsa__FaultSubcodeValues
#define soap_GET_wsa__FaultSubcodeValues(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsa__FaultSubcodeValues(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsa__FaultSubcodeValues
#define soap_POST_recv_wsa__FaultSubcodeValues(soap, data) ( soap_read_wsa__FaultSubcodeValues(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsa__RelationshipTypeValues_DEFINED
#define SOAP_TYPE_wsa__RelationshipTypeValues_DEFINED

#ifdef SOAP_DEFAULT_wsa__RelationshipTypeValues
#define soap_default_wsa__RelationshipTypeValues(soap, a) (*(a) = SOAP_DEFAULT_wsa__RelationshipTypeValues)
#else
#define soap_default_wsa__RelationshipTypeValues(soap, a) (*(a) = (enum wsa__RelationshipTypeValues)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa__RelationshipTypeValues(struct soap*, const char*, int, const enum wsa__RelationshipTypeValues *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_wsa__RelationshipTypeValues2s(struct soap*, enum wsa__RelationshipTypeValues);
SOAP_FMAC3 enum wsa__RelationshipTypeValues * SOAP_FMAC4 soap_in_wsa__RelationshipTypeValues(struct soap*, const char*, enum wsa__RelationshipTypeValues *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2wsa__RelationshipTypeValues(struct soap*, const char*, enum wsa__RelationshipTypeValues *);

SOAP_FMAC3 enum wsa__RelationshipTypeValues * SOAP_FMAC4 soap_new_wsa__RelationshipTypeValues(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa__RelationshipTypeValues(struct soap*, const enum wsa__RelationshipTypeValues *, const char*, const char*);

#ifndef soap_write_wsa__RelationshipTypeValues
#define soap_write_wsa__RelationshipTypeValues(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_wsa__RelationshipTypeValues(soap, data, "wsa:RelationshipTypeValues", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsa__RelationshipTypeValues
#define soap_PUT_wsa__RelationshipTypeValues(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsa__RelationshipTypeValues(soap, data, "wsa:RelationshipTypeValues", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsa__RelationshipTypeValues
#define soap_PATCH_wsa__RelationshipTypeValues(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsa__RelationshipTypeValues(soap, data, "wsa:RelationshipTypeValues", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsa__RelationshipTypeValues
#define soap_POST_send_wsa__RelationshipTypeValues(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsa__RelationshipTypeValues(soap, data, "wsa:RelationshipTypeValues", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 enum wsa__RelationshipTypeValues * SOAP_FMAC4 soap_get_wsa__RelationshipTypeValues(struct soap*, enum wsa__RelationshipTypeValues *, const char*, const char*);

#ifndef soap_read_wsa__RelationshipTypeValues
#define soap_read_wsa__RelationshipTypeValues(soap, data) ( soap_begin_recv(soap) || !soap_get_wsa__RelationshipTypeValues(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsa__RelationshipTypeValues
#define soap_GET_wsa__RelationshipTypeValues(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsa__RelationshipTypeValues(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsa__RelationshipTypeValues
#define soap_POST_recv_wsa__RelationshipTypeValues(soap, data) ( soap_read_wsa__RelationshipTypeValues(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___trt__GetSnapshotUri_DEFINED
#define SOAP_TYPE___trt__GetSnapshotUri_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___trt__GetSnapshotUri(struct soap*, struct __trt__GetSnapshotUri *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___trt__GetSnapshotUri(struct soap*, const struct __trt__GetSnapshotUri *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___trt__GetSnapshotUri(struct soap*, const char*, int, const struct __trt__GetSnapshotUri *, const char*);
SOAP_FMAC3 struct __trt__GetSnapshotUri * SOAP_FMAC4 soap_in___trt__GetSnapshotUri(struct soap*, const char*, struct __trt__GetSnapshotUri *, const char*);

SOAP_FMAC3 struct __trt__GetSnapshotUri * SOAP_FMAC4 soap_new___trt__GetSnapshotUri(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___trt__GetSnapshotUri(struct soap*, const struct __trt__GetSnapshotUri *, const char*, const char*);

#ifndef soap_write___trt__GetSnapshotUri
#define soap_write___trt__GetSnapshotUri(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___trt__GetSnapshotUri(soap, data), 0) || soap_put___trt__GetSnapshotUri(soap, data, "-trt:GetSnapshotUri", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___trt__GetSnapshotUri
#define soap_PUT___trt__GetSnapshotUri(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___trt__GetSnapshotUri(soap, data), 0) || soap_put___trt__GetSnapshotUri(soap, data, "-trt:GetSnapshotUri", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___trt__GetSnapshotUri
#define soap_PATCH___trt__GetSnapshotUri(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___trt__GetSnapshotUri(soap, data), 0) || soap_put___trt__GetSnapshotUri(soap, data, "-trt:GetSnapshotUri", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___trt__GetSnapshotUri
#define soap_POST_send___trt__GetSnapshotUri(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___trt__GetSnapshotUri(soap, data), 0) || soap_put___trt__GetSnapshotUri(soap, data, "-trt:GetSnapshotUri", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __trt__GetSnapshotUri * SOAP_FMAC4 soap_get___trt__GetSnapshotUri(struct soap*, struct __trt__GetSnapshotUri *, const char*, const char*);

#ifndef soap_read___trt__GetSnapshotUri
#define soap_read___trt__GetSnapshotUri(soap, data) ( ((data) ? (soap_default___trt__GetSnapshotUri(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___trt__GetSnapshotUri(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___trt__GetSnapshotUri
#define soap_GET___trt__GetSnapshotUri(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___trt__GetSnapshotUri(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___trt__GetSnapshotUri
#define soap_POST_recv___trt__GetSnapshotUri(soap, data) ( soap_read___trt__GetSnapshotUri(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___trt__GetProfiles_DEFINED
#define SOAP_TYPE___trt__GetProfiles_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___trt__GetProfiles(struct soap*, struct __trt__GetProfiles *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___trt__GetProfiles(struct soap*, const struct __trt__GetProfiles *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___trt__GetProfiles(struct soap*, const char*, int, const struct __trt__GetProfiles *, const char*);
SOAP_FMAC3 struct __trt__GetProfiles * SOAP_FMAC4 soap_in___trt__GetProfiles(struct soap*, const char*, struct __trt__GetProfiles *, const char*);

SOAP_FMAC3 struct __trt__GetProfiles * SOAP_FMAC4 soap_new___trt__GetProfiles(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___trt__GetProfiles(struct soap*, const struct __trt__GetProfiles *, const char*, const char*);

#ifndef soap_write___trt__GetProfiles
#define soap_write___trt__GetProfiles(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___trt__GetProfiles(soap, data), 0) || soap_put___trt__GetProfiles(soap, data, "-trt:GetProfiles", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___trt__GetProfiles
#define soap_PUT___trt__GetProfiles(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___trt__GetProfiles(soap, data), 0) || soap_put___trt__GetProfiles(soap, data, "-trt:GetProfiles", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___trt__GetProfiles
#define soap_PATCH___trt__GetProfiles(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___trt__GetProfiles(soap, data), 0) || soap_put___trt__GetProfiles(soap, data, "-trt:GetProfiles", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___trt__GetProfiles
#define soap_POST_send___trt__GetProfiles(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___trt__GetProfiles(soap, data), 0) || soap_put___trt__GetProfiles(soap, data, "-trt:GetProfiles", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __trt__GetProfiles * SOAP_FMAC4 soap_get___trt__GetProfiles(struct soap*, struct __trt__GetProfiles *, const char*, const char*);

#ifndef soap_read___trt__GetProfiles
#define soap_read___trt__GetProfiles(soap, data) ( ((data) ? (soap_default___trt__GetProfiles(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___trt__GetProfiles(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___trt__GetProfiles
#define soap_GET___trt__GetProfiles(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___trt__GetProfiles(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___trt__GetProfiles
#define soap_POST_recv___trt__GetProfiles(soap, data) ( soap_read___trt__GetProfiles(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___trt__GetProfile_DEFINED
#define SOAP_TYPE___trt__GetProfile_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___trt__GetProfile(struct soap*, struct __trt__GetProfile *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___trt__GetProfile(struct soap*, const struct __trt__GetProfile *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___trt__GetProfile(struct soap*, const char*, int, const struct __trt__GetProfile *, const char*);
SOAP_FMAC3 struct __trt__GetProfile * SOAP_FMAC4 soap_in___trt__GetProfile(struct soap*, const char*, struct __trt__GetProfile *, const char*);

SOAP_FMAC3 struct __trt__GetProfile * SOAP_FMAC4 soap_new___trt__GetProfile(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___trt__GetProfile(struct soap*, const struct __trt__GetProfile *, const char*, const char*);

#ifndef soap_write___trt__GetProfile
#define soap_write___trt__GetProfile(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___trt__GetProfile(soap, data), 0) || soap_put___trt__GetProfile(soap, data, "-trt:GetProfile", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___trt__GetProfile
#define soap_PUT___trt__GetProfile(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___trt__GetProfile(soap, data), 0) || soap_put___trt__GetProfile(soap, data, "-trt:GetProfile", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___trt__GetProfile
#define soap_PATCH___trt__GetProfile(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___trt__GetProfile(soap, data), 0) || soap_put___trt__GetProfile(soap, data, "-trt:GetProfile", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___trt__GetProfile
#define soap_POST_send___trt__GetProfile(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___trt__GetProfile(soap, data), 0) || soap_put___trt__GetProfile(soap, data, "-trt:GetProfile", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __trt__GetProfile * SOAP_FMAC4 soap_get___trt__GetProfile(struct soap*, struct __trt__GetProfile *, const char*, const char*);

#ifndef soap_read___trt__GetProfile
#define soap_read___trt__GetProfile(soap, data) ( ((data) ? (soap_default___trt__GetProfile(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___trt__GetProfile(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___trt__GetProfile
#define soap_GET___trt__GetProfile(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___trt__GetProfile(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___trt__GetProfile
#define soap_POST_recv___trt__GetProfile(soap, data) ( soap_read___trt__GetProfile(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___trt__CreateProfile_DEFINED
#define SOAP_TYPE___trt__CreateProfile_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___trt__CreateProfile(struct soap*, struct __trt__CreateProfile *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___trt__CreateProfile(struct soap*, const struct __trt__CreateProfile *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___trt__CreateProfile(struct soap*, const char*, int, const struct __trt__CreateProfile *, const char*);
SOAP_FMAC3 struct __trt__CreateProfile * SOAP_FMAC4 soap_in___trt__CreateProfile(struct soap*, const char*, struct __trt__CreateProfile *, const char*);

SOAP_FMAC3 struct __trt__CreateProfile * SOAP_FMAC4 soap_new___trt__CreateProfile(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___trt__CreateProfile(struct soap*, const struct __trt__CreateProfile *, const char*, const char*);

#ifndef soap_write___trt__CreateProfile
#define soap_write___trt__CreateProfile(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___trt__CreateProfile(soap, data), 0) || soap_put___trt__CreateProfile(soap, data, "-trt:CreateProfile", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___trt__CreateProfile
#define soap_PUT___trt__CreateProfile(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___trt__CreateProfile(soap, data), 0) || soap_put___trt__CreateProfile(soap, data, "-trt:CreateProfile", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___trt__CreateProfile
#define soap_PATCH___trt__CreateProfile(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___trt__CreateProfile(soap, data), 0) || soap_put___trt__CreateProfile(soap, data, "-trt:CreateProfile", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___trt__CreateProfile
#define soap_POST_send___trt__CreateProfile(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___trt__CreateProfile(soap, data), 0) || soap_put___trt__CreateProfile(soap, data, "-trt:CreateProfile", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __trt__CreateProfile * SOAP_FMAC4 soap_get___trt__CreateProfile(struct soap*, struct __trt__CreateProfile *, const char*, const char*);

#ifndef soap_read___trt__CreateProfile
#define soap_read___trt__CreateProfile(soap, data) ( ((data) ? (soap_default___trt__CreateProfile(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___trt__CreateProfile(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___trt__CreateProfile
#define soap_GET___trt__CreateProfile(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___trt__CreateProfile(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___trt__CreateProfile
#define soap_POST_recv___trt__CreateProfile(soap, data) ( soap_read___trt__CreateProfile(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___trt__GetServiceCapabilities_DEFINED
#define SOAP_TYPE___trt__GetServiceCapabilities_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___trt__GetServiceCapabilities(struct soap*, struct __trt__GetServiceCapabilities *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___trt__GetServiceCapabilities(struct soap*, const struct __trt__GetServiceCapabilities *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___trt__GetServiceCapabilities(struct soap*, const char*, int, const struct __trt__GetServiceCapabilities *, const char*);
SOAP_FMAC3 struct __trt__GetServiceCapabilities * SOAP_FMAC4 soap_in___trt__GetServiceCapabilities(struct soap*, const char*, struct __trt__GetServiceCapabilities *, const char*);

SOAP_FMAC3 struct __trt__GetServiceCapabilities * SOAP_FMAC4 soap_new___trt__GetServiceCapabilities(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___trt__GetServiceCapabilities(struct soap*, const struct __trt__GetServiceCapabilities *, const char*, const char*);

#ifndef soap_write___trt__GetServiceCapabilities
#define soap_write___trt__GetServiceCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___trt__GetServiceCapabilities(soap, data), 0) || soap_put___trt__GetServiceCapabilities(soap, data, "-trt:GetServiceCapabilities", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___trt__GetServiceCapabilities
#define soap_PUT___trt__GetServiceCapabilities(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___trt__GetServiceCapabilities(soap, data), 0) || soap_put___trt__GetServiceCapabilities(soap, data, "-trt:GetServiceCapabilities", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___trt__GetServiceCapabilities
#define soap_PATCH___trt__GetServiceCapabilities(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___trt__GetServiceCapabilities(soap, data), 0) || soap_put___trt__GetServiceCapabilities(soap, data, "-trt:GetServiceCapabilities", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___trt__GetServiceCapabilities
#define soap_POST_send___trt__GetServiceCapabilities(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___trt__GetServiceCapabilities(soap, data), 0) || soap_put___trt__GetServiceCapabilities(soap, data, "-trt:GetServiceCapabilities", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __trt__GetServiceCapabilities * SOAP_FMAC4 soap_get___trt__GetServiceCapabilities(struct soap*, struct __trt__GetServiceCapabilities *, const char*, const char*);

#ifndef soap_read___trt__GetServiceCapabilities
#define soap_read___trt__GetServiceCapabilities(soap, data) ( ((data) ? (soap_default___trt__GetServiceCapabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___trt__GetServiceCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___trt__GetServiceCapabilities
#define soap_GET___trt__GetServiceCapabilities(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___trt__GetServiceCapabilities(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___trt__GetServiceCapabilities
#define soap_POST_recv___trt__GetServiceCapabilities(soap, data) ( soap_read___trt__GetServiceCapabilities(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___tds__GetCapabilities_DEFINED
#define SOAP_TYPE___tds__GetCapabilities_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetCapabilities(struct soap*, struct __tds__GetCapabilities *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetCapabilities(struct soap*, const struct __tds__GetCapabilities *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetCapabilities(struct soap*, const char*, int, const struct __tds__GetCapabilities *, const char*);
SOAP_FMAC3 struct __tds__GetCapabilities * SOAP_FMAC4 soap_in___tds__GetCapabilities(struct soap*, const char*, struct __tds__GetCapabilities *, const char*);

SOAP_FMAC3 struct __tds__GetCapabilities * SOAP_FMAC4 soap_new___tds__GetCapabilities(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetCapabilities(struct soap*, const struct __tds__GetCapabilities *, const char*, const char*);

#ifndef soap_write___tds__GetCapabilities
#define soap_write___tds__GetCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetCapabilities(soap, data), 0) || soap_put___tds__GetCapabilities(soap, data, "-tds:GetCapabilities", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___tds__GetCapabilities
#define soap_PUT___tds__GetCapabilities(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tds__GetCapabilities(soap, data), 0) || soap_put___tds__GetCapabilities(soap, data, "-tds:GetCapabilities", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___tds__GetCapabilities
#define soap_PATCH___tds__GetCapabilities(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tds__GetCapabilities(soap, data), 0) || soap_put___tds__GetCapabilities(soap, data, "-tds:GetCapabilities", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___tds__GetCapabilities
#define soap_POST_send___tds__GetCapabilities(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tds__GetCapabilities(soap, data), 0) || soap_put___tds__GetCapabilities(soap, data, "-tds:GetCapabilities", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetCapabilities * SOAP_FMAC4 soap_get___tds__GetCapabilities(struct soap*, struct __tds__GetCapabilities *, const char*, const char*);

#ifndef soap_read___tds__GetCapabilities
#define soap_read___tds__GetCapabilities(soap, data) ( ((data) ? (soap_default___tds__GetCapabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__GetCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___tds__GetCapabilities
#define soap_GET___tds__GetCapabilities(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___tds__GetCapabilities(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___tds__GetCapabilities
#define soap_POST_recv___tds__GetCapabilities(soap, data) ( soap_read___tds__GetCapabilities(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___tds__SystemReboot_DEFINED
#define SOAP_TYPE___tds__SystemReboot_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SystemReboot(struct soap*, struct __tds__SystemReboot *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SystemReboot(struct soap*, const struct __tds__SystemReboot *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SystemReboot(struct soap*, const char*, int, const struct __tds__SystemReboot *, const char*);
SOAP_FMAC3 struct __tds__SystemReboot * SOAP_FMAC4 soap_in___tds__SystemReboot(struct soap*, const char*, struct __tds__SystemReboot *, const char*);

SOAP_FMAC3 struct __tds__SystemReboot * SOAP_FMAC4 soap_new___tds__SystemReboot(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SystemReboot(struct soap*, const struct __tds__SystemReboot *, const char*, const char*);

#ifndef soap_write___tds__SystemReboot
#define soap_write___tds__SystemReboot(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SystemReboot(soap, data), 0) || soap_put___tds__SystemReboot(soap, data, "-tds:SystemReboot", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___tds__SystemReboot
#define soap_PUT___tds__SystemReboot(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tds__SystemReboot(soap, data), 0) || soap_put___tds__SystemReboot(soap, data, "-tds:SystemReboot", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___tds__SystemReboot
#define soap_PATCH___tds__SystemReboot(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tds__SystemReboot(soap, data), 0) || soap_put___tds__SystemReboot(soap, data, "-tds:SystemReboot", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___tds__SystemReboot
#define soap_POST_send___tds__SystemReboot(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tds__SystemReboot(soap, data), 0) || soap_put___tds__SystemReboot(soap, data, "-tds:SystemReboot", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SystemReboot * SOAP_FMAC4 soap_get___tds__SystemReboot(struct soap*, struct __tds__SystemReboot *, const char*, const char*);

#ifndef soap_read___tds__SystemReboot
#define soap_read___tds__SystemReboot(soap, data) ( ((data) ? (soap_default___tds__SystemReboot(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__SystemReboot(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___tds__SystemReboot
#define soap_GET___tds__SystemReboot(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___tds__SystemReboot(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___tds__SystemReboot
#define soap_POST_recv___tds__SystemReboot(soap, data) ( soap_read___tds__SystemReboot(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___tds__GetDeviceInformation_DEFINED
#define SOAP_TYPE___tds__GetDeviceInformation_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetDeviceInformation(struct soap*, struct __tds__GetDeviceInformation *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetDeviceInformation(struct soap*, const struct __tds__GetDeviceInformation *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetDeviceInformation(struct soap*, const char*, int, const struct __tds__GetDeviceInformation *, const char*);
SOAP_FMAC3 struct __tds__GetDeviceInformation * SOAP_FMAC4 soap_in___tds__GetDeviceInformation(struct soap*, const char*, struct __tds__GetDeviceInformation *, const char*);

SOAP_FMAC3 struct __tds__GetDeviceInformation * SOAP_FMAC4 soap_new___tds__GetDeviceInformation(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetDeviceInformation(struct soap*, const struct __tds__GetDeviceInformation *, const char*, const char*);

#ifndef soap_write___tds__GetDeviceInformation
#define soap_write___tds__GetDeviceInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetDeviceInformation(soap, data), 0) || soap_put___tds__GetDeviceInformation(soap, data, "-tds:GetDeviceInformation", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___tds__GetDeviceInformation
#define soap_PUT___tds__GetDeviceInformation(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tds__GetDeviceInformation(soap, data), 0) || soap_put___tds__GetDeviceInformation(soap, data, "-tds:GetDeviceInformation", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___tds__GetDeviceInformation
#define soap_PATCH___tds__GetDeviceInformation(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tds__GetDeviceInformation(soap, data), 0) || soap_put___tds__GetDeviceInformation(soap, data, "-tds:GetDeviceInformation", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___tds__GetDeviceInformation
#define soap_POST_send___tds__GetDeviceInformation(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tds__GetDeviceInformation(soap, data), 0) || soap_put___tds__GetDeviceInformation(soap, data, "-tds:GetDeviceInformation", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetDeviceInformation * SOAP_FMAC4 soap_get___tds__GetDeviceInformation(struct soap*, struct __tds__GetDeviceInformation *, const char*, const char*);

#ifndef soap_read___tds__GetDeviceInformation
#define soap_read___tds__GetDeviceInformation(soap, data) ( ((data) ? (soap_default___tds__GetDeviceInformation(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__GetDeviceInformation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___tds__GetDeviceInformation
#define soap_GET___tds__GetDeviceInformation(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___tds__GetDeviceInformation(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___tds__GetDeviceInformation
#define soap_POST_recv___tds__GetDeviceInformation(soap, data) ( soap_read___tds__GetDeviceInformation(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___tds__GetServiceCapabilities_DEFINED
#define SOAP_TYPE___tds__GetServiceCapabilities_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetServiceCapabilities(struct soap*, struct __tds__GetServiceCapabilities *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetServiceCapabilities(struct soap*, const struct __tds__GetServiceCapabilities *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetServiceCapabilities(struct soap*, const char*, int, const struct __tds__GetServiceCapabilities *, const char*);
SOAP_FMAC3 struct __tds__GetServiceCapabilities * SOAP_FMAC4 soap_in___tds__GetServiceCapabilities(struct soap*, const char*, struct __tds__GetServiceCapabilities *, const char*);

SOAP_FMAC3 struct __tds__GetServiceCapabilities * SOAP_FMAC4 soap_new___tds__GetServiceCapabilities(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetServiceCapabilities(struct soap*, const struct __tds__GetServiceCapabilities *, const char*, const char*);

#ifndef soap_write___tds__GetServiceCapabilities
#define soap_write___tds__GetServiceCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetServiceCapabilities(soap, data), 0) || soap_put___tds__GetServiceCapabilities(soap, data, "-tds:GetServiceCapabilities", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___tds__GetServiceCapabilities
#define soap_PUT___tds__GetServiceCapabilities(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tds__GetServiceCapabilities(soap, data), 0) || soap_put___tds__GetServiceCapabilities(soap, data, "-tds:GetServiceCapabilities", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___tds__GetServiceCapabilities
#define soap_PATCH___tds__GetServiceCapabilities(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tds__GetServiceCapabilities(soap, data), 0) || soap_put___tds__GetServiceCapabilities(soap, data, "-tds:GetServiceCapabilities", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___tds__GetServiceCapabilities
#define soap_POST_send___tds__GetServiceCapabilities(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tds__GetServiceCapabilities(soap, data), 0) || soap_put___tds__GetServiceCapabilities(soap, data, "-tds:GetServiceCapabilities", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetServiceCapabilities * SOAP_FMAC4 soap_get___tds__GetServiceCapabilities(struct soap*, struct __tds__GetServiceCapabilities *, const char*, const char*);

#ifndef soap_read___tds__GetServiceCapabilities
#define soap_read___tds__GetServiceCapabilities(soap, data) ( ((data) ? (soap_default___tds__GetServiceCapabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__GetServiceCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___tds__GetServiceCapabilities
#define soap_GET___tds__GetServiceCapabilities(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___tds__GetServiceCapabilities(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___tds__GetServiceCapabilities
#define soap_POST_recv___tds__GetServiceCapabilities(soap, data) ( soap_read___tds__GetServiceCapabilities(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___tds__GetServices_DEFINED
#define SOAP_TYPE___tds__GetServices_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetServices(struct soap*, struct __tds__GetServices *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetServices(struct soap*, const struct __tds__GetServices *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetServices(struct soap*, const char*, int, const struct __tds__GetServices *, const char*);
SOAP_FMAC3 struct __tds__GetServices * SOAP_FMAC4 soap_in___tds__GetServices(struct soap*, const char*, struct __tds__GetServices *, const char*);

SOAP_FMAC3 struct __tds__GetServices * SOAP_FMAC4 soap_new___tds__GetServices(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetServices(struct soap*, const struct __tds__GetServices *, const char*, const char*);

#ifndef soap_write___tds__GetServices
#define soap_write___tds__GetServices(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetServices(soap, data), 0) || soap_put___tds__GetServices(soap, data, "-tds:GetServices", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___tds__GetServices
#define soap_PUT___tds__GetServices(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tds__GetServices(soap, data), 0) || soap_put___tds__GetServices(soap, data, "-tds:GetServices", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___tds__GetServices
#define soap_PATCH___tds__GetServices(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tds__GetServices(soap, data), 0) || soap_put___tds__GetServices(soap, data, "-tds:GetServices", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___tds__GetServices
#define soap_POST_send___tds__GetServices(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tds__GetServices(soap, data), 0) || soap_put___tds__GetServices(soap, data, "-tds:GetServices", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetServices * SOAP_FMAC4 soap_get___tds__GetServices(struct soap*, struct __tds__GetServices *, const char*, const char*);

#ifndef soap_read___tds__GetServices
#define soap_read___tds__GetServices(soap, data) ( ((data) ? (soap_default___tds__GetServices(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__GetServices(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___tds__GetServices
#define soap_GET___tds__GetServices(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___tds__GetServices(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___tds__GetServices
#define soap_POST_recv___tds__GetServices(soap, data) ( soap_read___tds__GetServices(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___tdn__Probe_DEFINED
#define SOAP_TYPE___tdn__Probe_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tdn__Probe(struct soap*, struct __tdn__Probe *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tdn__Probe(struct soap*, const struct __tdn__Probe *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tdn__Probe(struct soap*, const char*, int, const struct __tdn__Probe *, const char*);
SOAP_FMAC3 struct __tdn__Probe * SOAP_FMAC4 soap_in___tdn__Probe(struct soap*, const char*, struct __tdn__Probe *, const char*);

SOAP_FMAC3 struct __tdn__Probe * SOAP_FMAC4 soap_new___tdn__Probe(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tdn__Probe(struct soap*, const struct __tdn__Probe *, const char*, const char*);

#ifndef soap_write___tdn__Probe
#define soap_write___tdn__Probe(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tdn__Probe(soap, data), 0) || soap_put___tdn__Probe(soap, data, "-tdn:Probe", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___tdn__Probe
#define soap_PUT___tdn__Probe(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tdn__Probe(soap, data), 0) || soap_put___tdn__Probe(soap, data, "-tdn:Probe", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___tdn__Probe
#define soap_PATCH___tdn__Probe(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tdn__Probe(soap, data), 0) || soap_put___tdn__Probe(soap, data, "-tdn:Probe", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___tdn__Probe
#define soap_POST_send___tdn__Probe(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tdn__Probe(soap, data), 0) || soap_put___tdn__Probe(soap, data, "-tdn:Probe", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tdn__Probe * SOAP_FMAC4 soap_get___tdn__Probe(struct soap*, struct __tdn__Probe *, const char*, const char*);

#ifndef soap_read___tdn__Probe
#define soap_read___tdn__Probe(soap, data) ( ((data) ? (soap_default___tdn__Probe(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tdn__Probe(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___tdn__Probe
#define soap_GET___tdn__Probe(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___tdn__Probe(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___tdn__Probe
#define soap_POST_recv___tdn__Probe(soap, data) ( soap_read___tdn__Probe(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___tdn__Bye_DEFINED
#define SOAP_TYPE___tdn__Bye_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tdn__Bye(struct soap*, struct __tdn__Bye *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tdn__Bye(struct soap*, const struct __tdn__Bye *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tdn__Bye(struct soap*, const char*, int, const struct __tdn__Bye *, const char*);
SOAP_FMAC3 struct __tdn__Bye * SOAP_FMAC4 soap_in___tdn__Bye(struct soap*, const char*, struct __tdn__Bye *, const char*);

SOAP_FMAC3 struct __tdn__Bye * SOAP_FMAC4 soap_new___tdn__Bye(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tdn__Bye(struct soap*, const struct __tdn__Bye *, const char*, const char*);

#ifndef soap_write___tdn__Bye
#define soap_write___tdn__Bye(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tdn__Bye(soap, data), 0) || soap_put___tdn__Bye(soap, data, "-tdn:Bye", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___tdn__Bye
#define soap_PUT___tdn__Bye(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tdn__Bye(soap, data), 0) || soap_put___tdn__Bye(soap, data, "-tdn:Bye", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___tdn__Bye
#define soap_PATCH___tdn__Bye(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tdn__Bye(soap, data), 0) || soap_put___tdn__Bye(soap, data, "-tdn:Bye", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___tdn__Bye
#define soap_POST_send___tdn__Bye(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tdn__Bye(soap, data), 0) || soap_put___tdn__Bye(soap, data, "-tdn:Bye", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tdn__Bye * SOAP_FMAC4 soap_get___tdn__Bye(struct soap*, struct __tdn__Bye *, const char*, const char*);

#ifndef soap_read___tdn__Bye
#define soap_read___tdn__Bye(soap, data) ( ((data) ? (soap_default___tdn__Bye(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tdn__Bye(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___tdn__Bye
#define soap_GET___tdn__Bye(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___tdn__Bye(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___tdn__Bye
#define soap_POST_recv___tdn__Bye(soap, data) ( soap_read___tdn__Bye(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___tdn__Hello_DEFINED
#define SOAP_TYPE___tdn__Hello_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tdn__Hello(struct soap*, struct __tdn__Hello *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tdn__Hello(struct soap*, const struct __tdn__Hello *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tdn__Hello(struct soap*, const char*, int, const struct __tdn__Hello *, const char*);
SOAP_FMAC3 struct __tdn__Hello * SOAP_FMAC4 soap_in___tdn__Hello(struct soap*, const char*, struct __tdn__Hello *, const char*);

SOAP_FMAC3 struct __tdn__Hello * SOAP_FMAC4 soap_new___tdn__Hello(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tdn__Hello(struct soap*, const struct __tdn__Hello *, const char*, const char*);

#ifndef soap_write___tdn__Hello
#define soap_write___tdn__Hello(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tdn__Hello(soap, data), 0) || soap_put___tdn__Hello(soap, data, "-tdn:Hello", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___tdn__Hello
#define soap_PUT___tdn__Hello(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tdn__Hello(soap, data), 0) || soap_put___tdn__Hello(soap, data, "-tdn:Hello", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___tdn__Hello
#define soap_PATCH___tdn__Hello(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tdn__Hello(soap, data), 0) || soap_put___tdn__Hello(soap, data, "-tdn:Hello", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___tdn__Hello
#define soap_POST_send___tdn__Hello(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tdn__Hello(soap, data), 0) || soap_put___tdn__Hello(soap, data, "-tdn:Hello", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tdn__Hello * SOAP_FMAC4 soap_get___tdn__Hello(struct soap*, struct __tdn__Hello *, const char*, const char*);

#ifndef soap_read___tdn__Hello
#define soap_read___tdn__Hello(soap, data) ( ((data) ? (soap_default___tdn__Hello(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tdn__Hello(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___tdn__Hello
#define soap_GET___tdn__Hello(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___tdn__Hello(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___tdn__Hello
#define soap_POST_recv___tdn__Hello(soap, data) ( soap_read___tdn__Hello(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wstop__TopicType_DEFINED
#define SOAP_TYPE_wstop__TopicType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wstop__TopicType(struct soap*, struct wstop__TopicType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wstop__TopicType(struct soap*, const struct wstop__TopicType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wstop__TopicType(struct soap*, const char*, int, const struct wstop__TopicType *, const char*);
SOAP_FMAC3 struct wstop__TopicType * SOAP_FMAC4 soap_in_wstop__TopicType(struct soap*, const char*, struct wstop__TopicType *, const char*);

SOAP_FMAC3 struct wstop__TopicType * SOAP_FMAC4 soap_new_wstop__TopicType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wstop__TopicType(struct soap*, const struct wstop__TopicType *, const char*, const char*);

#ifndef soap_write_wstop__TopicType
#define soap_write_wstop__TopicType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wstop__TopicType(soap, data), 0) || soap_put_wstop__TopicType(soap, data, "wstop:TopicType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wstop__TopicType
#define soap_PUT_wstop__TopicType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wstop__TopicType(soap, data), 0) || soap_put_wstop__TopicType(soap, data, "wstop:TopicType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wstop__TopicType
#define soap_PATCH_wstop__TopicType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wstop__TopicType(soap, data), 0) || soap_put_wstop__TopicType(soap, data, "wstop:TopicType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wstop__TopicType
#define soap_POST_send_wstop__TopicType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wstop__TopicType(soap, data), 0) || soap_put_wstop__TopicType(soap, data, "wstop:TopicType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wstop__TopicType * SOAP_FMAC4 soap_get_wstop__TopicType(struct soap*, struct wstop__TopicType *, const char*, const char*);

#ifndef soap_read_wstop__TopicType
#define soap_read_wstop__TopicType(soap, data) ( ((data) ? (soap_default_wstop__TopicType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wstop__TopicType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wstop__TopicType
#define soap_GET_wstop__TopicType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wstop__TopicType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wstop__TopicType
#define soap_POST_recv_wstop__TopicType(soap, data) ( soap_read_wstop__TopicType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wstop__TopicNamespaceType_Topic_DEFINED
#define SOAP_TYPE__wstop__TopicNamespaceType_Topic_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wstop__TopicNamespaceType_Topic(struct soap*, struct _wstop__TopicNamespaceType_Topic *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wstop__TopicNamespaceType_Topic(struct soap*, const struct _wstop__TopicNamespaceType_Topic *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wstop__TopicNamespaceType_Topic(struct soap*, const char*, int, const struct _wstop__TopicNamespaceType_Topic *, const char*);
SOAP_FMAC3 struct _wstop__TopicNamespaceType_Topic * SOAP_FMAC4 soap_in__wstop__TopicNamespaceType_Topic(struct soap*, const char*, struct _wstop__TopicNamespaceType_Topic *, const char*);

SOAP_FMAC3 struct _wstop__TopicNamespaceType_Topic * SOAP_FMAC4 soap_new__wstop__TopicNamespaceType_Topic(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wstop__TopicNamespaceType_Topic(struct soap*, const struct _wstop__TopicNamespaceType_Topic *, const char*, const char*);

#ifndef soap_write__wstop__TopicNamespaceType_Topic
#define soap_write__wstop__TopicNamespaceType_Topic(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wstop__TopicNamespaceType_Topic(soap, data), 0) || soap_put__wstop__TopicNamespaceType_Topic(soap, data, "wstop:TopicNamespaceType-Topic", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wstop__TopicNamespaceType_Topic
#define soap_PUT__wstop__TopicNamespaceType_Topic(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wstop__TopicNamespaceType_Topic(soap, data), 0) || soap_put__wstop__TopicNamespaceType_Topic(soap, data, "wstop:TopicNamespaceType-Topic", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wstop__TopicNamespaceType_Topic
#define soap_PATCH__wstop__TopicNamespaceType_Topic(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wstop__TopicNamespaceType_Topic(soap, data), 0) || soap_put__wstop__TopicNamespaceType_Topic(soap, data, "wstop:TopicNamespaceType-Topic", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wstop__TopicNamespaceType_Topic
#define soap_POST_send__wstop__TopicNamespaceType_Topic(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wstop__TopicNamespaceType_Topic(soap, data), 0) || soap_put__wstop__TopicNamespaceType_Topic(soap, data, "wstop:TopicNamespaceType-Topic", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wstop__TopicNamespaceType_Topic * SOAP_FMAC4 soap_get__wstop__TopicNamespaceType_Topic(struct soap*, struct _wstop__TopicNamespaceType_Topic *, const char*, const char*);

#ifndef soap_read__wstop__TopicNamespaceType_Topic
#define soap_read__wstop__TopicNamespaceType_Topic(soap, data) ( ((data) ? (soap_default__wstop__TopicNamespaceType_Topic(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wstop__TopicNamespaceType_Topic(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wstop__TopicNamespaceType_Topic
#define soap_GET__wstop__TopicNamespaceType_Topic(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wstop__TopicNamespaceType_Topic(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wstop__TopicNamespaceType_Topic
#define soap_POST_recv__wstop__TopicNamespaceType_Topic(soap, data) ( soap_read__wstop__TopicNamespaceType_Topic(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wstop__TopicNamespaceType_DEFINED
#define SOAP_TYPE_wstop__TopicNamespaceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wstop__TopicNamespaceType(struct soap*, struct wstop__TopicNamespaceType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wstop__TopicNamespaceType(struct soap*, const struct wstop__TopicNamespaceType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wstop__TopicNamespaceType(struct soap*, const char*, int, const struct wstop__TopicNamespaceType *, const char*);
SOAP_FMAC3 struct wstop__TopicNamespaceType * SOAP_FMAC4 soap_in_wstop__TopicNamespaceType(struct soap*, const char*, struct wstop__TopicNamespaceType *, const char*);

SOAP_FMAC3 struct wstop__TopicNamespaceType * SOAP_FMAC4 soap_new_wstop__TopicNamespaceType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wstop__TopicNamespaceType(struct soap*, const struct wstop__TopicNamespaceType *, const char*, const char*);

#ifndef soap_write_wstop__TopicNamespaceType
#define soap_write_wstop__TopicNamespaceType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wstop__TopicNamespaceType(soap, data), 0) || soap_put_wstop__TopicNamespaceType(soap, data, "wstop:TopicNamespaceType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wstop__TopicNamespaceType
#define soap_PUT_wstop__TopicNamespaceType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wstop__TopicNamespaceType(soap, data), 0) || soap_put_wstop__TopicNamespaceType(soap, data, "wstop:TopicNamespaceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wstop__TopicNamespaceType
#define soap_PATCH_wstop__TopicNamespaceType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wstop__TopicNamespaceType(soap, data), 0) || soap_put_wstop__TopicNamespaceType(soap, data, "wstop:TopicNamespaceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wstop__TopicNamespaceType
#define soap_POST_send_wstop__TopicNamespaceType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wstop__TopicNamespaceType(soap, data), 0) || soap_put_wstop__TopicNamespaceType(soap, data, "wstop:TopicNamespaceType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wstop__TopicNamespaceType * SOAP_FMAC4 soap_get_wstop__TopicNamespaceType(struct soap*, struct wstop__TopicNamespaceType *, const char*, const char*);

#ifndef soap_read_wstop__TopicNamespaceType
#define soap_read_wstop__TopicNamespaceType(soap, data) ( ((data) ? (soap_default_wstop__TopicNamespaceType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wstop__TopicNamespaceType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wstop__TopicNamespaceType
#define soap_GET_wstop__TopicNamespaceType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wstop__TopicNamespaceType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wstop__TopicNamespaceType
#define soap_POST_recv_wstop__TopicNamespaceType(soap, data) ( soap_read_wstop__TopicNamespaceType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__ResumeFailedFaultType_FaultCause_DEFINED
#define SOAP_TYPE__wsnt__ResumeFailedFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__ResumeFailedFaultType_FaultCause(struct soap*, struct _wsnt__ResumeFailedFaultType_FaultCause *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__ResumeFailedFaultType_FaultCause(struct soap*, const struct _wsnt__ResumeFailedFaultType_FaultCause *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__ResumeFailedFaultType_FaultCause(struct soap*, const char*, int, const struct _wsnt__ResumeFailedFaultType_FaultCause *, const char*);
SOAP_FMAC3 struct _wsnt__ResumeFailedFaultType_FaultCause * SOAP_FMAC4 soap_in__wsnt__ResumeFailedFaultType_FaultCause(struct soap*, const char*, struct _wsnt__ResumeFailedFaultType_FaultCause *, const char*);

SOAP_FMAC3 struct _wsnt__ResumeFailedFaultType_FaultCause * SOAP_FMAC4 soap_new__wsnt__ResumeFailedFaultType_FaultCause(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__ResumeFailedFaultType_FaultCause(struct soap*, const struct _wsnt__ResumeFailedFaultType_FaultCause *, const char*, const char*);

#ifndef soap_write__wsnt__ResumeFailedFaultType_FaultCause
#define soap_write__wsnt__ResumeFailedFaultType_FaultCause(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__ResumeFailedFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__ResumeFailedFaultType_FaultCause(soap, data, "wsnt:ResumeFailedFaultType-FaultCause", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__ResumeFailedFaultType_FaultCause
#define soap_PUT__wsnt__ResumeFailedFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__ResumeFailedFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__ResumeFailedFaultType_FaultCause(soap, data, "wsnt:ResumeFailedFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__ResumeFailedFaultType_FaultCause
#define soap_PATCH__wsnt__ResumeFailedFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__ResumeFailedFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__ResumeFailedFaultType_FaultCause(soap, data, "wsnt:ResumeFailedFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__ResumeFailedFaultType_FaultCause
#define soap_POST_send__wsnt__ResumeFailedFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__ResumeFailedFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__ResumeFailedFaultType_FaultCause(soap, data, "wsnt:ResumeFailedFaultType-FaultCause", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__ResumeFailedFaultType_FaultCause * SOAP_FMAC4 soap_get__wsnt__ResumeFailedFaultType_FaultCause(struct soap*, struct _wsnt__ResumeFailedFaultType_FaultCause *, const char*, const char*);

#ifndef soap_read__wsnt__ResumeFailedFaultType_FaultCause
#define soap_read__wsnt__ResumeFailedFaultType_FaultCause(soap, data) ( ((data) ? (soap_default__wsnt__ResumeFailedFaultType_FaultCause(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__ResumeFailedFaultType_FaultCause(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__ResumeFailedFaultType_FaultCause
#define soap_GET__wsnt__ResumeFailedFaultType_FaultCause(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__ResumeFailedFaultType_FaultCause(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__ResumeFailedFaultType_FaultCause
#define soap_POST_recv__wsnt__ResumeFailedFaultType_FaultCause(soap, data) ( soap_read__wsnt__ResumeFailedFaultType_FaultCause(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__ResumeFailedFaultType_Description_DEFINED
#define SOAP_TYPE__wsnt__ResumeFailedFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__ResumeFailedFaultType_Description(struct soap*, struct _wsnt__ResumeFailedFaultType_Description *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__ResumeFailedFaultType_Description(struct soap*, const struct _wsnt__ResumeFailedFaultType_Description *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__ResumeFailedFaultType_Description(struct soap*, const char*, int, const struct _wsnt__ResumeFailedFaultType_Description *, const char*);
SOAP_FMAC3 struct _wsnt__ResumeFailedFaultType_Description * SOAP_FMAC4 soap_in__wsnt__ResumeFailedFaultType_Description(struct soap*, const char*, struct _wsnt__ResumeFailedFaultType_Description *, const char*);

SOAP_FMAC3 struct _wsnt__ResumeFailedFaultType_Description * SOAP_FMAC4 soap_new__wsnt__ResumeFailedFaultType_Description(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__ResumeFailedFaultType_Description(struct soap*, const struct _wsnt__ResumeFailedFaultType_Description *, const char*, const char*);

#ifndef soap_write__wsnt__ResumeFailedFaultType_Description
#define soap_write__wsnt__ResumeFailedFaultType_Description(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__ResumeFailedFaultType_Description(soap, data), 0) || soap_put__wsnt__ResumeFailedFaultType_Description(soap, data, "wsnt:ResumeFailedFaultType-Description", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__ResumeFailedFaultType_Description
#define soap_PUT__wsnt__ResumeFailedFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__ResumeFailedFaultType_Description(soap, data), 0) || soap_put__wsnt__ResumeFailedFaultType_Description(soap, data, "wsnt:ResumeFailedFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__ResumeFailedFaultType_Description
#define soap_PATCH__wsnt__ResumeFailedFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__ResumeFailedFaultType_Description(soap, data), 0) || soap_put__wsnt__ResumeFailedFaultType_Description(soap, data, "wsnt:ResumeFailedFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__ResumeFailedFaultType_Description
#define soap_POST_send__wsnt__ResumeFailedFaultType_Description(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__ResumeFailedFaultType_Description(soap, data), 0) || soap_put__wsnt__ResumeFailedFaultType_Description(soap, data, "wsnt:ResumeFailedFaultType-Description", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__ResumeFailedFaultType_Description * SOAP_FMAC4 soap_get__wsnt__ResumeFailedFaultType_Description(struct soap*, struct _wsnt__ResumeFailedFaultType_Description *, const char*, const char*);

#ifndef soap_read__wsnt__ResumeFailedFaultType_Description
#define soap_read__wsnt__ResumeFailedFaultType_Description(soap, data) ( ((data) ? (soap_default__wsnt__ResumeFailedFaultType_Description(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__ResumeFailedFaultType_Description(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__ResumeFailedFaultType_Description
#define soap_GET__wsnt__ResumeFailedFaultType_Description(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__ResumeFailedFaultType_Description(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__ResumeFailedFaultType_Description
#define soap_POST_recv__wsnt__ResumeFailedFaultType_Description(soap, data) ( soap_read__wsnt__ResumeFailedFaultType_Description(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__ResumeFailedFaultType_ErrorCode_DEFINED
#define SOAP_TYPE__wsnt__ResumeFailedFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__ResumeFailedFaultType_ErrorCode(struct soap*, struct _wsnt__ResumeFailedFaultType_ErrorCode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__ResumeFailedFaultType_ErrorCode(struct soap*, const struct _wsnt__ResumeFailedFaultType_ErrorCode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__ResumeFailedFaultType_ErrorCode(struct soap*, const char*, int, const struct _wsnt__ResumeFailedFaultType_ErrorCode *, const char*);
SOAP_FMAC3 struct _wsnt__ResumeFailedFaultType_ErrorCode * SOAP_FMAC4 soap_in__wsnt__ResumeFailedFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__ResumeFailedFaultType_ErrorCode *, const char*);

SOAP_FMAC3 struct _wsnt__ResumeFailedFaultType_ErrorCode * SOAP_FMAC4 soap_new__wsnt__ResumeFailedFaultType_ErrorCode(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__ResumeFailedFaultType_ErrorCode(struct soap*, const struct _wsnt__ResumeFailedFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_write__wsnt__ResumeFailedFaultType_ErrorCode
#define soap_write__wsnt__ResumeFailedFaultType_ErrorCode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__ResumeFailedFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__ResumeFailedFaultType_ErrorCode(soap, data, "wsnt:ResumeFailedFaultType-ErrorCode", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__ResumeFailedFaultType_ErrorCode
#define soap_PUT__wsnt__ResumeFailedFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__ResumeFailedFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__ResumeFailedFaultType_ErrorCode(soap, data, "wsnt:ResumeFailedFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__ResumeFailedFaultType_ErrorCode
#define soap_PATCH__wsnt__ResumeFailedFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__ResumeFailedFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__ResumeFailedFaultType_ErrorCode(soap, data, "wsnt:ResumeFailedFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__ResumeFailedFaultType_ErrorCode
#define soap_POST_send__wsnt__ResumeFailedFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__ResumeFailedFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__ResumeFailedFaultType_ErrorCode(soap, data, "wsnt:ResumeFailedFaultType-ErrorCode", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__ResumeFailedFaultType_ErrorCode * SOAP_FMAC4 soap_get__wsnt__ResumeFailedFaultType_ErrorCode(struct soap*, struct _wsnt__ResumeFailedFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_read__wsnt__ResumeFailedFaultType_ErrorCode
#define soap_read__wsnt__ResumeFailedFaultType_ErrorCode(soap, data) ( ((data) ? (soap_default__wsnt__ResumeFailedFaultType_ErrorCode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__ResumeFailedFaultType_ErrorCode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__ResumeFailedFaultType_ErrorCode
#define soap_GET__wsnt__ResumeFailedFaultType_ErrorCode(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__ResumeFailedFaultType_ErrorCode(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__ResumeFailedFaultType_ErrorCode
#define soap_POST_recv__wsnt__ResumeFailedFaultType_ErrorCode(soap, data) ( soap_read__wsnt__ResumeFailedFaultType_ErrorCode(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsnt__ResumeFailedFaultType_DEFINED
#define SOAP_TYPE_wsnt__ResumeFailedFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsnt__ResumeFailedFaultType(struct soap*, struct wsnt__ResumeFailedFaultType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__ResumeFailedFaultType(struct soap*, const struct wsnt__ResumeFailedFaultType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__ResumeFailedFaultType(struct soap*, const char*, int, const struct wsnt__ResumeFailedFaultType *, const char*);
SOAP_FMAC3 struct wsnt__ResumeFailedFaultType * SOAP_FMAC4 soap_in_wsnt__ResumeFailedFaultType(struct soap*, const char*, struct wsnt__ResumeFailedFaultType *, const char*);

SOAP_FMAC3 struct wsnt__ResumeFailedFaultType * SOAP_FMAC4 soap_new_wsnt__ResumeFailedFaultType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__ResumeFailedFaultType(struct soap*, const struct wsnt__ResumeFailedFaultType *, const char*, const char*);

#ifndef soap_write_wsnt__ResumeFailedFaultType
#define soap_write_wsnt__ResumeFailedFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsnt__ResumeFailedFaultType(soap, data), 0) || soap_put_wsnt__ResumeFailedFaultType(soap, data, "wsnt:ResumeFailedFaultType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsnt__ResumeFailedFaultType
#define soap_PUT_wsnt__ResumeFailedFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__ResumeFailedFaultType(soap, data), 0) || soap_put_wsnt__ResumeFailedFaultType(soap, data, "wsnt:ResumeFailedFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsnt__ResumeFailedFaultType
#define soap_PATCH_wsnt__ResumeFailedFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__ResumeFailedFaultType(soap, data), 0) || soap_put_wsnt__ResumeFailedFaultType(soap, data, "wsnt:ResumeFailedFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsnt__ResumeFailedFaultType
#define soap_POST_send_wsnt__ResumeFailedFaultType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__ResumeFailedFaultType(soap, data), 0) || soap_put_wsnt__ResumeFailedFaultType(soap, data, "wsnt:ResumeFailedFaultType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsnt__ResumeFailedFaultType * SOAP_FMAC4 soap_get_wsnt__ResumeFailedFaultType(struct soap*, struct wsnt__ResumeFailedFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__ResumeFailedFaultType
#define soap_read_wsnt__ResumeFailedFaultType(soap, data) ( ((data) ? (soap_default_wsnt__ResumeFailedFaultType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__ResumeFailedFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsnt__ResumeFailedFaultType
#define soap_GET_wsnt__ResumeFailedFaultType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsnt__ResumeFailedFaultType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsnt__ResumeFailedFaultType
#define soap_POST_recv_wsnt__ResumeFailedFaultType(soap, data) ( soap_read_wsnt__ResumeFailedFaultType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__PauseFailedFaultType_FaultCause_DEFINED
#define SOAP_TYPE__wsnt__PauseFailedFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__PauseFailedFaultType_FaultCause(struct soap*, struct _wsnt__PauseFailedFaultType_FaultCause *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__PauseFailedFaultType_FaultCause(struct soap*, const struct _wsnt__PauseFailedFaultType_FaultCause *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__PauseFailedFaultType_FaultCause(struct soap*, const char*, int, const struct _wsnt__PauseFailedFaultType_FaultCause *, const char*);
SOAP_FMAC3 struct _wsnt__PauseFailedFaultType_FaultCause * SOAP_FMAC4 soap_in__wsnt__PauseFailedFaultType_FaultCause(struct soap*, const char*, struct _wsnt__PauseFailedFaultType_FaultCause *, const char*);

SOAP_FMAC3 struct _wsnt__PauseFailedFaultType_FaultCause * SOAP_FMAC4 soap_new__wsnt__PauseFailedFaultType_FaultCause(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__PauseFailedFaultType_FaultCause(struct soap*, const struct _wsnt__PauseFailedFaultType_FaultCause *, const char*, const char*);

#ifndef soap_write__wsnt__PauseFailedFaultType_FaultCause
#define soap_write__wsnt__PauseFailedFaultType_FaultCause(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__PauseFailedFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__PauseFailedFaultType_FaultCause(soap, data, "wsnt:PauseFailedFaultType-FaultCause", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__PauseFailedFaultType_FaultCause
#define soap_PUT__wsnt__PauseFailedFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__PauseFailedFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__PauseFailedFaultType_FaultCause(soap, data, "wsnt:PauseFailedFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__PauseFailedFaultType_FaultCause
#define soap_PATCH__wsnt__PauseFailedFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__PauseFailedFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__PauseFailedFaultType_FaultCause(soap, data, "wsnt:PauseFailedFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__PauseFailedFaultType_FaultCause
#define soap_POST_send__wsnt__PauseFailedFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__PauseFailedFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__PauseFailedFaultType_FaultCause(soap, data, "wsnt:PauseFailedFaultType-FaultCause", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__PauseFailedFaultType_FaultCause * SOAP_FMAC4 soap_get__wsnt__PauseFailedFaultType_FaultCause(struct soap*, struct _wsnt__PauseFailedFaultType_FaultCause *, const char*, const char*);

#ifndef soap_read__wsnt__PauseFailedFaultType_FaultCause
#define soap_read__wsnt__PauseFailedFaultType_FaultCause(soap, data) ( ((data) ? (soap_default__wsnt__PauseFailedFaultType_FaultCause(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__PauseFailedFaultType_FaultCause(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__PauseFailedFaultType_FaultCause
#define soap_GET__wsnt__PauseFailedFaultType_FaultCause(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__PauseFailedFaultType_FaultCause(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__PauseFailedFaultType_FaultCause
#define soap_POST_recv__wsnt__PauseFailedFaultType_FaultCause(soap, data) ( soap_read__wsnt__PauseFailedFaultType_FaultCause(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__PauseFailedFaultType_Description_DEFINED
#define SOAP_TYPE__wsnt__PauseFailedFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__PauseFailedFaultType_Description(struct soap*, struct _wsnt__PauseFailedFaultType_Description *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__PauseFailedFaultType_Description(struct soap*, const struct _wsnt__PauseFailedFaultType_Description *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__PauseFailedFaultType_Description(struct soap*, const char*, int, const struct _wsnt__PauseFailedFaultType_Description *, const char*);
SOAP_FMAC3 struct _wsnt__PauseFailedFaultType_Description * SOAP_FMAC4 soap_in__wsnt__PauseFailedFaultType_Description(struct soap*, const char*, struct _wsnt__PauseFailedFaultType_Description *, const char*);

SOAP_FMAC3 struct _wsnt__PauseFailedFaultType_Description * SOAP_FMAC4 soap_new__wsnt__PauseFailedFaultType_Description(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__PauseFailedFaultType_Description(struct soap*, const struct _wsnt__PauseFailedFaultType_Description *, const char*, const char*);

#ifndef soap_write__wsnt__PauseFailedFaultType_Description
#define soap_write__wsnt__PauseFailedFaultType_Description(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__PauseFailedFaultType_Description(soap, data), 0) || soap_put__wsnt__PauseFailedFaultType_Description(soap, data, "wsnt:PauseFailedFaultType-Description", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__PauseFailedFaultType_Description
#define soap_PUT__wsnt__PauseFailedFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__PauseFailedFaultType_Description(soap, data), 0) || soap_put__wsnt__PauseFailedFaultType_Description(soap, data, "wsnt:PauseFailedFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__PauseFailedFaultType_Description
#define soap_PATCH__wsnt__PauseFailedFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__PauseFailedFaultType_Description(soap, data), 0) || soap_put__wsnt__PauseFailedFaultType_Description(soap, data, "wsnt:PauseFailedFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__PauseFailedFaultType_Description
#define soap_POST_send__wsnt__PauseFailedFaultType_Description(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__PauseFailedFaultType_Description(soap, data), 0) || soap_put__wsnt__PauseFailedFaultType_Description(soap, data, "wsnt:PauseFailedFaultType-Description", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__PauseFailedFaultType_Description * SOAP_FMAC4 soap_get__wsnt__PauseFailedFaultType_Description(struct soap*, struct _wsnt__PauseFailedFaultType_Description *, const char*, const char*);

#ifndef soap_read__wsnt__PauseFailedFaultType_Description
#define soap_read__wsnt__PauseFailedFaultType_Description(soap, data) ( ((data) ? (soap_default__wsnt__PauseFailedFaultType_Description(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__PauseFailedFaultType_Description(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__PauseFailedFaultType_Description
#define soap_GET__wsnt__PauseFailedFaultType_Description(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__PauseFailedFaultType_Description(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__PauseFailedFaultType_Description
#define soap_POST_recv__wsnt__PauseFailedFaultType_Description(soap, data) ( soap_read__wsnt__PauseFailedFaultType_Description(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__PauseFailedFaultType_ErrorCode_DEFINED
#define SOAP_TYPE__wsnt__PauseFailedFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__PauseFailedFaultType_ErrorCode(struct soap*, struct _wsnt__PauseFailedFaultType_ErrorCode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__PauseFailedFaultType_ErrorCode(struct soap*, const struct _wsnt__PauseFailedFaultType_ErrorCode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__PauseFailedFaultType_ErrorCode(struct soap*, const char*, int, const struct _wsnt__PauseFailedFaultType_ErrorCode *, const char*);
SOAP_FMAC3 struct _wsnt__PauseFailedFaultType_ErrorCode * SOAP_FMAC4 soap_in__wsnt__PauseFailedFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__PauseFailedFaultType_ErrorCode *, const char*);

SOAP_FMAC3 struct _wsnt__PauseFailedFaultType_ErrorCode * SOAP_FMAC4 soap_new__wsnt__PauseFailedFaultType_ErrorCode(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__PauseFailedFaultType_ErrorCode(struct soap*, const struct _wsnt__PauseFailedFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_write__wsnt__PauseFailedFaultType_ErrorCode
#define soap_write__wsnt__PauseFailedFaultType_ErrorCode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__PauseFailedFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__PauseFailedFaultType_ErrorCode(soap, data, "wsnt:PauseFailedFaultType-ErrorCode", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__PauseFailedFaultType_ErrorCode
#define soap_PUT__wsnt__PauseFailedFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__PauseFailedFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__PauseFailedFaultType_ErrorCode(soap, data, "wsnt:PauseFailedFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__PauseFailedFaultType_ErrorCode
#define soap_PATCH__wsnt__PauseFailedFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__PauseFailedFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__PauseFailedFaultType_ErrorCode(soap, data, "wsnt:PauseFailedFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__PauseFailedFaultType_ErrorCode
#define soap_POST_send__wsnt__PauseFailedFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__PauseFailedFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__PauseFailedFaultType_ErrorCode(soap, data, "wsnt:PauseFailedFaultType-ErrorCode", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__PauseFailedFaultType_ErrorCode * SOAP_FMAC4 soap_get__wsnt__PauseFailedFaultType_ErrorCode(struct soap*, struct _wsnt__PauseFailedFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_read__wsnt__PauseFailedFaultType_ErrorCode
#define soap_read__wsnt__PauseFailedFaultType_ErrorCode(soap, data) ( ((data) ? (soap_default__wsnt__PauseFailedFaultType_ErrorCode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__PauseFailedFaultType_ErrorCode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__PauseFailedFaultType_ErrorCode
#define soap_GET__wsnt__PauseFailedFaultType_ErrorCode(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__PauseFailedFaultType_ErrorCode(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__PauseFailedFaultType_ErrorCode
#define soap_POST_recv__wsnt__PauseFailedFaultType_ErrorCode(soap, data) ( soap_read__wsnt__PauseFailedFaultType_ErrorCode(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsnt__PauseFailedFaultType_DEFINED
#define SOAP_TYPE_wsnt__PauseFailedFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsnt__PauseFailedFaultType(struct soap*, struct wsnt__PauseFailedFaultType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__PauseFailedFaultType(struct soap*, const struct wsnt__PauseFailedFaultType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__PauseFailedFaultType(struct soap*, const char*, int, const struct wsnt__PauseFailedFaultType *, const char*);
SOAP_FMAC3 struct wsnt__PauseFailedFaultType * SOAP_FMAC4 soap_in_wsnt__PauseFailedFaultType(struct soap*, const char*, struct wsnt__PauseFailedFaultType *, const char*);

SOAP_FMAC3 struct wsnt__PauseFailedFaultType * SOAP_FMAC4 soap_new_wsnt__PauseFailedFaultType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__PauseFailedFaultType(struct soap*, const struct wsnt__PauseFailedFaultType *, const char*, const char*);

#ifndef soap_write_wsnt__PauseFailedFaultType
#define soap_write_wsnt__PauseFailedFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsnt__PauseFailedFaultType(soap, data), 0) || soap_put_wsnt__PauseFailedFaultType(soap, data, "wsnt:PauseFailedFaultType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsnt__PauseFailedFaultType
#define soap_PUT_wsnt__PauseFailedFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__PauseFailedFaultType(soap, data), 0) || soap_put_wsnt__PauseFailedFaultType(soap, data, "wsnt:PauseFailedFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsnt__PauseFailedFaultType
#define soap_PATCH_wsnt__PauseFailedFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__PauseFailedFaultType(soap, data), 0) || soap_put_wsnt__PauseFailedFaultType(soap, data, "wsnt:PauseFailedFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsnt__PauseFailedFaultType
#define soap_POST_send_wsnt__PauseFailedFaultType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__PauseFailedFaultType(soap, data), 0) || soap_put_wsnt__PauseFailedFaultType(soap, data, "wsnt:PauseFailedFaultType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsnt__PauseFailedFaultType * SOAP_FMAC4 soap_get_wsnt__PauseFailedFaultType(struct soap*, struct wsnt__PauseFailedFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__PauseFailedFaultType
#define soap_read_wsnt__PauseFailedFaultType(soap, data) ( ((data) ? (soap_default_wsnt__PauseFailedFaultType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__PauseFailedFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsnt__PauseFailedFaultType
#define soap_GET_wsnt__PauseFailedFaultType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsnt__PauseFailedFaultType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsnt__PauseFailedFaultType
#define soap_POST_recv_wsnt__PauseFailedFaultType(soap, data) ( soap_read_wsnt__PauseFailedFaultType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__UnableToDestroySubscriptionFaultType_FaultCause_DEFINED
#define SOAP_TYPE__wsnt__UnableToDestroySubscriptionFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(struct soap*, struct _wsnt__UnableToDestroySubscriptionFaultType_FaultCause *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(struct soap*, const struct _wsnt__UnableToDestroySubscriptionFaultType_FaultCause *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(struct soap*, const char*, int, const struct _wsnt__UnableToDestroySubscriptionFaultType_FaultCause *, const char*);
SOAP_FMAC3 struct _wsnt__UnableToDestroySubscriptionFaultType_FaultCause * SOAP_FMAC4 soap_in__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(struct soap*, const char*, struct _wsnt__UnableToDestroySubscriptionFaultType_FaultCause *, const char*);

SOAP_FMAC3 struct _wsnt__UnableToDestroySubscriptionFaultType_FaultCause * SOAP_FMAC4 soap_new__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(struct soap*, const struct _wsnt__UnableToDestroySubscriptionFaultType_FaultCause *, const char*, const char*);

#ifndef soap_write__wsnt__UnableToDestroySubscriptionFaultType_FaultCause
#define soap_write__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(soap, data, "wsnt:UnableToDestroySubscriptionFaultType-FaultCause", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__UnableToDestroySubscriptionFaultType_FaultCause
#define soap_PUT__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(soap, data, "wsnt:UnableToDestroySubscriptionFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__UnableToDestroySubscriptionFaultType_FaultCause
#define soap_PATCH__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(soap, data, "wsnt:UnableToDestroySubscriptionFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__UnableToDestroySubscriptionFaultType_FaultCause
#define soap_POST_send__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(soap, data, "wsnt:UnableToDestroySubscriptionFaultType-FaultCause", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__UnableToDestroySubscriptionFaultType_FaultCause * SOAP_FMAC4 soap_get__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(struct soap*, struct _wsnt__UnableToDestroySubscriptionFaultType_FaultCause *, const char*, const char*);

#ifndef soap_read__wsnt__UnableToDestroySubscriptionFaultType_FaultCause
#define soap_read__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(soap, data) ( ((data) ? (soap_default__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__UnableToDestroySubscriptionFaultType_FaultCause
#define soap_GET__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__UnableToDestroySubscriptionFaultType_FaultCause
#define soap_POST_recv__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(soap, data) ( soap_read__wsnt__UnableToDestroySubscriptionFaultType_FaultCause(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__UnableToDestroySubscriptionFaultType_Description_DEFINED
#define SOAP_TYPE__wsnt__UnableToDestroySubscriptionFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__UnableToDestroySubscriptionFaultType_Description(struct soap*, struct _wsnt__UnableToDestroySubscriptionFaultType_Description *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__UnableToDestroySubscriptionFaultType_Description(struct soap*, const struct _wsnt__UnableToDestroySubscriptionFaultType_Description *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UnableToDestroySubscriptionFaultType_Description(struct soap*, const char*, int, const struct _wsnt__UnableToDestroySubscriptionFaultType_Description *, const char*);
SOAP_FMAC3 struct _wsnt__UnableToDestroySubscriptionFaultType_Description * SOAP_FMAC4 soap_in__wsnt__UnableToDestroySubscriptionFaultType_Description(struct soap*, const char*, struct _wsnt__UnableToDestroySubscriptionFaultType_Description *, const char*);

SOAP_FMAC3 struct _wsnt__UnableToDestroySubscriptionFaultType_Description * SOAP_FMAC4 soap_new__wsnt__UnableToDestroySubscriptionFaultType_Description(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__UnableToDestroySubscriptionFaultType_Description(struct soap*, const struct _wsnt__UnableToDestroySubscriptionFaultType_Description *, const char*, const char*);

#ifndef soap_write__wsnt__UnableToDestroySubscriptionFaultType_Description
#define soap_write__wsnt__UnableToDestroySubscriptionFaultType_Description(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__UnableToDestroySubscriptionFaultType_Description(soap, data), 0) || soap_put__wsnt__UnableToDestroySubscriptionFaultType_Description(soap, data, "wsnt:UnableToDestroySubscriptionFaultType-Description", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__UnableToDestroySubscriptionFaultType_Description
#define soap_PUT__wsnt__UnableToDestroySubscriptionFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToDestroySubscriptionFaultType_Description(soap, data), 0) || soap_put__wsnt__UnableToDestroySubscriptionFaultType_Description(soap, data, "wsnt:UnableToDestroySubscriptionFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__UnableToDestroySubscriptionFaultType_Description
#define soap_PATCH__wsnt__UnableToDestroySubscriptionFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToDestroySubscriptionFaultType_Description(soap, data), 0) || soap_put__wsnt__UnableToDestroySubscriptionFaultType_Description(soap, data, "wsnt:UnableToDestroySubscriptionFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__UnableToDestroySubscriptionFaultType_Description
#define soap_POST_send__wsnt__UnableToDestroySubscriptionFaultType_Description(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToDestroySubscriptionFaultType_Description(soap, data), 0) || soap_put__wsnt__UnableToDestroySubscriptionFaultType_Description(soap, data, "wsnt:UnableToDestroySubscriptionFaultType-Description", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__UnableToDestroySubscriptionFaultType_Description * SOAP_FMAC4 soap_get__wsnt__UnableToDestroySubscriptionFaultType_Description(struct soap*, struct _wsnt__UnableToDestroySubscriptionFaultType_Description *, const char*, const char*);

#ifndef soap_read__wsnt__UnableToDestroySubscriptionFaultType_Description
#define soap_read__wsnt__UnableToDestroySubscriptionFaultType_Description(soap, data) ( ((data) ? (soap_default__wsnt__UnableToDestroySubscriptionFaultType_Description(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UnableToDestroySubscriptionFaultType_Description(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__UnableToDestroySubscriptionFaultType_Description
#define soap_GET__wsnt__UnableToDestroySubscriptionFaultType_Description(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__UnableToDestroySubscriptionFaultType_Description(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__UnableToDestroySubscriptionFaultType_Description
#define soap_POST_recv__wsnt__UnableToDestroySubscriptionFaultType_Description(soap, data) ( soap_read__wsnt__UnableToDestroySubscriptionFaultType_Description(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode_DEFINED
#define SOAP_TYPE__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(struct soap*, struct _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(struct soap*, const struct _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(struct soap*, const char*, int, const struct _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode *, const char*);
SOAP_FMAC3 struct _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode * SOAP_FMAC4 soap_in__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode *, const char*);

SOAP_FMAC3 struct _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode * SOAP_FMAC4 soap_new__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(struct soap*, const struct _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_write__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode
#define soap_write__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(soap, data, "wsnt:UnableToDestroySubscriptionFaultType-ErrorCode", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode
#define soap_PUT__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(soap, data, "wsnt:UnableToDestroySubscriptionFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode
#define soap_PATCH__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(soap, data, "wsnt:UnableToDestroySubscriptionFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode
#define soap_POST_send__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(soap, data, "wsnt:UnableToDestroySubscriptionFaultType-ErrorCode", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode * SOAP_FMAC4 soap_get__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(struct soap*, struct _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_read__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode
#define soap_read__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(soap, data) ( ((data) ? (soap_default__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode
#define soap_GET__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode
#define soap_POST_recv__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(soap, data) ( soap_read__wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsnt__UnableToDestroySubscriptionFaultType_DEFINED
#define SOAP_TYPE_wsnt__UnableToDestroySubscriptionFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsnt__UnableToDestroySubscriptionFaultType(struct soap*, struct wsnt__UnableToDestroySubscriptionFaultType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__UnableToDestroySubscriptionFaultType(struct soap*, const struct wsnt__UnableToDestroySubscriptionFaultType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__UnableToDestroySubscriptionFaultType(struct soap*, const char*, int, const struct wsnt__UnableToDestroySubscriptionFaultType *, const char*);
SOAP_FMAC3 struct wsnt__UnableToDestroySubscriptionFaultType * SOAP_FMAC4 soap_in_wsnt__UnableToDestroySubscriptionFaultType(struct soap*, const char*, struct wsnt__UnableToDestroySubscriptionFaultType *, const char*);

SOAP_FMAC3 struct wsnt__UnableToDestroySubscriptionFaultType * SOAP_FMAC4 soap_new_wsnt__UnableToDestroySubscriptionFaultType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__UnableToDestroySubscriptionFaultType(struct soap*, const struct wsnt__UnableToDestroySubscriptionFaultType *, const char*, const char*);

#ifndef soap_write_wsnt__UnableToDestroySubscriptionFaultType
#define soap_write_wsnt__UnableToDestroySubscriptionFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsnt__UnableToDestroySubscriptionFaultType(soap, data), 0) || soap_put_wsnt__UnableToDestroySubscriptionFaultType(soap, data, "wsnt:UnableToDestroySubscriptionFaultType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsnt__UnableToDestroySubscriptionFaultType
#define soap_PUT_wsnt__UnableToDestroySubscriptionFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__UnableToDestroySubscriptionFaultType(soap, data), 0) || soap_put_wsnt__UnableToDestroySubscriptionFaultType(soap, data, "wsnt:UnableToDestroySubscriptionFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsnt__UnableToDestroySubscriptionFaultType
#define soap_PATCH_wsnt__UnableToDestroySubscriptionFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__UnableToDestroySubscriptionFaultType(soap, data), 0) || soap_put_wsnt__UnableToDestroySubscriptionFaultType(soap, data, "wsnt:UnableToDestroySubscriptionFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsnt__UnableToDestroySubscriptionFaultType
#define soap_POST_send_wsnt__UnableToDestroySubscriptionFaultType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__UnableToDestroySubscriptionFaultType(soap, data), 0) || soap_put_wsnt__UnableToDestroySubscriptionFaultType(soap, data, "wsnt:UnableToDestroySubscriptionFaultType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsnt__UnableToDestroySubscriptionFaultType * SOAP_FMAC4 soap_get_wsnt__UnableToDestroySubscriptionFaultType(struct soap*, struct wsnt__UnableToDestroySubscriptionFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__UnableToDestroySubscriptionFaultType
#define soap_read_wsnt__UnableToDestroySubscriptionFaultType(soap, data) ( ((data) ? (soap_default_wsnt__UnableToDestroySubscriptionFaultType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__UnableToDestroySubscriptionFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsnt__UnableToDestroySubscriptionFaultType
#define soap_GET_wsnt__UnableToDestroySubscriptionFaultType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsnt__UnableToDestroySubscriptionFaultType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsnt__UnableToDestroySubscriptionFaultType
#define soap_POST_recv_wsnt__UnableToDestroySubscriptionFaultType(soap, data) ( soap_read_wsnt__UnableToDestroySubscriptionFaultType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__UnacceptableTerminationTimeFaultType_FaultCause_DEFINED
#define SOAP_TYPE__wsnt__UnacceptableTerminationTimeFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(struct soap*, struct _wsnt__UnacceptableTerminationTimeFaultType_FaultCause *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(struct soap*, const struct _wsnt__UnacceptableTerminationTimeFaultType_FaultCause *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(struct soap*, const char*, int, const struct _wsnt__UnacceptableTerminationTimeFaultType_FaultCause *, const char*);
SOAP_FMAC3 struct _wsnt__UnacceptableTerminationTimeFaultType_FaultCause * SOAP_FMAC4 soap_in__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(struct soap*, const char*, struct _wsnt__UnacceptableTerminationTimeFaultType_FaultCause *, const char*);

SOAP_FMAC3 struct _wsnt__UnacceptableTerminationTimeFaultType_FaultCause * SOAP_FMAC4 soap_new__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(struct soap*, const struct _wsnt__UnacceptableTerminationTimeFaultType_FaultCause *, const char*, const char*);

#ifndef soap_write__wsnt__UnacceptableTerminationTimeFaultType_FaultCause
#define soap_write__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(soap, data, "wsnt:UnacceptableTerminationTimeFaultType-FaultCause", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__UnacceptableTerminationTimeFaultType_FaultCause
#define soap_PUT__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(soap, data, "wsnt:UnacceptableTerminationTimeFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__UnacceptableTerminationTimeFaultType_FaultCause
#define soap_PATCH__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(soap, data, "wsnt:UnacceptableTerminationTimeFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__UnacceptableTerminationTimeFaultType_FaultCause
#define soap_POST_send__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(soap, data, "wsnt:UnacceptableTerminationTimeFaultType-FaultCause", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__UnacceptableTerminationTimeFaultType_FaultCause * SOAP_FMAC4 soap_get__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(struct soap*, struct _wsnt__UnacceptableTerminationTimeFaultType_FaultCause *, const char*, const char*);

#ifndef soap_read__wsnt__UnacceptableTerminationTimeFaultType_FaultCause
#define soap_read__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(soap, data) ( ((data) ? (soap_default__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__UnacceptableTerminationTimeFaultType_FaultCause
#define soap_GET__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__UnacceptableTerminationTimeFaultType_FaultCause
#define soap_POST_recv__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(soap, data) ( soap_read__wsnt__UnacceptableTerminationTimeFaultType_FaultCause(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__UnacceptableTerminationTimeFaultType_Description_DEFINED
#define SOAP_TYPE__wsnt__UnacceptableTerminationTimeFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__UnacceptableTerminationTimeFaultType_Description(struct soap*, struct _wsnt__UnacceptableTerminationTimeFaultType_Description *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__UnacceptableTerminationTimeFaultType_Description(struct soap*, const struct _wsnt__UnacceptableTerminationTimeFaultType_Description *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UnacceptableTerminationTimeFaultType_Description(struct soap*, const char*, int, const struct _wsnt__UnacceptableTerminationTimeFaultType_Description *, const char*);
SOAP_FMAC3 struct _wsnt__UnacceptableTerminationTimeFaultType_Description * SOAP_FMAC4 soap_in__wsnt__UnacceptableTerminationTimeFaultType_Description(struct soap*, const char*, struct _wsnt__UnacceptableTerminationTimeFaultType_Description *, const char*);

SOAP_FMAC3 struct _wsnt__UnacceptableTerminationTimeFaultType_Description * SOAP_FMAC4 soap_new__wsnt__UnacceptableTerminationTimeFaultType_Description(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__UnacceptableTerminationTimeFaultType_Description(struct soap*, const struct _wsnt__UnacceptableTerminationTimeFaultType_Description *, const char*, const char*);

#ifndef soap_write__wsnt__UnacceptableTerminationTimeFaultType_Description
#define soap_write__wsnt__UnacceptableTerminationTimeFaultType_Description(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__UnacceptableTerminationTimeFaultType_Description(soap, data), 0) || soap_put__wsnt__UnacceptableTerminationTimeFaultType_Description(soap, data, "wsnt:UnacceptableTerminationTimeFaultType-Description", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__UnacceptableTerminationTimeFaultType_Description
#define soap_PUT__wsnt__UnacceptableTerminationTimeFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnacceptableTerminationTimeFaultType_Description(soap, data), 0) || soap_put__wsnt__UnacceptableTerminationTimeFaultType_Description(soap, data, "wsnt:UnacceptableTerminationTimeFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__UnacceptableTerminationTimeFaultType_Description
#define soap_PATCH__wsnt__UnacceptableTerminationTimeFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnacceptableTerminationTimeFaultType_Description(soap, data), 0) || soap_put__wsnt__UnacceptableTerminationTimeFaultType_Description(soap, data, "wsnt:UnacceptableTerminationTimeFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__UnacceptableTerminationTimeFaultType_Description
#define soap_POST_send__wsnt__UnacceptableTerminationTimeFaultType_Description(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnacceptableTerminationTimeFaultType_Description(soap, data), 0) || soap_put__wsnt__UnacceptableTerminationTimeFaultType_Description(soap, data, "wsnt:UnacceptableTerminationTimeFaultType-Description", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__UnacceptableTerminationTimeFaultType_Description * SOAP_FMAC4 soap_get__wsnt__UnacceptableTerminationTimeFaultType_Description(struct soap*, struct _wsnt__UnacceptableTerminationTimeFaultType_Description *, const char*, const char*);

#ifndef soap_read__wsnt__UnacceptableTerminationTimeFaultType_Description
#define soap_read__wsnt__UnacceptableTerminationTimeFaultType_Description(soap, data) ( ((data) ? (soap_default__wsnt__UnacceptableTerminationTimeFaultType_Description(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UnacceptableTerminationTimeFaultType_Description(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__UnacceptableTerminationTimeFaultType_Description
#define soap_GET__wsnt__UnacceptableTerminationTimeFaultType_Description(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__UnacceptableTerminationTimeFaultType_Description(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__UnacceptableTerminationTimeFaultType_Description
#define soap_POST_recv__wsnt__UnacceptableTerminationTimeFaultType_Description(soap, data) ( soap_read__wsnt__UnacceptableTerminationTimeFaultType_Description(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode_DEFINED
#define SOAP_TYPE__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(struct soap*, struct _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(struct soap*, const struct _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(struct soap*, const char*, int, const struct _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode *, const char*);
SOAP_FMAC3 struct _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode * SOAP_FMAC4 soap_in__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode *, const char*);

SOAP_FMAC3 struct _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode * SOAP_FMAC4 soap_new__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(struct soap*, const struct _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_write__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode
#define soap_write__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(soap, data, "wsnt:UnacceptableTerminationTimeFaultType-ErrorCode", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode
#define soap_PUT__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(soap, data, "wsnt:UnacceptableTerminationTimeFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode
#define soap_PATCH__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(soap, data, "wsnt:UnacceptableTerminationTimeFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode
#define soap_POST_send__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(soap, data, "wsnt:UnacceptableTerminationTimeFaultType-ErrorCode", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode * SOAP_FMAC4 soap_get__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(struct soap*, struct _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_read__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode
#define soap_read__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(soap, data) ( ((data) ? (soap_default__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode
#define soap_GET__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode
#define soap_POST_recv__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(soap, data) ( soap_read__wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsnt__UnacceptableTerminationTimeFaultType_DEFINED
#define SOAP_TYPE_wsnt__UnacceptableTerminationTimeFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsnt__UnacceptableTerminationTimeFaultType(struct soap*, struct wsnt__UnacceptableTerminationTimeFaultType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__UnacceptableTerminationTimeFaultType(struct soap*, const struct wsnt__UnacceptableTerminationTimeFaultType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__UnacceptableTerminationTimeFaultType(struct soap*, const char*, int, const struct wsnt__UnacceptableTerminationTimeFaultType *, const char*);
SOAP_FMAC3 struct wsnt__UnacceptableTerminationTimeFaultType * SOAP_FMAC4 soap_in_wsnt__UnacceptableTerminationTimeFaultType(struct soap*, const char*, struct wsnt__UnacceptableTerminationTimeFaultType *, const char*);

SOAP_FMAC3 struct wsnt__UnacceptableTerminationTimeFaultType * SOAP_FMAC4 soap_new_wsnt__UnacceptableTerminationTimeFaultType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__UnacceptableTerminationTimeFaultType(struct soap*, const struct wsnt__UnacceptableTerminationTimeFaultType *, const char*, const char*);

#ifndef soap_write_wsnt__UnacceptableTerminationTimeFaultType
#define soap_write_wsnt__UnacceptableTerminationTimeFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsnt__UnacceptableTerminationTimeFaultType(soap, data), 0) || soap_put_wsnt__UnacceptableTerminationTimeFaultType(soap, data, "wsnt:UnacceptableTerminationTimeFaultType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsnt__UnacceptableTerminationTimeFaultType
#define soap_PUT_wsnt__UnacceptableTerminationTimeFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__UnacceptableTerminationTimeFaultType(soap, data), 0) || soap_put_wsnt__UnacceptableTerminationTimeFaultType(soap, data, "wsnt:UnacceptableTerminationTimeFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsnt__UnacceptableTerminationTimeFaultType
#define soap_PATCH_wsnt__UnacceptableTerminationTimeFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__UnacceptableTerminationTimeFaultType(soap, data), 0) || soap_put_wsnt__UnacceptableTerminationTimeFaultType(soap, data, "wsnt:UnacceptableTerminationTimeFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsnt__UnacceptableTerminationTimeFaultType
#define soap_POST_send_wsnt__UnacceptableTerminationTimeFaultType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__UnacceptableTerminationTimeFaultType(soap, data), 0) || soap_put_wsnt__UnacceptableTerminationTimeFaultType(soap, data, "wsnt:UnacceptableTerminationTimeFaultType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsnt__UnacceptableTerminationTimeFaultType * SOAP_FMAC4 soap_get_wsnt__UnacceptableTerminationTimeFaultType(struct soap*, struct wsnt__UnacceptableTerminationTimeFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__UnacceptableTerminationTimeFaultType
#define soap_read_wsnt__UnacceptableTerminationTimeFaultType(soap, data) ( ((data) ? (soap_default_wsnt__UnacceptableTerminationTimeFaultType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__UnacceptableTerminationTimeFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsnt__UnacceptableTerminationTimeFaultType
#define soap_GET_wsnt__UnacceptableTerminationTimeFaultType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsnt__UnacceptableTerminationTimeFaultType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsnt__UnacceptableTerminationTimeFaultType
#define soap_POST_recv_wsnt__UnacceptableTerminationTimeFaultType(soap, data) ( soap_read_wsnt__UnacceptableTerminationTimeFaultType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__UnableToCreatePullPointFaultType_FaultCause_DEFINED
#define SOAP_TYPE__wsnt__UnableToCreatePullPointFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__UnableToCreatePullPointFaultType_FaultCause(struct soap*, struct _wsnt__UnableToCreatePullPointFaultType_FaultCause *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__UnableToCreatePullPointFaultType_FaultCause(struct soap*, const struct _wsnt__UnableToCreatePullPointFaultType_FaultCause *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UnableToCreatePullPointFaultType_FaultCause(struct soap*, const char*, int, const struct _wsnt__UnableToCreatePullPointFaultType_FaultCause *, const char*);
SOAP_FMAC3 struct _wsnt__UnableToCreatePullPointFaultType_FaultCause * SOAP_FMAC4 soap_in__wsnt__UnableToCreatePullPointFaultType_FaultCause(struct soap*, const char*, struct _wsnt__UnableToCreatePullPointFaultType_FaultCause *, const char*);

SOAP_FMAC3 struct _wsnt__UnableToCreatePullPointFaultType_FaultCause * SOAP_FMAC4 soap_new__wsnt__UnableToCreatePullPointFaultType_FaultCause(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__UnableToCreatePullPointFaultType_FaultCause(struct soap*, const struct _wsnt__UnableToCreatePullPointFaultType_FaultCause *, const char*, const char*);

#ifndef soap_write__wsnt__UnableToCreatePullPointFaultType_FaultCause
#define soap_write__wsnt__UnableToCreatePullPointFaultType_FaultCause(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__UnableToCreatePullPointFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnableToCreatePullPointFaultType_FaultCause(soap, data, "wsnt:UnableToCreatePullPointFaultType-FaultCause", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__UnableToCreatePullPointFaultType_FaultCause
#define soap_PUT__wsnt__UnableToCreatePullPointFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToCreatePullPointFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnableToCreatePullPointFaultType_FaultCause(soap, data, "wsnt:UnableToCreatePullPointFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__UnableToCreatePullPointFaultType_FaultCause
#define soap_PATCH__wsnt__UnableToCreatePullPointFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToCreatePullPointFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnableToCreatePullPointFaultType_FaultCause(soap, data, "wsnt:UnableToCreatePullPointFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__UnableToCreatePullPointFaultType_FaultCause
#define soap_POST_send__wsnt__UnableToCreatePullPointFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToCreatePullPointFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnableToCreatePullPointFaultType_FaultCause(soap, data, "wsnt:UnableToCreatePullPointFaultType-FaultCause", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__UnableToCreatePullPointFaultType_FaultCause * SOAP_FMAC4 soap_get__wsnt__UnableToCreatePullPointFaultType_FaultCause(struct soap*, struct _wsnt__UnableToCreatePullPointFaultType_FaultCause *, const char*, const char*);

#ifndef soap_read__wsnt__UnableToCreatePullPointFaultType_FaultCause
#define soap_read__wsnt__UnableToCreatePullPointFaultType_FaultCause(soap, data) ( ((data) ? (soap_default__wsnt__UnableToCreatePullPointFaultType_FaultCause(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UnableToCreatePullPointFaultType_FaultCause(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__UnableToCreatePullPointFaultType_FaultCause
#define soap_GET__wsnt__UnableToCreatePullPointFaultType_FaultCause(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__UnableToCreatePullPointFaultType_FaultCause(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__UnableToCreatePullPointFaultType_FaultCause
#define soap_POST_recv__wsnt__UnableToCreatePullPointFaultType_FaultCause(soap, data) ( soap_read__wsnt__UnableToCreatePullPointFaultType_FaultCause(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__UnableToCreatePullPointFaultType_Description_DEFINED
#define SOAP_TYPE__wsnt__UnableToCreatePullPointFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__UnableToCreatePullPointFaultType_Description(struct soap*, struct _wsnt__UnableToCreatePullPointFaultType_Description *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__UnableToCreatePullPointFaultType_Description(struct soap*, const struct _wsnt__UnableToCreatePullPointFaultType_Description *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UnableToCreatePullPointFaultType_Description(struct soap*, const char*, int, const struct _wsnt__UnableToCreatePullPointFaultType_Description *, const char*);
SOAP_FMAC3 struct _wsnt__UnableToCreatePullPointFaultType_Description * SOAP_FMAC4 soap_in__wsnt__UnableToCreatePullPointFaultType_Description(struct soap*, const char*, struct _wsnt__UnableToCreatePullPointFaultType_Description *, const char*);

SOAP_FMAC3 struct _wsnt__UnableToCreatePullPointFaultType_Description * SOAP_FMAC4 soap_new__wsnt__UnableToCreatePullPointFaultType_Description(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__UnableToCreatePullPointFaultType_Description(struct soap*, const struct _wsnt__UnableToCreatePullPointFaultType_Description *, const char*, const char*);

#ifndef soap_write__wsnt__UnableToCreatePullPointFaultType_Description
#define soap_write__wsnt__UnableToCreatePullPointFaultType_Description(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__UnableToCreatePullPointFaultType_Description(soap, data), 0) || soap_put__wsnt__UnableToCreatePullPointFaultType_Description(soap, data, "wsnt:UnableToCreatePullPointFaultType-Description", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__UnableToCreatePullPointFaultType_Description
#define soap_PUT__wsnt__UnableToCreatePullPointFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToCreatePullPointFaultType_Description(soap, data), 0) || soap_put__wsnt__UnableToCreatePullPointFaultType_Description(soap, data, "wsnt:UnableToCreatePullPointFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__UnableToCreatePullPointFaultType_Description
#define soap_PATCH__wsnt__UnableToCreatePullPointFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToCreatePullPointFaultType_Description(soap, data), 0) || soap_put__wsnt__UnableToCreatePullPointFaultType_Description(soap, data, "wsnt:UnableToCreatePullPointFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__UnableToCreatePullPointFaultType_Description
#define soap_POST_send__wsnt__UnableToCreatePullPointFaultType_Description(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToCreatePullPointFaultType_Description(soap, data), 0) || soap_put__wsnt__UnableToCreatePullPointFaultType_Description(soap, data, "wsnt:UnableToCreatePullPointFaultType-Description", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__UnableToCreatePullPointFaultType_Description * SOAP_FMAC4 soap_get__wsnt__UnableToCreatePullPointFaultType_Description(struct soap*, struct _wsnt__UnableToCreatePullPointFaultType_Description *, const char*, const char*);

#ifndef soap_read__wsnt__UnableToCreatePullPointFaultType_Description
#define soap_read__wsnt__UnableToCreatePullPointFaultType_Description(soap, data) ( ((data) ? (soap_default__wsnt__UnableToCreatePullPointFaultType_Description(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UnableToCreatePullPointFaultType_Description(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__UnableToCreatePullPointFaultType_Description
#define soap_GET__wsnt__UnableToCreatePullPointFaultType_Description(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__UnableToCreatePullPointFaultType_Description(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__UnableToCreatePullPointFaultType_Description
#define soap_POST_recv__wsnt__UnableToCreatePullPointFaultType_Description(soap, data) ( soap_read__wsnt__UnableToCreatePullPointFaultType_Description(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__UnableToCreatePullPointFaultType_ErrorCode_DEFINED
#define SOAP_TYPE__wsnt__UnableToCreatePullPointFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__UnableToCreatePullPointFaultType_ErrorCode(struct soap*, struct _wsnt__UnableToCreatePullPointFaultType_ErrorCode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__UnableToCreatePullPointFaultType_ErrorCode(struct soap*, const struct _wsnt__UnableToCreatePullPointFaultType_ErrorCode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UnableToCreatePullPointFaultType_ErrorCode(struct soap*, const char*, int, const struct _wsnt__UnableToCreatePullPointFaultType_ErrorCode *, const char*);
SOAP_FMAC3 struct _wsnt__UnableToCreatePullPointFaultType_ErrorCode * SOAP_FMAC4 soap_in__wsnt__UnableToCreatePullPointFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__UnableToCreatePullPointFaultType_ErrorCode *, const char*);

SOAP_FMAC3 struct _wsnt__UnableToCreatePullPointFaultType_ErrorCode * SOAP_FMAC4 soap_new__wsnt__UnableToCreatePullPointFaultType_ErrorCode(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__UnableToCreatePullPointFaultType_ErrorCode(struct soap*, const struct _wsnt__UnableToCreatePullPointFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_write__wsnt__UnableToCreatePullPointFaultType_ErrorCode
#define soap_write__wsnt__UnableToCreatePullPointFaultType_ErrorCode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__UnableToCreatePullPointFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnableToCreatePullPointFaultType_ErrorCode(soap, data, "wsnt:UnableToCreatePullPointFaultType-ErrorCode", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__UnableToCreatePullPointFaultType_ErrorCode
#define soap_PUT__wsnt__UnableToCreatePullPointFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToCreatePullPointFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnableToCreatePullPointFaultType_ErrorCode(soap, data, "wsnt:UnableToCreatePullPointFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__UnableToCreatePullPointFaultType_ErrorCode
#define soap_PATCH__wsnt__UnableToCreatePullPointFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToCreatePullPointFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnableToCreatePullPointFaultType_ErrorCode(soap, data, "wsnt:UnableToCreatePullPointFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__UnableToCreatePullPointFaultType_ErrorCode
#define soap_POST_send__wsnt__UnableToCreatePullPointFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToCreatePullPointFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnableToCreatePullPointFaultType_ErrorCode(soap, data, "wsnt:UnableToCreatePullPointFaultType-ErrorCode", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__UnableToCreatePullPointFaultType_ErrorCode * SOAP_FMAC4 soap_get__wsnt__UnableToCreatePullPointFaultType_ErrorCode(struct soap*, struct _wsnt__UnableToCreatePullPointFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_read__wsnt__UnableToCreatePullPointFaultType_ErrorCode
#define soap_read__wsnt__UnableToCreatePullPointFaultType_ErrorCode(soap, data) ( ((data) ? (soap_default__wsnt__UnableToCreatePullPointFaultType_ErrorCode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UnableToCreatePullPointFaultType_ErrorCode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__UnableToCreatePullPointFaultType_ErrorCode
#define soap_GET__wsnt__UnableToCreatePullPointFaultType_ErrorCode(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__UnableToCreatePullPointFaultType_ErrorCode(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__UnableToCreatePullPointFaultType_ErrorCode
#define soap_POST_recv__wsnt__UnableToCreatePullPointFaultType_ErrorCode(soap, data) ( soap_read__wsnt__UnableToCreatePullPointFaultType_ErrorCode(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsnt__UnableToCreatePullPointFaultType_DEFINED
#define SOAP_TYPE_wsnt__UnableToCreatePullPointFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsnt__UnableToCreatePullPointFaultType(struct soap*, struct wsnt__UnableToCreatePullPointFaultType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__UnableToCreatePullPointFaultType(struct soap*, const struct wsnt__UnableToCreatePullPointFaultType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__UnableToCreatePullPointFaultType(struct soap*, const char*, int, const struct wsnt__UnableToCreatePullPointFaultType *, const char*);
SOAP_FMAC3 struct wsnt__UnableToCreatePullPointFaultType * SOAP_FMAC4 soap_in_wsnt__UnableToCreatePullPointFaultType(struct soap*, const char*, struct wsnt__UnableToCreatePullPointFaultType *, const char*);

SOAP_FMAC3 struct wsnt__UnableToCreatePullPointFaultType * SOAP_FMAC4 soap_new_wsnt__UnableToCreatePullPointFaultType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__UnableToCreatePullPointFaultType(struct soap*, const struct wsnt__UnableToCreatePullPointFaultType *, const char*, const char*);

#ifndef soap_write_wsnt__UnableToCreatePullPointFaultType
#define soap_write_wsnt__UnableToCreatePullPointFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsnt__UnableToCreatePullPointFaultType(soap, data), 0) || soap_put_wsnt__UnableToCreatePullPointFaultType(soap, data, "wsnt:UnableToCreatePullPointFaultType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsnt__UnableToCreatePullPointFaultType
#define soap_PUT_wsnt__UnableToCreatePullPointFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__UnableToCreatePullPointFaultType(soap, data), 0) || soap_put_wsnt__UnableToCreatePullPointFaultType(soap, data, "wsnt:UnableToCreatePullPointFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsnt__UnableToCreatePullPointFaultType
#define soap_PATCH_wsnt__UnableToCreatePullPointFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__UnableToCreatePullPointFaultType(soap, data), 0) || soap_put_wsnt__UnableToCreatePullPointFaultType(soap, data, "wsnt:UnableToCreatePullPointFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsnt__UnableToCreatePullPointFaultType
#define soap_POST_send_wsnt__UnableToCreatePullPointFaultType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__UnableToCreatePullPointFaultType(soap, data), 0) || soap_put_wsnt__UnableToCreatePullPointFaultType(soap, data, "wsnt:UnableToCreatePullPointFaultType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsnt__UnableToCreatePullPointFaultType * SOAP_FMAC4 soap_get_wsnt__UnableToCreatePullPointFaultType(struct soap*, struct wsnt__UnableToCreatePullPointFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__UnableToCreatePullPointFaultType
#define soap_read_wsnt__UnableToCreatePullPointFaultType(soap, data) ( ((data) ? (soap_default_wsnt__UnableToCreatePullPointFaultType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__UnableToCreatePullPointFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsnt__UnableToCreatePullPointFaultType
#define soap_GET_wsnt__UnableToCreatePullPointFaultType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsnt__UnableToCreatePullPointFaultType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsnt__UnableToCreatePullPointFaultType
#define soap_POST_recv_wsnt__UnableToCreatePullPointFaultType(soap, data) ( soap_read_wsnt__UnableToCreatePullPointFaultType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__UnableToDestroyPullPointFaultType_FaultCause_DEFINED
#define SOAP_TYPE__wsnt__UnableToDestroyPullPointFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__UnableToDestroyPullPointFaultType_FaultCause(struct soap*, struct _wsnt__UnableToDestroyPullPointFaultType_FaultCause *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__UnableToDestroyPullPointFaultType_FaultCause(struct soap*, const struct _wsnt__UnableToDestroyPullPointFaultType_FaultCause *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UnableToDestroyPullPointFaultType_FaultCause(struct soap*, const char*, int, const struct _wsnt__UnableToDestroyPullPointFaultType_FaultCause *, const char*);
SOAP_FMAC3 struct _wsnt__UnableToDestroyPullPointFaultType_FaultCause * SOAP_FMAC4 soap_in__wsnt__UnableToDestroyPullPointFaultType_FaultCause(struct soap*, const char*, struct _wsnt__UnableToDestroyPullPointFaultType_FaultCause *, const char*);

SOAP_FMAC3 struct _wsnt__UnableToDestroyPullPointFaultType_FaultCause * SOAP_FMAC4 soap_new__wsnt__UnableToDestroyPullPointFaultType_FaultCause(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__UnableToDestroyPullPointFaultType_FaultCause(struct soap*, const struct _wsnt__UnableToDestroyPullPointFaultType_FaultCause *, const char*, const char*);

#ifndef soap_write__wsnt__UnableToDestroyPullPointFaultType_FaultCause
#define soap_write__wsnt__UnableToDestroyPullPointFaultType_FaultCause(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__UnableToDestroyPullPointFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnableToDestroyPullPointFaultType_FaultCause(soap, data, "wsnt:UnableToDestroyPullPointFaultType-FaultCause", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__UnableToDestroyPullPointFaultType_FaultCause
#define soap_PUT__wsnt__UnableToDestroyPullPointFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToDestroyPullPointFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnableToDestroyPullPointFaultType_FaultCause(soap, data, "wsnt:UnableToDestroyPullPointFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__UnableToDestroyPullPointFaultType_FaultCause
#define soap_PATCH__wsnt__UnableToDestroyPullPointFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToDestroyPullPointFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnableToDestroyPullPointFaultType_FaultCause(soap, data, "wsnt:UnableToDestroyPullPointFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__UnableToDestroyPullPointFaultType_FaultCause
#define soap_POST_send__wsnt__UnableToDestroyPullPointFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToDestroyPullPointFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnableToDestroyPullPointFaultType_FaultCause(soap, data, "wsnt:UnableToDestroyPullPointFaultType-FaultCause", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__UnableToDestroyPullPointFaultType_FaultCause * SOAP_FMAC4 soap_get__wsnt__UnableToDestroyPullPointFaultType_FaultCause(struct soap*, struct _wsnt__UnableToDestroyPullPointFaultType_FaultCause *, const char*, const char*);

#ifndef soap_read__wsnt__UnableToDestroyPullPointFaultType_FaultCause
#define soap_read__wsnt__UnableToDestroyPullPointFaultType_FaultCause(soap, data) ( ((data) ? (soap_default__wsnt__UnableToDestroyPullPointFaultType_FaultCause(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UnableToDestroyPullPointFaultType_FaultCause(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__UnableToDestroyPullPointFaultType_FaultCause
#define soap_GET__wsnt__UnableToDestroyPullPointFaultType_FaultCause(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__UnableToDestroyPullPointFaultType_FaultCause(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__UnableToDestroyPullPointFaultType_FaultCause
#define soap_POST_recv__wsnt__UnableToDestroyPullPointFaultType_FaultCause(soap, data) ( soap_read__wsnt__UnableToDestroyPullPointFaultType_FaultCause(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__UnableToDestroyPullPointFaultType_Description_DEFINED
#define SOAP_TYPE__wsnt__UnableToDestroyPullPointFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__UnableToDestroyPullPointFaultType_Description(struct soap*, struct _wsnt__UnableToDestroyPullPointFaultType_Description *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__UnableToDestroyPullPointFaultType_Description(struct soap*, const struct _wsnt__UnableToDestroyPullPointFaultType_Description *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UnableToDestroyPullPointFaultType_Description(struct soap*, const char*, int, const struct _wsnt__UnableToDestroyPullPointFaultType_Description *, const char*);
SOAP_FMAC3 struct _wsnt__UnableToDestroyPullPointFaultType_Description * SOAP_FMAC4 soap_in__wsnt__UnableToDestroyPullPointFaultType_Description(struct soap*, const char*, struct _wsnt__UnableToDestroyPullPointFaultType_Description *, const char*);

SOAP_FMAC3 struct _wsnt__UnableToDestroyPullPointFaultType_Description * SOAP_FMAC4 soap_new__wsnt__UnableToDestroyPullPointFaultType_Description(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__UnableToDestroyPullPointFaultType_Description(struct soap*, const struct _wsnt__UnableToDestroyPullPointFaultType_Description *, const char*, const char*);

#ifndef soap_write__wsnt__UnableToDestroyPullPointFaultType_Description
#define soap_write__wsnt__UnableToDestroyPullPointFaultType_Description(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__UnableToDestroyPullPointFaultType_Description(soap, data), 0) || soap_put__wsnt__UnableToDestroyPullPointFaultType_Description(soap, data, "wsnt:UnableToDestroyPullPointFaultType-Description", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__UnableToDestroyPullPointFaultType_Description
#define soap_PUT__wsnt__UnableToDestroyPullPointFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToDestroyPullPointFaultType_Description(soap, data), 0) || soap_put__wsnt__UnableToDestroyPullPointFaultType_Description(soap, data, "wsnt:UnableToDestroyPullPointFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__UnableToDestroyPullPointFaultType_Description
#define soap_PATCH__wsnt__UnableToDestroyPullPointFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToDestroyPullPointFaultType_Description(soap, data), 0) || soap_put__wsnt__UnableToDestroyPullPointFaultType_Description(soap, data, "wsnt:UnableToDestroyPullPointFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__UnableToDestroyPullPointFaultType_Description
#define soap_POST_send__wsnt__UnableToDestroyPullPointFaultType_Description(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToDestroyPullPointFaultType_Description(soap, data), 0) || soap_put__wsnt__UnableToDestroyPullPointFaultType_Description(soap, data, "wsnt:UnableToDestroyPullPointFaultType-Description", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__UnableToDestroyPullPointFaultType_Description * SOAP_FMAC4 soap_get__wsnt__UnableToDestroyPullPointFaultType_Description(struct soap*, struct _wsnt__UnableToDestroyPullPointFaultType_Description *, const char*, const char*);

#ifndef soap_read__wsnt__UnableToDestroyPullPointFaultType_Description
#define soap_read__wsnt__UnableToDestroyPullPointFaultType_Description(soap, data) ( ((data) ? (soap_default__wsnt__UnableToDestroyPullPointFaultType_Description(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UnableToDestroyPullPointFaultType_Description(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__UnableToDestroyPullPointFaultType_Description
#define soap_GET__wsnt__UnableToDestroyPullPointFaultType_Description(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__UnableToDestroyPullPointFaultType_Description(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__UnableToDestroyPullPointFaultType_Description
#define soap_POST_recv__wsnt__UnableToDestroyPullPointFaultType_Description(soap, data) ( soap_read__wsnt__UnableToDestroyPullPointFaultType_Description(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__UnableToDestroyPullPointFaultType_ErrorCode_DEFINED
#define SOAP_TYPE__wsnt__UnableToDestroyPullPointFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(struct soap*, struct _wsnt__UnableToDestroyPullPointFaultType_ErrorCode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(struct soap*, const struct _wsnt__UnableToDestroyPullPointFaultType_ErrorCode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(struct soap*, const char*, int, const struct _wsnt__UnableToDestroyPullPointFaultType_ErrorCode *, const char*);
SOAP_FMAC3 struct _wsnt__UnableToDestroyPullPointFaultType_ErrorCode * SOAP_FMAC4 soap_in__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__UnableToDestroyPullPointFaultType_ErrorCode *, const char*);

SOAP_FMAC3 struct _wsnt__UnableToDestroyPullPointFaultType_ErrorCode * SOAP_FMAC4 soap_new__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(struct soap*, const struct _wsnt__UnableToDestroyPullPointFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_write__wsnt__UnableToDestroyPullPointFaultType_ErrorCode
#define soap_write__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(soap, data, "wsnt:UnableToDestroyPullPointFaultType-ErrorCode", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__UnableToDestroyPullPointFaultType_ErrorCode
#define soap_PUT__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(soap, data, "wsnt:UnableToDestroyPullPointFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__UnableToDestroyPullPointFaultType_ErrorCode
#define soap_PATCH__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(soap, data, "wsnt:UnableToDestroyPullPointFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__UnableToDestroyPullPointFaultType_ErrorCode
#define soap_POST_send__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(soap, data, "wsnt:UnableToDestroyPullPointFaultType-ErrorCode", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__UnableToDestroyPullPointFaultType_ErrorCode * SOAP_FMAC4 soap_get__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(struct soap*, struct _wsnt__UnableToDestroyPullPointFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_read__wsnt__UnableToDestroyPullPointFaultType_ErrorCode
#define soap_read__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(soap, data) ( ((data) ? (soap_default__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__UnableToDestroyPullPointFaultType_ErrorCode
#define soap_GET__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__UnableToDestroyPullPointFaultType_ErrorCode
#define soap_POST_recv__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(soap, data) ( soap_read__wsnt__UnableToDestroyPullPointFaultType_ErrorCode(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsnt__UnableToDestroyPullPointFaultType_DEFINED
#define SOAP_TYPE_wsnt__UnableToDestroyPullPointFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsnt__UnableToDestroyPullPointFaultType(struct soap*, struct wsnt__UnableToDestroyPullPointFaultType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__UnableToDestroyPullPointFaultType(struct soap*, const struct wsnt__UnableToDestroyPullPointFaultType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__UnableToDestroyPullPointFaultType(struct soap*, const char*, int, const struct wsnt__UnableToDestroyPullPointFaultType *, const char*);
SOAP_FMAC3 struct wsnt__UnableToDestroyPullPointFaultType * SOAP_FMAC4 soap_in_wsnt__UnableToDestroyPullPointFaultType(struct soap*, const char*, struct wsnt__UnableToDestroyPullPointFaultType *, const char*);

SOAP_FMAC3 struct wsnt__UnableToDestroyPullPointFaultType * SOAP_FMAC4 soap_new_wsnt__UnableToDestroyPullPointFaultType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__UnableToDestroyPullPointFaultType(struct soap*, const struct wsnt__UnableToDestroyPullPointFaultType *, const char*, const char*);

#ifndef soap_write_wsnt__UnableToDestroyPullPointFaultType
#define soap_write_wsnt__UnableToDestroyPullPointFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsnt__UnableToDestroyPullPointFaultType(soap, data), 0) || soap_put_wsnt__UnableToDestroyPullPointFaultType(soap, data, "wsnt:UnableToDestroyPullPointFaultType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsnt__UnableToDestroyPullPointFaultType
#define soap_PUT_wsnt__UnableToDestroyPullPointFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__UnableToDestroyPullPointFaultType(soap, data), 0) || soap_put_wsnt__UnableToDestroyPullPointFaultType(soap, data, "wsnt:UnableToDestroyPullPointFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsnt__UnableToDestroyPullPointFaultType
#define soap_PATCH_wsnt__UnableToDestroyPullPointFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__UnableToDestroyPullPointFaultType(soap, data), 0) || soap_put_wsnt__UnableToDestroyPullPointFaultType(soap, data, "wsnt:UnableToDestroyPullPointFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsnt__UnableToDestroyPullPointFaultType
#define soap_POST_send_wsnt__UnableToDestroyPullPointFaultType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__UnableToDestroyPullPointFaultType(soap, data), 0) || soap_put_wsnt__UnableToDestroyPullPointFaultType(soap, data, "wsnt:UnableToDestroyPullPointFaultType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsnt__UnableToDestroyPullPointFaultType * SOAP_FMAC4 soap_get_wsnt__UnableToDestroyPullPointFaultType(struct soap*, struct wsnt__UnableToDestroyPullPointFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__UnableToDestroyPullPointFaultType
#define soap_read_wsnt__UnableToDestroyPullPointFaultType(soap, data) ( ((data) ? (soap_default_wsnt__UnableToDestroyPullPointFaultType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__UnableToDestroyPullPointFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsnt__UnableToDestroyPullPointFaultType
#define soap_GET_wsnt__UnableToDestroyPullPointFaultType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsnt__UnableToDestroyPullPointFaultType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsnt__UnableToDestroyPullPointFaultType
#define soap_POST_recv_wsnt__UnableToDestroyPullPointFaultType(soap, data) ( soap_read_wsnt__UnableToDestroyPullPointFaultType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__UnableToGetMessagesFaultType_FaultCause_DEFINED
#define SOAP_TYPE__wsnt__UnableToGetMessagesFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__UnableToGetMessagesFaultType_FaultCause(struct soap*, struct _wsnt__UnableToGetMessagesFaultType_FaultCause *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__UnableToGetMessagesFaultType_FaultCause(struct soap*, const struct _wsnt__UnableToGetMessagesFaultType_FaultCause *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UnableToGetMessagesFaultType_FaultCause(struct soap*, const char*, int, const struct _wsnt__UnableToGetMessagesFaultType_FaultCause *, const char*);
SOAP_FMAC3 struct _wsnt__UnableToGetMessagesFaultType_FaultCause * SOAP_FMAC4 soap_in__wsnt__UnableToGetMessagesFaultType_FaultCause(struct soap*, const char*, struct _wsnt__UnableToGetMessagesFaultType_FaultCause *, const char*);

SOAP_FMAC3 struct _wsnt__UnableToGetMessagesFaultType_FaultCause * SOAP_FMAC4 soap_new__wsnt__UnableToGetMessagesFaultType_FaultCause(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__UnableToGetMessagesFaultType_FaultCause(struct soap*, const struct _wsnt__UnableToGetMessagesFaultType_FaultCause *, const char*, const char*);

#ifndef soap_write__wsnt__UnableToGetMessagesFaultType_FaultCause
#define soap_write__wsnt__UnableToGetMessagesFaultType_FaultCause(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__UnableToGetMessagesFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnableToGetMessagesFaultType_FaultCause(soap, data, "wsnt:UnableToGetMessagesFaultType-FaultCause", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__UnableToGetMessagesFaultType_FaultCause
#define soap_PUT__wsnt__UnableToGetMessagesFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToGetMessagesFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnableToGetMessagesFaultType_FaultCause(soap, data, "wsnt:UnableToGetMessagesFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__UnableToGetMessagesFaultType_FaultCause
#define soap_PATCH__wsnt__UnableToGetMessagesFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToGetMessagesFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnableToGetMessagesFaultType_FaultCause(soap, data, "wsnt:UnableToGetMessagesFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__UnableToGetMessagesFaultType_FaultCause
#define soap_POST_send__wsnt__UnableToGetMessagesFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToGetMessagesFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnableToGetMessagesFaultType_FaultCause(soap, data, "wsnt:UnableToGetMessagesFaultType-FaultCause", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__UnableToGetMessagesFaultType_FaultCause * SOAP_FMAC4 soap_get__wsnt__UnableToGetMessagesFaultType_FaultCause(struct soap*, struct _wsnt__UnableToGetMessagesFaultType_FaultCause *, const char*, const char*);

#ifndef soap_read__wsnt__UnableToGetMessagesFaultType_FaultCause
#define soap_read__wsnt__UnableToGetMessagesFaultType_FaultCause(soap, data) ( ((data) ? (soap_default__wsnt__UnableToGetMessagesFaultType_FaultCause(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UnableToGetMessagesFaultType_FaultCause(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__UnableToGetMessagesFaultType_FaultCause
#define soap_GET__wsnt__UnableToGetMessagesFaultType_FaultCause(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__UnableToGetMessagesFaultType_FaultCause(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__UnableToGetMessagesFaultType_FaultCause
#define soap_POST_recv__wsnt__UnableToGetMessagesFaultType_FaultCause(soap, data) ( soap_read__wsnt__UnableToGetMessagesFaultType_FaultCause(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__UnableToGetMessagesFaultType_Description_DEFINED
#define SOAP_TYPE__wsnt__UnableToGetMessagesFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__UnableToGetMessagesFaultType_Description(struct soap*, struct _wsnt__UnableToGetMessagesFaultType_Description *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__UnableToGetMessagesFaultType_Description(struct soap*, const struct _wsnt__UnableToGetMessagesFaultType_Description *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UnableToGetMessagesFaultType_Description(struct soap*, const char*, int, const struct _wsnt__UnableToGetMessagesFaultType_Description *, const char*);
SOAP_FMAC3 struct _wsnt__UnableToGetMessagesFaultType_Description * SOAP_FMAC4 soap_in__wsnt__UnableToGetMessagesFaultType_Description(struct soap*, const char*, struct _wsnt__UnableToGetMessagesFaultType_Description *, const char*);

SOAP_FMAC3 struct _wsnt__UnableToGetMessagesFaultType_Description * SOAP_FMAC4 soap_new__wsnt__UnableToGetMessagesFaultType_Description(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__UnableToGetMessagesFaultType_Description(struct soap*, const struct _wsnt__UnableToGetMessagesFaultType_Description *, const char*, const char*);

#ifndef soap_write__wsnt__UnableToGetMessagesFaultType_Description
#define soap_write__wsnt__UnableToGetMessagesFaultType_Description(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__UnableToGetMessagesFaultType_Description(soap, data), 0) || soap_put__wsnt__UnableToGetMessagesFaultType_Description(soap, data, "wsnt:UnableToGetMessagesFaultType-Description", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__UnableToGetMessagesFaultType_Description
#define soap_PUT__wsnt__UnableToGetMessagesFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToGetMessagesFaultType_Description(soap, data), 0) || soap_put__wsnt__UnableToGetMessagesFaultType_Description(soap, data, "wsnt:UnableToGetMessagesFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__UnableToGetMessagesFaultType_Description
#define soap_PATCH__wsnt__UnableToGetMessagesFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToGetMessagesFaultType_Description(soap, data), 0) || soap_put__wsnt__UnableToGetMessagesFaultType_Description(soap, data, "wsnt:UnableToGetMessagesFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__UnableToGetMessagesFaultType_Description
#define soap_POST_send__wsnt__UnableToGetMessagesFaultType_Description(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToGetMessagesFaultType_Description(soap, data), 0) || soap_put__wsnt__UnableToGetMessagesFaultType_Description(soap, data, "wsnt:UnableToGetMessagesFaultType-Description", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__UnableToGetMessagesFaultType_Description * SOAP_FMAC4 soap_get__wsnt__UnableToGetMessagesFaultType_Description(struct soap*, struct _wsnt__UnableToGetMessagesFaultType_Description *, const char*, const char*);

#ifndef soap_read__wsnt__UnableToGetMessagesFaultType_Description
#define soap_read__wsnt__UnableToGetMessagesFaultType_Description(soap, data) ( ((data) ? (soap_default__wsnt__UnableToGetMessagesFaultType_Description(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UnableToGetMessagesFaultType_Description(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__UnableToGetMessagesFaultType_Description
#define soap_GET__wsnt__UnableToGetMessagesFaultType_Description(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__UnableToGetMessagesFaultType_Description(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__UnableToGetMessagesFaultType_Description
#define soap_POST_recv__wsnt__UnableToGetMessagesFaultType_Description(soap, data) ( soap_read__wsnt__UnableToGetMessagesFaultType_Description(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__UnableToGetMessagesFaultType_ErrorCode_DEFINED
#define SOAP_TYPE__wsnt__UnableToGetMessagesFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__UnableToGetMessagesFaultType_ErrorCode(struct soap*, struct _wsnt__UnableToGetMessagesFaultType_ErrorCode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__UnableToGetMessagesFaultType_ErrorCode(struct soap*, const struct _wsnt__UnableToGetMessagesFaultType_ErrorCode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UnableToGetMessagesFaultType_ErrorCode(struct soap*, const char*, int, const struct _wsnt__UnableToGetMessagesFaultType_ErrorCode *, const char*);
SOAP_FMAC3 struct _wsnt__UnableToGetMessagesFaultType_ErrorCode * SOAP_FMAC4 soap_in__wsnt__UnableToGetMessagesFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__UnableToGetMessagesFaultType_ErrorCode *, const char*);

SOAP_FMAC3 struct _wsnt__UnableToGetMessagesFaultType_ErrorCode * SOAP_FMAC4 soap_new__wsnt__UnableToGetMessagesFaultType_ErrorCode(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__UnableToGetMessagesFaultType_ErrorCode(struct soap*, const struct _wsnt__UnableToGetMessagesFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_write__wsnt__UnableToGetMessagesFaultType_ErrorCode
#define soap_write__wsnt__UnableToGetMessagesFaultType_ErrorCode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__UnableToGetMessagesFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnableToGetMessagesFaultType_ErrorCode(soap, data, "wsnt:UnableToGetMessagesFaultType-ErrorCode", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__UnableToGetMessagesFaultType_ErrorCode
#define soap_PUT__wsnt__UnableToGetMessagesFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToGetMessagesFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnableToGetMessagesFaultType_ErrorCode(soap, data, "wsnt:UnableToGetMessagesFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__UnableToGetMessagesFaultType_ErrorCode
#define soap_PATCH__wsnt__UnableToGetMessagesFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToGetMessagesFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnableToGetMessagesFaultType_ErrorCode(soap, data, "wsnt:UnableToGetMessagesFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__UnableToGetMessagesFaultType_ErrorCode
#define soap_POST_send__wsnt__UnableToGetMessagesFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnableToGetMessagesFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnableToGetMessagesFaultType_ErrorCode(soap, data, "wsnt:UnableToGetMessagesFaultType-ErrorCode", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__UnableToGetMessagesFaultType_ErrorCode * SOAP_FMAC4 soap_get__wsnt__UnableToGetMessagesFaultType_ErrorCode(struct soap*, struct _wsnt__UnableToGetMessagesFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_read__wsnt__UnableToGetMessagesFaultType_ErrorCode
#define soap_read__wsnt__UnableToGetMessagesFaultType_ErrorCode(soap, data) ( ((data) ? (soap_default__wsnt__UnableToGetMessagesFaultType_ErrorCode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UnableToGetMessagesFaultType_ErrorCode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__UnableToGetMessagesFaultType_ErrorCode
#define soap_GET__wsnt__UnableToGetMessagesFaultType_ErrorCode(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__UnableToGetMessagesFaultType_ErrorCode(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__UnableToGetMessagesFaultType_ErrorCode
#define soap_POST_recv__wsnt__UnableToGetMessagesFaultType_ErrorCode(soap, data) ( soap_read__wsnt__UnableToGetMessagesFaultType_ErrorCode(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsnt__UnableToGetMessagesFaultType_DEFINED
#define SOAP_TYPE_wsnt__UnableToGetMessagesFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsnt__UnableToGetMessagesFaultType(struct soap*, struct wsnt__UnableToGetMessagesFaultType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__UnableToGetMessagesFaultType(struct soap*, const struct wsnt__UnableToGetMessagesFaultType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__UnableToGetMessagesFaultType(struct soap*, const char*, int, const struct wsnt__UnableToGetMessagesFaultType *, const char*);
SOAP_FMAC3 struct wsnt__UnableToGetMessagesFaultType * SOAP_FMAC4 soap_in_wsnt__UnableToGetMessagesFaultType(struct soap*, const char*, struct wsnt__UnableToGetMessagesFaultType *, const char*);

SOAP_FMAC3 struct wsnt__UnableToGetMessagesFaultType * SOAP_FMAC4 soap_new_wsnt__UnableToGetMessagesFaultType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__UnableToGetMessagesFaultType(struct soap*, const struct wsnt__UnableToGetMessagesFaultType *, const char*, const char*);

#ifndef soap_write_wsnt__UnableToGetMessagesFaultType
#define soap_write_wsnt__UnableToGetMessagesFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsnt__UnableToGetMessagesFaultType(soap, data), 0) || soap_put_wsnt__UnableToGetMessagesFaultType(soap, data, "wsnt:UnableToGetMessagesFaultType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsnt__UnableToGetMessagesFaultType
#define soap_PUT_wsnt__UnableToGetMessagesFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__UnableToGetMessagesFaultType(soap, data), 0) || soap_put_wsnt__UnableToGetMessagesFaultType(soap, data, "wsnt:UnableToGetMessagesFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsnt__UnableToGetMessagesFaultType
#define soap_PATCH_wsnt__UnableToGetMessagesFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__UnableToGetMessagesFaultType(soap, data), 0) || soap_put_wsnt__UnableToGetMessagesFaultType(soap, data, "wsnt:UnableToGetMessagesFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsnt__UnableToGetMessagesFaultType
#define soap_POST_send_wsnt__UnableToGetMessagesFaultType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__UnableToGetMessagesFaultType(soap, data), 0) || soap_put_wsnt__UnableToGetMessagesFaultType(soap, data, "wsnt:UnableToGetMessagesFaultType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsnt__UnableToGetMessagesFaultType * SOAP_FMAC4 soap_get_wsnt__UnableToGetMessagesFaultType(struct soap*, struct wsnt__UnableToGetMessagesFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__UnableToGetMessagesFaultType
#define soap_read_wsnt__UnableToGetMessagesFaultType(soap, data) ( ((data) ? (soap_default_wsnt__UnableToGetMessagesFaultType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__UnableToGetMessagesFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsnt__UnableToGetMessagesFaultType
#define soap_GET_wsnt__UnableToGetMessagesFaultType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsnt__UnableToGetMessagesFaultType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsnt__UnableToGetMessagesFaultType
#define soap_POST_recv_wsnt__UnableToGetMessagesFaultType(soap, data) ( soap_read_wsnt__UnableToGetMessagesFaultType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause_DEFINED
#define SOAP_TYPE__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(struct soap*, struct _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(struct soap*, const struct _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(struct soap*, const char*, int, const struct _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause *, const char*);
SOAP_FMAC3 struct _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause * SOAP_FMAC4 soap_in__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(struct soap*, const char*, struct _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause *, const char*);

SOAP_FMAC3 struct _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause * SOAP_FMAC4 soap_new__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(struct soap*, const struct _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause *, const char*, const char*);

#ifndef soap_write__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause
#define soap_write__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(soap, data, "wsnt:NoCurrentMessageOnTopicFaultType-FaultCause", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause
#define soap_PUT__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(soap, data, "wsnt:NoCurrentMessageOnTopicFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause
#define soap_PATCH__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(soap, data, "wsnt:NoCurrentMessageOnTopicFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause
#define soap_POST_send__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(soap, data, "wsnt:NoCurrentMessageOnTopicFaultType-FaultCause", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause * SOAP_FMAC4 soap_get__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(struct soap*, struct _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause *, const char*, const char*);

#ifndef soap_read__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause
#define soap_read__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(soap, data) ( ((data) ? (soap_default__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause
#define soap_GET__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause
#define soap_POST_recv__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(soap, data) ( soap_read__wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__NoCurrentMessageOnTopicFaultType_Description_DEFINED
#define SOAP_TYPE__wsnt__NoCurrentMessageOnTopicFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__NoCurrentMessageOnTopicFaultType_Description(struct soap*, struct _wsnt__NoCurrentMessageOnTopicFaultType_Description *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__NoCurrentMessageOnTopicFaultType_Description(struct soap*, const struct _wsnt__NoCurrentMessageOnTopicFaultType_Description *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__NoCurrentMessageOnTopicFaultType_Description(struct soap*, const char*, int, const struct _wsnt__NoCurrentMessageOnTopicFaultType_Description *, const char*);
SOAP_FMAC3 struct _wsnt__NoCurrentMessageOnTopicFaultType_Description * SOAP_FMAC4 soap_in__wsnt__NoCurrentMessageOnTopicFaultType_Description(struct soap*, const char*, struct _wsnt__NoCurrentMessageOnTopicFaultType_Description *, const char*);

SOAP_FMAC3 struct _wsnt__NoCurrentMessageOnTopicFaultType_Description * SOAP_FMAC4 soap_new__wsnt__NoCurrentMessageOnTopicFaultType_Description(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__NoCurrentMessageOnTopicFaultType_Description(struct soap*, const struct _wsnt__NoCurrentMessageOnTopicFaultType_Description *, const char*, const char*);

#ifndef soap_write__wsnt__NoCurrentMessageOnTopicFaultType_Description
#define soap_write__wsnt__NoCurrentMessageOnTopicFaultType_Description(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__NoCurrentMessageOnTopicFaultType_Description(soap, data), 0) || soap_put__wsnt__NoCurrentMessageOnTopicFaultType_Description(soap, data, "wsnt:NoCurrentMessageOnTopicFaultType-Description", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__NoCurrentMessageOnTopicFaultType_Description
#define soap_PUT__wsnt__NoCurrentMessageOnTopicFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__NoCurrentMessageOnTopicFaultType_Description(soap, data), 0) || soap_put__wsnt__NoCurrentMessageOnTopicFaultType_Description(soap, data, "wsnt:NoCurrentMessageOnTopicFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__NoCurrentMessageOnTopicFaultType_Description
#define soap_PATCH__wsnt__NoCurrentMessageOnTopicFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__NoCurrentMessageOnTopicFaultType_Description(soap, data), 0) || soap_put__wsnt__NoCurrentMessageOnTopicFaultType_Description(soap, data, "wsnt:NoCurrentMessageOnTopicFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__NoCurrentMessageOnTopicFaultType_Description
#define soap_POST_send__wsnt__NoCurrentMessageOnTopicFaultType_Description(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__NoCurrentMessageOnTopicFaultType_Description(soap, data), 0) || soap_put__wsnt__NoCurrentMessageOnTopicFaultType_Description(soap, data, "wsnt:NoCurrentMessageOnTopicFaultType-Description", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__NoCurrentMessageOnTopicFaultType_Description * SOAP_FMAC4 soap_get__wsnt__NoCurrentMessageOnTopicFaultType_Description(struct soap*, struct _wsnt__NoCurrentMessageOnTopicFaultType_Description *, const char*, const char*);

#ifndef soap_read__wsnt__NoCurrentMessageOnTopicFaultType_Description
#define soap_read__wsnt__NoCurrentMessageOnTopicFaultType_Description(soap, data) ( ((data) ? (soap_default__wsnt__NoCurrentMessageOnTopicFaultType_Description(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__NoCurrentMessageOnTopicFaultType_Description(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__NoCurrentMessageOnTopicFaultType_Description
#define soap_GET__wsnt__NoCurrentMessageOnTopicFaultType_Description(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__NoCurrentMessageOnTopicFaultType_Description(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__NoCurrentMessageOnTopicFaultType_Description
#define soap_POST_recv__wsnt__NoCurrentMessageOnTopicFaultType_Description(soap, data) ( soap_read__wsnt__NoCurrentMessageOnTopicFaultType_Description(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode_DEFINED
#define SOAP_TYPE__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(struct soap*, struct _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(struct soap*, const struct _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(struct soap*, const char*, int, const struct _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode *, const char*);
SOAP_FMAC3 struct _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode * SOAP_FMAC4 soap_in__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode *, const char*);

SOAP_FMAC3 struct _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode * SOAP_FMAC4 soap_new__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(struct soap*, const struct _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_write__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode
#define soap_write__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(soap, data, "wsnt:NoCurrentMessageOnTopicFaultType-ErrorCode", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode
#define soap_PUT__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(soap, data, "wsnt:NoCurrentMessageOnTopicFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode
#define soap_PATCH__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(soap, data, "wsnt:NoCurrentMessageOnTopicFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode
#define soap_POST_send__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(soap, data, "wsnt:NoCurrentMessageOnTopicFaultType-ErrorCode", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode * SOAP_FMAC4 soap_get__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(struct soap*, struct _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_read__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode
#define soap_read__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(soap, data) ( ((data) ? (soap_default__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode
#define soap_GET__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode
#define soap_POST_recv__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(soap, data) ( soap_read__wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsnt__NoCurrentMessageOnTopicFaultType_DEFINED
#define SOAP_TYPE_wsnt__NoCurrentMessageOnTopicFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsnt__NoCurrentMessageOnTopicFaultType(struct soap*, struct wsnt__NoCurrentMessageOnTopicFaultType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__NoCurrentMessageOnTopicFaultType(struct soap*, const struct wsnt__NoCurrentMessageOnTopicFaultType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__NoCurrentMessageOnTopicFaultType(struct soap*, const char*, int, const struct wsnt__NoCurrentMessageOnTopicFaultType *, const char*);
SOAP_FMAC3 struct wsnt__NoCurrentMessageOnTopicFaultType * SOAP_FMAC4 soap_in_wsnt__NoCurrentMessageOnTopicFaultType(struct soap*, const char*, struct wsnt__NoCurrentMessageOnTopicFaultType *, const char*);

SOAP_FMAC3 struct wsnt__NoCurrentMessageOnTopicFaultType * SOAP_FMAC4 soap_new_wsnt__NoCurrentMessageOnTopicFaultType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__NoCurrentMessageOnTopicFaultType(struct soap*, const struct wsnt__NoCurrentMessageOnTopicFaultType *, const char*, const char*);

#ifndef soap_write_wsnt__NoCurrentMessageOnTopicFaultType
#define soap_write_wsnt__NoCurrentMessageOnTopicFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsnt__NoCurrentMessageOnTopicFaultType(soap, data), 0) || soap_put_wsnt__NoCurrentMessageOnTopicFaultType(soap, data, "wsnt:NoCurrentMessageOnTopicFaultType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsnt__NoCurrentMessageOnTopicFaultType
#define soap_PUT_wsnt__NoCurrentMessageOnTopicFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__NoCurrentMessageOnTopicFaultType(soap, data), 0) || soap_put_wsnt__NoCurrentMessageOnTopicFaultType(soap, data, "wsnt:NoCurrentMessageOnTopicFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsnt__NoCurrentMessageOnTopicFaultType
#define soap_PATCH_wsnt__NoCurrentMessageOnTopicFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__NoCurrentMessageOnTopicFaultType(soap, data), 0) || soap_put_wsnt__NoCurrentMessageOnTopicFaultType(soap, data, "wsnt:NoCurrentMessageOnTopicFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsnt__NoCurrentMessageOnTopicFaultType
#define soap_POST_send_wsnt__NoCurrentMessageOnTopicFaultType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__NoCurrentMessageOnTopicFaultType(soap, data), 0) || soap_put_wsnt__NoCurrentMessageOnTopicFaultType(soap, data, "wsnt:NoCurrentMessageOnTopicFaultType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsnt__NoCurrentMessageOnTopicFaultType * SOAP_FMAC4 soap_get_wsnt__NoCurrentMessageOnTopicFaultType(struct soap*, struct wsnt__NoCurrentMessageOnTopicFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__NoCurrentMessageOnTopicFaultType
#define soap_read_wsnt__NoCurrentMessageOnTopicFaultType(soap, data) ( ((data) ? (soap_default_wsnt__NoCurrentMessageOnTopicFaultType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__NoCurrentMessageOnTopicFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsnt__NoCurrentMessageOnTopicFaultType
#define soap_GET_wsnt__NoCurrentMessageOnTopicFaultType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsnt__NoCurrentMessageOnTopicFaultType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsnt__NoCurrentMessageOnTopicFaultType
#define soap_POST_recv_wsnt__NoCurrentMessageOnTopicFaultType(soap, data) ( soap_read_wsnt__NoCurrentMessageOnTopicFaultType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause_DEFINED
#define SOAP_TYPE__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(struct soap*, struct _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(struct soap*, const struct _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(struct soap*, const char*, int, const struct _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause *, const char*);
SOAP_FMAC3 struct _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause * SOAP_FMAC4 soap_in__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(struct soap*, const char*, struct _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause *, const char*);

SOAP_FMAC3 struct _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause * SOAP_FMAC4 soap_new__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(struct soap*, const struct _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause *, const char*, const char*);

#ifndef soap_write__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause
#define soap_write__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap, data, "wsnt:UnacceptableInitialTerminationTimeFaultType-FaultCause", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause
#define soap_PUT__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap, data, "wsnt:UnacceptableInitialTerminationTimeFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause
#define soap_PATCH__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap, data, "wsnt:UnacceptableInitialTerminationTimeFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause
#define soap_POST_send__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap, data, "wsnt:UnacceptableInitialTerminationTimeFaultType-FaultCause", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause * SOAP_FMAC4 soap_get__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(struct soap*, struct _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause *, const char*, const char*);

#ifndef soap_read__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause
#define soap_read__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap, data) ( ((data) ? (soap_default__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause
#define soap_GET__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause
#define soap_POST_recv__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap, data) ( soap_read__wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__UnacceptableInitialTerminationTimeFaultType_Description_DEFINED
#define SOAP_TYPE__wsnt__UnacceptableInitialTerminationTimeFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(struct soap*, struct _wsnt__UnacceptableInitialTerminationTimeFaultType_Description *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(struct soap*, const struct _wsnt__UnacceptableInitialTerminationTimeFaultType_Description *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(struct soap*, const char*, int, const struct _wsnt__UnacceptableInitialTerminationTimeFaultType_Description *, const char*);
SOAP_FMAC3 struct _wsnt__UnacceptableInitialTerminationTimeFaultType_Description * SOAP_FMAC4 soap_in__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(struct soap*, const char*, struct _wsnt__UnacceptableInitialTerminationTimeFaultType_Description *, const char*);

SOAP_FMAC3 struct _wsnt__UnacceptableInitialTerminationTimeFaultType_Description * SOAP_FMAC4 soap_new__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(struct soap*, const struct _wsnt__UnacceptableInitialTerminationTimeFaultType_Description *, const char*, const char*);

#ifndef soap_write__wsnt__UnacceptableInitialTerminationTimeFaultType_Description
#define soap_write__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(soap, data), 0) || soap_put__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(soap, data, "wsnt:UnacceptableInitialTerminationTimeFaultType-Description", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__UnacceptableInitialTerminationTimeFaultType_Description
#define soap_PUT__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(soap, data), 0) || soap_put__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(soap, data, "wsnt:UnacceptableInitialTerminationTimeFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__UnacceptableInitialTerminationTimeFaultType_Description
#define soap_PATCH__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(soap, data), 0) || soap_put__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(soap, data, "wsnt:UnacceptableInitialTerminationTimeFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__UnacceptableInitialTerminationTimeFaultType_Description
#define soap_POST_send__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(soap, data), 0) || soap_put__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(soap, data, "wsnt:UnacceptableInitialTerminationTimeFaultType-Description", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__UnacceptableInitialTerminationTimeFaultType_Description * SOAP_FMAC4 soap_get__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(struct soap*, struct _wsnt__UnacceptableInitialTerminationTimeFaultType_Description *, const char*, const char*);

#ifndef soap_read__wsnt__UnacceptableInitialTerminationTimeFaultType_Description
#define soap_read__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(soap, data) ( ((data) ? (soap_default__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__UnacceptableInitialTerminationTimeFaultType_Description
#define soap_GET__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__UnacceptableInitialTerminationTimeFaultType_Description
#define soap_POST_recv__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(soap, data) ( soap_read__wsnt__UnacceptableInitialTerminationTimeFaultType_Description(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode_DEFINED
#define SOAP_TYPE__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(struct soap*, struct _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(struct soap*, const struct _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(struct soap*, const char*, int, const struct _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode *, const char*);
SOAP_FMAC3 struct _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode * SOAP_FMAC4 soap_in__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode *, const char*);

SOAP_FMAC3 struct _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode * SOAP_FMAC4 soap_new__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(struct soap*, const struct _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_write__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode
#define soap_write__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap, data, "wsnt:UnacceptableInitialTerminationTimeFaultType-ErrorCode", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode
#define soap_PUT__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap, data, "wsnt:UnacceptableInitialTerminationTimeFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode
#define soap_PATCH__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap, data, "wsnt:UnacceptableInitialTerminationTimeFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode
#define soap_POST_send__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap, data, "wsnt:UnacceptableInitialTerminationTimeFaultType-ErrorCode", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode * SOAP_FMAC4 soap_get__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(struct soap*, struct _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_read__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode
#define soap_read__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap, data) ( ((data) ? (soap_default__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode
#define soap_GET__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode
#define soap_POST_recv__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap, data) ( soap_read__wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsnt__UnacceptableInitialTerminationTimeFaultType_DEFINED
#define SOAP_TYPE_wsnt__UnacceptableInitialTerminationTimeFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsnt__UnacceptableInitialTerminationTimeFaultType(struct soap*, struct wsnt__UnacceptableInitialTerminationTimeFaultType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__UnacceptableInitialTerminationTimeFaultType(struct soap*, const struct wsnt__UnacceptableInitialTerminationTimeFaultType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__UnacceptableInitialTerminationTimeFaultType(struct soap*, const char*, int, const struct wsnt__UnacceptableInitialTerminationTimeFaultType *, const char*);
SOAP_FMAC3 struct wsnt__UnacceptableInitialTerminationTimeFaultType * SOAP_FMAC4 soap_in_wsnt__UnacceptableInitialTerminationTimeFaultType(struct soap*, const char*, struct wsnt__UnacceptableInitialTerminationTimeFaultType *, const char*);

SOAP_FMAC3 struct wsnt__UnacceptableInitialTerminationTimeFaultType * SOAP_FMAC4 soap_new_wsnt__UnacceptableInitialTerminationTimeFaultType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__UnacceptableInitialTerminationTimeFaultType(struct soap*, const struct wsnt__UnacceptableInitialTerminationTimeFaultType *, const char*, const char*);

#ifndef soap_write_wsnt__UnacceptableInitialTerminationTimeFaultType
#define soap_write_wsnt__UnacceptableInitialTerminationTimeFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsnt__UnacceptableInitialTerminationTimeFaultType(soap, data), 0) || soap_put_wsnt__UnacceptableInitialTerminationTimeFaultType(soap, data, "wsnt:UnacceptableInitialTerminationTimeFaultType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsnt__UnacceptableInitialTerminationTimeFaultType
#define soap_PUT_wsnt__UnacceptableInitialTerminationTimeFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__UnacceptableInitialTerminationTimeFaultType(soap, data), 0) || soap_put_wsnt__UnacceptableInitialTerminationTimeFaultType(soap, data, "wsnt:UnacceptableInitialTerminationTimeFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsnt__UnacceptableInitialTerminationTimeFaultType
#define soap_PATCH_wsnt__UnacceptableInitialTerminationTimeFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__UnacceptableInitialTerminationTimeFaultType(soap, data), 0) || soap_put_wsnt__UnacceptableInitialTerminationTimeFaultType(soap, data, "wsnt:UnacceptableInitialTerminationTimeFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsnt__UnacceptableInitialTerminationTimeFaultType
#define soap_POST_send_wsnt__UnacceptableInitialTerminationTimeFaultType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__UnacceptableInitialTerminationTimeFaultType(soap, data), 0) || soap_put_wsnt__UnacceptableInitialTerminationTimeFaultType(soap, data, "wsnt:UnacceptableInitialTerminationTimeFaultType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsnt__UnacceptableInitialTerminationTimeFaultType * SOAP_FMAC4 soap_get_wsnt__UnacceptableInitialTerminationTimeFaultType(struct soap*, struct wsnt__UnacceptableInitialTerminationTimeFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__UnacceptableInitialTerminationTimeFaultType
#define soap_read_wsnt__UnacceptableInitialTerminationTimeFaultType(soap, data) ( ((data) ? (soap_default_wsnt__UnacceptableInitialTerminationTimeFaultType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__UnacceptableInitialTerminationTimeFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsnt__UnacceptableInitialTerminationTimeFaultType
#define soap_GET_wsnt__UnacceptableInitialTerminationTimeFaultType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsnt__UnacceptableInitialTerminationTimeFaultType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsnt__UnacceptableInitialTerminationTimeFaultType
#define soap_POST_recv_wsnt__UnacceptableInitialTerminationTimeFaultType(soap, data) ( soap_read_wsnt__UnacceptableInitialTerminationTimeFaultType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__NotifyMessageNotSupportedFaultType_FaultCause_DEFINED
#define SOAP_TYPE__wsnt__NotifyMessageNotSupportedFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(struct soap*, struct _wsnt__NotifyMessageNotSupportedFaultType_FaultCause *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(struct soap*, const struct _wsnt__NotifyMessageNotSupportedFaultType_FaultCause *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(struct soap*, const char*, int, const struct _wsnt__NotifyMessageNotSupportedFaultType_FaultCause *, const char*);
SOAP_FMAC3 struct _wsnt__NotifyMessageNotSupportedFaultType_FaultCause * SOAP_FMAC4 soap_in__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(struct soap*, const char*, struct _wsnt__NotifyMessageNotSupportedFaultType_FaultCause *, const char*);

SOAP_FMAC3 struct _wsnt__NotifyMessageNotSupportedFaultType_FaultCause * SOAP_FMAC4 soap_new__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(struct soap*, const struct _wsnt__NotifyMessageNotSupportedFaultType_FaultCause *, const char*, const char*);

#ifndef soap_write__wsnt__NotifyMessageNotSupportedFaultType_FaultCause
#define soap_write__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(soap, data, "wsnt:NotifyMessageNotSupportedFaultType-FaultCause", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__NotifyMessageNotSupportedFaultType_FaultCause
#define soap_PUT__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(soap, data, "wsnt:NotifyMessageNotSupportedFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__NotifyMessageNotSupportedFaultType_FaultCause
#define soap_PATCH__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(soap, data, "wsnt:NotifyMessageNotSupportedFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__NotifyMessageNotSupportedFaultType_FaultCause
#define soap_POST_send__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(soap, data, "wsnt:NotifyMessageNotSupportedFaultType-FaultCause", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__NotifyMessageNotSupportedFaultType_FaultCause * SOAP_FMAC4 soap_get__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(struct soap*, struct _wsnt__NotifyMessageNotSupportedFaultType_FaultCause *, const char*, const char*);

#ifndef soap_read__wsnt__NotifyMessageNotSupportedFaultType_FaultCause
#define soap_read__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(soap, data) ( ((data) ? (soap_default__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__NotifyMessageNotSupportedFaultType_FaultCause
#define soap_GET__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__NotifyMessageNotSupportedFaultType_FaultCause
#define soap_POST_recv__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(soap, data) ( soap_read__wsnt__NotifyMessageNotSupportedFaultType_FaultCause(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__NotifyMessageNotSupportedFaultType_Description_DEFINED
#define SOAP_TYPE__wsnt__NotifyMessageNotSupportedFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__NotifyMessageNotSupportedFaultType_Description(struct soap*, struct _wsnt__NotifyMessageNotSupportedFaultType_Description *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__NotifyMessageNotSupportedFaultType_Description(struct soap*, const struct _wsnt__NotifyMessageNotSupportedFaultType_Description *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__NotifyMessageNotSupportedFaultType_Description(struct soap*, const char*, int, const struct _wsnt__NotifyMessageNotSupportedFaultType_Description *, const char*);
SOAP_FMAC3 struct _wsnt__NotifyMessageNotSupportedFaultType_Description * SOAP_FMAC4 soap_in__wsnt__NotifyMessageNotSupportedFaultType_Description(struct soap*, const char*, struct _wsnt__NotifyMessageNotSupportedFaultType_Description *, const char*);

SOAP_FMAC3 struct _wsnt__NotifyMessageNotSupportedFaultType_Description * SOAP_FMAC4 soap_new__wsnt__NotifyMessageNotSupportedFaultType_Description(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__NotifyMessageNotSupportedFaultType_Description(struct soap*, const struct _wsnt__NotifyMessageNotSupportedFaultType_Description *, const char*, const char*);

#ifndef soap_write__wsnt__NotifyMessageNotSupportedFaultType_Description
#define soap_write__wsnt__NotifyMessageNotSupportedFaultType_Description(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__NotifyMessageNotSupportedFaultType_Description(soap, data), 0) || soap_put__wsnt__NotifyMessageNotSupportedFaultType_Description(soap, data, "wsnt:NotifyMessageNotSupportedFaultType-Description", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__NotifyMessageNotSupportedFaultType_Description
#define soap_PUT__wsnt__NotifyMessageNotSupportedFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__NotifyMessageNotSupportedFaultType_Description(soap, data), 0) || soap_put__wsnt__NotifyMessageNotSupportedFaultType_Description(soap, data, "wsnt:NotifyMessageNotSupportedFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__NotifyMessageNotSupportedFaultType_Description
#define soap_PATCH__wsnt__NotifyMessageNotSupportedFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__NotifyMessageNotSupportedFaultType_Description(soap, data), 0) || soap_put__wsnt__NotifyMessageNotSupportedFaultType_Description(soap, data, "wsnt:NotifyMessageNotSupportedFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__NotifyMessageNotSupportedFaultType_Description
#define soap_POST_send__wsnt__NotifyMessageNotSupportedFaultType_Description(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__NotifyMessageNotSupportedFaultType_Description(soap, data), 0) || soap_put__wsnt__NotifyMessageNotSupportedFaultType_Description(soap, data, "wsnt:NotifyMessageNotSupportedFaultType-Description", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__NotifyMessageNotSupportedFaultType_Description * SOAP_FMAC4 soap_get__wsnt__NotifyMessageNotSupportedFaultType_Description(struct soap*, struct _wsnt__NotifyMessageNotSupportedFaultType_Description *, const char*, const char*);

#ifndef soap_read__wsnt__NotifyMessageNotSupportedFaultType_Description
#define soap_read__wsnt__NotifyMessageNotSupportedFaultType_Description(soap, data) ( ((data) ? (soap_default__wsnt__NotifyMessageNotSupportedFaultType_Description(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__NotifyMessageNotSupportedFaultType_Description(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__NotifyMessageNotSupportedFaultType_Description
#define soap_GET__wsnt__NotifyMessageNotSupportedFaultType_Description(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__NotifyMessageNotSupportedFaultType_Description(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__NotifyMessageNotSupportedFaultType_Description
#define soap_POST_recv__wsnt__NotifyMessageNotSupportedFaultType_Description(soap, data) ( soap_read__wsnt__NotifyMessageNotSupportedFaultType_Description(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode_DEFINED
#define SOAP_TYPE__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(struct soap*, struct _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(struct soap*, const struct _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(struct soap*, const char*, int, const struct _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode *, const char*);
SOAP_FMAC3 struct _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode * SOAP_FMAC4 soap_in__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode *, const char*);

SOAP_FMAC3 struct _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode * SOAP_FMAC4 soap_new__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(struct soap*, const struct _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_write__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode
#define soap_write__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(soap, data, "wsnt:NotifyMessageNotSupportedFaultType-ErrorCode", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode
#define soap_PUT__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(soap, data, "wsnt:NotifyMessageNotSupportedFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode
#define soap_PATCH__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(soap, data, "wsnt:NotifyMessageNotSupportedFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode
#define soap_POST_send__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(soap, data, "wsnt:NotifyMessageNotSupportedFaultType-ErrorCode", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode * SOAP_FMAC4 soap_get__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(struct soap*, struct _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_read__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode
#define soap_read__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(soap, data) ( ((data) ? (soap_default__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode
#define soap_GET__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode
#define soap_POST_recv__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(soap, data) ( soap_read__wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsnt__NotifyMessageNotSupportedFaultType_DEFINED
#define SOAP_TYPE_wsnt__NotifyMessageNotSupportedFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsnt__NotifyMessageNotSupportedFaultType(struct soap*, struct wsnt__NotifyMessageNotSupportedFaultType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__NotifyMessageNotSupportedFaultType(struct soap*, const struct wsnt__NotifyMessageNotSupportedFaultType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__NotifyMessageNotSupportedFaultType(struct soap*, const char*, int, const struct wsnt__NotifyMessageNotSupportedFaultType *, const char*);
SOAP_FMAC3 struct wsnt__NotifyMessageNotSupportedFaultType * SOAP_FMAC4 soap_in_wsnt__NotifyMessageNotSupportedFaultType(struct soap*, const char*, struct wsnt__NotifyMessageNotSupportedFaultType *, const char*);

SOAP_FMAC3 struct wsnt__NotifyMessageNotSupportedFaultType * SOAP_FMAC4 soap_new_wsnt__NotifyMessageNotSupportedFaultType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__NotifyMessageNotSupportedFaultType(struct soap*, const struct wsnt__NotifyMessageNotSupportedFaultType *, const char*, const char*);

#ifndef soap_write_wsnt__NotifyMessageNotSupportedFaultType
#define soap_write_wsnt__NotifyMessageNotSupportedFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsnt__NotifyMessageNotSupportedFaultType(soap, data), 0) || soap_put_wsnt__NotifyMessageNotSupportedFaultType(soap, data, "wsnt:NotifyMessageNotSupportedFaultType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsnt__NotifyMessageNotSupportedFaultType
#define soap_PUT_wsnt__NotifyMessageNotSupportedFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__NotifyMessageNotSupportedFaultType(soap, data), 0) || soap_put_wsnt__NotifyMessageNotSupportedFaultType(soap, data, "wsnt:NotifyMessageNotSupportedFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsnt__NotifyMessageNotSupportedFaultType
#define soap_PATCH_wsnt__NotifyMessageNotSupportedFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__NotifyMessageNotSupportedFaultType(soap, data), 0) || soap_put_wsnt__NotifyMessageNotSupportedFaultType(soap, data, "wsnt:NotifyMessageNotSupportedFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsnt__NotifyMessageNotSupportedFaultType
#define soap_POST_send_wsnt__NotifyMessageNotSupportedFaultType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__NotifyMessageNotSupportedFaultType(soap, data), 0) || soap_put_wsnt__NotifyMessageNotSupportedFaultType(soap, data, "wsnt:NotifyMessageNotSupportedFaultType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsnt__NotifyMessageNotSupportedFaultType * SOAP_FMAC4 soap_get_wsnt__NotifyMessageNotSupportedFaultType(struct soap*, struct wsnt__NotifyMessageNotSupportedFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__NotifyMessageNotSupportedFaultType
#define soap_read_wsnt__NotifyMessageNotSupportedFaultType(soap, data) ( ((data) ? (soap_default_wsnt__NotifyMessageNotSupportedFaultType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__NotifyMessageNotSupportedFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsnt__NotifyMessageNotSupportedFaultType
#define soap_GET_wsnt__NotifyMessageNotSupportedFaultType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsnt__NotifyMessageNotSupportedFaultType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsnt__NotifyMessageNotSupportedFaultType
#define soap_POST_recv_wsnt__NotifyMessageNotSupportedFaultType(soap, data) ( soap_read_wsnt__NotifyMessageNotSupportedFaultType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__UnsupportedPolicyRequestFaultType_FaultCause_DEFINED
#define SOAP_TYPE__wsnt__UnsupportedPolicyRequestFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(struct soap*, struct _wsnt__UnsupportedPolicyRequestFaultType_FaultCause *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(struct soap*, const struct _wsnt__UnsupportedPolicyRequestFaultType_FaultCause *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(struct soap*, const char*, int, const struct _wsnt__UnsupportedPolicyRequestFaultType_FaultCause *, const char*);
SOAP_FMAC3 struct _wsnt__UnsupportedPolicyRequestFaultType_FaultCause * SOAP_FMAC4 soap_in__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(struct soap*, const char*, struct _wsnt__UnsupportedPolicyRequestFaultType_FaultCause *, const char*);

SOAP_FMAC3 struct _wsnt__UnsupportedPolicyRequestFaultType_FaultCause * SOAP_FMAC4 soap_new__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(struct soap*, const struct _wsnt__UnsupportedPolicyRequestFaultType_FaultCause *, const char*, const char*);

#ifndef soap_write__wsnt__UnsupportedPolicyRequestFaultType_FaultCause
#define soap_write__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(soap, data, "wsnt:UnsupportedPolicyRequestFaultType-FaultCause", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__UnsupportedPolicyRequestFaultType_FaultCause
#define soap_PUT__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(soap, data, "wsnt:UnsupportedPolicyRequestFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__UnsupportedPolicyRequestFaultType_FaultCause
#define soap_PATCH__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(soap, data, "wsnt:UnsupportedPolicyRequestFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__UnsupportedPolicyRequestFaultType_FaultCause
#define soap_POST_send__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(soap, data, "wsnt:UnsupportedPolicyRequestFaultType-FaultCause", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__UnsupportedPolicyRequestFaultType_FaultCause * SOAP_FMAC4 soap_get__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(struct soap*, struct _wsnt__UnsupportedPolicyRequestFaultType_FaultCause *, const char*, const char*);

#ifndef soap_read__wsnt__UnsupportedPolicyRequestFaultType_FaultCause
#define soap_read__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(soap, data) ( ((data) ? (soap_default__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__UnsupportedPolicyRequestFaultType_FaultCause
#define soap_GET__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__UnsupportedPolicyRequestFaultType_FaultCause
#define soap_POST_recv__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(soap, data) ( soap_read__wsnt__UnsupportedPolicyRequestFaultType_FaultCause(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__UnsupportedPolicyRequestFaultType_Description_DEFINED
#define SOAP_TYPE__wsnt__UnsupportedPolicyRequestFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__UnsupportedPolicyRequestFaultType_Description(struct soap*, struct _wsnt__UnsupportedPolicyRequestFaultType_Description *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__UnsupportedPolicyRequestFaultType_Description(struct soap*, const struct _wsnt__UnsupportedPolicyRequestFaultType_Description *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UnsupportedPolicyRequestFaultType_Description(struct soap*, const char*, int, const struct _wsnt__UnsupportedPolicyRequestFaultType_Description *, const char*);
SOAP_FMAC3 struct _wsnt__UnsupportedPolicyRequestFaultType_Description * SOAP_FMAC4 soap_in__wsnt__UnsupportedPolicyRequestFaultType_Description(struct soap*, const char*, struct _wsnt__UnsupportedPolicyRequestFaultType_Description *, const char*);

SOAP_FMAC3 struct _wsnt__UnsupportedPolicyRequestFaultType_Description * SOAP_FMAC4 soap_new__wsnt__UnsupportedPolicyRequestFaultType_Description(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__UnsupportedPolicyRequestFaultType_Description(struct soap*, const struct _wsnt__UnsupportedPolicyRequestFaultType_Description *, const char*, const char*);

#ifndef soap_write__wsnt__UnsupportedPolicyRequestFaultType_Description
#define soap_write__wsnt__UnsupportedPolicyRequestFaultType_Description(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__UnsupportedPolicyRequestFaultType_Description(soap, data), 0) || soap_put__wsnt__UnsupportedPolicyRequestFaultType_Description(soap, data, "wsnt:UnsupportedPolicyRequestFaultType-Description", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__UnsupportedPolicyRequestFaultType_Description
#define soap_PUT__wsnt__UnsupportedPolicyRequestFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnsupportedPolicyRequestFaultType_Description(soap, data), 0) || soap_put__wsnt__UnsupportedPolicyRequestFaultType_Description(soap, data, "wsnt:UnsupportedPolicyRequestFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__UnsupportedPolicyRequestFaultType_Description
#define soap_PATCH__wsnt__UnsupportedPolicyRequestFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnsupportedPolicyRequestFaultType_Description(soap, data), 0) || soap_put__wsnt__UnsupportedPolicyRequestFaultType_Description(soap, data, "wsnt:UnsupportedPolicyRequestFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__UnsupportedPolicyRequestFaultType_Description
#define soap_POST_send__wsnt__UnsupportedPolicyRequestFaultType_Description(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnsupportedPolicyRequestFaultType_Description(soap, data), 0) || soap_put__wsnt__UnsupportedPolicyRequestFaultType_Description(soap, data, "wsnt:UnsupportedPolicyRequestFaultType-Description", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__UnsupportedPolicyRequestFaultType_Description * SOAP_FMAC4 soap_get__wsnt__UnsupportedPolicyRequestFaultType_Description(struct soap*, struct _wsnt__UnsupportedPolicyRequestFaultType_Description *, const char*, const char*);

#ifndef soap_read__wsnt__UnsupportedPolicyRequestFaultType_Description
#define soap_read__wsnt__UnsupportedPolicyRequestFaultType_Description(soap, data) ( ((data) ? (soap_default__wsnt__UnsupportedPolicyRequestFaultType_Description(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UnsupportedPolicyRequestFaultType_Description(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__UnsupportedPolicyRequestFaultType_Description
#define soap_GET__wsnt__UnsupportedPolicyRequestFaultType_Description(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__UnsupportedPolicyRequestFaultType_Description(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__UnsupportedPolicyRequestFaultType_Description
#define soap_POST_recv__wsnt__UnsupportedPolicyRequestFaultType_Description(soap, data) ( soap_read__wsnt__UnsupportedPolicyRequestFaultType_Description(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode_DEFINED
#define SOAP_TYPE__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(struct soap*, struct _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(struct soap*, const struct _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(struct soap*, const char*, int, const struct _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode *, const char*);
SOAP_FMAC3 struct _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode * SOAP_FMAC4 soap_in__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode *, const char*);

SOAP_FMAC3 struct _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode * SOAP_FMAC4 soap_new__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(struct soap*, const struct _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_write__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode
#define soap_write__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(soap, data, "wsnt:UnsupportedPolicyRequestFaultType-ErrorCode", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode
#define soap_PUT__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(soap, data, "wsnt:UnsupportedPolicyRequestFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode
#define soap_PATCH__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(soap, data, "wsnt:UnsupportedPolicyRequestFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode
#define soap_POST_send__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(soap, data, "wsnt:UnsupportedPolicyRequestFaultType-ErrorCode", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode * SOAP_FMAC4 soap_get__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(struct soap*, struct _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_read__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode
#define soap_read__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(soap, data) ( ((data) ? (soap_default__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode
#define soap_GET__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode
#define soap_POST_recv__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(soap, data) ( soap_read__wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsnt__UnsupportedPolicyRequestFaultType_DEFINED
#define SOAP_TYPE_wsnt__UnsupportedPolicyRequestFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsnt__UnsupportedPolicyRequestFaultType(struct soap*, struct wsnt__UnsupportedPolicyRequestFaultType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__UnsupportedPolicyRequestFaultType(struct soap*, const struct wsnt__UnsupportedPolicyRequestFaultType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__UnsupportedPolicyRequestFaultType(struct soap*, const char*, int, const struct wsnt__UnsupportedPolicyRequestFaultType *, const char*);
SOAP_FMAC3 struct wsnt__UnsupportedPolicyRequestFaultType * SOAP_FMAC4 soap_in_wsnt__UnsupportedPolicyRequestFaultType(struct soap*, const char*, struct wsnt__UnsupportedPolicyRequestFaultType *, const char*);

SOAP_FMAC3 struct wsnt__UnsupportedPolicyRequestFaultType * SOAP_FMAC4 soap_new_wsnt__UnsupportedPolicyRequestFaultType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__UnsupportedPolicyRequestFaultType(struct soap*, const struct wsnt__UnsupportedPolicyRequestFaultType *, const char*, const char*);

#ifndef soap_write_wsnt__UnsupportedPolicyRequestFaultType
#define soap_write_wsnt__UnsupportedPolicyRequestFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsnt__UnsupportedPolicyRequestFaultType(soap, data), 0) || soap_put_wsnt__UnsupportedPolicyRequestFaultType(soap, data, "wsnt:UnsupportedPolicyRequestFaultType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsnt__UnsupportedPolicyRequestFaultType
#define soap_PUT_wsnt__UnsupportedPolicyRequestFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__UnsupportedPolicyRequestFaultType(soap, data), 0) || soap_put_wsnt__UnsupportedPolicyRequestFaultType(soap, data, "wsnt:UnsupportedPolicyRequestFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsnt__UnsupportedPolicyRequestFaultType
#define soap_PATCH_wsnt__UnsupportedPolicyRequestFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__UnsupportedPolicyRequestFaultType(soap, data), 0) || soap_put_wsnt__UnsupportedPolicyRequestFaultType(soap, data, "wsnt:UnsupportedPolicyRequestFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsnt__UnsupportedPolicyRequestFaultType
#define soap_POST_send_wsnt__UnsupportedPolicyRequestFaultType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__UnsupportedPolicyRequestFaultType(soap, data), 0) || soap_put_wsnt__UnsupportedPolicyRequestFaultType(soap, data, "wsnt:UnsupportedPolicyRequestFaultType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsnt__UnsupportedPolicyRequestFaultType * SOAP_FMAC4 soap_get_wsnt__UnsupportedPolicyRequestFaultType(struct soap*, struct wsnt__UnsupportedPolicyRequestFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__UnsupportedPolicyRequestFaultType
#define soap_read_wsnt__UnsupportedPolicyRequestFaultType(soap, data) ( ((data) ? (soap_default_wsnt__UnsupportedPolicyRequestFaultType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__UnsupportedPolicyRequestFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsnt__UnsupportedPolicyRequestFaultType
#define soap_GET_wsnt__UnsupportedPolicyRequestFaultType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsnt__UnsupportedPolicyRequestFaultType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsnt__UnsupportedPolicyRequestFaultType
#define soap_POST_recv_wsnt__UnsupportedPolicyRequestFaultType(soap, data) ( soap_read_wsnt__UnsupportedPolicyRequestFaultType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause_DEFINED
#define SOAP_TYPE__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(struct soap*, struct _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(struct soap*, const struct _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(struct soap*, const char*, int, const struct _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause *, const char*);
SOAP_FMAC3 struct _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause * SOAP_FMAC4 soap_in__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(struct soap*, const char*, struct _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause *, const char*);

SOAP_FMAC3 struct _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause * SOAP_FMAC4 soap_new__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(struct soap*, const struct _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause *, const char*, const char*);

#ifndef soap_write__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause
#define soap_write__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(soap, data, "wsnt:UnrecognizedPolicyRequestFaultType-FaultCause", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause
#define soap_PUT__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(soap, data, "wsnt:UnrecognizedPolicyRequestFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause
#define soap_PATCH__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(soap, data, "wsnt:UnrecognizedPolicyRequestFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause
#define soap_POST_send__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(soap, data, "wsnt:UnrecognizedPolicyRequestFaultType-FaultCause", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause * SOAP_FMAC4 soap_get__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(struct soap*, struct _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause *, const char*, const char*);

#ifndef soap_read__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause
#define soap_read__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(soap, data) ( ((data) ? (soap_default__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause
#define soap_GET__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause
#define soap_POST_recv__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(soap, data) ( soap_read__wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__UnrecognizedPolicyRequestFaultType_Description_DEFINED
#define SOAP_TYPE__wsnt__UnrecognizedPolicyRequestFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__UnrecognizedPolicyRequestFaultType_Description(struct soap*, struct _wsnt__UnrecognizedPolicyRequestFaultType_Description *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__UnrecognizedPolicyRequestFaultType_Description(struct soap*, const struct _wsnt__UnrecognizedPolicyRequestFaultType_Description *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UnrecognizedPolicyRequestFaultType_Description(struct soap*, const char*, int, const struct _wsnt__UnrecognizedPolicyRequestFaultType_Description *, const char*);
SOAP_FMAC3 struct _wsnt__UnrecognizedPolicyRequestFaultType_Description * SOAP_FMAC4 soap_in__wsnt__UnrecognizedPolicyRequestFaultType_Description(struct soap*, const char*, struct _wsnt__UnrecognizedPolicyRequestFaultType_Description *, const char*);

SOAP_FMAC3 struct _wsnt__UnrecognizedPolicyRequestFaultType_Description * SOAP_FMAC4 soap_new__wsnt__UnrecognizedPolicyRequestFaultType_Description(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__UnrecognizedPolicyRequestFaultType_Description(struct soap*, const struct _wsnt__UnrecognizedPolicyRequestFaultType_Description *, const char*, const char*);

#ifndef soap_write__wsnt__UnrecognizedPolicyRequestFaultType_Description
#define soap_write__wsnt__UnrecognizedPolicyRequestFaultType_Description(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__UnrecognizedPolicyRequestFaultType_Description(soap, data), 0) || soap_put__wsnt__UnrecognizedPolicyRequestFaultType_Description(soap, data, "wsnt:UnrecognizedPolicyRequestFaultType-Description", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__UnrecognizedPolicyRequestFaultType_Description
#define soap_PUT__wsnt__UnrecognizedPolicyRequestFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnrecognizedPolicyRequestFaultType_Description(soap, data), 0) || soap_put__wsnt__UnrecognizedPolicyRequestFaultType_Description(soap, data, "wsnt:UnrecognizedPolicyRequestFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__UnrecognizedPolicyRequestFaultType_Description
#define soap_PATCH__wsnt__UnrecognizedPolicyRequestFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnrecognizedPolicyRequestFaultType_Description(soap, data), 0) || soap_put__wsnt__UnrecognizedPolicyRequestFaultType_Description(soap, data, "wsnt:UnrecognizedPolicyRequestFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__UnrecognizedPolicyRequestFaultType_Description
#define soap_POST_send__wsnt__UnrecognizedPolicyRequestFaultType_Description(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnrecognizedPolicyRequestFaultType_Description(soap, data), 0) || soap_put__wsnt__UnrecognizedPolicyRequestFaultType_Description(soap, data, "wsnt:UnrecognizedPolicyRequestFaultType-Description", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__UnrecognizedPolicyRequestFaultType_Description * SOAP_FMAC4 soap_get__wsnt__UnrecognizedPolicyRequestFaultType_Description(struct soap*, struct _wsnt__UnrecognizedPolicyRequestFaultType_Description *, const char*, const char*);

#ifndef soap_read__wsnt__UnrecognizedPolicyRequestFaultType_Description
#define soap_read__wsnt__UnrecognizedPolicyRequestFaultType_Description(soap, data) ( ((data) ? (soap_default__wsnt__UnrecognizedPolicyRequestFaultType_Description(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UnrecognizedPolicyRequestFaultType_Description(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__UnrecognizedPolicyRequestFaultType_Description
#define soap_GET__wsnt__UnrecognizedPolicyRequestFaultType_Description(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__UnrecognizedPolicyRequestFaultType_Description(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__UnrecognizedPolicyRequestFaultType_Description
#define soap_POST_recv__wsnt__UnrecognizedPolicyRequestFaultType_Description(soap, data) ( soap_read__wsnt__UnrecognizedPolicyRequestFaultType_Description(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode_DEFINED
#define SOAP_TYPE__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(struct soap*, struct _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(struct soap*, const struct _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(struct soap*, const char*, int, const struct _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode *, const char*);
SOAP_FMAC3 struct _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode * SOAP_FMAC4 soap_in__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode *, const char*);

SOAP_FMAC3 struct _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode * SOAP_FMAC4 soap_new__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(struct soap*, const struct _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_write__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode
#define soap_write__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(soap, data, "wsnt:UnrecognizedPolicyRequestFaultType-ErrorCode", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode
#define soap_PUT__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(soap, data, "wsnt:UnrecognizedPolicyRequestFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode
#define soap_PATCH__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(soap, data, "wsnt:UnrecognizedPolicyRequestFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode
#define soap_POST_send__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(soap, data, "wsnt:UnrecognizedPolicyRequestFaultType-ErrorCode", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode * SOAP_FMAC4 soap_get__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(struct soap*, struct _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_read__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode
#define soap_read__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(soap, data) ( ((data) ? (soap_default__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode
#define soap_GET__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode
#define soap_POST_recv__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(soap, data) ( soap_read__wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsnt__UnrecognizedPolicyRequestFaultType_DEFINED
#define SOAP_TYPE_wsnt__UnrecognizedPolicyRequestFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsnt__UnrecognizedPolicyRequestFaultType(struct soap*, struct wsnt__UnrecognizedPolicyRequestFaultType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__UnrecognizedPolicyRequestFaultType(struct soap*, const struct wsnt__UnrecognizedPolicyRequestFaultType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__UnrecognizedPolicyRequestFaultType(struct soap*, const char*, int, const struct wsnt__UnrecognizedPolicyRequestFaultType *, const char*);
SOAP_FMAC3 struct wsnt__UnrecognizedPolicyRequestFaultType * SOAP_FMAC4 soap_in_wsnt__UnrecognizedPolicyRequestFaultType(struct soap*, const char*, struct wsnt__UnrecognizedPolicyRequestFaultType *, const char*);

SOAP_FMAC3 struct wsnt__UnrecognizedPolicyRequestFaultType * SOAP_FMAC4 soap_new_wsnt__UnrecognizedPolicyRequestFaultType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__UnrecognizedPolicyRequestFaultType(struct soap*, const struct wsnt__UnrecognizedPolicyRequestFaultType *, const char*, const char*);

#ifndef soap_write_wsnt__UnrecognizedPolicyRequestFaultType
#define soap_write_wsnt__UnrecognizedPolicyRequestFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsnt__UnrecognizedPolicyRequestFaultType(soap, data), 0) || soap_put_wsnt__UnrecognizedPolicyRequestFaultType(soap, data, "wsnt:UnrecognizedPolicyRequestFaultType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsnt__UnrecognizedPolicyRequestFaultType
#define soap_PUT_wsnt__UnrecognizedPolicyRequestFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__UnrecognizedPolicyRequestFaultType(soap, data), 0) || soap_put_wsnt__UnrecognizedPolicyRequestFaultType(soap, data, "wsnt:UnrecognizedPolicyRequestFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsnt__UnrecognizedPolicyRequestFaultType
#define soap_PATCH_wsnt__UnrecognizedPolicyRequestFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__UnrecognizedPolicyRequestFaultType(soap, data), 0) || soap_put_wsnt__UnrecognizedPolicyRequestFaultType(soap, data, "wsnt:UnrecognizedPolicyRequestFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsnt__UnrecognizedPolicyRequestFaultType
#define soap_POST_send_wsnt__UnrecognizedPolicyRequestFaultType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__UnrecognizedPolicyRequestFaultType(soap, data), 0) || soap_put_wsnt__UnrecognizedPolicyRequestFaultType(soap, data, "wsnt:UnrecognizedPolicyRequestFaultType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsnt__UnrecognizedPolicyRequestFaultType * SOAP_FMAC4 soap_get_wsnt__UnrecognizedPolicyRequestFaultType(struct soap*, struct wsnt__UnrecognizedPolicyRequestFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__UnrecognizedPolicyRequestFaultType
#define soap_read_wsnt__UnrecognizedPolicyRequestFaultType(soap, data) ( ((data) ? (soap_default_wsnt__UnrecognizedPolicyRequestFaultType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__UnrecognizedPolicyRequestFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsnt__UnrecognizedPolicyRequestFaultType
#define soap_GET_wsnt__UnrecognizedPolicyRequestFaultType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsnt__UnrecognizedPolicyRequestFaultType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsnt__UnrecognizedPolicyRequestFaultType
#define soap_POST_recv_wsnt__UnrecognizedPolicyRequestFaultType(soap, data) ( soap_read_wsnt__UnrecognizedPolicyRequestFaultType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__InvalidMessageContentExpressionFaultType_FaultCause_DEFINED
#define SOAP_TYPE__wsnt__InvalidMessageContentExpressionFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(struct soap*, struct _wsnt__InvalidMessageContentExpressionFaultType_FaultCause *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(struct soap*, const struct _wsnt__InvalidMessageContentExpressionFaultType_FaultCause *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(struct soap*, const char*, int, const struct _wsnt__InvalidMessageContentExpressionFaultType_FaultCause *, const char*);
SOAP_FMAC3 struct _wsnt__InvalidMessageContentExpressionFaultType_FaultCause * SOAP_FMAC4 soap_in__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(struct soap*, const char*, struct _wsnt__InvalidMessageContentExpressionFaultType_FaultCause *, const char*);

SOAP_FMAC3 struct _wsnt__InvalidMessageContentExpressionFaultType_FaultCause * SOAP_FMAC4 soap_new__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(struct soap*, const struct _wsnt__InvalidMessageContentExpressionFaultType_FaultCause *, const char*, const char*);

#ifndef soap_write__wsnt__InvalidMessageContentExpressionFaultType_FaultCause
#define soap_write__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(soap, data, "wsnt:InvalidMessageContentExpressionFaultType-FaultCause", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__InvalidMessageContentExpressionFaultType_FaultCause
#define soap_PUT__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(soap, data, "wsnt:InvalidMessageContentExpressionFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__InvalidMessageContentExpressionFaultType_FaultCause
#define soap_PATCH__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(soap, data, "wsnt:InvalidMessageContentExpressionFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__InvalidMessageContentExpressionFaultType_FaultCause
#define soap_POST_send__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(soap, data, "wsnt:InvalidMessageContentExpressionFaultType-FaultCause", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__InvalidMessageContentExpressionFaultType_FaultCause * SOAP_FMAC4 soap_get__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(struct soap*, struct _wsnt__InvalidMessageContentExpressionFaultType_FaultCause *, const char*, const char*);

#ifndef soap_read__wsnt__InvalidMessageContentExpressionFaultType_FaultCause
#define soap_read__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(soap, data) ( ((data) ? (soap_default__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__InvalidMessageContentExpressionFaultType_FaultCause
#define soap_GET__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__InvalidMessageContentExpressionFaultType_FaultCause
#define soap_POST_recv__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(soap, data) ( soap_read__wsnt__InvalidMessageContentExpressionFaultType_FaultCause(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__InvalidMessageContentExpressionFaultType_Description_DEFINED
#define SOAP_TYPE__wsnt__InvalidMessageContentExpressionFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__InvalidMessageContentExpressionFaultType_Description(struct soap*, struct _wsnt__InvalidMessageContentExpressionFaultType_Description *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__InvalidMessageContentExpressionFaultType_Description(struct soap*, const struct _wsnt__InvalidMessageContentExpressionFaultType_Description *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__InvalidMessageContentExpressionFaultType_Description(struct soap*, const char*, int, const struct _wsnt__InvalidMessageContentExpressionFaultType_Description *, const char*);
SOAP_FMAC3 struct _wsnt__InvalidMessageContentExpressionFaultType_Description * SOAP_FMAC4 soap_in__wsnt__InvalidMessageContentExpressionFaultType_Description(struct soap*, const char*, struct _wsnt__InvalidMessageContentExpressionFaultType_Description *, const char*);

SOAP_FMAC3 struct _wsnt__InvalidMessageContentExpressionFaultType_Description * SOAP_FMAC4 soap_new__wsnt__InvalidMessageContentExpressionFaultType_Description(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__InvalidMessageContentExpressionFaultType_Description(struct soap*, const struct _wsnt__InvalidMessageContentExpressionFaultType_Description *, const char*, const char*);

#ifndef soap_write__wsnt__InvalidMessageContentExpressionFaultType_Description
#define soap_write__wsnt__InvalidMessageContentExpressionFaultType_Description(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__InvalidMessageContentExpressionFaultType_Description(soap, data), 0) || soap_put__wsnt__InvalidMessageContentExpressionFaultType_Description(soap, data, "wsnt:InvalidMessageContentExpressionFaultType-Description", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__InvalidMessageContentExpressionFaultType_Description
#define soap_PUT__wsnt__InvalidMessageContentExpressionFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidMessageContentExpressionFaultType_Description(soap, data), 0) || soap_put__wsnt__InvalidMessageContentExpressionFaultType_Description(soap, data, "wsnt:InvalidMessageContentExpressionFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__InvalidMessageContentExpressionFaultType_Description
#define soap_PATCH__wsnt__InvalidMessageContentExpressionFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidMessageContentExpressionFaultType_Description(soap, data), 0) || soap_put__wsnt__InvalidMessageContentExpressionFaultType_Description(soap, data, "wsnt:InvalidMessageContentExpressionFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__InvalidMessageContentExpressionFaultType_Description
#define soap_POST_send__wsnt__InvalidMessageContentExpressionFaultType_Description(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidMessageContentExpressionFaultType_Description(soap, data), 0) || soap_put__wsnt__InvalidMessageContentExpressionFaultType_Description(soap, data, "wsnt:InvalidMessageContentExpressionFaultType-Description", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__InvalidMessageContentExpressionFaultType_Description * SOAP_FMAC4 soap_get__wsnt__InvalidMessageContentExpressionFaultType_Description(struct soap*, struct _wsnt__InvalidMessageContentExpressionFaultType_Description *, const char*, const char*);

#ifndef soap_read__wsnt__InvalidMessageContentExpressionFaultType_Description
#define soap_read__wsnt__InvalidMessageContentExpressionFaultType_Description(soap, data) ( ((data) ? (soap_default__wsnt__InvalidMessageContentExpressionFaultType_Description(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__InvalidMessageContentExpressionFaultType_Description(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__InvalidMessageContentExpressionFaultType_Description
#define soap_GET__wsnt__InvalidMessageContentExpressionFaultType_Description(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__InvalidMessageContentExpressionFaultType_Description(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__InvalidMessageContentExpressionFaultType_Description
#define soap_POST_recv__wsnt__InvalidMessageContentExpressionFaultType_Description(soap, data) ( soap_read__wsnt__InvalidMessageContentExpressionFaultType_Description(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode_DEFINED
#define SOAP_TYPE__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(struct soap*, struct _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(struct soap*, const struct _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(struct soap*, const char*, int, const struct _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode *, const char*);
SOAP_FMAC3 struct _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode * SOAP_FMAC4 soap_in__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode *, const char*);

SOAP_FMAC3 struct _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode * SOAP_FMAC4 soap_new__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(struct soap*, const struct _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_write__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode
#define soap_write__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(soap, data, "wsnt:InvalidMessageContentExpressionFaultType-ErrorCode", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode
#define soap_PUT__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(soap, data, "wsnt:InvalidMessageContentExpressionFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode
#define soap_PATCH__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(soap, data, "wsnt:InvalidMessageContentExpressionFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode
#define soap_POST_send__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(soap, data, "wsnt:InvalidMessageContentExpressionFaultType-ErrorCode", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode * SOAP_FMAC4 soap_get__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(struct soap*, struct _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_read__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode
#define soap_read__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(soap, data) ( ((data) ? (soap_default__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode
#define soap_GET__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode
#define soap_POST_recv__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(soap, data) ( soap_read__wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsnt__InvalidMessageContentExpressionFaultType_DEFINED
#define SOAP_TYPE_wsnt__InvalidMessageContentExpressionFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsnt__InvalidMessageContentExpressionFaultType(struct soap*, struct wsnt__InvalidMessageContentExpressionFaultType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__InvalidMessageContentExpressionFaultType(struct soap*, const struct wsnt__InvalidMessageContentExpressionFaultType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__InvalidMessageContentExpressionFaultType(struct soap*, const char*, int, const struct wsnt__InvalidMessageContentExpressionFaultType *, const char*);
SOAP_FMAC3 struct wsnt__InvalidMessageContentExpressionFaultType * SOAP_FMAC4 soap_in_wsnt__InvalidMessageContentExpressionFaultType(struct soap*, const char*, struct wsnt__InvalidMessageContentExpressionFaultType *, const char*);

SOAP_FMAC3 struct wsnt__InvalidMessageContentExpressionFaultType * SOAP_FMAC4 soap_new_wsnt__InvalidMessageContentExpressionFaultType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__InvalidMessageContentExpressionFaultType(struct soap*, const struct wsnt__InvalidMessageContentExpressionFaultType *, const char*, const char*);

#ifndef soap_write_wsnt__InvalidMessageContentExpressionFaultType
#define soap_write_wsnt__InvalidMessageContentExpressionFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsnt__InvalidMessageContentExpressionFaultType(soap, data), 0) || soap_put_wsnt__InvalidMessageContentExpressionFaultType(soap, data, "wsnt:InvalidMessageContentExpressionFaultType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsnt__InvalidMessageContentExpressionFaultType
#define soap_PUT_wsnt__InvalidMessageContentExpressionFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__InvalidMessageContentExpressionFaultType(soap, data), 0) || soap_put_wsnt__InvalidMessageContentExpressionFaultType(soap, data, "wsnt:InvalidMessageContentExpressionFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsnt__InvalidMessageContentExpressionFaultType
#define soap_PATCH_wsnt__InvalidMessageContentExpressionFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__InvalidMessageContentExpressionFaultType(soap, data), 0) || soap_put_wsnt__InvalidMessageContentExpressionFaultType(soap, data, "wsnt:InvalidMessageContentExpressionFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsnt__InvalidMessageContentExpressionFaultType
#define soap_POST_send_wsnt__InvalidMessageContentExpressionFaultType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__InvalidMessageContentExpressionFaultType(soap, data), 0) || soap_put_wsnt__InvalidMessageContentExpressionFaultType(soap, data, "wsnt:InvalidMessageContentExpressionFaultType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsnt__InvalidMessageContentExpressionFaultType * SOAP_FMAC4 soap_get_wsnt__InvalidMessageContentExpressionFaultType(struct soap*, struct wsnt__InvalidMessageContentExpressionFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__InvalidMessageContentExpressionFaultType
#define soap_read_wsnt__InvalidMessageContentExpressionFaultType(soap, data) ( ((data) ? (soap_default_wsnt__InvalidMessageContentExpressionFaultType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__InvalidMessageContentExpressionFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsnt__InvalidMessageContentExpressionFaultType
#define soap_GET_wsnt__InvalidMessageContentExpressionFaultType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsnt__InvalidMessageContentExpressionFaultType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsnt__InvalidMessageContentExpressionFaultType
#define soap_POST_recv_wsnt__InvalidMessageContentExpressionFaultType(soap, data) ( soap_read_wsnt__InvalidMessageContentExpressionFaultType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause_DEFINED
#define SOAP_TYPE__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(struct soap*, struct _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(struct soap*, const struct _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(struct soap*, const char*, int, const struct _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause *, const char*);
SOAP_FMAC3 struct _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause * SOAP_FMAC4 soap_in__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(struct soap*, const char*, struct _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause *, const char*);

SOAP_FMAC3 struct _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause * SOAP_FMAC4 soap_new__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(struct soap*, const struct _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause *, const char*, const char*);

#ifndef soap_write__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause
#define soap_write__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap, data, "wsnt:InvalidProducerPropertiesExpressionFaultType-FaultCause", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause
#define soap_PUT__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap, data, "wsnt:InvalidProducerPropertiesExpressionFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause
#define soap_PATCH__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap, data, "wsnt:InvalidProducerPropertiesExpressionFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause
#define soap_POST_send__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap, data, "wsnt:InvalidProducerPropertiesExpressionFaultType-FaultCause", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause * SOAP_FMAC4 soap_get__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(struct soap*, struct _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause *, const char*, const char*);

#ifndef soap_read__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause
#define soap_read__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap, data) ( ((data) ? (soap_default__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause
#define soap_GET__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause
#define soap_POST_recv__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap, data) ( soap_read__wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__InvalidProducerPropertiesExpressionFaultType_Description_DEFINED
#define SOAP_TYPE__wsnt__InvalidProducerPropertiesExpressionFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(struct soap*, struct _wsnt__InvalidProducerPropertiesExpressionFaultType_Description *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(struct soap*, const struct _wsnt__InvalidProducerPropertiesExpressionFaultType_Description *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(struct soap*, const char*, int, const struct _wsnt__InvalidProducerPropertiesExpressionFaultType_Description *, const char*);
SOAP_FMAC3 struct _wsnt__InvalidProducerPropertiesExpressionFaultType_Description * SOAP_FMAC4 soap_in__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(struct soap*, const char*, struct _wsnt__InvalidProducerPropertiesExpressionFaultType_Description *, const char*);

SOAP_FMAC3 struct _wsnt__InvalidProducerPropertiesExpressionFaultType_Description * SOAP_FMAC4 soap_new__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(struct soap*, const struct _wsnt__InvalidProducerPropertiesExpressionFaultType_Description *, const char*, const char*);

#ifndef soap_write__wsnt__InvalidProducerPropertiesExpressionFaultType_Description
#define soap_write__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(soap, data), 0) || soap_put__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(soap, data, "wsnt:InvalidProducerPropertiesExpressionFaultType-Description", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__InvalidProducerPropertiesExpressionFaultType_Description
#define soap_PUT__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(soap, data), 0) || soap_put__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(soap, data, "wsnt:InvalidProducerPropertiesExpressionFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__InvalidProducerPropertiesExpressionFaultType_Description
#define soap_PATCH__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(soap, data), 0) || soap_put__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(soap, data, "wsnt:InvalidProducerPropertiesExpressionFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__InvalidProducerPropertiesExpressionFaultType_Description
#define soap_POST_send__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(soap, data), 0) || soap_put__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(soap, data, "wsnt:InvalidProducerPropertiesExpressionFaultType-Description", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__InvalidProducerPropertiesExpressionFaultType_Description * SOAP_FMAC4 soap_get__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(struct soap*, struct _wsnt__InvalidProducerPropertiesExpressionFaultType_Description *, const char*, const char*);

#ifndef soap_read__wsnt__InvalidProducerPropertiesExpressionFaultType_Description
#define soap_read__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(soap, data) ( ((data) ? (soap_default__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__InvalidProducerPropertiesExpressionFaultType_Description
#define soap_GET__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__InvalidProducerPropertiesExpressionFaultType_Description
#define soap_POST_recv__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(soap, data) ( soap_read__wsnt__InvalidProducerPropertiesExpressionFaultType_Description(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode_DEFINED
#define SOAP_TYPE__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(struct soap*, struct _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(struct soap*, const struct _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(struct soap*, const char*, int, const struct _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode *, const char*);
SOAP_FMAC3 struct _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode * SOAP_FMAC4 soap_in__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode *, const char*);

SOAP_FMAC3 struct _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode * SOAP_FMAC4 soap_new__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(struct soap*, const struct _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_write__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode
#define soap_write__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap, data, "wsnt:InvalidProducerPropertiesExpressionFaultType-ErrorCode", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode
#define soap_PUT__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap, data, "wsnt:InvalidProducerPropertiesExpressionFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode
#define soap_PATCH__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap, data, "wsnt:InvalidProducerPropertiesExpressionFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode
#define soap_POST_send__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap, data, "wsnt:InvalidProducerPropertiesExpressionFaultType-ErrorCode", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode * SOAP_FMAC4 soap_get__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(struct soap*, struct _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_read__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode
#define soap_read__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap, data) ( ((data) ? (soap_default__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode
#define soap_GET__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode
#define soap_POST_recv__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap, data) ( soap_read__wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsnt__InvalidProducerPropertiesExpressionFaultType_DEFINED
#define SOAP_TYPE_wsnt__InvalidProducerPropertiesExpressionFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsnt__InvalidProducerPropertiesExpressionFaultType(struct soap*, struct wsnt__InvalidProducerPropertiesExpressionFaultType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__InvalidProducerPropertiesExpressionFaultType(struct soap*, const struct wsnt__InvalidProducerPropertiesExpressionFaultType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__InvalidProducerPropertiesExpressionFaultType(struct soap*, const char*, int, const struct wsnt__InvalidProducerPropertiesExpressionFaultType *, const char*);
SOAP_FMAC3 struct wsnt__InvalidProducerPropertiesExpressionFaultType * SOAP_FMAC4 soap_in_wsnt__InvalidProducerPropertiesExpressionFaultType(struct soap*, const char*, struct wsnt__InvalidProducerPropertiesExpressionFaultType *, const char*);

SOAP_FMAC3 struct wsnt__InvalidProducerPropertiesExpressionFaultType * SOAP_FMAC4 soap_new_wsnt__InvalidProducerPropertiesExpressionFaultType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__InvalidProducerPropertiesExpressionFaultType(struct soap*, const struct wsnt__InvalidProducerPropertiesExpressionFaultType *, const char*, const char*);

#ifndef soap_write_wsnt__InvalidProducerPropertiesExpressionFaultType
#define soap_write_wsnt__InvalidProducerPropertiesExpressionFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsnt__InvalidProducerPropertiesExpressionFaultType(soap, data), 0) || soap_put_wsnt__InvalidProducerPropertiesExpressionFaultType(soap, data, "wsnt:InvalidProducerPropertiesExpressionFaultType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsnt__InvalidProducerPropertiesExpressionFaultType
#define soap_PUT_wsnt__InvalidProducerPropertiesExpressionFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__InvalidProducerPropertiesExpressionFaultType(soap, data), 0) || soap_put_wsnt__InvalidProducerPropertiesExpressionFaultType(soap, data, "wsnt:InvalidProducerPropertiesExpressionFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsnt__InvalidProducerPropertiesExpressionFaultType
#define soap_PATCH_wsnt__InvalidProducerPropertiesExpressionFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__InvalidProducerPropertiesExpressionFaultType(soap, data), 0) || soap_put_wsnt__InvalidProducerPropertiesExpressionFaultType(soap, data, "wsnt:InvalidProducerPropertiesExpressionFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsnt__InvalidProducerPropertiesExpressionFaultType
#define soap_POST_send_wsnt__InvalidProducerPropertiesExpressionFaultType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__InvalidProducerPropertiesExpressionFaultType(soap, data), 0) || soap_put_wsnt__InvalidProducerPropertiesExpressionFaultType(soap, data, "wsnt:InvalidProducerPropertiesExpressionFaultType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsnt__InvalidProducerPropertiesExpressionFaultType * SOAP_FMAC4 soap_get_wsnt__InvalidProducerPropertiesExpressionFaultType(struct soap*, struct wsnt__InvalidProducerPropertiesExpressionFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__InvalidProducerPropertiesExpressionFaultType
#define soap_read_wsnt__InvalidProducerPropertiesExpressionFaultType(soap, data) ( ((data) ? (soap_default_wsnt__InvalidProducerPropertiesExpressionFaultType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__InvalidProducerPropertiesExpressionFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsnt__InvalidProducerPropertiesExpressionFaultType
#define soap_GET_wsnt__InvalidProducerPropertiesExpressionFaultType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsnt__InvalidProducerPropertiesExpressionFaultType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsnt__InvalidProducerPropertiesExpressionFaultType
#define soap_POST_recv_wsnt__InvalidProducerPropertiesExpressionFaultType(soap, data) ( soap_read_wsnt__InvalidProducerPropertiesExpressionFaultType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause_DEFINED
#define SOAP_TYPE__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(struct soap*, struct _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(struct soap*, const struct _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(struct soap*, const char*, int, const struct _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause *, const char*);
SOAP_FMAC3 struct _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause * SOAP_FMAC4 soap_in__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(struct soap*, const char*, struct _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause *, const char*);

SOAP_FMAC3 struct _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause * SOAP_FMAC4 soap_new__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(struct soap*, const struct _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause *, const char*, const char*);

#ifndef soap_write__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause
#define soap_write__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(soap, data, "wsnt:MultipleTopicsSpecifiedFaultType-FaultCause", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause
#define soap_PUT__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(soap, data, "wsnt:MultipleTopicsSpecifiedFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause
#define soap_PATCH__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(soap, data, "wsnt:MultipleTopicsSpecifiedFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause
#define soap_POST_send__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(soap, data, "wsnt:MultipleTopicsSpecifiedFaultType-FaultCause", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause * SOAP_FMAC4 soap_get__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(struct soap*, struct _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause *, const char*, const char*);

#ifndef soap_read__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause
#define soap_read__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(soap, data) ( ((data) ? (soap_default__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause
#define soap_GET__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause
#define soap_POST_recv__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(soap, data) ( soap_read__wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__MultipleTopicsSpecifiedFaultType_Description_DEFINED
#define SOAP_TYPE__wsnt__MultipleTopicsSpecifiedFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__MultipleTopicsSpecifiedFaultType_Description(struct soap*, struct _wsnt__MultipleTopicsSpecifiedFaultType_Description *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__MultipleTopicsSpecifiedFaultType_Description(struct soap*, const struct _wsnt__MultipleTopicsSpecifiedFaultType_Description *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__MultipleTopicsSpecifiedFaultType_Description(struct soap*, const char*, int, const struct _wsnt__MultipleTopicsSpecifiedFaultType_Description *, const char*);
SOAP_FMAC3 struct _wsnt__MultipleTopicsSpecifiedFaultType_Description * SOAP_FMAC4 soap_in__wsnt__MultipleTopicsSpecifiedFaultType_Description(struct soap*, const char*, struct _wsnt__MultipleTopicsSpecifiedFaultType_Description *, const char*);

SOAP_FMAC3 struct _wsnt__MultipleTopicsSpecifiedFaultType_Description * SOAP_FMAC4 soap_new__wsnt__MultipleTopicsSpecifiedFaultType_Description(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__MultipleTopicsSpecifiedFaultType_Description(struct soap*, const struct _wsnt__MultipleTopicsSpecifiedFaultType_Description *, const char*, const char*);

#ifndef soap_write__wsnt__MultipleTopicsSpecifiedFaultType_Description
#define soap_write__wsnt__MultipleTopicsSpecifiedFaultType_Description(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__MultipleTopicsSpecifiedFaultType_Description(soap, data), 0) || soap_put__wsnt__MultipleTopicsSpecifiedFaultType_Description(soap, data, "wsnt:MultipleTopicsSpecifiedFaultType-Description", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__MultipleTopicsSpecifiedFaultType_Description
#define soap_PUT__wsnt__MultipleTopicsSpecifiedFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__MultipleTopicsSpecifiedFaultType_Description(soap, data), 0) || soap_put__wsnt__MultipleTopicsSpecifiedFaultType_Description(soap, data, "wsnt:MultipleTopicsSpecifiedFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__MultipleTopicsSpecifiedFaultType_Description
#define soap_PATCH__wsnt__MultipleTopicsSpecifiedFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__MultipleTopicsSpecifiedFaultType_Description(soap, data), 0) || soap_put__wsnt__MultipleTopicsSpecifiedFaultType_Description(soap, data, "wsnt:MultipleTopicsSpecifiedFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__MultipleTopicsSpecifiedFaultType_Description
#define soap_POST_send__wsnt__MultipleTopicsSpecifiedFaultType_Description(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__MultipleTopicsSpecifiedFaultType_Description(soap, data), 0) || soap_put__wsnt__MultipleTopicsSpecifiedFaultType_Description(soap, data, "wsnt:MultipleTopicsSpecifiedFaultType-Description", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__MultipleTopicsSpecifiedFaultType_Description * SOAP_FMAC4 soap_get__wsnt__MultipleTopicsSpecifiedFaultType_Description(struct soap*, struct _wsnt__MultipleTopicsSpecifiedFaultType_Description *, const char*, const char*);

#ifndef soap_read__wsnt__MultipleTopicsSpecifiedFaultType_Description
#define soap_read__wsnt__MultipleTopicsSpecifiedFaultType_Description(soap, data) ( ((data) ? (soap_default__wsnt__MultipleTopicsSpecifiedFaultType_Description(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__MultipleTopicsSpecifiedFaultType_Description(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__MultipleTopicsSpecifiedFaultType_Description
#define soap_GET__wsnt__MultipleTopicsSpecifiedFaultType_Description(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__MultipleTopicsSpecifiedFaultType_Description(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__MultipleTopicsSpecifiedFaultType_Description
#define soap_POST_recv__wsnt__MultipleTopicsSpecifiedFaultType_Description(soap, data) ( soap_read__wsnt__MultipleTopicsSpecifiedFaultType_Description(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode_DEFINED
#define SOAP_TYPE__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(struct soap*, struct _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(struct soap*, const struct _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(struct soap*, const char*, int, const struct _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode *, const char*);
SOAP_FMAC3 struct _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode * SOAP_FMAC4 soap_in__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode *, const char*);

SOAP_FMAC3 struct _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode * SOAP_FMAC4 soap_new__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(struct soap*, const struct _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_write__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode
#define soap_write__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(soap, data, "wsnt:MultipleTopicsSpecifiedFaultType-ErrorCode", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode
#define soap_PUT__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(soap, data, "wsnt:MultipleTopicsSpecifiedFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode
#define soap_PATCH__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(soap, data, "wsnt:MultipleTopicsSpecifiedFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode
#define soap_POST_send__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(soap, data, "wsnt:MultipleTopicsSpecifiedFaultType-ErrorCode", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode * SOAP_FMAC4 soap_get__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(struct soap*, struct _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_read__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode
#define soap_read__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(soap, data) ( ((data) ? (soap_default__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode
#define soap_GET__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode
#define soap_POST_recv__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(soap, data) ( soap_read__wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsnt__MultipleTopicsSpecifiedFaultType_DEFINED
#define SOAP_TYPE_wsnt__MultipleTopicsSpecifiedFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsnt__MultipleTopicsSpecifiedFaultType(struct soap*, struct wsnt__MultipleTopicsSpecifiedFaultType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__MultipleTopicsSpecifiedFaultType(struct soap*, const struct wsnt__MultipleTopicsSpecifiedFaultType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__MultipleTopicsSpecifiedFaultType(struct soap*, const char*, int, const struct wsnt__MultipleTopicsSpecifiedFaultType *, const char*);
SOAP_FMAC3 struct wsnt__MultipleTopicsSpecifiedFaultType * SOAP_FMAC4 soap_in_wsnt__MultipleTopicsSpecifiedFaultType(struct soap*, const char*, struct wsnt__MultipleTopicsSpecifiedFaultType *, const char*);

SOAP_FMAC3 struct wsnt__MultipleTopicsSpecifiedFaultType * SOAP_FMAC4 soap_new_wsnt__MultipleTopicsSpecifiedFaultType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__MultipleTopicsSpecifiedFaultType(struct soap*, const struct wsnt__MultipleTopicsSpecifiedFaultType *, const char*, const char*);

#ifndef soap_write_wsnt__MultipleTopicsSpecifiedFaultType
#define soap_write_wsnt__MultipleTopicsSpecifiedFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsnt__MultipleTopicsSpecifiedFaultType(soap, data), 0) || soap_put_wsnt__MultipleTopicsSpecifiedFaultType(soap, data, "wsnt:MultipleTopicsSpecifiedFaultType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsnt__MultipleTopicsSpecifiedFaultType
#define soap_PUT_wsnt__MultipleTopicsSpecifiedFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__MultipleTopicsSpecifiedFaultType(soap, data), 0) || soap_put_wsnt__MultipleTopicsSpecifiedFaultType(soap, data, "wsnt:MultipleTopicsSpecifiedFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsnt__MultipleTopicsSpecifiedFaultType
#define soap_PATCH_wsnt__MultipleTopicsSpecifiedFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__MultipleTopicsSpecifiedFaultType(soap, data), 0) || soap_put_wsnt__MultipleTopicsSpecifiedFaultType(soap, data, "wsnt:MultipleTopicsSpecifiedFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsnt__MultipleTopicsSpecifiedFaultType
#define soap_POST_send_wsnt__MultipleTopicsSpecifiedFaultType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__MultipleTopicsSpecifiedFaultType(soap, data), 0) || soap_put_wsnt__MultipleTopicsSpecifiedFaultType(soap, data, "wsnt:MultipleTopicsSpecifiedFaultType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsnt__MultipleTopicsSpecifiedFaultType * SOAP_FMAC4 soap_get_wsnt__MultipleTopicsSpecifiedFaultType(struct soap*, struct wsnt__MultipleTopicsSpecifiedFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__MultipleTopicsSpecifiedFaultType
#define soap_read_wsnt__MultipleTopicsSpecifiedFaultType(soap, data) ( ((data) ? (soap_default_wsnt__MultipleTopicsSpecifiedFaultType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__MultipleTopicsSpecifiedFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsnt__MultipleTopicsSpecifiedFaultType
#define soap_GET_wsnt__MultipleTopicsSpecifiedFaultType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsnt__MultipleTopicsSpecifiedFaultType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsnt__MultipleTopicsSpecifiedFaultType
#define soap_POST_recv_wsnt__MultipleTopicsSpecifiedFaultType(soap, data) ( soap_read_wsnt__MultipleTopicsSpecifiedFaultType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__TopicNotSupportedFaultType_FaultCause_DEFINED
#define SOAP_TYPE__wsnt__TopicNotSupportedFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__TopicNotSupportedFaultType_FaultCause(struct soap*, struct _wsnt__TopicNotSupportedFaultType_FaultCause *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__TopicNotSupportedFaultType_FaultCause(struct soap*, const struct _wsnt__TopicNotSupportedFaultType_FaultCause *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__TopicNotSupportedFaultType_FaultCause(struct soap*, const char*, int, const struct _wsnt__TopicNotSupportedFaultType_FaultCause *, const char*);
SOAP_FMAC3 struct _wsnt__TopicNotSupportedFaultType_FaultCause * SOAP_FMAC4 soap_in__wsnt__TopicNotSupportedFaultType_FaultCause(struct soap*, const char*, struct _wsnt__TopicNotSupportedFaultType_FaultCause *, const char*);

SOAP_FMAC3 struct _wsnt__TopicNotSupportedFaultType_FaultCause * SOAP_FMAC4 soap_new__wsnt__TopicNotSupportedFaultType_FaultCause(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__TopicNotSupportedFaultType_FaultCause(struct soap*, const struct _wsnt__TopicNotSupportedFaultType_FaultCause *, const char*, const char*);

#ifndef soap_write__wsnt__TopicNotSupportedFaultType_FaultCause
#define soap_write__wsnt__TopicNotSupportedFaultType_FaultCause(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__TopicNotSupportedFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__TopicNotSupportedFaultType_FaultCause(soap, data, "wsnt:TopicNotSupportedFaultType-FaultCause", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__TopicNotSupportedFaultType_FaultCause
#define soap_PUT__wsnt__TopicNotSupportedFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__TopicNotSupportedFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__TopicNotSupportedFaultType_FaultCause(soap, data, "wsnt:TopicNotSupportedFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__TopicNotSupportedFaultType_FaultCause
#define soap_PATCH__wsnt__TopicNotSupportedFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__TopicNotSupportedFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__TopicNotSupportedFaultType_FaultCause(soap, data, "wsnt:TopicNotSupportedFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__TopicNotSupportedFaultType_FaultCause
#define soap_POST_send__wsnt__TopicNotSupportedFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__TopicNotSupportedFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__TopicNotSupportedFaultType_FaultCause(soap, data, "wsnt:TopicNotSupportedFaultType-FaultCause", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__TopicNotSupportedFaultType_FaultCause * SOAP_FMAC4 soap_get__wsnt__TopicNotSupportedFaultType_FaultCause(struct soap*, struct _wsnt__TopicNotSupportedFaultType_FaultCause *, const char*, const char*);

#ifndef soap_read__wsnt__TopicNotSupportedFaultType_FaultCause
#define soap_read__wsnt__TopicNotSupportedFaultType_FaultCause(soap, data) ( ((data) ? (soap_default__wsnt__TopicNotSupportedFaultType_FaultCause(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__TopicNotSupportedFaultType_FaultCause(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__TopicNotSupportedFaultType_FaultCause
#define soap_GET__wsnt__TopicNotSupportedFaultType_FaultCause(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__TopicNotSupportedFaultType_FaultCause(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__TopicNotSupportedFaultType_FaultCause
#define soap_POST_recv__wsnt__TopicNotSupportedFaultType_FaultCause(soap, data) ( soap_read__wsnt__TopicNotSupportedFaultType_FaultCause(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__TopicNotSupportedFaultType_Description_DEFINED
#define SOAP_TYPE__wsnt__TopicNotSupportedFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__TopicNotSupportedFaultType_Description(struct soap*, struct _wsnt__TopicNotSupportedFaultType_Description *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__TopicNotSupportedFaultType_Description(struct soap*, const struct _wsnt__TopicNotSupportedFaultType_Description *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__TopicNotSupportedFaultType_Description(struct soap*, const char*, int, const struct _wsnt__TopicNotSupportedFaultType_Description *, const char*);
SOAP_FMAC3 struct _wsnt__TopicNotSupportedFaultType_Description * SOAP_FMAC4 soap_in__wsnt__TopicNotSupportedFaultType_Description(struct soap*, const char*, struct _wsnt__TopicNotSupportedFaultType_Description *, const char*);

SOAP_FMAC3 struct _wsnt__TopicNotSupportedFaultType_Description * SOAP_FMAC4 soap_new__wsnt__TopicNotSupportedFaultType_Description(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__TopicNotSupportedFaultType_Description(struct soap*, const struct _wsnt__TopicNotSupportedFaultType_Description *, const char*, const char*);

#ifndef soap_write__wsnt__TopicNotSupportedFaultType_Description
#define soap_write__wsnt__TopicNotSupportedFaultType_Description(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__TopicNotSupportedFaultType_Description(soap, data), 0) || soap_put__wsnt__TopicNotSupportedFaultType_Description(soap, data, "wsnt:TopicNotSupportedFaultType-Description", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__TopicNotSupportedFaultType_Description
#define soap_PUT__wsnt__TopicNotSupportedFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__TopicNotSupportedFaultType_Description(soap, data), 0) || soap_put__wsnt__TopicNotSupportedFaultType_Description(soap, data, "wsnt:TopicNotSupportedFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__TopicNotSupportedFaultType_Description
#define soap_PATCH__wsnt__TopicNotSupportedFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__TopicNotSupportedFaultType_Description(soap, data), 0) || soap_put__wsnt__TopicNotSupportedFaultType_Description(soap, data, "wsnt:TopicNotSupportedFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__TopicNotSupportedFaultType_Description
#define soap_POST_send__wsnt__TopicNotSupportedFaultType_Description(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__TopicNotSupportedFaultType_Description(soap, data), 0) || soap_put__wsnt__TopicNotSupportedFaultType_Description(soap, data, "wsnt:TopicNotSupportedFaultType-Description", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__TopicNotSupportedFaultType_Description * SOAP_FMAC4 soap_get__wsnt__TopicNotSupportedFaultType_Description(struct soap*, struct _wsnt__TopicNotSupportedFaultType_Description *, const char*, const char*);

#ifndef soap_read__wsnt__TopicNotSupportedFaultType_Description
#define soap_read__wsnt__TopicNotSupportedFaultType_Description(soap, data) ( ((data) ? (soap_default__wsnt__TopicNotSupportedFaultType_Description(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__TopicNotSupportedFaultType_Description(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__TopicNotSupportedFaultType_Description
#define soap_GET__wsnt__TopicNotSupportedFaultType_Description(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__TopicNotSupportedFaultType_Description(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__TopicNotSupportedFaultType_Description
#define soap_POST_recv__wsnt__TopicNotSupportedFaultType_Description(soap, data) ( soap_read__wsnt__TopicNotSupportedFaultType_Description(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__TopicNotSupportedFaultType_ErrorCode_DEFINED
#define SOAP_TYPE__wsnt__TopicNotSupportedFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__TopicNotSupportedFaultType_ErrorCode(struct soap*, struct _wsnt__TopicNotSupportedFaultType_ErrorCode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__TopicNotSupportedFaultType_ErrorCode(struct soap*, const struct _wsnt__TopicNotSupportedFaultType_ErrorCode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__TopicNotSupportedFaultType_ErrorCode(struct soap*, const char*, int, const struct _wsnt__TopicNotSupportedFaultType_ErrorCode *, const char*);
SOAP_FMAC3 struct _wsnt__TopicNotSupportedFaultType_ErrorCode * SOAP_FMAC4 soap_in__wsnt__TopicNotSupportedFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__TopicNotSupportedFaultType_ErrorCode *, const char*);

SOAP_FMAC3 struct _wsnt__TopicNotSupportedFaultType_ErrorCode * SOAP_FMAC4 soap_new__wsnt__TopicNotSupportedFaultType_ErrorCode(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__TopicNotSupportedFaultType_ErrorCode(struct soap*, const struct _wsnt__TopicNotSupportedFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_write__wsnt__TopicNotSupportedFaultType_ErrorCode
#define soap_write__wsnt__TopicNotSupportedFaultType_ErrorCode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__TopicNotSupportedFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__TopicNotSupportedFaultType_ErrorCode(soap, data, "wsnt:TopicNotSupportedFaultType-ErrorCode", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__TopicNotSupportedFaultType_ErrorCode
#define soap_PUT__wsnt__TopicNotSupportedFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__TopicNotSupportedFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__TopicNotSupportedFaultType_ErrorCode(soap, data, "wsnt:TopicNotSupportedFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__TopicNotSupportedFaultType_ErrorCode
#define soap_PATCH__wsnt__TopicNotSupportedFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__TopicNotSupportedFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__TopicNotSupportedFaultType_ErrorCode(soap, data, "wsnt:TopicNotSupportedFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__TopicNotSupportedFaultType_ErrorCode
#define soap_POST_send__wsnt__TopicNotSupportedFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__TopicNotSupportedFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__TopicNotSupportedFaultType_ErrorCode(soap, data, "wsnt:TopicNotSupportedFaultType-ErrorCode", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__TopicNotSupportedFaultType_ErrorCode * SOAP_FMAC4 soap_get__wsnt__TopicNotSupportedFaultType_ErrorCode(struct soap*, struct _wsnt__TopicNotSupportedFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_read__wsnt__TopicNotSupportedFaultType_ErrorCode
#define soap_read__wsnt__TopicNotSupportedFaultType_ErrorCode(soap, data) ( ((data) ? (soap_default__wsnt__TopicNotSupportedFaultType_ErrorCode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__TopicNotSupportedFaultType_ErrorCode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__TopicNotSupportedFaultType_ErrorCode
#define soap_GET__wsnt__TopicNotSupportedFaultType_ErrorCode(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__TopicNotSupportedFaultType_ErrorCode(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__TopicNotSupportedFaultType_ErrorCode
#define soap_POST_recv__wsnt__TopicNotSupportedFaultType_ErrorCode(soap, data) ( soap_read__wsnt__TopicNotSupportedFaultType_ErrorCode(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsnt__TopicNotSupportedFaultType_DEFINED
#define SOAP_TYPE_wsnt__TopicNotSupportedFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsnt__TopicNotSupportedFaultType(struct soap*, struct wsnt__TopicNotSupportedFaultType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__TopicNotSupportedFaultType(struct soap*, const struct wsnt__TopicNotSupportedFaultType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__TopicNotSupportedFaultType(struct soap*, const char*, int, const struct wsnt__TopicNotSupportedFaultType *, const char*);
SOAP_FMAC3 struct wsnt__TopicNotSupportedFaultType * SOAP_FMAC4 soap_in_wsnt__TopicNotSupportedFaultType(struct soap*, const char*, struct wsnt__TopicNotSupportedFaultType *, const char*);

SOAP_FMAC3 struct wsnt__TopicNotSupportedFaultType * SOAP_FMAC4 soap_new_wsnt__TopicNotSupportedFaultType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__TopicNotSupportedFaultType(struct soap*, const struct wsnt__TopicNotSupportedFaultType *, const char*, const char*);

#ifndef soap_write_wsnt__TopicNotSupportedFaultType
#define soap_write_wsnt__TopicNotSupportedFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsnt__TopicNotSupportedFaultType(soap, data), 0) || soap_put_wsnt__TopicNotSupportedFaultType(soap, data, "wsnt:TopicNotSupportedFaultType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsnt__TopicNotSupportedFaultType
#define soap_PUT_wsnt__TopicNotSupportedFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__TopicNotSupportedFaultType(soap, data), 0) || soap_put_wsnt__TopicNotSupportedFaultType(soap, data, "wsnt:TopicNotSupportedFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsnt__TopicNotSupportedFaultType
#define soap_PATCH_wsnt__TopicNotSupportedFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__TopicNotSupportedFaultType(soap, data), 0) || soap_put_wsnt__TopicNotSupportedFaultType(soap, data, "wsnt:TopicNotSupportedFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsnt__TopicNotSupportedFaultType
#define soap_POST_send_wsnt__TopicNotSupportedFaultType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__TopicNotSupportedFaultType(soap, data), 0) || soap_put_wsnt__TopicNotSupportedFaultType(soap, data, "wsnt:TopicNotSupportedFaultType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsnt__TopicNotSupportedFaultType * SOAP_FMAC4 soap_get_wsnt__TopicNotSupportedFaultType(struct soap*, struct wsnt__TopicNotSupportedFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__TopicNotSupportedFaultType
#define soap_read_wsnt__TopicNotSupportedFaultType(soap, data) ( ((data) ? (soap_default_wsnt__TopicNotSupportedFaultType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__TopicNotSupportedFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsnt__TopicNotSupportedFaultType
#define soap_GET_wsnt__TopicNotSupportedFaultType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsnt__TopicNotSupportedFaultType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsnt__TopicNotSupportedFaultType
#define soap_POST_recv_wsnt__TopicNotSupportedFaultType(soap, data) ( soap_read_wsnt__TopicNotSupportedFaultType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__InvalidTopicExpressionFaultType_FaultCause_DEFINED
#define SOAP_TYPE__wsnt__InvalidTopicExpressionFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__InvalidTopicExpressionFaultType_FaultCause(struct soap*, struct _wsnt__InvalidTopicExpressionFaultType_FaultCause *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__InvalidTopicExpressionFaultType_FaultCause(struct soap*, const struct _wsnt__InvalidTopicExpressionFaultType_FaultCause *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__InvalidTopicExpressionFaultType_FaultCause(struct soap*, const char*, int, const struct _wsnt__InvalidTopicExpressionFaultType_FaultCause *, const char*);
SOAP_FMAC3 struct _wsnt__InvalidTopicExpressionFaultType_FaultCause * SOAP_FMAC4 soap_in__wsnt__InvalidTopicExpressionFaultType_FaultCause(struct soap*, const char*, struct _wsnt__InvalidTopicExpressionFaultType_FaultCause *, const char*);

SOAP_FMAC3 struct _wsnt__InvalidTopicExpressionFaultType_FaultCause * SOAP_FMAC4 soap_new__wsnt__InvalidTopicExpressionFaultType_FaultCause(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__InvalidTopicExpressionFaultType_FaultCause(struct soap*, const struct _wsnt__InvalidTopicExpressionFaultType_FaultCause *, const char*, const char*);

#ifndef soap_write__wsnt__InvalidTopicExpressionFaultType_FaultCause
#define soap_write__wsnt__InvalidTopicExpressionFaultType_FaultCause(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__InvalidTopicExpressionFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__InvalidTopicExpressionFaultType_FaultCause(soap, data, "wsnt:InvalidTopicExpressionFaultType-FaultCause", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__InvalidTopicExpressionFaultType_FaultCause
#define soap_PUT__wsnt__InvalidTopicExpressionFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidTopicExpressionFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__InvalidTopicExpressionFaultType_FaultCause(soap, data, "wsnt:InvalidTopicExpressionFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__InvalidTopicExpressionFaultType_FaultCause
#define soap_PATCH__wsnt__InvalidTopicExpressionFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidTopicExpressionFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__InvalidTopicExpressionFaultType_FaultCause(soap, data, "wsnt:InvalidTopicExpressionFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__InvalidTopicExpressionFaultType_FaultCause
#define soap_POST_send__wsnt__InvalidTopicExpressionFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidTopicExpressionFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__InvalidTopicExpressionFaultType_FaultCause(soap, data, "wsnt:InvalidTopicExpressionFaultType-FaultCause", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__InvalidTopicExpressionFaultType_FaultCause * SOAP_FMAC4 soap_get__wsnt__InvalidTopicExpressionFaultType_FaultCause(struct soap*, struct _wsnt__InvalidTopicExpressionFaultType_FaultCause *, const char*, const char*);

#ifndef soap_read__wsnt__InvalidTopicExpressionFaultType_FaultCause
#define soap_read__wsnt__InvalidTopicExpressionFaultType_FaultCause(soap, data) ( ((data) ? (soap_default__wsnt__InvalidTopicExpressionFaultType_FaultCause(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__InvalidTopicExpressionFaultType_FaultCause(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__InvalidTopicExpressionFaultType_FaultCause
#define soap_GET__wsnt__InvalidTopicExpressionFaultType_FaultCause(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__InvalidTopicExpressionFaultType_FaultCause(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__InvalidTopicExpressionFaultType_FaultCause
#define soap_POST_recv__wsnt__InvalidTopicExpressionFaultType_FaultCause(soap, data) ( soap_read__wsnt__InvalidTopicExpressionFaultType_FaultCause(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__InvalidTopicExpressionFaultType_Description_DEFINED
#define SOAP_TYPE__wsnt__InvalidTopicExpressionFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__InvalidTopicExpressionFaultType_Description(struct soap*, struct _wsnt__InvalidTopicExpressionFaultType_Description *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__InvalidTopicExpressionFaultType_Description(struct soap*, const struct _wsnt__InvalidTopicExpressionFaultType_Description *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__InvalidTopicExpressionFaultType_Description(struct soap*, const char*, int, const struct _wsnt__InvalidTopicExpressionFaultType_Description *, const char*);
SOAP_FMAC3 struct _wsnt__InvalidTopicExpressionFaultType_Description * SOAP_FMAC4 soap_in__wsnt__InvalidTopicExpressionFaultType_Description(struct soap*, const char*, struct _wsnt__InvalidTopicExpressionFaultType_Description *, const char*);

SOAP_FMAC3 struct _wsnt__InvalidTopicExpressionFaultType_Description * SOAP_FMAC4 soap_new__wsnt__InvalidTopicExpressionFaultType_Description(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__InvalidTopicExpressionFaultType_Description(struct soap*, const struct _wsnt__InvalidTopicExpressionFaultType_Description *, const char*, const char*);

#ifndef soap_write__wsnt__InvalidTopicExpressionFaultType_Description
#define soap_write__wsnt__InvalidTopicExpressionFaultType_Description(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__InvalidTopicExpressionFaultType_Description(soap, data), 0) || soap_put__wsnt__InvalidTopicExpressionFaultType_Description(soap, data, "wsnt:InvalidTopicExpressionFaultType-Description", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__InvalidTopicExpressionFaultType_Description
#define soap_PUT__wsnt__InvalidTopicExpressionFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidTopicExpressionFaultType_Description(soap, data), 0) || soap_put__wsnt__InvalidTopicExpressionFaultType_Description(soap, data, "wsnt:InvalidTopicExpressionFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__InvalidTopicExpressionFaultType_Description
#define soap_PATCH__wsnt__InvalidTopicExpressionFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidTopicExpressionFaultType_Description(soap, data), 0) || soap_put__wsnt__InvalidTopicExpressionFaultType_Description(soap, data, "wsnt:InvalidTopicExpressionFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__InvalidTopicExpressionFaultType_Description
#define soap_POST_send__wsnt__InvalidTopicExpressionFaultType_Description(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidTopicExpressionFaultType_Description(soap, data), 0) || soap_put__wsnt__InvalidTopicExpressionFaultType_Description(soap, data, "wsnt:InvalidTopicExpressionFaultType-Description", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__InvalidTopicExpressionFaultType_Description * SOAP_FMAC4 soap_get__wsnt__InvalidTopicExpressionFaultType_Description(struct soap*, struct _wsnt__InvalidTopicExpressionFaultType_Description *, const char*, const char*);

#ifndef soap_read__wsnt__InvalidTopicExpressionFaultType_Description
#define soap_read__wsnt__InvalidTopicExpressionFaultType_Description(soap, data) ( ((data) ? (soap_default__wsnt__InvalidTopicExpressionFaultType_Description(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__InvalidTopicExpressionFaultType_Description(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__InvalidTopicExpressionFaultType_Description
#define soap_GET__wsnt__InvalidTopicExpressionFaultType_Description(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__InvalidTopicExpressionFaultType_Description(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__InvalidTopicExpressionFaultType_Description
#define soap_POST_recv__wsnt__InvalidTopicExpressionFaultType_Description(soap, data) ( soap_read__wsnt__InvalidTopicExpressionFaultType_Description(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__InvalidTopicExpressionFaultType_ErrorCode_DEFINED
#define SOAP_TYPE__wsnt__InvalidTopicExpressionFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__InvalidTopicExpressionFaultType_ErrorCode(struct soap*, struct _wsnt__InvalidTopicExpressionFaultType_ErrorCode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__InvalidTopicExpressionFaultType_ErrorCode(struct soap*, const struct _wsnt__InvalidTopicExpressionFaultType_ErrorCode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__InvalidTopicExpressionFaultType_ErrorCode(struct soap*, const char*, int, const struct _wsnt__InvalidTopicExpressionFaultType_ErrorCode *, const char*);
SOAP_FMAC3 struct _wsnt__InvalidTopicExpressionFaultType_ErrorCode * SOAP_FMAC4 soap_in__wsnt__InvalidTopicExpressionFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__InvalidTopicExpressionFaultType_ErrorCode *, const char*);

SOAP_FMAC3 struct _wsnt__InvalidTopicExpressionFaultType_ErrorCode * SOAP_FMAC4 soap_new__wsnt__InvalidTopicExpressionFaultType_ErrorCode(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__InvalidTopicExpressionFaultType_ErrorCode(struct soap*, const struct _wsnt__InvalidTopicExpressionFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_write__wsnt__InvalidTopicExpressionFaultType_ErrorCode
#define soap_write__wsnt__InvalidTopicExpressionFaultType_ErrorCode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__InvalidTopicExpressionFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__InvalidTopicExpressionFaultType_ErrorCode(soap, data, "wsnt:InvalidTopicExpressionFaultType-ErrorCode", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__InvalidTopicExpressionFaultType_ErrorCode
#define soap_PUT__wsnt__InvalidTopicExpressionFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidTopicExpressionFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__InvalidTopicExpressionFaultType_ErrorCode(soap, data, "wsnt:InvalidTopicExpressionFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__InvalidTopicExpressionFaultType_ErrorCode
#define soap_PATCH__wsnt__InvalidTopicExpressionFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidTopicExpressionFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__InvalidTopicExpressionFaultType_ErrorCode(soap, data, "wsnt:InvalidTopicExpressionFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__InvalidTopicExpressionFaultType_ErrorCode
#define soap_POST_send__wsnt__InvalidTopicExpressionFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidTopicExpressionFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__InvalidTopicExpressionFaultType_ErrorCode(soap, data, "wsnt:InvalidTopicExpressionFaultType-ErrorCode", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__InvalidTopicExpressionFaultType_ErrorCode * SOAP_FMAC4 soap_get__wsnt__InvalidTopicExpressionFaultType_ErrorCode(struct soap*, struct _wsnt__InvalidTopicExpressionFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_read__wsnt__InvalidTopicExpressionFaultType_ErrorCode
#define soap_read__wsnt__InvalidTopicExpressionFaultType_ErrorCode(soap, data) ( ((data) ? (soap_default__wsnt__InvalidTopicExpressionFaultType_ErrorCode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__InvalidTopicExpressionFaultType_ErrorCode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__InvalidTopicExpressionFaultType_ErrorCode
#define soap_GET__wsnt__InvalidTopicExpressionFaultType_ErrorCode(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__InvalidTopicExpressionFaultType_ErrorCode(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__InvalidTopicExpressionFaultType_ErrorCode
#define soap_POST_recv__wsnt__InvalidTopicExpressionFaultType_ErrorCode(soap, data) ( soap_read__wsnt__InvalidTopicExpressionFaultType_ErrorCode(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsnt__InvalidTopicExpressionFaultType_DEFINED
#define SOAP_TYPE_wsnt__InvalidTopicExpressionFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsnt__InvalidTopicExpressionFaultType(struct soap*, struct wsnt__InvalidTopicExpressionFaultType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__InvalidTopicExpressionFaultType(struct soap*, const struct wsnt__InvalidTopicExpressionFaultType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__InvalidTopicExpressionFaultType(struct soap*, const char*, int, const struct wsnt__InvalidTopicExpressionFaultType *, const char*);
SOAP_FMAC3 struct wsnt__InvalidTopicExpressionFaultType * SOAP_FMAC4 soap_in_wsnt__InvalidTopicExpressionFaultType(struct soap*, const char*, struct wsnt__InvalidTopicExpressionFaultType *, const char*);

SOAP_FMAC3 struct wsnt__InvalidTopicExpressionFaultType * SOAP_FMAC4 soap_new_wsnt__InvalidTopicExpressionFaultType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__InvalidTopicExpressionFaultType(struct soap*, const struct wsnt__InvalidTopicExpressionFaultType *, const char*, const char*);

#ifndef soap_write_wsnt__InvalidTopicExpressionFaultType
#define soap_write_wsnt__InvalidTopicExpressionFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsnt__InvalidTopicExpressionFaultType(soap, data), 0) || soap_put_wsnt__InvalidTopicExpressionFaultType(soap, data, "wsnt:InvalidTopicExpressionFaultType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsnt__InvalidTopicExpressionFaultType
#define soap_PUT_wsnt__InvalidTopicExpressionFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__InvalidTopicExpressionFaultType(soap, data), 0) || soap_put_wsnt__InvalidTopicExpressionFaultType(soap, data, "wsnt:InvalidTopicExpressionFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsnt__InvalidTopicExpressionFaultType
#define soap_PATCH_wsnt__InvalidTopicExpressionFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__InvalidTopicExpressionFaultType(soap, data), 0) || soap_put_wsnt__InvalidTopicExpressionFaultType(soap, data, "wsnt:InvalidTopicExpressionFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsnt__InvalidTopicExpressionFaultType
#define soap_POST_send_wsnt__InvalidTopicExpressionFaultType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__InvalidTopicExpressionFaultType(soap, data), 0) || soap_put_wsnt__InvalidTopicExpressionFaultType(soap, data, "wsnt:InvalidTopicExpressionFaultType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsnt__InvalidTopicExpressionFaultType * SOAP_FMAC4 soap_get_wsnt__InvalidTopicExpressionFaultType(struct soap*, struct wsnt__InvalidTopicExpressionFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__InvalidTopicExpressionFaultType
#define soap_read_wsnt__InvalidTopicExpressionFaultType(soap, data) ( ((data) ? (soap_default_wsnt__InvalidTopicExpressionFaultType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__InvalidTopicExpressionFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsnt__InvalidTopicExpressionFaultType
#define soap_GET_wsnt__InvalidTopicExpressionFaultType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsnt__InvalidTopicExpressionFaultType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsnt__InvalidTopicExpressionFaultType
#define soap_POST_recv_wsnt__InvalidTopicExpressionFaultType(soap, data) ( soap_read_wsnt__InvalidTopicExpressionFaultType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause_DEFINED
#define SOAP_TYPE__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(struct soap*, struct _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(struct soap*, const struct _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(struct soap*, const char*, int, const struct _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause *, const char*);
SOAP_FMAC3 struct _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause * SOAP_FMAC4 soap_in__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(struct soap*, const char*, struct _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause *, const char*);

SOAP_FMAC3 struct _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause * SOAP_FMAC4 soap_new__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(struct soap*, const struct _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause *, const char*, const char*);

#ifndef soap_write__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause
#define soap_write__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(soap, data, "wsnt:TopicExpressionDialectUnknownFaultType-FaultCause", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause
#define soap_PUT__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(soap, data, "wsnt:TopicExpressionDialectUnknownFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause
#define soap_PATCH__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(soap, data, "wsnt:TopicExpressionDialectUnknownFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause
#define soap_POST_send__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(soap, data, "wsnt:TopicExpressionDialectUnknownFaultType-FaultCause", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause * SOAP_FMAC4 soap_get__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(struct soap*, struct _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause *, const char*, const char*);

#ifndef soap_read__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause
#define soap_read__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(soap, data) ( ((data) ? (soap_default__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause
#define soap_GET__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause
#define soap_POST_recv__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(soap, data) ( soap_read__wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__TopicExpressionDialectUnknownFaultType_Description_DEFINED
#define SOAP_TYPE__wsnt__TopicExpressionDialectUnknownFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__TopicExpressionDialectUnknownFaultType_Description(struct soap*, struct _wsnt__TopicExpressionDialectUnknownFaultType_Description *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__TopicExpressionDialectUnknownFaultType_Description(struct soap*, const struct _wsnt__TopicExpressionDialectUnknownFaultType_Description *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__TopicExpressionDialectUnknownFaultType_Description(struct soap*, const char*, int, const struct _wsnt__TopicExpressionDialectUnknownFaultType_Description *, const char*);
SOAP_FMAC3 struct _wsnt__TopicExpressionDialectUnknownFaultType_Description * SOAP_FMAC4 soap_in__wsnt__TopicExpressionDialectUnknownFaultType_Description(struct soap*, const char*, struct _wsnt__TopicExpressionDialectUnknownFaultType_Description *, const char*);

SOAP_FMAC3 struct _wsnt__TopicExpressionDialectUnknownFaultType_Description * SOAP_FMAC4 soap_new__wsnt__TopicExpressionDialectUnknownFaultType_Description(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__TopicExpressionDialectUnknownFaultType_Description(struct soap*, const struct _wsnt__TopicExpressionDialectUnknownFaultType_Description *, const char*, const char*);

#ifndef soap_write__wsnt__TopicExpressionDialectUnknownFaultType_Description
#define soap_write__wsnt__TopicExpressionDialectUnknownFaultType_Description(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__TopicExpressionDialectUnknownFaultType_Description(soap, data), 0) || soap_put__wsnt__TopicExpressionDialectUnknownFaultType_Description(soap, data, "wsnt:TopicExpressionDialectUnknownFaultType-Description", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__TopicExpressionDialectUnknownFaultType_Description
#define soap_PUT__wsnt__TopicExpressionDialectUnknownFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__TopicExpressionDialectUnknownFaultType_Description(soap, data), 0) || soap_put__wsnt__TopicExpressionDialectUnknownFaultType_Description(soap, data, "wsnt:TopicExpressionDialectUnknownFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__TopicExpressionDialectUnknownFaultType_Description
#define soap_PATCH__wsnt__TopicExpressionDialectUnknownFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__TopicExpressionDialectUnknownFaultType_Description(soap, data), 0) || soap_put__wsnt__TopicExpressionDialectUnknownFaultType_Description(soap, data, "wsnt:TopicExpressionDialectUnknownFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__TopicExpressionDialectUnknownFaultType_Description
#define soap_POST_send__wsnt__TopicExpressionDialectUnknownFaultType_Description(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__TopicExpressionDialectUnknownFaultType_Description(soap, data), 0) || soap_put__wsnt__TopicExpressionDialectUnknownFaultType_Description(soap, data, "wsnt:TopicExpressionDialectUnknownFaultType-Description", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__TopicExpressionDialectUnknownFaultType_Description * SOAP_FMAC4 soap_get__wsnt__TopicExpressionDialectUnknownFaultType_Description(struct soap*, struct _wsnt__TopicExpressionDialectUnknownFaultType_Description *, const char*, const char*);

#ifndef soap_read__wsnt__TopicExpressionDialectUnknownFaultType_Description
#define soap_read__wsnt__TopicExpressionDialectUnknownFaultType_Description(soap, data) ( ((data) ? (soap_default__wsnt__TopicExpressionDialectUnknownFaultType_Description(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__TopicExpressionDialectUnknownFaultType_Description(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__TopicExpressionDialectUnknownFaultType_Description
#define soap_GET__wsnt__TopicExpressionDialectUnknownFaultType_Description(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__TopicExpressionDialectUnknownFaultType_Description(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__TopicExpressionDialectUnknownFaultType_Description
#define soap_POST_recv__wsnt__TopicExpressionDialectUnknownFaultType_Description(soap, data) ( soap_read__wsnt__TopicExpressionDialectUnknownFaultType_Description(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode_DEFINED
#define SOAP_TYPE__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(struct soap*, struct _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(struct soap*, const struct _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(struct soap*, const char*, int, const struct _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode *, const char*);
SOAP_FMAC3 struct _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode * SOAP_FMAC4 soap_in__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode *, const char*);

SOAP_FMAC3 struct _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode * SOAP_FMAC4 soap_new__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(struct soap*, const struct _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_write__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode
#define soap_write__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(soap, data, "wsnt:TopicExpressionDialectUnknownFaultType-ErrorCode", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode
#define soap_PUT__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(soap, data, "wsnt:TopicExpressionDialectUnknownFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode
#define soap_PATCH__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(soap, data, "wsnt:TopicExpressionDialectUnknownFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode
#define soap_POST_send__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(soap, data, "wsnt:TopicExpressionDialectUnknownFaultType-ErrorCode", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode * SOAP_FMAC4 soap_get__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(struct soap*, struct _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_read__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode
#define soap_read__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(soap, data) ( ((data) ? (soap_default__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode
#define soap_GET__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode
#define soap_POST_recv__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(soap, data) ( soap_read__wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsnt__TopicExpressionDialectUnknownFaultType_DEFINED
#define SOAP_TYPE_wsnt__TopicExpressionDialectUnknownFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsnt__TopicExpressionDialectUnknownFaultType(struct soap*, struct wsnt__TopicExpressionDialectUnknownFaultType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__TopicExpressionDialectUnknownFaultType(struct soap*, const struct wsnt__TopicExpressionDialectUnknownFaultType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__TopicExpressionDialectUnknownFaultType(struct soap*, const char*, int, const struct wsnt__TopicExpressionDialectUnknownFaultType *, const char*);
SOAP_FMAC3 struct wsnt__TopicExpressionDialectUnknownFaultType * SOAP_FMAC4 soap_in_wsnt__TopicExpressionDialectUnknownFaultType(struct soap*, const char*, struct wsnt__TopicExpressionDialectUnknownFaultType *, const char*);

SOAP_FMAC3 struct wsnt__TopicExpressionDialectUnknownFaultType * SOAP_FMAC4 soap_new_wsnt__TopicExpressionDialectUnknownFaultType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__TopicExpressionDialectUnknownFaultType(struct soap*, const struct wsnt__TopicExpressionDialectUnknownFaultType *, const char*, const char*);

#ifndef soap_write_wsnt__TopicExpressionDialectUnknownFaultType
#define soap_write_wsnt__TopicExpressionDialectUnknownFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsnt__TopicExpressionDialectUnknownFaultType(soap, data), 0) || soap_put_wsnt__TopicExpressionDialectUnknownFaultType(soap, data, "wsnt:TopicExpressionDialectUnknownFaultType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsnt__TopicExpressionDialectUnknownFaultType
#define soap_PUT_wsnt__TopicExpressionDialectUnknownFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__TopicExpressionDialectUnknownFaultType(soap, data), 0) || soap_put_wsnt__TopicExpressionDialectUnknownFaultType(soap, data, "wsnt:TopicExpressionDialectUnknownFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsnt__TopicExpressionDialectUnknownFaultType
#define soap_PATCH_wsnt__TopicExpressionDialectUnknownFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__TopicExpressionDialectUnknownFaultType(soap, data), 0) || soap_put_wsnt__TopicExpressionDialectUnknownFaultType(soap, data, "wsnt:TopicExpressionDialectUnknownFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsnt__TopicExpressionDialectUnknownFaultType
#define soap_POST_send_wsnt__TopicExpressionDialectUnknownFaultType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__TopicExpressionDialectUnknownFaultType(soap, data), 0) || soap_put_wsnt__TopicExpressionDialectUnknownFaultType(soap, data, "wsnt:TopicExpressionDialectUnknownFaultType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsnt__TopicExpressionDialectUnknownFaultType * SOAP_FMAC4 soap_get_wsnt__TopicExpressionDialectUnknownFaultType(struct soap*, struct wsnt__TopicExpressionDialectUnknownFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__TopicExpressionDialectUnknownFaultType
#define soap_read_wsnt__TopicExpressionDialectUnknownFaultType(soap, data) ( ((data) ? (soap_default_wsnt__TopicExpressionDialectUnknownFaultType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__TopicExpressionDialectUnknownFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsnt__TopicExpressionDialectUnknownFaultType
#define soap_GET_wsnt__TopicExpressionDialectUnknownFaultType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsnt__TopicExpressionDialectUnknownFaultType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsnt__TopicExpressionDialectUnknownFaultType
#define soap_POST_recv_wsnt__TopicExpressionDialectUnknownFaultType(soap, data) ( soap_read_wsnt__TopicExpressionDialectUnknownFaultType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__InvalidFilterFaultType_FaultCause_DEFINED
#define SOAP_TYPE__wsnt__InvalidFilterFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__InvalidFilterFaultType_FaultCause(struct soap*, struct _wsnt__InvalidFilterFaultType_FaultCause *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__InvalidFilterFaultType_FaultCause(struct soap*, const struct _wsnt__InvalidFilterFaultType_FaultCause *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__InvalidFilterFaultType_FaultCause(struct soap*, const char*, int, const struct _wsnt__InvalidFilterFaultType_FaultCause *, const char*);
SOAP_FMAC3 struct _wsnt__InvalidFilterFaultType_FaultCause * SOAP_FMAC4 soap_in__wsnt__InvalidFilterFaultType_FaultCause(struct soap*, const char*, struct _wsnt__InvalidFilterFaultType_FaultCause *, const char*);

SOAP_FMAC3 struct _wsnt__InvalidFilterFaultType_FaultCause * SOAP_FMAC4 soap_new__wsnt__InvalidFilterFaultType_FaultCause(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__InvalidFilterFaultType_FaultCause(struct soap*, const struct _wsnt__InvalidFilterFaultType_FaultCause *, const char*, const char*);

#ifndef soap_write__wsnt__InvalidFilterFaultType_FaultCause
#define soap_write__wsnt__InvalidFilterFaultType_FaultCause(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__InvalidFilterFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__InvalidFilterFaultType_FaultCause(soap, data, "wsnt:InvalidFilterFaultType-FaultCause", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__InvalidFilterFaultType_FaultCause
#define soap_PUT__wsnt__InvalidFilterFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidFilterFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__InvalidFilterFaultType_FaultCause(soap, data, "wsnt:InvalidFilterFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__InvalidFilterFaultType_FaultCause
#define soap_PATCH__wsnt__InvalidFilterFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidFilterFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__InvalidFilterFaultType_FaultCause(soap, data, "wsnt:InvalidFilterFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__InvalidFilterFaultType_FaultCause
#define soap_POST_send__wsnt__InvalidFilterFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidFilterFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__InvalidFilterFaultType_FaultCause(soap, data, "wsnt:InvalidFilterFaultType-FaultCause", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__InvalidFilterFaultType_FaultCause * SOAP_FMAC4 soap_get__wsnt__InvalidFilterFaultType_FaultCause(struct soap*, struct _wsnt__InvalidFilterFaultType_FaultCause *, const char*, const char*);

#ifndef soap_read__wsnt__InvalidFilterFaultType_FaultCause
#define soap_read__wsnt__InvalidFilterFaultType_FaultCause(soap, data) ( ((data) ? (soap_default__wsnt__InvalidFilterFaultType_FaultCause(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__InvalidFilterFaultType_FaultCause(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__InvalidFilterFaultType_FaultCause
#define soap_GET__wsnt__InvalidFilterFaultType_FaultCause(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__InvalidFilterFaultType_FaultCause(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__InvalidFilterFaultType_FaultCause
#define soap_POST_recv__wsnt__InvalidFilterFaultType_FaultCause(soap, data) ( soap_read__wsnt__InvalidFilterFaultType_FaultCause(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__InvalidFilterFaultType_Description_DEFINED
#define SOAP_TYPE__wsnt__InvalidFilterFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__InvalidFilterFaultType_Description(struct soap*, struct _wsnt__InvalidFilterFaultType_Description *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__InvalidFilterFaultType_Description(struct soap*, const struct _wsnt__InvalidFilterFaultType_Description *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__InvalidFilterFaultType_Description(struct soap*, const char*, int, const struct _wsnt__InvalidFilterFaultType_Description *, const char*);
SOAP_FMAC3 struct _wsnt__InvalidFilterFaultType_Description * SOAP_FMAC4 soap_in__wsnt__InvalidFilterFaultType_Description(struct soap*, const char*, struct _wsnt__InvalidFilterFaultType_Description *, const char*);

SOAP_FMAC3 struct _wsnt__InvalidFilterFaultType_Description * SOAP_FMAC4 soap_new__wsnt__InvalidFilterFaultType_Description(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__InvalidFilterFaultType_Description(struct soap*, const struct _wsnt__InvalidFilterFaultType_Description *, const char*, const char*);

#ifndef soap_write__wsnt__InvalidFilterFaultType_Description
#define soap_write__wsnt__InvalidFilterFaultType_Description(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__InvalidFilterFaultType_Description(soap, data), 0) || soap_put__wsnt__InvalidFilterFaultType_Description(soap, data, "wsnt:InvalidFilterFaultType-Description", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__InvalidFilterFaultType_Description
#define soap_PUT__wsnt__InvalidFilterFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidFilterFaultType_Description(soap, data), 0) || soap_put__wsnt__InvalidFilterFaultType_Description(soap, data, "wsnt:InvalidFilterFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__InvalidFilterFaultType_Description
#define soap_PATCH__wsnt__InvalidFilterFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidFilterFaultType_Description(soap, data), 0) || soap_put__wsnt__InvalidFilterFaultType_Description(soap, data, "wsnt:InvalidFilterFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__InvalidFilterFaultType_Description
#define soap_POST_send__wsnt__InvalidFilterFaultType_Description(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidFilterFaultType_Description(soap, data), 0) || soap_put__wsnt__InvalidFilterFaultType_Description(soap, data, "wsnt:InvalidFilterFaultType-Description", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__InvalidFilterFaultType_Description * SOAP_FMAC4 soap_get__wsnt__InvalidFilterFaultType_Description(struct soap*, struct _wsnt__InvalidFilterFaultType_Description *, const char*, const char*);

#ifndef soap_read__wsnt__InvalidFilterFaultType_Description
#define soap_read__wsnt__InvalidFilterFaultType_Description(soap, data) ( ((data) ? (soap_default__wsnt__InvalidFilterFaultType_Description(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__InvalidFilterFaultType_Description(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__InvalidFilterFaultType_Description
#define soap_GET__wsnt__InvalidFilterFaultType_Description(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__InvalidFilterFaultType_Description(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__InvalidFilterFaultType_Description
#define soap_POST_recv__wsnt__InvalidFilterFaultType_Description(soap, data) ( soap_read__wsnt__InvalidFilterFaultType_Description(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__InvalidFilterFaultType_ErrorCode_DEFINED
#define SOAP_TYPE__wsnt__InvalidFilterFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__InvalidFilterFaultType_ErrorCode(struct soap*, struct _wsnt__InvalidFilterFaultType_ErrorCode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__InvalidFilterFaultType_ErrorCode(struct soap*, const struct _wsnt__InvalidFilterFaultType_ErrorCode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__InvalidFilterFaultType_ErrorCode(struct soap*, const char*, int, const struct _wsnt__InvalidFilterFaultType_ErrorCode *, const char*);
SOAP_FMAC3 struct _wsnt__InvalidFilterFaultType_ErrorCode * SOAP_FMAC4 soap_in__wsnt__InvalidFilterFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__InvalidFilterFaultType_ErrorCode *, const char*);

SOAP_FMAC3 struct _wsnt__InvalidFilterFaultType_ErrorCode * SOAP_FMAC4 soap_new__wsnt__InvalidFilterFaultType_ErrorCode(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__InvalidFilterFaultType_ErrorCode(struct soap*, const struct _wsnt__InvalidFilterFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_write__wsnt__InvalidFilterFaultType_ErrorCode
#define soap_write__wsnt__InvalidFilterFaultType_ErrorCode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__InvalidFilterFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__InvalidFilterFaultType_ErrorCode(soap, data, "wsnt:InvalidFilterFaultType-ErrorCode", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__InvalidFilterFaultType_ErrorCode
#define soap_PUT__wsnt__InvalidFilterFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidFilterFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__InvalidFilterFaultType_ErrorCode(soap, data, "wsnt:InvalidFilterFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__InvalidFilterFaultType_ErrorCode
#define soap_PATCH__wsnt__InvalidFilterFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidFilterFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__InvalidFilterFaultType_ErrorCode(soap, data, "wsnt:InvalidFilterFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__InvalidFilterFaultType_ErrorCode
#define soap_POST_send__wsnt__InvalidFilterFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__InvalidFilterFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__InvalidFilterFaultType_ErrorCode(soap, data, "wsnt:InvalidFilterFaultType-ErrorCode", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__InvalidFilterFaultType_ErrorCode * SOAP_FMAC4 soap_get__wsnt__InvalidFilterFaultType_ErrorCode(struct soap*, struct _wsnt__InvalidFilterFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_read__wsnt__InvalidFilterFaultType_ErrorCode
#define soap_read__wsnt__InvalidFilterFaultType_ErrorCode(soap, data) ( ((data) ? (soap_default__wsnt__InvalidFilterFaultType_ErrorCode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__InvalidFilterFaultType_ErrorCode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__InvalidFilterFaultType_ErrorCode
#define soap_GET__wsnt__InvalidFilterFaultType_ErrorCode(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__InvalidFilterFaultType_ErrorCode(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__InvalidFilterFaultType_ErrorCode
#define soap_POST_recv__wsnt__InvalidFilterFaultType_ErrorCode(soap, data) ( soap_read__wsnt__InvalidFilterFaultType_ErrorCode(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsnt__InvalidFilterFaultType_DEFINED
#define SOAP_TYPE_wsnt__InvalidFilterFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsnt__InvalidFilterFaultType(struct soap*, struct wsnt__InvalidFilterFaultType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__InvalidFilterFaultType(struct soap*, const struct wsnt__InvalidFilterFaultType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__InvalidFilterFaultType(struct soap*, const char*, int, const struct wsnt__InvalidFilterFaultType *, const char*);
SOAP_FMAC3 struct wsnt__InvalidFilterFaultType * SOAP_FMAC4 soap_in_wsnt__InvalidFilterFaultType(struct soap*, const char*, struct wsnt__InvalidFilterFaultType *, const char*);

SOAP_FMAC3 struct wsnt__InvalidFilterFaultType * SOAP_FMAC4 soap_new_wsnt__InvalidFilterFaultType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__InvalidFilterFaultType(struct soap*, const struct wsnt__InvalidFilterFaultType *, const char*, const char*);

#ifndef soap_write_wsnt__InvalidFilterFaultType
#define soap_write_wsnt__InvalidFilterFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsnt__InvalidFilterFaultType(soap, data), 0) || soap_put_wsnt__InvalidFilterFaultType(soap, data, "wsnt:InvalidFilterFaultType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsnt__InvalidFilterFaultType
#define soap_PUT_wsnt__InvalidFilterFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__InvalidFilterFaultType(soap, data), 0) || soap_put_wsnt__InvalidFilterFaultType(soap, data, "wsnt:InvalidFilterFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsnt__InvalidFilterFaultType
#define soap_PATCH_wsnt__InvalidFilterFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__InvalidFilterFaultType(soap, data), 0) || soap_put_wsnt__InvalidFilterFaultType(soap, data, "wsnt:InvalidFilterFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsnt__InvalidFilterFaultType
#define soap_POST_send_wsnt__InvalidFilterFaultType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__InvalidFilterFaultType(soap, data), 0) || soap_put_wsnt__InvalidFilterFaultType(soap, data, "wsnt:InvalidFilterFaultType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsnt__InvalidFilterFaultType * SOAP_FMAC4 soap_get_wsnt__InvalidFilterFaultType(struct soap*, struct wsnt__InvalidFilterFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__InvalidFilterFaultType
#define soap_read_wsnt__InvalidFilterFaultType(soap, data) ( ((data) ? (soap_default_wsnt__InvalidFilterFaultType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__InvalidFilterFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsnt__InvalidFilterFaultType
#define soap_GET_wsnt__InvalidFilterFaultType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsnt__InvalidFilterFaultType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsnt__InvalidFilterFaultType
#define soap_POST_recv_wsnt__InvalidFilterFaultType(soap, data) ( soap_read_wsnt__InvalidFilterFaultType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__SubscribeCreationFailedFaultType_FaultCause_DEFINED
#define SOAP_TYPE__wsnt__SubscribeCreationFailedFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__SubscribeCreationFailedFaultType_FaultCause(struct soap*, struct _wsnt__SubscribeCreationFailedFaultType_FaultCause *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__SubscribeCreationFailedFaultType_FaultCause(struct soap*, const struct _wsnt__SubscribeCreationFailedFaultType_FaultCause *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__SubscribeCreationFailedFaultType_FaultCause(struct soap*, const char*, int, const struct _wsnt__SubscribeCreationFailedFaultType_FaultCause *, const char*);
SOAP_FMAC3 struct _wsnt__SubscribeCreationFailedFaultType_FaultCause * SOAP_FMAC4 soap_in__wsnt__SubscribeCreationFailedFaultType_FaultCause(struct soap*, const char*, struct _wsnt__SubscribeCreationFailedFaultType_FaultCause *, const char*);

SOAP_FMAC3 struct _wsnt__SubscribeCreationFailedFaultType_FaultCause * SOAP_FMAC4 soap_new__wsnt__SubscribeCreationFailedFaultType_FaultCause(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__SubscribeCreationFailedFaultType_FaultCause(struct soap*, const struct _wsnt__SubscribeCreationFailedFaultType_FaultCause *, const char*, const char*);

#ifndef soap_write__wsnt__SubscribeCreationFailedFaultType_FaultCause
#define soap_write__wsnt__SubscribeCreationFailedFaultType_FaultCause(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__SubscribeCreationFailedFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__SubscribeCreationFailedFaultType_FaultCause(soap, data, "wsnt:SubscribeCreationFailedFaultType-FaultCause", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__SubscribeCreationFailedFaultType_FaultCause
#define soap_PUT__wsnt__SubscribeCreationFailedFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__SubscribeCreationFailedFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__SubscribeCreationFailedFaultType_FaultCause(soap, data, "wsnt:SubscribeCreationFailedFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__SubscribeCreationFailedFaultType_FaultCause
#define soap_PATCH__wsnt__SubscribeCreationFailedFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__SubscribeCreationFailedFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__SubscribeCreationFailedFaultType_FaultCause(soap, data, "wsnt:SubscribeCreationFailedFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__SubscribeCreationFailedFaultType_FaultCause
#define soap_POST_send__wsnt__SubscribeCreationFailedFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__SubscribeCreationFailedFaultType_FaultCause(soap, data), 0) || soap_put__wsnt__SubscribeCreationFailedFaultType_FaultCause(soap, data, "wsnt:SubscribeCreationFailedFaultType-FaultCause", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__SubscribeCreationFailedFaultType_FaultCause * SOAP_FMAC4 soap_get__wsnt__SubscribeCreationFailedFaultType_FaultCause(struct soap*, struct _wsnt__SubscribeCreationFailedFaultType_FaultCause *, const char*, const char*);

#ifndef soap_read__wsnt__SubscribeCreationFailedFaultType_FaultCause
#define soap_read__wsnt__SubscribeCreationFailedFaultType_FaultCause(soap, data) ( ((data) ? (soap_default__wsnt__SubscribeCreationFailedFaultType_FaultCause(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__SubscribeCreationFailedFaultType_FaultCause(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__SubscribeCreationFailedFaultType_FaultCause
#define soap_GET__wsnt__SubscribeCreationFailedFaultType_FaultCause(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__SubscribeCreationFailedFaultType_FaultCause(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__SubscribeCreationFailedFaultType_FaultCause
#define soap_POST_recv__wsnt__SubscribeCreationFailedFaultType_FaultCause(soap, data) ( soap_read__wsnt__SubscribeCreationFailedFaultType_FaultCause(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__SubscribeCreationFailedFaultType_Description_DEFINED
#define SOAP_TYPE__wsnt__SubscribeCreationFailedFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__SubscribeCreationFailedFaultType_Description(struct soap*, struct _wsnt__SubscribeCreationFailedFaultType_Description *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__SubscribeCreationFailedFaultType_Description(struct soap*, const struct _wsnt__SubscribeCreationFailedFaultType_Description *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__SubscribeCreationFailedFaultType_Description(struct soap*, const char*, int, const struct _wsnt__SubscribeCreationFailedFaultType_Description *, const char*);
SOAP_FMAC3 struct _wsnt__SubscribeCreationFailedFaultType_Description * SOAP_FMAC4 soap_in__wsnt__SubscribeCreationFailedFaultType_Description(struct soap*, const char*, struct _wsnt__SubscribeCreationFailedFaultType_Description *, const char*);

SOAP_FMAC3 struct _wsnt__SubscribeCreationFailedFaultType_Description * SOAP_FMAC4 soap_new__wsnt__SubscribeCreationFailedFaultType_Description(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__SubscribeCreationFailedFaultType_Description(struct soap*, const struct _wsnt__SubscribeCreationFailedFaultType_Description *, const char*, const char*);

#ifndef soap_write__wsnt__SubscribeCreationFailedFaultType_Description
#define soap_write__wsnt__SubscribeCreationFailedFaultType_Description(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__SubscribeCreationFailedFaultType_Description(soap, data), 0) || soap_put__wsnt__SubscribeCreationFailedFaultType_Description(soap, data, "wsnt:SubscribeCreationFailedFaultType-Description", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__SubscribeCreationFailedFaultType_Description
#define soap_PUT__wsnt__SubscribeCreationFailedFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__SubscribeCreationFailedFaultType_Description(soap, data), 0) || soap_put__wsnt__SubscribeCreationFailedFaultType_Description(soap, data, "wsnt:SubscribeCreationFailedFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__SubscribeCreationFailedFaultType_Description
#define soap_PATCH__wsnt__SubscribeCreationFailedFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__SubscribeCreationFailedFaultType_Description(soap, data), 0) || soap_put__wsnt__SubscribeCreationFailedFaultType_Description(soap, data, "wsnt:SubscribeCreationFailedFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__SubscribeCreationFailedFaultType_Description
#define soap_POST_send__wsnt__SubscribeCreationFailedFaultType_Description(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__SubscribeCreationFailedFaultType_Description(soap, data), 0) || soap_put__wsnt__SubscribeCreationFailedFaultType_Description(soap, data, "wsnt:SubscribeCreationFailedFaultType-Description", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__SubscribeCreationFailedFaultType_Description * SOAP_FMAC4 soap_get__wsnt__SubscribeCreationFailedFaultType_Description(struct soap*, struct _wsnt__SubscribeCreationFailedFaultType_Description *, const char*, const char*);

#ifndef soap_read__wsnt__SubscribeCreationFailedFaultType_Description
#define soap_read__wsnt__SubscribeCreationFailedFaultType_Description(soap, data) ( ((data) ? (soap_default__wsnt__SubscribeCreationFailedFaultType_Description(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__SubscribeCreationFailedFaultType_Description(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__SubscribeCreationFailedFaultType_Description
#define soap_GET__wsnt__SubscribeCreationFailedFaultType_Description(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__SubscribeCreationFailedFaultType_Description(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__SubscribeCreationFailedFaultType_Description
#define soap_POST_recv__wsnt__SubscribeCreationFailedFaultType_Description(soap, data) ( soap_read__wsnt__SubscribeCreationFailedFaultType_Description(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__SubscribeCreationFailedFaultType_ErrorCode_DEFINED
#define SOAP_TYPE__wsnt__SubscribeCreationFailedFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__SubscribeCreationFailedFaultType_ErrorCode(struct soap*, struct _wsnt__SubscribeCreationFailedFaultType_ErrorCode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__SubscribeCreationFailedFaultType_ErrorCode(struct soap*, const struct _wsnt__SubscribeCreationFailedFaultType_ErrorCode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__SubscribeCreationFailedFaultType_ErrorCode(struct soap*, const char*, int, const struct _wsnt__SubscribeCreationFailedFaultType_ErrorCode *, const char*);
SOAP_FMAC3 struct _wsnt__SubscribeCreationFailedFaultType_ErrorCode * SOAP_FMAC4 soap_in__wsnt__SubscribeCreationFailedFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__SubscribeCreationFailedFaultType_ErrorCode *, const char*);

SOAP_FMAC3 struct _wsnt__SubscribeCreationFailedFaultType_ErrorCode * SOAP_FMAC4 soap_new__wsnt__SubscribeCreationFailedFaultType_ErrorCode(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__SubscribeCreationFailedFaultType_ErrorCode(struct soap*, const struct _wsnt__SubscribeCreationFailedFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_write__wsnt__SubscribeCreationFailedFaultType_ErrorCode
#define soap_write__wsnt__SubscribeCreationFailedFaultType_ErrorCode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__SubscribeCreationFailedFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__SubscribeCreationFailedFaultType_ErrorCode(soap, data, "wsnt:SubscribeCreationFailedFaultType-ErrorCode", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__SubscribeCreationFailedFaultType_ErrorCode
#define soap_PUT__wsnt__SubscribeCreationFailedFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__SubscribeCreationFailedFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__SubscribeCreationFailedFaultType_ErrorCode(soap, data, "wsnt:SubscribeCreationFailedFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__SubscribeCreationFailedFaultType_ErrorCode
#define soap_PATCH__wsnt__SubscribeCreationFailedFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__SubscribeCreationFailedFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__SubscribeCreationFailedFaultType_ErrorCode(soap, data, "wsnt:SubscribeCreationFailedFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__SubscribeCreationFailedFaultType_ErrorCode
#define soap_POST_send__wsnt__SubscribeCreationFailedFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__SubscribeCreationFailedFaultType_ErrorCode(soap, data), 0) || soap_put__wsnt__SubscribeCreationFailedFaultType_ErrorCode(soap, data, "wsnt:SubscribeCreationFailedFaultType-ErrorCode", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__SubscribeCreationFailedFaultType_ErrorCode * SOAP_FMAC4 soap_get__wsnt__SubscribeCreationFailedFaultType_ErrorCode(struct soap*, struct _wsnt__SubscribeCreationFailedFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_read__wsnt__SubscribeCreationFailedFaultType_ErrorCode
#define soap_read__wsnt__SubscribeCreationFailedFaultType_ErrorCode(soap, data) ( ((data) ? (soap_default__wsnt__SubscribeCreationFailedFaultType_ErrorCode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__SubscribeCreationFailedFaultType_ErrorCode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__SubscribeCreationFailedFaultType_ErrorCode
#define soap_GET__wsnt__SubscribeCreationFailedFaultType_ErrorCode(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__SubscribeCreationFailedFaultType_ErrorCode(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__SubscribeCreationFailedFaultType_ErrorCode
#define soap_POST_recv__wsnt__SubscribeCreationFailedFaultType_ErrorCode(soap, data) ( soap_read__wsnt__SubscribeCreationFailedFaultType_ErrorCode(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsnt__SubscribeCreationFailedFaultType_DEFINED
#define SOAP_TYPE_wsnt__SubscribeCreationFailedFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsnt__SubscribeCreationFailedFaultType(struct soap*, struct wsnt__SubscribeCreationFailedFaultType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__SubscribeCreationFailedFaultType(struct soap*, const struct wsnt__SubscribeCreationFailedFaultType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__SubscribeCreationFailedFaultType(struct soap*, const char*, int, const struct wsnt__SubscribeCreationFailedFaultType *, const char*);
SOAP_FMAC3 struct wsnt__SubscribeCreationFailedFaultType * SOAP_FMAC4 soap_in_wsnt__SubscribeCreationFailedFaultType(struct soap*, const char*, struct wsnt__SubscribeCreationFailedFaultType *, const char*);

SOAP_FMAC3 struct wsnt__SubscribeCreationFailedFaultType * SOAP_FMAC4 soap_new_wsnt__SubscribeCreationFailedFaultType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__SubscribeCreationFailedFaultType(struct soap*, const struct wsnt__SubscribeCreationFailedFaultType *, const char*, const char*);

#ifndef soap_write_wsnt__SubscribeCreationFailedFaultType
#define soap_write_wsnt__SubscribeCreationFailedFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsnt__SubscribeCreationFailedFaultType(soap, data), 0) || soap_put_wsnt__SubscribeCreationFailedFaultType(soap, data, "wsnt:SubscribeCreationFailedFaultType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsnt__SubscribeCreationFailedFaultType
#define soap_PUT_wsnt__SubscribeCreationFailedFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__SubscribeCreationFailedFaultType(soap, data), 0) || soap_put_wsnt__SubscribeCreationFailedFaultType(soap, data, "wsnt:SubscribeCreationFailedFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsnt__SubscribeCreationFailedFaultType
#define soap_PATCH_wsnt__SubscribeCreationFailedFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__SubscribeCreationFailedFaultType(soap, data), 0) || soap_put_wsnt__SubscribeCreationFailedFaultType(soap, data, "wsnt:SubscribeCreationFailedFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsnt__SubscribeCreationFailedFaultType
#define soap_POST_send_wsnt__SubscribeCreationFailedFaultType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__SubscribeCreationFailedFaultType(soap, data), 0) || soap_put_wsnt__SubscribeCreationFailedFaultType(soap, data, "wsnt:SubscribeCreationFailedFaultType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsnt__SubscribeCreationFailedFaultType * SOAP_FMAC4 soap_get_wsnt__SubscribeCreationFailedFaultType(struct soap*, struct wsnt__SubscribeCreationFailedFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__SubscribeCreationFailedFaultType
#define soap_read_wsnt__SubscribeCreationFailedFaultType(soap, data) ( ((data) ? (soap_default_wsnt__SubscribeCreationFailedFaultType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__SubscribeCreationFailedFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsnt__SubscribeCreationFailedFaultType
#define soap_GET_wsnt__SubscribeCreationFailedFaultType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsnt__SubscribeCreationFailedFaultType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsnt__SubscribeCreationFailedFaultType
#define soap_POST_recv_wsnt__SubscribeCreationFailedFaultType(soap, data) ( soap_read_wsnt__SubscribeCreationFailedFaultType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__trt__GetSnapshotUriResponse_DEFINED
#define SOAP_TYPE__trt__GetSnapshotUriResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__trt__GetSnapshotUriResponse(struct soap*, struct _trt__GetSnapshotUriResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__trt__GetSnapshotUriResponse(struct soap*, const struct _trt__GetSnapshotUriResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__trt__GetSnapshotUriResponse(struct soap*, const char*, int, const struct _trt__GetSnapshotUriResponse *, const char*);
SOAP_FMAC3 struct _trt__GetSnapshotUriResponse * SOAP_FMAC4 soap_in__trt__GetSnapshotUriResponse(struct soap*, const char*, struct _trt__GetSnapshotUriResponse *, const char*);

SOAP_FMAC3 struct _trt__GetSnapshotUriResponse * SOAP_FMAC4 soap_new__trt__GetSnapshotUriResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__trt__GetSnapshotUriResponse(struct soap*, const struct _trt__GetSnapshotUriResponse *, const char*, const char*);

#ifndef soap_write__trt__GetSnapshotUriResponse
#define soap_write__trt__GetSnapshotUriResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__trt__GetSnapshotUriResponse(soap, data), 0) || soap_put__trt__GetSnapshotUriResponse(soap, data, "trt:GetSnapshotUriResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__trt__GetSnapshotUriResponse
#define soap_PUT__trt__GetSnapshotUriResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__trt__GetSnapshotUriResponse(soap, data), 0) || soap_put__trt__GetSnapshotUriResponse(soap, data, "trt:GetSnapshotUriResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__trt__GetSnapshotUriResponse
#define soap_PATCH__trt__GetSnapshotUriResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__trt__GetSnapshotUriResponse(soap, data), 0) || soap_put__trt__GetSnapshotUriResponse(soap, data, "trt:GetSnapshotUriResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__trt__GetSnapshotUriResponse
#define soap_POST_send__trt__GetSnapshotUriResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__trt__GetSnapshotUriResponse(soap, data), 0) || soap_put__trt__GetSnapshotUriResponse(soap, data, "trt:GetSnapshotUriResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _trt__GetSnapshotUriResponse * SOAP_FMAC4 soap_get__trt__GetSnapshotUriResponse(struct soap*, struct _trt__GetSnapshotUriResponse *, const char*, const char*);

#ifndef soap_read__trt__GetSnapshotUriResponse
#define soap_read__trt__GetSnapshotUriResponse(soap, data) ( ((data) ? (soap_default__trt__GetSnapshotUriResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__trt__GetSnapshotUriResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__trt__GetSnapshotUriResponse
#define soap_GET__trt__GetSnapshotUriResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__trt__GetSnapshotUriResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__trt__GetSnapshotUriResponse
#define soap_POST_recv__trt__GetSnapshotUriResponse(soap, data) ( soap_read__trt__GetSnapshotUriResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__trt__GetSnapshotUri_DEFINED
#define SOAP_TYPE__trt__GetSnapshotUri_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__trt__GetSnapshotUri(struct soap*, struct _trt__GetSnapshotUri *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__trt__GetSnapshotUri(struct soap*, const struct _trt__GetSnapshotUri *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__trt__GetSnapshotUri(struct soap*, const char*, int, const struct _trt__GetSnapshotUri *, const char*);
SOAP_FMAC3 struct _trt__GetSnapshotUri * SOAP_FMAC4 soap_in__trt__GetSnapshotUri(struct soap*, const char*, struct _trt__GetSnapshotUri *, const char*);

SOAP_FMAC3 struct _trt__GetSnapshotUri * SOAP_FMAC4 soap_new__trt__GetSnapshotUri(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__trt__GetSnapshotUri(struct soap*, const struct _trt__GetSnapshotUri *, const char*, const char*);

#ifndef soap_write__trt__GetSnapshotUri
#define soap_write__trt__GetSnapshotUri(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__trt__GetSnapshotUri(soap, data), 0) || soap_put__trt__GetSnapshotUri(soap, data, "trt:GetSnapshotUri", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__trt__GetSnapshotUri
#define soap_PUT__trt__GetSnapshotUri(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__trt__GetSnapshotUri(soap, data), 0) || soap_put__trt__GetSnapshotUri(soap, data, "trt:GetSnapshotUri", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__trt__GetSnapshotUri
#define soap_PATCH__trt__GetSnapshotUri(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__trt__GetSnapshotUri(soap, data), 0) || soap_put__trt__GetSnapshotUri(soap, data, "trt:GetSnapshotUri", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__trt__GetSnapshotUri
#define soap_POST_send__trt__GetSnapshotUri(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__trt__GetSnapshotUri(soap, data), 0) || soap_put__trt__GetSnapshotUri(soap, data, "trt:GetSnapshotUri", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _trt__GetSnapshotUri * SOAP_FMAC4 soap_get__trt__GetSnapshotUri(struct soap*, struct _trt__GetSnapshotUri *, const char*, const char*);

#ifndef soap_read__trt__GetSnapshotUri
#define soap_read__trt__GetSnapshotUri(soap, data) ( ((data) ? (soap_default__trt__GetSnapshotUri(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__trt__GetSnapshotUri(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__trt__GetSnapshotUri
#define soap_GET__trt__GetSnapshotUri(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__trt__GetSnapshotUri(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__trt__GetSnapshotUri
#define soap_POST_recv__trt__GetSnapshotUri(soap, data) ( soap_read__trt__GetSnapshotUri(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__trt__DeleteProfileResponse_DEFINED
#define SOAP_TYPE__trt__DeleteProfileResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__trt__DeleteProfileResponse(struct soap*, struct _trt__DeleteProfileResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__trt__DeleteProfileResponse(struct soap*, const struct _trt__DeleteProfileResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__trt__DeleteProfileResponse(struct soap*, const char*, int, const struct _trt__DeleteProfileResponse *, const char*);
SOAP_FMAC3 struct _trt__DeleteProfileResponse * SOAP_FMAC4 soap_in__trt__DeleteProfileResponse(struct soap*, const char*, struct _trt__DeleteProfileResponse *, const char*);

SOAP_FMAC3 struct _trt__DeleteProfileResponse * SOAP_FMAC4 soap_new__trt__DeleteProfileResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__trt__DeleteProfileResponse(struct soap*, const struct _trt__DeleteProfileResponse *, const char*, const char*);

#ifndef soap_write__trt__DeleteProfileResponse
#define soap_write__trt__DeleteProfileResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__trt__DeleteProfileResponse(soap, data), 0) || soap_put__trt__DeleteProfileResponse(soap, data, "trt:DeleteProfileResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__trt__DeleteProfileResponse
#define soap_PUT__trt__DeleteProfileResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__trt__DeleteProfileResponse(soap, data), 0) || soap_put__trt__DeleteProfileResponse(soap, data, "trt:DeleteProfileResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__trt__DeleteProfileResponse
#define soap_PATCH__trt__DeleteProfileResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__trt__DeleteProfileResponse(soap, data), 0) || soap_put__trt__DeleteProfileResponse(soap, data, "trt:DeleteProfileResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__trt__DeleteProfileResponse
#define soap_POST_send__trt__DeleteProfileResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__trt__DeleteProfileResponse(soap, data), 0) || soap_put__trt__DeleteProfileResponse(soap, data, "trt:DeleteProfileResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _trt__DeleteProfileResponse * SOAP_FMAC4 soap_get__trt__DeleteProfileResponse(struct soap*, struct _trt__DeleteProfileResponse *, const char*, const char*);

#ifndef soap_read__trt__DeleteProfileResponse
#define soap_read__trt__DeleteProfileResponse(soap, data) ( ((data) ? (soap_default__trt__DeleteProfileResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__trt__DeleteProfileResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__trt__DeleteProfileResponse
#define soap_GET__trt__DeleteProfileResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__trt__DeleteProfileResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__trt__DeleteProfileResponse
#define soap_POST_recv__trt__DeleteProfileResponse(soap, data) ( soap_read__trt__DeleteProfileResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__trt__DeleteProfile_DEFINED
#define SOAP_TYPE__trt__DeleteProfile_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__trt__DeleteProfile(struct soap*, struct _trt__DeleteProfile *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__trt__DeleteProfile(struct soap*, const struct _trt__DeleteProfile *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__trt__DeleteProfile(struct soap*, const char*, int, const struct _trt__DeleteProfile *, const char*);
SOAP_FMAC3 struct _trt__DeleteProfile * SOAP_FMAC4 soap_in__trt__DeleteProfile(struct soap*, const char*, struct _trt__DeleteProfile *, const char*);

SOAP_FMAC3 struct _trt__DeleteProfile * SOAP_FMAC4 soap_new__trt__DeleteProfile(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__trt__DeleteProfile(struct soap*, const struct _trt__DeleteProfile *, const char*, const char*);

#ifndef soap_write__trt__DeleteProfile
#define soap_write__trt__DeleteProfile(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__trt__DeleteProfile(soap, data), 0) || soap_put__trt__DeleteProfile(soap, data, "trt:DeleteProfile", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__trt__DeleteProfile
#define soap_PUT__trt__DeleteProfile(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__trt__DeleteProfile(soap, data), 0) || soap_put__trt__DeleteProfile(soap, data, "trt:DeleteProfile", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__trt__DeleteProfile
#define soap_PATCH__trt__DeleteProfile(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__trt__DeleteProfile(soap, data), 0) || soap_put__trt__DeleteProfile(soap, data, "trt:DeleteProfile", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__trt__DeleteProfile
#define soap_POST_send__trt__DeleteProfile(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__trt__DeleteProfile(soap, data), 0) || soap_put__trt__DeleteProfile(soap, data, "trt:DeleteProfile", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _trt__DeleteProfile * SOAP_FMAC4 soap_get__trt__DeleteProfile(struct soap*, struct _trt__DeleteProfile *, const char*, const char*);

#ifndef soap_read__trt__DeleteProfile
#define soap_read__trt__DeleteProfile(soap, data) ( ((data) ? (soap_default__trt__DeleteProfile(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__trt__DeleteProfile(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__trt__DeleteProfile
#define soap_GET__trt__DeleteProfile(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__trt__DeleteProfile(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__trt__DeleteProfile
#define soap_POST_recv__trt__DeleteProfile(soap, data) ( soap_read__trt__DeleteProfile(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__trt__GetProfilesResponse_DEFINED
#define SOAP_TYPE__trt__GetProfilesResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__trt__GetProfilesResponse(struct soap*, struct _trt__GetProfilesResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__trt__GetProfilesResponse(struct soap*, const struct _trt__GetProfilesResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__trt__GetProfilesResponse(struct soap*, const char*, int, const struct _trt__GetProfilesResponse *, const char*);
SOAP_FMAC3 struct _trt__GetProfilesResponse * SOAP_FMAC4 soap_in__trt__GetProfilesResponse(struct soap*, const char*, struct _trt__GetProfilesResponse *, const char*);

SOAP_FMAC3 struct _trt__GetProfilesResponse * SOAP_FMAC4 soap_new__trt__GetProfilesResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__trt__GetProfilesResponse(struct soap*, const struct _trt__GetProfilesResponse *, const char*, const char*);

#ifndef soap_write__trt__GetProfilesResponse
#define soap_write__trt__GetProfilesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__trt__GetProfilesResponse(soap, data), 0) || soap_put__trt__GetProfilesResponse(soap, data, "trt:GetProfilesResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__trt__GetProfilesResponse
#define soap_PUT__trt__GetProfilesResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__trt__GetProfilesResponse(soap, data), 0) || soap_put__trt__GetProfilesResponse(soap, data, "trt:GetProfilesResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__trt__GetProfilesResponse
#define soap_PATCH__trt__GetProfilesResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__trt__GetProfilesResponse(soap, data), 0) || soap_put__trt__GetProfilesResponse(soap, data, "trt:GetProfilesResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__trt__GetProfilesResponse
#define soap_POST_send__trt__GetProfilesResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__trt__GetProfilesResponse(soap, data), 0) || soap_put__trt__GetProfilesResponse(soap, data, "trt:GetProfilesResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _trt__GetProfilesResponse * SOAP_FMAC4 soap_get__trt__GetProfilesResponse(struct soap*, struct _trt__GetProfilesResponse *, const char*, const char*);

#ifndef soap_read__trt__GetProfilesResponse
#define soap_read__trt__GetProfilesResponse(soap, data) ( ((data) ? (soap_default__trt__GetProfilesResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__trt__GetProfilesResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__trt__GetProfilesResponse
#define soap_GET__trt__GetProfilesResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__trt__GetProfilesResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__trt__GetProfilesResponse
#define soap_POST_recv__trt__GetProfilesResponse(soap, data) ( soap_read__trt__GetProfilesResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__trt__GetProfiles_DEFINED
#define SOAP_TYPE__trt__GetProfiles_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__trt__GetProfiles(struct soap*, struct _trt__GetProfiles *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__trt__GetProfiles(struct soap*, const struct _trt__GetProfiles *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__trt__GetProfiles(struct soap*, const char*, int, const struct _trt__GetProfiles *, const char*);
SOAP_FMAC3 struct _trt__GetProfiles * SOAP_FMAC4 soap_in__trt__GetProfiles(struct soap*, const char*, struct _trt__GetProfiles *, const char*);

SOAP_FMAC3 struct _trt__GetProfiles * SOAP_FMAC4 soap_new__trt__GetProfiles(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__trt__GetProfiles(struct soap*, const struct _trt__GetProfiles *, const char*, const char*);

#ifndef soap_write__trt__GetProfiles
#define soap_write__trt__GetProfiles(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__trt__GetProfiles(soap, data), 0) || soap_put__trt__GetProfiles(soap, data, "trt:GetProfiles", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__trt__GetProfiles
#define soap_PUT__trt__GetProfiles(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__trt__GetProfiles(soap, data), 0) || soap_put__trt__GetProfiles(soap, data, "trt:GetProfiles", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__trt__GetProfiles
#define soap_PATCH__trt__GetProfiles(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__trt__GetProfiles(soap, data), 0) || soap_put__trt__GetProfiles(soap, data, "trt:GetProfiles", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__trt__GetProfiles
#define soap_POST_send__trt__GetProfiles(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__trt__GetProfiles(soap, data), 0) || soap_put__trt__GetProfiles(soap, data, "trt:GetProfiles", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _trt__GetProfiles * SOAP_FMAC4 soap_get__trt__GetProfiles(struct soap*, struct _trt__GetProfiles *, const char*, const char*);

#ifndef soap_read__trt__GetProfiles
#define soap_read__trt__GetProfiles(soap, data) ( ((data) ? (soap_default__trt__GetProfiles(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__trt__GetProfiles(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__trt__GetProfiles
#define soap_GET__trt__GetProfiles(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__trt__GetProfiles(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__trt__GetProfiles
#define soap_POST_recv__trt__GetProfiles(soap, data) ( soap_read__trt__GetProfiles(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__trt__GetProfileResponse_DEFINED
#define SOAP_TYPE__trt__GetProfileResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__trt__GetProfileResponse(struct soap*, struct _trt__GetProfileResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__trt__GetProfileResponse(struct soap*, const struct _trt__GetProfileResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__trt__GetProfileResponse(struct soap*, const char*, int, const struct _trt__GetProfileResponse *, const char*);
SOAP_FMAC3 struct _trt__GetProfileResponse * SOAP_FMAC4 soap_in__trt__GetProfileResponse(struct soap*, const char*, struct _trt__GetProfileResponse *, const char*);

SOAP_FMAC3 struct _trt__GetProfileResponse * SOAP_FMAC4 soap_new__trt__GetProfileResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__trt__GetProfileResponse(struct soap*, const struct _trt__GetProfileResponse *, const char*, const char*);

#ifndef soap_write__trt__GetProfileResponse
#define soap_write__trt__GetProfileResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__trt__GetProfileResponse(soap, data), 0) || soap_put__trt__GetProfileResponse(soap, data, "trt:GetProfileResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__trt__GetProfileResponse
#define soap_PUT__trt__GetProfileResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__trt__GetProfileResponse(soap, data), 0) || soap_put__trt__GetProfileResponse(soap, data, "trt:GetProfileResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__trt__GetProfileResponse
#define soap_PATCH__trt__GetProfileResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__trt__GetProfileResponse(soap, data), 0) || soap_put__trt__GetProfileResponse(soap, data, "trt:GetProfileResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__trt__GetProfileResponse
#define soap_POST_send__trt__GetProfileResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__trt__GetProfileResponse(soap, data), 0) || soap_put__trt__GetProfileResponse(soap, data, "trt:GetProfileResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _trt__GetProfileResponse * SOAP_FMAC4 soap_get__trt__GetProfileResponse(struct soap*, struct _trt__GetProfileResponse *, const char*, const char*);

#ifndef soap_read__trt__GetProfileResponse
#define soap_read__trt__GetProfileResponse(soap, data) ( ((data) ? (soap_default__trt__GetProfileResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__trt__GetProfileResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__trt__GetProfileResponse
#define soap_GET__trt__GetProfileResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__trt__GetProfileResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__trt__GetProfileResponse
#define soap_POST_recv__trt__GetProfileResponse(soap, data) ( soap_read__trt__GetProfileResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__trt__GetProfile_DEFINED
#define SOAP_TYPE__trt__GetProfile_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__trt__GetProfile(struct soap*, struct _trt__GetProfile *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__trt__GetProfile(struct soap*, const struct _trt__GetProfile *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__trt__GetProfile(struct soap*, const char*, int, const struct _trt__GetProfile *, const char*);
SOAP_FMAC3 struct _trt__GetProfile * SOAP_FMAC4 soap_in__trt__GetProfile(struct soap*, const char*, struct _trt__GetProfile *, const char*);

SOAP_FMAC3 struct _trt__GetProfile * SOAP_FMAC4 soap_new__trt__GetProfile(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__trt__GetProfile(struct soap*, const struct _trt__GetProfile *, const char*, const char*);

#ifndef soap_write__trt__GetProfile
#define soap_write__trt__GetProfile(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__trt__GetProfile(soap, data), 0) || soap_put__trt__GetProfile(soap, data, "trt:GetProfile", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__trt__GetProfile
#define soap_PUT__trt__GetProfile(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__trt__GetProfile(soap, data), 0) || soap_put__trt__GetProfile(soap, data, "trt:GetProfile", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__trt__GetProfile
#define soap_PATCH__trt__GetProfile(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__trt__GetProfile(soap, data), 0) || soap_put__trt__GetProfile(soap, data, "trt:GetProfile", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__trt__GetProfile
#define soap_POST_send__trt__GetProfile(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__trt__GetProfile(soap, data), 0) || soap_put__trt__GetProfile(soap, data, "trt:GetProfile", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _trt__GetProfile * SOAP_FMAC4 soap_get__trt__GetProfile(struct soap*, struct _trt__GetProfile *, const char*, const char*);

#ifndef soap_read__trt__GetProfile
#define soap_read__trt__GetProfile(soap, data) ( ((data) ? (soap_default__trt__GetProfile(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__trt__GetProfile(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__trt__GetProfile
#define soap_GET__trt__GetProfile(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__trt__GetProfile(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__trt__GetProfile
#define soap_POST_recv__trt__GetProfile(soap, data) ( soap_read__trt__GetProfile(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__trt__CreateProfileResponse_DEFINED
#define SOAP_TYPE__trt__CreateProfileResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__trt__CreateProfileResponse(struct soap*, struct _trt__CreateProfileResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__trt__CreateProfileResponse(struct soap*, const struct _trt__CreateProfileResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__trt__CreateProfileResponse(struct soap*, const char*, int, const struct _trt__CreateProfileResponse *, const char*);
SOAP_FMAC3 struct _trt__CreateProfileResponse * SOAP_FMAC4 soap_in__trt__CreateProfileResponse(struct soap*, const char*, struct _trt__CreateProfileResponse *, const char*);

SOAP_FMAC3 struct _trt__CreateProfileResponse * SOAP_FMAC4 soap_new__trt__CreateProfileResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__trt__CreateProfileResponse(struct soap*, const struct _trt__CreateProfileResponse *, const char*, const char*);

#ifndef soap_write__trt__CreateProfileResponse
#define soap_write__trt__CreateProfileResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__trt__CreateProfileResponse(soap, data), 0) || soap_put__trt__CreateProfileResponse(soap, data, "trt:CreateProfileResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__trt__CreateProfileResponse
#define soap_PUT__trt__CreateProfileResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__trt__CreateProfileResponse(soap, data), 0) || soap_put__trt__CreateProfileResponse(soap, data, "trt:CreateProfileResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__trt__CreateProfileResponse
#define soap_PATCH__trt__CreateProfileResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__trt__CreateProfileResponse(soap, data), 0) || soap_put__trt__CreateProfileResponse(soap, data, "trt:CreateProfileResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__trt__CreateProfileResponse
#define soap_POST_send__trt__CreateProfileResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__trt__CreateProfileResponse(soap, data), 0) || soap_put__trt__CreateProfileResponse(soap, data, "trt:CreateProfileResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _trt__CreateProfileResponse * SOAP_FMAC4 soap_get__trt__CreateProfileResponse(struct soap*, struct _trt__CreateProfileResponse *, const char*, const char*);

#ifndef soap_read__trt__CreateProfileResponse
#define soap_read__trt__CreateProfileResponse(soap, data) ( ((data) ? (soap_default__trt__CreateProfileResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__trt__CreateProfileResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__trt__CreateProfileResponse
#define soap_GET__trt__CreateProfileResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__trt__CreateProfileResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__trt__CreateProfileResponse
#define soap_POST_recv__trt__CreateProfileResponse(soap, data) ( soap_read__trt__CreateProfileResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__trt__CreateProfile_DEFINED
#define SOAP_TYPE__trt__CreateProfile_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__trt__CreateProfile(struct soap*, struct _trt__CreateProfile *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__trt__CreateProfile(struct soap*, const struct _trt__CreateProfile *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__trt__CreateProfile(struct soap*, const char*, int, const struct _trt__CreateProfile *, const char*);
SOAP_FMAC3 struct _trt__CreateProfile * SOAP_FMAC4 soap_in__trt__CreateProfile(struct soap*, const char*, struct _trt__CreateProfile *, const char*);

SOAP_FMAC3 struct _trt__CreateProfile * SOAP_FMAC4 soap_new__trt__CreateProfile(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__trt__CreateProfile(struct soap*, const struct _trt__CreateProfile *, const char*, const char*);

#ifndef soap_write__trt__CreateProfile
#define soap_write__trt__CreateProfile(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__trt__CreateProfile(soap, data), 0) || soap_put__trt__CreateProfile(soap, data, "trt:CreateProfile", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__trt__CreateProfile
#define soap_PUT__trt__CreateProfile(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__trt__CreateProfile(soap, data), 0) || soap_put__trt__CreateProfile(soap, data, "trt:CreateProfile", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__trt__CreateProfile
#define soap_PATCH__trt__CreateProfile(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__trt__CreateProfile(soap, data), 0) || soap_put__trt__CreateProfile(soap, data, "trt:CreateProfile", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__trt__CreateProfile
#define soap_POST_send__trt__CreateProfile(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__trt__CreateProfile(soap, data), 0) || soap_put__trt__CreateProfile(soap, data, "trt:CreateProfile", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _trt__CreateProfile * SOAP_FMAC4 soap_get__trt__CreateProfile(struct soap*, struct _trt__CreateProfile *, const char*, const char*);

#ifndef soap_read__trt__CreateProfile
#define soap_read__trt__CreateProfile(soap, data) ( ((data) ? (soap_default__trt__CreateProfile(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__trt__CreateProfile(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__trt__CreateProfile
#define soap_GET__trt__CreateProfile(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__trt__CreateProfile(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__trt__CreateProfile
#define soap_POST_recv__trt__CreateProfile(soap, data) ( soap_read__trt__CreateProfile(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__trt__GetServiceCapabilitiesResponse_DEFINED
#define SOAP_TYPE__trt__GetServiceCapabilitiesResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__trt__GetServiceCapabilitiesResponse(struct soap*, struct _trt__GetServiceCapabilitiesResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__trt__GetServiceCapabilitiesResponse(struct soap*, const struct _trt__GetServiceCapabilitiesResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__trt__GetServiceCapabilitiesResponse(struct soap*, const char*, int, const struct _trt__GetServiceCapabilitiesResponse *, const char*);
SOAP_FMAC3 struct _trt__GetServiceCapabilitiesResponse * SOAP_FMAC4 soap_in__trt__GetServiceCapabilitiesResponse(struct soap*, const char*, struct _trt__GetServiceCapabilitiesResponse *, const char*);

SOAP_FMAC3 struct _trt__GetServiceCapabilitiesResponse * SOAP_FMAC4 soap_new__trt__GetServiceCapabilitiesResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__trt__GetServiceCapabilitiesResponse(struct soap*, const struct _trt__GetServiceCapabilitiesResponse *, const char*, const char*);

#ifndef soap_write__trt__GetServiceCapabilitiesResponse
#define soap_write__trt__GetServiceCapabilitiesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__trt__GetServiceCapabilitiesResponse(soap, data), 0) || soap_put__trt__GetServiceCapabilitiesResponse(soap, data, "trt:GetServiceCapabilitiesResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__trt__GetServiceCapabilitiesResponse
#define soap_PUT__trt__GetServiceCapabilitiesResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__trt__GetServiceCapabilitiesResponse(soap, data), 0) || soap_put__trt__GetServiceCapabilitiesResponse(soap, data, "trt:GetServiceCapabilitiesResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__trt__GetServiceCapabilitiesResponse
#define soap_PATCH__trt__GetServiceCapabilitiesResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__trt__GetServiceCapabilitiesResponse(soap, data), 0) || soap_put__trt__GetServiceCapabilitiesResponse(soap, data, "trt:GetServiceCapabilitiesResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__trt__GetServiceCapabilitiesResponse
#define soap_POST_send__trt__GetServiceCapabilitiesResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__trt__GetServiceCapabilitiesResponse(soap, data), 0) || soap_put__trt__GetServiceCapabilitiesResponse(soap, data, "trt:GetServiceCapabilitiesResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _trt__GetServiceCapabilitiesResponse * SOAP_FMAC4 soap_get__trt__GetServiceCapabilitiesResponse(struct soap*, struct _trt__GetServiceCapabilitiesResponse *, const char*, const char*);

#ifndef soap_read__trt__GetServiceCapabilitiesResponse
#define soap_read__trt__GetServiceCapabilitiesResponse(soap, data) ( ((data) ? (soap_default__trt__GetServiceCapabilitiesResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__trt__GetServiceCapabilitiesResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__trt__GetServiceCapabilitiesResponse
#define soap_GET__trt__GetServiceCapabilitiesResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__trt__GetServiceCapabilitiesResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__trt__GetServiceCapabilitiesResponse
#define soap_POST_recv__trt__GetServiceCapabilitiesResponse(soap, data) ( soap_read__trt__GetServiceCapabilitiesResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__trt__GetServiceCapabilities_DEFINED
#define SOAP_TYPE__trt__GetServiceCapabilities_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__trt__GetServiceCapabilities(struct soap*, struct _trt__GetServiceCapabilities *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__trt__GetServiceCapabilities(struct soap*, const struct _trt__GetServiceCapabilities *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__trt__GetServiceCapabilities(struct soap*, const char*, int, const struct _trt__GetServiceCapabilities *, const char*);
SOAP_FMAC3 struct _trt__GetServiceCapabilities * SOAP_FMAC4 soap_in__trt__GetServiceCapabilities(struct soap*, const char*, struct _trt__GetServiceCapabilities *, const char*);

SOAP_FMAC3 struct _trt__GetServiceCapabilities * SOAP_FMAC4 soap_new__trt__GetServiceCapabilities(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__trt__GetServiceCapabilities(struct soap*, const struct _trt__GetServiceCapabilities *, const char*, const char*);

#ifndef soap_write__trt__GetServiceCapabilities
#define soap_write__trt__GetServiceCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__trt__GetServiceCapabilities(soap, data), 0) || soap_put__trt__GetServiceCapabilities(soap, data, "trt:GetServiceCapabilities", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__trt__GetServiceCapabilities
#define soap_PUT__trt__GetServiceCapabilities(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__trt__GetServiceCapabilities(soap, data), 0) || soap_put__trt__GetServiceCapabilities(soap, data, "trt:GetServiceCapabilities", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__trt__GetServiceCapabilities
#define soap_PATCH__trt__GetServiceCapabilities(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__trt__GetServiceCapabilities(soap, data), 0) || soap_put__trt__GetServiceCapabilities(soap, data, "trt:GetServiceCapabilities", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__trt__GetServiceCapabilities
#define soap_POST_send__trt__GetServiceCapabilities(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__trt__GetServiceCapabilities(soap, data), 0) || soap_put__trt__GetServiceCapabilities(soap, data, "trt:GetServiceCapabilities", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _trt__GetServiceCapabilities * SOAP_FMAC4 soap_get__trt__GetServiceCapabilities(struct soap*, struct _trt__GetServiceCapabilities *, const char*, const char*);

#ifndef soap_read__trt__GetServiceCapabilities
#define soap_read__trt__GetServiceCapabilities(soap, data) ( ((data) ? (soap_default__trt__GetServiceCapabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__trt__GetServiceCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__trt__GetServiceCapabilities
#define soap_GET__trt__GetServiceCapabilities(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__trt__GetServiceCapabilities(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__trt__GetServiceCapabilities
#define soap_POST_recv__trt__GetServiceCapabilities(soap, data) ( soap_read__trt__GetServiceCapabilities(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_trt__ProfileCapabilities_DEFINED
#define SOAP_TYPE_trt__ProfileCapabilities_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_trt__ProfileCapabilities(struct soap*, struct trt__ProfileCapabilities *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_trt__ProfileCapabilities(struct soap*, const struct trt__ProfileCapabilities *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_trt__ProfileCapabilities(struct soap*, const char*, int, const struct trt__ProfileCapabilities *, const char*);
SOAP_FMAC3 struct trt__ProfileCapabilities * SOAP_FMAC4 soap_in_trt__ProfileCapabilities(struct soap*, const char*, struct trt__ProfileCapabilities *, const char*);

SOAP_FMAC3 struct trt__ProfileCapabilities * SOAP_FMAC4 soap_new_trt__ProfileCapabilities(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_trt__ProfileCapabilities(struct soap*, const struct trt__ProfileCapabilities *, const char*, const char*);

#ifndef soap_write_trt__ProfileCapabilities
#define soap_write_trt__ProfileCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_trt__ProfileCapabilities(soap, data), 0) || soap_put_trt__ProfileCapabilities(soap, data, "trt:ProfileCapabilities", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_trt__ProfileCapabilities
#define soap_PUT_trt__ProfileCapabilities(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_trt__ProfileCapabilities(soap, data), 0) || soap_put_trt__ProfileCapabilities(soap, data, "trt:ProfileCapabilities", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_trt__ProfileCapabilities
#define soap_PATCH_trt__ProfileCapabilities(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_trt__ProfileCapabilities(soap, data), 0) || soap_put_trt__ProfileCapabilities(soap, data, "trt:ProfileCapabilities", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_trt__ProfileCapabilities
#define soap_POST_send_trt__ProfileCapabilities(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_trt__ProfileCapabilities(soap, data), 0) || soap_put_trt__ProfileCapabilities(soap, data, "trt:ProfileCapabilities", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct trt__ProfileCapabilities * SOAP_FMAC4 soap_get_trt__ProfileCapabilities(struct soap*, struct trt__ProfileCapabilities *, const char*, const char*);

#ifndef soap_read_trt__ProfileCapabilities
#define soap_read_trt__ProfileCapabilities(soap, data) ( ((data) ? (soap_default_trt__ProfileCapabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_trt__ProfileCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_trt__ProfileCapabilities
#define soap_GET_trt__ProfileCapabilities(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_trt__ProfileCapabilities(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_trt__ProfileCapabilities
#define soap_POST_recv_trt__ProfileCapabilities(soap, data) ( soap_read_trt__ProfileCapabilities(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_trt__Capabilities_DEFINED
#define SOAP_TYPE_trt__Capabilities_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_trt__Capabilities(struct soap*, struct trt__Capabilities *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_trt__Capabilities(struct soap*, const struct trt__Capabilities *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_trt__Capabilities(struct soap*, const char*, int, const struct trt__Capabilities *, const char*);
SOAP_FMAC3 struct trt__Capabilities * SOAP_FMAC4 soap_in_trt__Capabilities(struct soap*, const char*, struct trt__Capabilities *, const char*);

SOAP_FMAC3 struct trt__Capabilities * SOAP_FMAC4 soap_new_trt__Capabilities(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_trt__Capabilities(struct soap*, const struct trt__Capabilities *, const char*, const char*);

#ifndef soap_write_trt__Capabilities
#define soap_write_trt__Capabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_trt__Capabilities(soap, data), 0) || soap_put_trt__Capabilities(soap, data, "trt:Capabilities", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_trt__Capabilities
#define soap_PUT_trt__Capabilities(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_trt__Capabilities(soap, data), 0) || soap_put_trt__Capabilities(soap, data, "trt:Capabilities", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_trt__Capabilities
#define soap_PATCH_trt__Capabilities(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_trt__Capabilities(soap, data), 0) || soap_put_trt__Capabilities(soap, data, "trt:Capabilities", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_trt__Capabilities
#define soap_POST_send_trt__Capabilities(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_trt__Capabilities(soap, data), 0) || soap_put_trt__Capabilities(soap, data, "trt:Capabilities", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct trt__Capabilities * SOAP_FMAC4 soap_get_trt__Capabilities(struct soap*, struct trt__Capabilities *, const char*, const char*);

#ifndef soap_read_trt__Capabilities
#define soap_read_trt__Capabilities(soap, data) ( ((data) ? (soap_default_trt__Capabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_trt__Capabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_trt__Capabilities
#define soap_GET_trt__Capabilities(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_trt__Capabilities(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_trt__Capabilities
#define soap_POST_recv_trt__Capabilities(soap, data) ( soap_read_trt__Capabilities(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wstop__QueryExpressionType_DEFINED
#define SOAP_TYPE_wstop__QueryExpressionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wstop__QueryExpressionType(struct soap*, struct wstop__QueryExpressionType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wstop__QueryExpressionType(struct soap*, const struct wstop__QueryExpressionType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wstop__QueryExpressionType(struct soap*, const char*, int, const struct wstop__QueryExpressionType *, const char*);
SOAP_FMAC3 struct wstop__QueryExpressionType * SOAP_FMAC4 soap_in_wstop__QueryExpressionType(struct soap*, const char*, struct wstop__QueryExpressionType *, const char*);

SOAP_FMAC3 struct wstop__QueryExpressionType * SOAP_FMAC4 soap_new_wstop__QueryExpressionType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wstop__QueryExpressionType(struct soap*, const struct wstop__QueryExpressionType *, const char*, const char*);

#ifndef soap_write_wstop__QueryExpressionType
#define soap_write_wstop__QueryExpressionType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wstop__QueryExpressionType(soap, data), 0) || soap_put_wstop__QueryExpressionType(soap, data, "wstop:QueryExpressionType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wstop__QueryExpressionType
#define soap_PUT_wstop__QueryExpressionType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wstop__QueryExpressionType(soap, data), 0) || soap_put_wstop__QueryExpressionType(soap, data, "wstop:QueryExpressionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wstop__QueryExpressionType
#define soap_PATCH_wstop__QueryExpressionType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wstop__QueryExpressionType(soap, data), 0) || soap_put_wstop__QueryExpressionType(soap, data, "wstop:QueryExpressionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wstop__QueryExpressionType
#define soap_POST_send_wstop__QueryExpressionType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wstop__QueryExpressionType(soap, data), 0) || soap_put_wstop__QueryExpressionType(soap, data, "wstop:QueryExpressionType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wstop__QueryExpressionType * SOAP_FMAC4 soap_get_wstop__QueryExpressionType(struct soap*, struct wstop__QueryExpressionType *, const char*, const char*);

#ifndef soap_read_wstop__QueryExpressionType
#define soap_read_wstop__QueryExpressionType(soap, data) ( ((data) ? (soap_default_wstop__QueryExpressionType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wstop__QueryExpressionType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wstop__QueryExpressionType
#define soap_GET_wstop__QueryExpressionType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wstop__QueryExpressionType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wstop__QueryExpressionType
#define soap_POST_recv_wstop__QueryExpressionType(soap, data) ( soap_read_wstop__QueryExpressionType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wstop__ExtensibleDocumented_DEFINED
#define SOAP_TYPE_wstop__ExtensibleDocumented_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wstop__ExtensibleDocumented(struct soap*, struct wstop__ExtensibleDocumented *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wstop__ExtensibleDocumented(struct soap*, const struct wstop__ExtensibleDocumented *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wstop__ExtensibleDocumented(struct soap*, const char*, int, const struct wstop__ExtensibleDocumented *, const char*);
SOAP_FMAC3 struct wstop__ExtensibleDocumented * SOAP_FMAC4 soap_in_wstop__ExtensibleDocumented(struct soap*, const char*, struct wstop__ExtensibleDocumented *, const char*);

SOAP_FMAC3 struct wstop__ExtensibleDocumented * SOAP_FMAC4 soap_new_wstop__ExtensibleDocumented(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wstop__ExtensibleDocumented(struct soap*, const struct wstop__ExtensibleDocumented *, const char*, const char*);

#ifndef soap_write_wstop__ExtensibleDocumented
#define soap_write_wstop__ExtensibleDocumented(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wstop__ExtensibleDocumented(soap, data), 0) || soap_put_wstop__ExtensibleDocumented(soap, data, "wstop:ExtensibleDocumented", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wstop__ExtensibleDocumented
#define soap_PUT_wstop__ExtensibleDocumented(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wstop__ExtensibleDocumented(soap, data), 0) || soap_put_wstop__ExtensibleDocumented(soap, data, "wstop:ExtensibleDocumented", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wstop__ExtensibleDocumented
#define soap_PATCH_wstop__ExtensibleDocumented(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wstop__ExtensibleDocumented(soap, data), 0) || soap_put_wstop__ExtensibleDocumented(soap, data, "wstop:ExtensibleDocumented", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wstop__ExtensibleDocumented
#define soap_POST_send_wstop__ExtensibleDocumented(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wstop__ExtensibleDocumented(soap, data), 0) || soap_put_wstop__ExtensibleDocumented(soap, data, "wstop:ExtensibleDocumented", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wstop__ExtensibleDocumented * SOAP_FMAC4 soap_get_wstop__ExtensibleDocumented(struct soap*, struct wstop__ExtensibleDocumented *, const char*, const char*);

#ifndef soap_read_wstop__ExtensibleDocumented
#define soap_read_wstop__ExtensibleDocumented(soap, data) ( ((data) ? (soap_default_wstop__ExtensibleDocumented(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wstop__ExtensibleDocumented(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wstop__ExtensibleDocumented
#define soap_GET_wstop__ExtensibleDocumented(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wstop__ExtensibleDocumented(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wstop__ExtensibleDocumented
#define soap_POST_recv_wstop__ExtensibleDocumented(soap, data) ( soap_read_wstop__ExtensibleDocumented(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wstop__Documentation_DEFINED
#define SOAP_TYPE_wstop__Documentation_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wstop__Documentation(struct soap*, struct wstop__Documentation *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wstop__Documentation(struct soap*, const struct wstop__Documentation *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wstop__Documentation(struct soap*, const char*, int, const struct wstop__Documentation *, const char*);
SOAP_FMAC3 struct wstop__Documentation * SOAP_FMAC4 soap_in_wstop__Documentation(struct soap*, const char*, struct wstop__Documentation *, const char*);

SOAP_FMAC3 struct wstop__Documentation * SOAP_FMAC4 soap_new_wstop__Documentation(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wstop__Documentation(struct soap*, const struct wstop__Documentation *, const char*, const char*);

#ifndef soap_write_wstop__Documentation
#define soap_write_wstop__Documentation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wstop__Documentation(soap, data), 0) || soap_put_wstop__Documentation(soap, data, "wstop:Documentation", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wstop__Documentation
#define soap_PUT_wstop__Documentation(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wstop__Documentation(soap, data), 0) || soap_put_wstop__Documentation(soap, data, "wstop:Documentation", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wstop__Documentation
#define soap_PATCH_wstop__Documentation(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wstop__Documentation(soap, data), 0) || soap_put_wstop__Documentation(soap, data, "wstop:Documentation", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wstop__Documentation
#define soap_POST_send_wstop__Documentation(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wstop__Documentation(soap, data), 0) || soap_put_wstop__Documentation(soap, data, "wstop:Documentation", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wstop__Documentation * SOAP_FMAC4 soap_get_wstop__Documentation(struct soap*, struct wstop__Documentation *, const char*, const char*);

#ifndef soap_read_wstop__Documentation
#define soap_read_wstop__Documentation(soap, data) ( ((data) ? (soap_default_wstop__Documentation(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wstop__Documentation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wstop__Documentation
#define soap_GET_wstop__Documentation(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wstop__Documentation(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wstop__Documentation
#define soap_POST_recv_wstop__Documentation(soap, data) ( soap_read_wstop__Documentation(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsrfbf__BaseFaultType_FaultCause_DEFINED
#define SOAP_TYPE__wsrfbf__BaseFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsrfbf__BaseFaultType_FaultCause(struct soap*, struct _wsrfbf__BaseFaultType_FaultCause *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsrfbf__BaseFaultType_FaultCause(struct soap*, const struct _wsrfbf__BaseFaultType_FaultCause *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsrfbf__BaseFaultType_FaultCause(struct soap*, const char*, int, const struct _wsrfbf__BaseFaultType_FaultCause *, const char*);
SOAP_FMAC3 struct _wsrfbf__BaseFaultType_FaultCause * SOAP_FMAC4 soap_in__wsrfbf__BaseFaultType_FaultCause(struct soap*, const char*, struct _wsrfbf__BaseFaultType_FaultCause *, const char*);

SOAP_FMAC3 struct _wsrfbf__BaseFaultType_FaultCause * SOAP_FMAC4 soap_new__wsrfbf__BaseFaultType_FaultCause(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsrfbf__BaseFaultType_FaultCause(struct soap*, const struct _wsrfbf__BaseFaultType_FaultCause *, const char*, const char*);

#ifndef soap_write__wsrfbf__BaseFaultType_FaultCause
#define soap_write__wsrfbf__BaseFaultType_FaultCause(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsrfbf__BaseFaultType_FaultCause(soap, data), 0) || soap_put__wsrfbf__BaseFaultType_FaultCause(soap, data, "wsrfbf:BaseFaultType-FaultCause", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsrfbf__BaseFaultType_FaultCause
#define soap_PUT__wsrfbf__BaseFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsrfbf__BaseFaultType_FaultCause(soap, data), 0) || soap_put__wsrfbf__BaseFaultType_FaultCause(soap, data, "wsrfbf:BaseFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsrfbf__BaseFaultType_FaultCause
#define soap_PATCH__wsrfbf__BaseFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsrfbf__BaseFaultType_FaultCause(soap, data), 0) || soap_put__wsrfbf__BaseFaultType_FaultCause(soap, data, "wsrfbf:BaseFaultType-FaultCause", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsrfbf__BaseFaultType_FaultCause
#define soap_POST_send__wsrfbf__BaseFaultType_FaultCause(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsrfbf__BaseFaultType_FaultCause(soap, data), 0) || soap_put__wsrfbf__BaseFaultType_FaultCause(soap, data, "wsrfbf:BaseFaultType-FaultCause", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsrfbf__BaseFaultType_FaultCause * SOAP_FMAC4 soap_get__wsrfbf__BaseFaultType_FaultCause(struct soap*, struct _wsrfbf__BaseFaultType_FaultCause *, const char*, const char*);

#ifndef soap_read__wsrfbf__BaseFaultType_FaultCause
#define soap_read__wsrfbf__BaseFaultType_FaultCause(soap, data) ( ((data) ? (soap_default__wsrfbf__BaseFaultType_FaultCause(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsrfbf__BaseFaultType_FaultCause(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsrfbf__BaseFaultType_FaultCause
#define soap_GET__wsrfbf__BaseFaultType_FaultCause(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsrfbf__BaseFaultType_FaultCause(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsrfbf__BaseFaultType_FaultCause
#define soap_POST_recv__wsrfbf__BaseFaultType_FaultCause(soap, data) ( soap_read__wsrfbf__BaseFaultType_FaultCause(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsrfbf__BaseFaultType_Description_DEFINED
#define SOAP_TYPE__wsrfbf__BaseFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsrfbf__BaseFaultType_Description(struct soap*, struct _wsrfbf__BaseFaultType_Description *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsrfbf__BaseFaultType_Description(struct soap*, const struct _wsrfbf__BaseFaultType_Description *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsrfbf__BaseFaultType_Description(struct soap*, const char*, int, const struct _wsrfbf__BaseFaultType_Description *, const char*);
SOAP_FMAC3 struct _wsrfbf__BaseFaultType_Description * SOAP_FMAC4 soap_in__wsrfbf__BaseFaultType_Description(struct soap*, const char*, struct _wsrfbf__BaseFaultType_Description *, const char*);

SOAP_FMAC3 struct _wsrfbf__BaseFaultType_Description * SOAP_FMAC4 soap_new__wsrfbf__BaseFaultType_Description(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsrfbf__BaseFaultType_Description(struct soap*, const struct _wsrfbf__BaseFaultType_Description *, const char*, const char*);

#ifndef soap_write__wsrfbf__BaseFaultType_Description
#define soap_write__wsrfbf__BaseFaultType_Description(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsrfbf__BaseFaultType_Description(soap, data), 0) || soap_put__wsrfbf__BaseFaultType_Description(soap, data, "wsrfbf:BaseFaultType-Description", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsrfbf__BaseFaultType_Description
#define soap_PUT__wsrfbf__BaseFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsrfbf__BaseFaultType_Description(soap, data), 0) || soap_put__wsrfbf__BaseFaultType_Description(soap, data, "wsrfbf:BaseFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsrfbf__BaseFaultType_Description
#define soap_PATCH__wsrfbf__BaseFaultType_Description(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsrfbf__BaseFaultType_Description(soap, data), 0) || soap_put__wsrfbf__BaseFaultType_Description(soap, data, "wsrfbf:BaseFaultType-Description", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsrfbf__BaseFaultType_Description
#define soap_POST_send__wsrfbf__BaseFaultType_Description(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsrfbf__BaseFaultType_Description(soap, data), 0) || soap_put__wsrfbf__BaseFaultType_Description(soap, data, "wsrfbf:BaseFaultType-Description", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsrfbf__BaseFaultType_Description * SOAP_FMAC4 soap_get__wsrfbf__BaseFaultType_Description(struct soap*, struct _wsrfbf__BaseFaultType_Description *, const char*, const char*);

#ifndef soap_read__wsrfbf__BaseFaultType_Description
#define soap_read__wsrfbf__BaseFaultType_Description(soap, data) ( ((data) ? (soap_default__wsrfbf__BaseFaultType_Description(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsrfbf__BaseFaultType_Description(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsrfbf__BaseFaultType_Description
#define soap_GET__wsrfbf__BaseFaultType_Description(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsrfbf__BaseFaultType_Description(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsrfbf__BaseFaultType_Description
#define soap_POST_recv__wsrfbf__BaseFaultType_Description(soap, data) ( soap_read__wsrfbf__BaseFaultType_Description(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsrfbf__BaseFaultType_ErrorCode_DEFINED
#define SOAP_TYPE__wsrfbf__BaseFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsrfbf__BaseFaultType_ErrorCode(struct soap*, struct _wsrfbf__BaseFaultType_ErrorCode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsrfbf__BaseFaultType_ErrorCode(struct soap*, const struct _wsrfbf__BaseFaultType_ErrorCode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsrfbf__BaseFaultType_ErrorCode(struct soap*, const char*, int, const struct _wsrfbf__BaseFaultType_ErrorCode *, const char*);
SOAP_FMAC3 struct _wsrfbf__BaseFaultType_ErrorCode * SOAP_FMAC4 soap_in__wsrfbf__BaseFaultType_ErrorCode(struct soap*, const char*, struct _wsrfbf__BaseFaultType_ErrorCode *, const char*);

SOAP_FMAC3 struct _wsrfbf__BaseFaultType_ErrorCode * SOAP_FMAC4 soap_new__wsrfbf__BaseFaultType_ErrorCode(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsrfbf__BaseFaultType_ErrorCode(struct soap*, const struct _wsrfbf__BaseFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_write__wsrfbf__BaseFaultType_ErrorCode
#define soap_write__wsrfbf__BaseFaultType_ErrorCode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsrfbf__BaseFaultType_ErrorCode(soap, data), 0) || soap_put__wsrfbf__BaseFaultType_ErrorCode(soap, data, "wsrfbf:BaseFaultType-ErrorCode", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsrfbf__BaseFaultType_ErrorCode
#define soap_PUT__wsrfbf__BaseFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsrfbf__BaseFaultType_ErrorCode(soap, data), 0) || soap_put__wsrfbf__BaseFaultType_ErrorCode(soap, data, "wsrfbf:BaseFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsrfbf__BaseFaultType_ErrorCode
#define soap_PATCH__wsrfbf__BaseFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsrfbf__BaseFaultType_ErrorCode(soap, data), 0) || soap_put__wsrfbf__BaseFaultType_ErrorCode(soap, data, "wsrfbf:BaseFaultType-ErrorCode", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsrfbf__BaseFaultType_ErrorCode
#define soap_POST_send__wsrfbf__BaseFaultType_ErrorCode(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsrfbf__BaseFaultType_ErrorCode(soap, data), 0) || soap_put__wsrfbf__BaseFaultType_ErrorCode(soap, data, "wsrfbf:BaseFaultType-ErrorCode", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsrfbf__BaseFaultType_ErrorCode * SOAP_FMAC4 soap_get__wsrfbf__BaseFaultType_ErrorCode(struct soap*, struct _wsrfbf__BaseFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_read__wsrfbf__BaseFaultType_ErrorCode
#define soap_read__wsrfbf__BaseFaultType_ErrorCode(soap, data) ( ((data) ? (soap_default__wsrfbf__BaseFaultType_ErrorCode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsrfbf__BaseFaultType_ErrorCode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsrfbf__BaseFaultType_ErrorCode
#define soap_GET__wsrfbf__BaseFaultType_ErrorCode(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsrfbf__BaseFaultType_ErrorCode(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsrfbf__BaseFaultType_ErrorCode
#define soap_POST_recv__wsrfbf__BaseFaultType_ErrorCode(soap, data) ( soap_read__wsrfbf__BaseFaultType_ErrorCode(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsrfbf__BaseFaultType_DEFINED
#define SOAP_TYPE_wsrfbf__BaseFaultType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsrfbf__BaseFaultType(struct soap*, struct wsrfbf__BaseFaultType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsrfbf__BaseFaultType(struct soap*, const struct wsrfbf__BaseFaultType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsrfbf__BaseFaultType(struct soap*, const char*, int, const struct wsrfbf__BaseFaultType *, const char*);
SOAP_FMAC3 struct wsrfbf__BaseFaultType * SOAP_FMAC4 soap_in_wsrfbf__BaseFaultType(struct soap*, const char*, struct wsrfbf__BaseFaultType *, const char*);

SOAP_FMAC3 struct wsrfbf__BaseFaultType * SOAP_FMAC4 soap_new_wsrfbf__BaseFaultType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsrfbf__BaseFaultType(struct soap*, const struct wsrfbf__BaseFaultType *, const char*, const char*);

#ifndef soap_write_wsrfbf__BaseFaultType
#define soap_write_wsrfbf__BaseFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsrfbf__BaseFaultType(soap, data), 0) || soap_put_wsrfbf__BaseFaultType(soap, data, "wsrfbf:BaseFaultType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsrfbf__BaseFaultType
#define soap_PUT_wsrfbf__BaseFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsrfbf__BaseFaultType(soap, data), 0) || soap_put_wsrfbf__BaseFaultType(soap, data, "wsrfbf:BaseFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsrfbf__BaseFaultType
#define soap_PATCH_wsrfbf__BaseFaultType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsrfbf__BaseFaultType(soap, data), 0) || soap_put_wsrfbf__BaseFaultType(soap, data, "wsrfbf:BaseFaultType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsrfbf__BaseFaultType
#define soap_POST_send_wsrfbf__BaseFaultType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsrfbf__BaseFaultType(soap, data), 0) || soap_put_wsrfbf__BaseFaultType(soap, data, "wsrfbf:BaseFaultType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsrfbf__BaseFaultType * SOAP_FMAC4 soap_get_wsrfbf__BaseFaultType(struct soap*, struct wsrfbf__BaseFaultType *, const char*, const char*);

#ifndef soap_read_wsrfbf__BaseFaultType
#define soap_read_wsrfbf__BaseFaultType(soap, data) ( ((data) ? (soap_default_wsrfbf__BaseFaultType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsrfbf__BaseFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsrfbf__BaseFaultType
#define soap_GET_wsrfbf__BaseFaultType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsrfbf__BaseFaultType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsrfbf__BaseFaultType
#define soap_POST_recv_wsrfbf__BaseFaultType(soap, data) ( soap_read_wsrfbf__BaseFaultType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__ResumeSubscriptionResponse_DEFINED
#define SOAP_TYPE__wsnt__ResumeSubscriptionResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__ResumeSubscriptionResponse(struct soap*, struct _wsnt__ResumeSubscriptionResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__ResumeSubscriptionResponse(struct soap*, const struct _wsnt__ResumeSubscriptionResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__ResumeSubscriptionResponse(struct soap*, const char*, int, const struct _wsnt__ResumeSubscriptionResponse *, const char*);
SOAP_FMAC3 struct _wsnt__ResumeSubscriptionResponse * SOAP_FMAC4 soap_in__wsnt__ResumeSubscriptionResponse(struct soap*, const char*, struct _wsnt__ResumeSubscriptionResponse *, const char*);

SOAP_FMAC3 struct _wsnt__ResumeSubscriptionResponse * SOAP_FMAC4 soap_new__wsnt__ResumeSubscriptionResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__ResumeSubscriptionResponse(struct soap*, const struct _wsnt__ResumeSubscriptionResponse *, const char*, const char*);

#ifndef soap_write__wsnt__ResumeSubscriptionResponse
#define soap_write__wsnt__ResumeSubscriptionResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__ResumeSubscriptionResponse(soap, data), 0) || soap_put__wsnt__ResumeSubscriptionResponse(soap, data, "wsnt:ResumeSubscriptionResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__ResumeSubscriptionResponse
#define soap_PUT__wsnt__ResumeSubscriptionResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__ResumeSubscriptionResponse(soap, data), 0) || soap_put__wsnt__ResumeSubscriptionResponse(soap, data, "wsnt:ResumeSubscriptionResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__ResumeSubscriptionResponse
#define soap_PATCH__wsnt__ResumeSubscriptionResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__ResumeSubscriptionResponse(soap, data), 0) || soap_put__wsnt__ResumeSubscriptionResponse(soap, data, "wsnt:ResumeSubscriptionResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__ResumeSubscriptionResponse
#define soap_POST_send__wsnt__ResumeSubscriptionResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__ResumeSubscriptionResponse(soap, data), 0) || soap_put__wsnt__ResumeSubscriptionResponse(soap, data, "wsnt:ResumeSubscriptionResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__ResumeSubscriptionResponse * SOAP_FMAC4 soap_get__wsnt__ResumeSubscriptionResponse(struct soap*, struct _wsnt__ResumeSubscriptionResponse *, const char*, const char*);

#ifndef soap_read__wsnt__ResumeSubscriptionResponse
#define soap_read__wsnt__ResumeSubscriptionResponse(soap, data) ( ((data) ? (soap_default__wsnt__ResumeSubscriptionResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__ResumeSubscriptionResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__ResumeSubscriptionResponse
#define soap_GET__wsnt__ResumeSubscriptionResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__ResumeSubscriptionResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__ResumeSubscriptionResponse
#define soap_POST_recv__wsnt__ResumeSubscriptionResponse(soap, data) ( soap_read__wsnt__ResumeSubscriptionResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__ResumeSubscription_DEFINED
#define SOAP_TYPE__wsnt__ResumeSubscription_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__ResumeSubscription(struct soap*, struct _wsnt__ResumeSubscription *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__ResumeSubscription(struct soap*, const struct _wsnt__ResumeSubscription *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__ResumeSubscription(struct soap*, const char*, int, const struct _wsnt__ResumeSubscription *, const char*);
SOAP_FMAC3 struct _wsnt__ResumeSubscription * SOAP_FMAC4 soap_in__wsnt__ResumeSubscription(struct soap*, const char*, struct _wsnt__ResumeSubscription *, const char*);

SOAP_FMAC3 struct _wsnt__ResumeSubscription * SOAP_FMAC4 soap_new__wsnt__ResumeSubscription(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__ResumeSubscription(struct soap*, const struct _wsnt__ResumeSubscription *, const char*, const char*);

#ifndef soap_write__wsnt__ResumeSubscription
#define soap_write__wsnt__ResumeSubscription(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__ResumeSubscription(soap, data), 0) || soap_put__wsnt__ResumeSubscription(soap, data, "wsnt:ResumeSubscription", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__ResumeSubscription
#define soap_PUT__wsnt__ResumeSubscription(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__ResumeSubscription(soap, data), 0) || soap_put__wsnt__ResumeSubscription(soap, data, "wsnt:ResumeSubscription", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__ResumeSubscription
#define soap_PATCH__wsnt__ResumeSubscription(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__ResumeSubscription(soap, data), 0) || soap_put__wsnt__ResumeSubscription(soap, data, "wsnt:ResumeSubscription", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__ResumeSubscription
#define soap_POST_send__wsnt__ResumeSubscription(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__ResumeSubscription(soap, data), 0) || soap_put__wsnt__ResumeSubscription(soap, data, "wsnt:ResumeSubscription", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__ResumeSubscription * SOAP_FMAC4 soap_get__wsnt__ResumeSubscription(struct soap*, struct _wsnt__ResumeSubscription *, const char*, const char*);

#ifndef soap_read__wsnt__ResumeSubscription
#define soap_read__wsnt__ResumeSubscription(soap, data) ( ((data) ? (soap_default__wsnt__ResumeSubscription(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__ResumeSubscription(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__ResumeSubscription
#define soap_GET__wsnt__ResumeSubscription(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__ResumeSubscription(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__ResumeSubscription
#define soap_POST_recv__wsnt__ResumeSubscription(soap, data) ( soap_read__wsnt__ResumeSubscription(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__PauseSubscriptionResponse_DEFINED
#define SOAP_TYPE__wsnt__PauseSubscriptionResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__PauseSubscriptionResponse(struct soap*, struct _wsnt__PauseSubscriptionResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__PauseSubscriptionResponse(struct soap*, const struct _wsnt__PauseSubscriptionResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__PauseSubscriptionResponse(struct soap*, const char*, int, const struct _wsnt__PauseSubscriptionResponse *, const char*);
SOAP_FMAC3 struct _wsnt__PauseSubscriptionResponse * SOAP_FMAC4 soap_in__wsnt__PauseSubscriptionResponse(struct soap*, const char*, struct _wsnt__PauseSubscriptionResponse *, const char*);

SOAP_FMAC3 struct _wsnt__PauseSubscriptionResponse * SOAP_FMAC4 soap_new__wsnt__PauseSubscriptionResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__PauseSubscriptionResponse(struct soap*, const struct _wsnt__PauseSubscriptionResponse *, const char*, const char*);

#ifndef soap_write__wsnt__PauseSubscriptionResponse
#define soap_write__wsnt__PauseSubscriptionResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__PauseSubscriptionResponse(soap, data), 0) || soap_put__wsnt__PauseSubscriptionResponse(soap, data, "wsnt:PauseSubscriptionResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__PauseSubscriptionResponse
#define soap_PUT__wsnt__PauseSubscriptionResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__PauseSubscriptionResponse(soap, data), 0) || soap_put__wsnt__PauseSubscriptionResponse(soap, data, "wsnt:PauseSubscriptionResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__PauseSubscriptionResponse
#define soap_PATCH__wsnt__PauseSubscriptionResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__PauseSubscriptionResponse(soap, data), 0) || soap_put__wsnt__PauseSubscriptionResponse(soap, data, "wsnt:PauseSubscriptionResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__PauseSubscriptionResponse
#define soap_POST_send__wsnt__PauseSubscriptionResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__PauseSubscriptionResponse(soap, data), 0) || soap_put__wsnt__PauseSubscriptionResponse(soap, data, "wsnt:PauseSubscriptionResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__PauseSubscriptionResponse * SOAP_FMAC4 soap_get__wsnt__PauseSubscriptionResponse(struct soap*, struct _wsnt__PauseSubscriptionResponse *, const char*, const char*);

#ifndef soap_read__wsnt__PauseSubscriptionResponse
#define soap_read__wsnt__PauseSubscriptionResponse(soap, data) ( ((data) ? (soap_default__wsnt__PauseSubscriptionResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__PauseSubscriptionResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__PauseSubscriptionResponse
#define soap_GET__wsnt__PauseSubscriptionResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__PauseSubscriptionResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__PauseSubscriptionResponse
#define soap_POST_recv__wsnt__PauseSubscriptionResponse(soap, data) ( soap_read__wsnt__PauseSubscriptionResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__PauseSubscription_DEFINED
#define SOAP_TYPE__wsnt__PauseSubscription_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__PauseSubscription(struct soap*, struct _wsnt__PauseSubscription *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__PauseSubscription(struct soap*, const struct _wsnt__PauseSubscription *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__PauseSubscription(struct soap*, const char*, int, const struct _wsnt__PauseSubscription *, const char*);
SOAP_FMAC3 struct _wsnt__PauseSubscription * SOAP_FMAC4 soap_in__wsnt__PauseSubscription(struct soap*, const char*, struct _wsnt__PauseSubscription *, const char*);

SOAP_FMAC3 struct _wsnt__PauseSubscription * SOAP_FMAC4 soap_new__wsnt__PauseSubscription(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__PauseSubscription(struct soap*, const struct _wsnt__PauseSubscription *, const char*, const char*);

#ifndef soap_write__wsnt__PauseSubscription
#define soap_write__wsnt__PauseSubscription(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__PauseSubscription(soap, data), 0) || soap_put__wsnt__PauseSubscription(soap, data, "wsnt:PauseSubscription", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__PauseSubscription
#define soap_PUT__wsnt__PauseSubscription(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__PauseSubscription(soap, data), 0) || soap_put__wsnt__PauseSubscription(soap, data, "wsnt:PauseSubscription", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__PauseSubscription
#define soap_PATCH__wsnt__PauseSubscription(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__PauseSubscription(soap, data), 0) || soap_put__wsnt__PauseSubscription(soap, data, "wsnt:PauseSubscription", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__PauseSubscription
#define soap_POST_send__wsnt__PauseSubscription(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__PauseSubscription(soap, data), 0) || soap_put__wsnt__PauseSubscription(soap, data, "wsnt:PauseSubscription", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__PauseSubscription * SOAP_FMAC4 soap_get__wsnt__PauseSubscription(struct soap*, struct _wsnt__PauseSubscription *, const char*, const char*);

#ifndef soap_read__wsnt__PauseSubscription
#define soap_read__wsnt__PauseSubscription(soap, data) ( ((data) ? (soap_default__wsnt__PauseSubscription(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__PauseSubscription(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__PauseSubscription
#define soap_GET__wsnt__PauseSubscription(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__PauseSubscription(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__PauseSubscription
#define soap_POST_recv__wsnt__PauseSubscription(soap, data) ( soap_read__wsnt__PauseSubscription(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__UnsubscribeResponse_DEFINED
#define SOAP_TYPE__wsnt__UnsubscribeResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__UnsubscribeResponse(struct soap*, struct _wsnt__UnsubscribeResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__UnsubscribeResponse(struct soap*, const struct _wsnt__UnsubscribeResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UnsubscribeResponse(struct soap*, const char*, int, const struct _wsnt__UnsubscribeResponse *, const char*);
SOAP_FMAC3 struct _wsnt__UnsubscribeResponse * SOAP_FMAC4 soap_in__wsnt__UnsubscribeResponse(struct soap*, const char*, struct _wsnt__UnsubscribeResponse *, const char*);

SOAP_FMAC3 struct _wsnt__UnsubscribeResponse * SOAP_FMAC4 soap_new__wsnt__UnsubscribeResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__UnsubscribeResponse(struct soap*, const struct _wsnt__UnsubscribeResponse *, const char*, const char*);

#ifndef soap_write__wsnt__UnsubscribeResponse
#define soap_write__wsnt__UnsubscribeResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__UnsubscribeResponse(soap, data), 0) || soap_put__wsnt__UnsubscribeResponse(soap, data, "wsnt:UnsubscribeResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__UnsubscribeResponse
#define soap_PUT__wsnt__UnsubscribeResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnsubscribeResponse(soap, data), 0) || soap_put__wsnt__UnsubscribeResponse(soap, data, "wsnt:UnsubscribeResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__UnsubscribeResponse
#define soap_PATCH__wsnt__UnsubscribeResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnsubscribeResponse(soap, data), 0) || soap_put__wsnt__UnsubscribeResponse(soap, data, "wsnt:UnsubscribeResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__UnsubscribeResponse
#define soap_POST_send__wsnt__UnsubscribeResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UnsubscribeResponse(soap, data), 0) || soap_put__wsnt__UnsubscribeResponse(soap, data, "wsnt:UnsubscribeResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__UnsubscribeResponse * SOAP_FMAC4 soap_get__wsnt__UnsubscribeResponse(struct soap*, struct _wsnt__UnsubscribeResponse *, const char*, const char*);

#ifndef soap_read__wsnt__UnsubscribeResponse
#define soap_read__wsnt__UnsubscribeResponse(soap, data) ( ((data) ? (soap_default__wsnt__UnsubscribeResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UnsubscribeResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__UnsubscribeResponse
#define soap_GET__wsnt__UnsubscribeResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__UnsubscribeResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__UnsubscribeResponse
#define soap_POST_recv__wsnt__UnsubscribeResponse(soap, data) ( soap_read__wsnt__UnsubscribeResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__Unsubscribe_DEFINED
#define SOAP_TYPE__wsnt__Unsubscribe_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__Unsubscribe(struct soap*, struct _wsnt__Unsubscribe *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__Unsubscribe(struct soap*, const struct _wsnt__Unsubscribe *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__Unsubscribe(struct soap*, const char*, int, const struct _wsnt__Unsubscribe *, const char*);
SOAP_FMAC3 struct _wsnt__Unsubscribe * SOAP_FMAC4 soap_in__wsnt__Unsubscribe(struct soap*, const char*, struct _wsnt__Unsubscribe *, const char*);

SOAP_FMAC3 struct _wsnt__Unsubscribe * SOAP_FMAC4 soap_new__wsnt__Unsubscribe(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__Unsubscribe(struct soap*, const struct _wsnt__Unsubscribe *, const char*, const char*);

#ifndef soap_write__wsnt__Unsubscribe
#define soap_write__wsnt__Unsubscribe(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__Unsubscribe(soap, data), 0) || soap_put__wsnt__Unsubscribe(soap, data, "wsnt:Unsubscribe", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__Unsubscribe
#define soap_PUT__wsnt__Unsubscribe(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__Unsubscribe(soap, data), 0) || soap_put__wsnt__Unsubscribe(soap, data, "wsnt:Unsubscribe", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__Unsubscribe
#define soap_PATCH__wsnt__Unsubscribe(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__Unsubscribe(soap, data), 0) || soap_put__wsnt__Unsubscribe(soap, data, "wsnt:Unsubscribe", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__Unsubscribe
#define soap_POST_send__wsnt__Unsubscribe(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__Unsubscribe(soap, data), 0) || soap_put__wsnt__Unsubscribe(soap, data, "wsnt:Unsubscribe", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__Unsubscribe * SOAP_FMAC4 soap_get__wsnt__Unsubscribe(struct soap*, struct _wsnt__Unsubscribe *, const char*, const char*);

#ifndef soap_read__wsnt__Unsubscribe
#define soap_read__wsnt__Unsubscribe(soap, data) ( ((data) ? (soap_default__wsnt__Unsubscribe(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__Unsubscribe(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__Unsubscribe
#define soap_GET__wsnt__Unsubscribe(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__Unsubscribe(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__Unsubscribe
#define soap_POST_recv__wsnt__Unsubscribe(soap, data) ( soap_read__wsnt__Unsubscribe(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__RenewResponse_DEFINED
#define SOAP_TYPE__wsnt__RenewResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__RenewResponse(struct soap*, struct _wsnt__RenewResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__RenewResponse(struct soap*, const struct _wsnt__RenewResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__RenewResponse(struct soap*, const char*, int, const struct _wsnt__RenewResponse *, const char*);
SOAP_FMAC3 struct _wsnt__RenewResponse * SOAP_FMAC4 soap_in__wsnt__RenewResponse(struct soap*, const char*, struct _wsnt__RenewResponse *, const char*);

SOAP_FMAC3 struct _wsnt__RenewResponse * SOAP_FMAC4 soap_new__wsnt__RenewResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__RenewResponse(struct soap*, const struct _wsnt__RenewResponse *, const char*, const char*);

#ifndef soap_write__wsnt__RenewResponse
#define soap_write__wsnt__RenewResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__RenewResponse(soap, data), 0) || soap_put__wsnt__RenewResponse(soap, data, "wsnt:RenewResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__RenewResponse
#define soap_PUT__wsnt__RenewResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__RenewResponse(soap, data), 0) || soap_put__wsnt__RenewResponse(soap, data, "wsnt:RenewResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__RenewResponse
#define soap_PATCH__wsnt__RenewResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__RenewResponse(soap, data), 0) || soap_put__wsnt__RenewResponse(soap, data, "wsnt:RenewResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__RenewResponse
#define soap_POST_send__wsnt__RenewResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__RenewResponse(soap, data), 0) || soap_put__wsnt__RenewResponse(soap, data, "wsnt:RenewResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__RenewResponse * SOAP_FMAC4 soap_get__wsnt__RenewResponse(struct soap*, struct _wsnt__RenewResponse *, const char*, const char*);

#ifndef soap_read__wsnt__RenewResponse
#define soap_read__wsnt__RenewResponse(soap, data) ( ((data) ? (soap_default__wsnt__RenewResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__RenewResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__RenewResponse
#define soap_GET__wsnt__RenewResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__RenewResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__RenewResponse
#define soap_POST_recv__wsnt__RenewResponse(soap, data) ( soap_read__wsnt__RenewResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__Renew_DEFINED
#define SOAP_TYPE__wsnt__Renew_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__Renew(struct soap*, struct _wsnt__Renew *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__Renew(struct soap*, const struct _wsnt__Renew *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__Renew(struct soap*, const char*, int, const struct _wsnt__Renew *, const char*);
SOAP_FMAC3 struct _wsnt__Renew * SOAP_FMAC4 soap_in__wsnt__Renew(struct soap*, const char*, struct _wsnt__Renew *, const char*);

SOAP_FMAC3 struct _wsnt__Renew * SOAP_FMAC4 soap_new__wsnt__Renew(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__Renew(struct soap*, const struct _wsnt__Renew *, const char*, const char*);

#ifndef soap_write__wsnt__Renew
#define soap_write__wsnt__Renew(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__Renew(soap, data), 0) || soap_put__wsnt__Renew(soap, data, "wsnt:Renew", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__Renew
#define soap_PUT__wsnt__Renew(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__Renew(soap, data), 0) || soap_put__wsnt__Renew(soap, data, "wsnt:Renew", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__Renew
#define soap_PATCH__wsnt__Renew(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__Renew(soap, data), 0) || soap_put__wsnt__Renew(soap, data, "wsnt:Renew", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__Renew
#define soap_POST_send__wsnt__Renew(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__Renew(soap, data), 0) || soap_put__wsnt__Renew(soap, data, "wsnt:Renew", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__Renew * SOAP_FMAC4 soap_get__wsnt__Renew(struct soap*, struct _wsnt__Renew *, const char*, const char*);

#ifndef soap_read__wsnt__Renew
#define soap_read__wsnt__Renew(soap, data) ( ((data) ? (soap_default__wsnt__Renew(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__Renew(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__Renew
#define soap_GET__wsnt__Renew(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__Renew(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__Renew
#define soap_POST_recv__wsnt__Renew(soap, data) ( soap_read__wsnt__Renew(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__CreatePullPointResponse_DEFINED
#define SOAP_TYPE__wsnt__CreatePullPointResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__CreatePullPointResponse(struct soap*, struct _wsnt__CreatePullPointResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__CreatePullPointResponse(struct soap*, const struct _wsnt__CreatePullPointResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__CreatePullPointResponse(struct soap*, const char*, int, const struct _wsnt__CreatePullPointResponse *, const char*);
SOAP_FMAC3 struct _wsnt__CreatePullPointResponse * SOAP_FMAC4 soap_in__wsnt__CreatePullPointResponse(struct soap*, const char*, struct _wsnt__CreatePullPointResponse *, const char*);

SOAP_FMAC3 struct _wsnt__CreatePullPointResponse * SOAP_FMAC4 soap_new__wsnt__CreatePullPointResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__CreatePullPointResponse(struct soap*, const struct _wsnt__CreatePullPointResponse *, const char*, const char*);

#ifndef soap_write__wsnt__CreatePullPointResponse
#define soap_write__wsnt__CreatePullPointResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__CreatePullPointResponse(soap, data), 0) || soap_put__wsnt__CreatePullPointResponse(soap, data, "wsnt:CreatePullPointResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__CreatePullPointResponse
#define soap_PUT__wsnt__CreatePullPointResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__CreatePullPointResponse(soap, data), 0) || soap_put__wsnt__CreatePullPointResponse(soap, data, "wsnt:CreatePullPointResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__CreatePullPointResponse
#define soap_PATCH__wsnt__CreatePullPointResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__CreatePullPointResponse(soap, data), 0) || soap_put__wsnt__CreatePullPointResponse(soap, data, "wsnt:CreatePullPointResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__CreatePullPointResponse
#define soap_POST_send__wsnt__CreatePullPointResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__CreatePullPointResponse(soap, data), 0) || soap_put__wsnt__CreatePullPointResponse(soap, data, "wsnt:CreatePullPointResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__CreatePullPointResponse * SOAP_FMAC4 soap_get__wsnt__CreatePullPointResponse(struct soap*, struct _wsnt__CreatePullPointResponse *, const char*, const char*);

#ifndef soap_read__wsnt__CreatePullPointResponse
#define soap_read__wsnt__CreatePullPointResponse(soap, data) ( ((data) ? (soap_default__wsnt__CreatePullPointResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__CreatePullPointResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__CreatePullPointResponse
#define soap_GET__wsnt__CreatePullPointResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__CreatePullPointResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__CreatePullPointResponse
#define soap_POST_recv__wsnt__CreatePullPointResponse(soap, data) ( soap_read__wsnt__CreatePullPointResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__CreatePullPoint_DEFINED
#define SOAP_TYPE__wsnt__CreatePullPoint_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__CreatePullPoint(struct soap*, struct _wsnt__CreatePullPoint *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__CreatePullPoint(struct soap*, const struct _wsnt__CreatePullPoint *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__CreatePullPoint(struct soap*, const char*, int, const struct _wsnt__CreatePullPoint *, const char*);
SOAP_FMAC3 struct _wsnt__CreatePullPoint * SOAP_FMAC4 soap_in__wsnt__CreatePullPoint(struct soap*, const char*, struct _wsnt__CreatePullPoint *, const char*);

SOAP_FMAC3 struct _wsnt__CreatePullPoint * SOAP_FMAC4 soap_new__wsnt__CreatePullPoint(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__CreatePullPoint(struct soap*, const struct _wsnt__CreatePullPoint *, const char*, const char*);

#ifndef soap_write__wsnt__CreatePullPoint
#define soap_write__wsnt__CreatePullPoint(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__CreatePullPoint(soap, data), 0) || soap_put__wsnt__CreatePullPoint(soap, data, "wsnt:CreatePullPoint", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__CreatePullPoint
#define soap_PUT__wsnt__CreatePullPoint(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__CreatePullPoint(soap, data), 0) || soap_put__wsnt__CreatePullPoint(soap, data, "wsnt:CreatePullPoint", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__CreatePullPoint
#define soap_PATCH__wsnt__CreatePullPoint(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__CreatePullPoint(soap, data), 0) || soap_put__wsnt__CreatePullPoint(soap, data, "wsnt:CreatePullPoint", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__CreatePullPoint
#define soap_POST_send__wsnt__CreatePullPoint(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__CreatePullPoint(soap, data), 0) || soap_put__wsnt__CreatePullPoint(soap, data, "wsnt:CreatePullPoint", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__CreatePullPoint * SOAP_FMAC4 soap_get__wsnt__CreatePullPoint(struct soap*, struct _wsnt__CreatePullPoint *, const char*, const char*);

#ifndef soap_read__wsnt__CreatePullPoint
#define soap_read__wsnt__CreatePullPoint(soap, data) ( ((data) ? (soap_default__wsnt__CreatePullPoint(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__CreatePullPoint(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__CreatePullPoint
#define soap_GET__wsnt__CreatePullPoint(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__CreatePullPoint(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__CreatePullPoint
#define soap_POST_recv__wsnt__CreatePullPoint(soap, data) ( soap_read__wsnt__CreatePullPoint(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__DestroyPullPointResponse_DEFINED
#define SOAP_TYPE__wsnt__DestroyPullPointResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__DestroyPullPointResponse(struct soap*, struct _wsnt__DestroyPullPointResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__DestroyPullPointResponse(struct soap*, const struct _wsnt__DestroyPullPointResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__DestroyPullPointResponse(struct soap*, const char*, int, const struct _wsnt__DestroyPullPointResponse *, const char*);
SOAP_FMAC3 struct _wsnt__DestroyPullPointResponse * SOAP_FMAC4 soap_in__wsnt__DestroyPullPointResponse(struct soap*, const char*, struct _wsnt__DestroyPullPointResponse *, const char*);

SOAP_FMAC3 struct _wsnt__DestroyPullPointResponse * SOAP_FMAC4 soap_new__wsnt__DestroyPullPointResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__DestroyPullPointResponse(struct soap*, const struct _wsnt__DestroyPullPointResponse *, const char*, const char*);

#ifndef soap_write__wsnt__DestroyPullPointResponse
#define soap_write__wsnt__DestroyPullPointResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__DestroyPullPointResponse(soap, data), 0) || soap_put__wsnt__DestroyPullPointResponse(soap, data, "wsnt:DestroyPullPointResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__DestroyPullPointResponse
#define soap_PUT__wsnt__DestroyPullPointResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__DestroyPullPointResponse(soap, data), 0) || soap_put__wsnt__DestroyPullPointResponse(soap, data, "wsnt:DestroyPullPointResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__DestroyPullPointResponse
#define soap_PATCH__wsnt__DestroyPullPointResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__DestroyPullPointResponse(soap, data), 0) || soap_put__wsnt__DestroyPullPointResponse(soap, data, "wsnt:DestroyPullPointResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__DestroyPullPointResponse
#define soap_POST_send__wsnt__DestroyPullPointResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__DestroyPullPointResponse(soap, data), 0) || soap_put__wsnt__DestroyPullPointResponse(soap, data, "wsnt:DestroyPullPointResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__DestroyPullPointResponse * SOAP_FMAC4 soap_get__wsnt__DestroyPullPointResponse(struct soap*, struct _wsnt__DestroyPullPointResponse *, const char*, const char*);

#ifndef soap_read__wsnt__DestroyPullPointResponse
#define soap_read__wsnt__DestroyPullPointResponse(soap, data) ( ((data) ? (soap_default__wsnt__DestroyPullPointResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__DestroyPullPointResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__DestroyPullPointResponse
#define soap_GET__wsnt__DestroyPullPointResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__DestroyPullPointResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__DestroyPullPointResponse
#define soap_POST_recv__wsnt__DestroyPullPointResponse(soap, data) ( soap_read__wsnt__DestroyPullPointResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__DestroyPullPoint_DEFINED
#define SOAP_TYPE__wsnt__DestroyPullPoint_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__DestroyPullPoint(struct soap*, struct _wsnt__DestroyPullPoint *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__DestroyPullPoint(struct soap*, const struct _wsnt__DestroyPullPoint *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__DestroyPullPoint(struct soap*, const char*, int, const struct _wsnt__DestroyPullPoint *, const char*);
SOAP_FMAC3 struct _wsnt__DestroyPullPoint * SOAP_FMAC4 soap_in__wsnt__DestroyPullPoint(struct soap*, const char*, struct _wsnt__DestroyPullPoint *, const char*);

SOAP_FMAC3 struct _wsnt__DestroyPullPoint * SOAP_FMAC4 soap_new__wsnt__DestroyPullPoint(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__DestroyPullPoint(struct soap*, const struct _wsnt__DestroyPullPoint *, const char*, const char*);

#ifndef soap_write__wsnt__DestroyPullPoint
#define soap_write__wsnt__DestroyPullPoint(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__DestroyPullPoint(soap, data), 0) || soap_put__wsnt__DestroyPullPoint(soap, data, "wsnt:DestroyPullPoint", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__DestroyPullPoint
#define soap_PUT__wsnt__DestroyPullPoint(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__DestroyPullPoint(soap, data), 0) || soap_put__wsnt__DestroyPullPoint(soap, data, "wsnt:DestroyPullPoint", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__DestroyPullPoint
#define soap_PATCH__wsnt__DestroyPullPoint(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__DestroyPullPoint(soap, data), 0) || soap_put__wsnt__DestroyPullPoint(soap, data, "wsnt:DestroyPullPoint", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__DestroyPullPoint
#define soap_POST_send__wsnt__DestroyPullPoint(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__DestroyPullPoint(soap, data), 0) || soap_put__wsnt__DestroyPullPoint(soap, data, "wsnt:DestroyPullPoint", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__DestroyPullPoint * SOAP_FMAC4 soap_get__wsnt__DestroyPullPoint(struct soap*, struct _wsnt__DestroyPullPoint *, const char*, const char*);

#ifndef soap_read__wsnt__DestroyPullPoint
#define soap_read__wsnt__DestroyPullPoint(soap, data) ( ((data) ? (soap_default__wsnt__DestroyPullPoint(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__DestroyPullPoint(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__DestroyPullPoint
#define soap_GET__wsnt__DestroyPullPoint(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__DestroyPullPoint(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__DestroyPullPoint
#define soap_POST_recv__wsnt__DestroyPullPoint(soap, data) ( soap_read__wsnt__DestroyPullPoint(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__GetMessagesResponse_DEFINED
#define SOAP_TYPE__wsnt__GetMessagesResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__GetMessagesResponse(struct soap*, struct _wsnt__GetMessagesResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__GetMessagesResponse(struct soap*, const struct _wsnt__GetMessagesResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__GetMessagesResponse(struct soap*, const char*, int, const struct _wsnt__GetMessagesResponse *, const char*);
SOAP_FMAC3 struct _wsnt__GetMessagesResponse * SOAP_FMAC4 soap_in__wsnt__GetMessagesResponse(struct soap*, const char*, struct _wsnt__GetMessagesResponse *, const char*);

SOAP_FMAC3 struct _wsnt__GetMessagesResponse * SOAP_FMAC4 soap_new__wsnt__GetMessagesResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__GetMessagesResponse(struct soap*, const struct _wsnt__GetMessagesResponse *, const char*, const char*);

#ifndef soap_write__wsnt__GetMessagesResponse
#define soap_write__wsnt__GetMessagesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__GetMessagesResponse(soap, data), 0) || soap_put__wsnt__GetMessagesResponse(soap, data, "wsnt:GetMessagesResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__GetMessagesResponse
#define soap_PUT__wsnt__GetMessagesResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__GetMessagesResponse(soap, data), 0) || soap_put__wsnt__GetMessagesResponse(soap, data, "wsnt:GetMessagesResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__GetMessagesResponse
#define soap_PATCH__wsnt__GetMessagesResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__GetMessagesResponse(soap, data), 0) || soap_put__wsnt__GetMessagesResponse(soap, data, "wsnt:GetMessagesResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__GetMessagesResponse
#define soap_POST_send__wsnt__GetMessagesResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__GetMessagesResponse(soap, data), 0) || soap_put__wsnt__GetMessagesResponse(soap, data, "wsnt:GetMessagesResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__GetMessagesResponse * SOAP_FMAC4 soap_get__wsnt__GetMessagesResponse(struct soap*, struct _wsnt__GetMessagesResponse *, const char*, const char*);

#ifndef soap_read__wsnt__GetMessagesResponse
#define soap_read__wsnt__GetMessagesResponse(soap, data) ( ((data) ? (soap_default__wsnt__GetMessagesResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__GetMessagesResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__GetMessagesResponse
#define soap_GET__wsnt__GetMessagesResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__GetMessagesResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__GetMessagesResponse
#define soap_POST_recv__wsnt__GetMessagesResponse(soap, data) ( soap_read__wsnt__GetMessagesResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__GetMessages_DEFINED
#define SOAP_TYPE__wsnt__GetMessages_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__GetMessages(struct soap*, struct _wsnt__GetMessages *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__GetMessages(struct soap*, const struct _wsnt__GetMessages *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__GetMessages(struct soap*, const char*, int, const struct _wsnt__GetMessages *, const char*);
SOAP_FMAC3 struct _wsnt__GetMessages * SOAP_FMAC4 soap_in__wsnt__GetMessages(struct soap*, const char*, struct _wsnt__GetMessages *, const char*);

SOAP_FMAC3 struct _wsnt__GetMessages * SOAP_FMAC4 soap_new__wsnt__GetMessages(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__GetMessages(struct soap*, const struct _wsnt__GetMessages *, const char*, const char*);

#ifndef soap_write__wsnt__GetMessages
#define soap_write__wsnt__GetMessages(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__GetMessages(soap, data), 0) || soap_put__wsnt__GetMessages(soap, data, "wsnt:GetMessages", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__GetMessages
#define soap_PUT__wsnt__GetMessages(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__GetMessages(soap, data), 0) || soap_put__wsnt__GetMessages(soap, data, "wsnt:GetMessages", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__GetMessages
#define soap_PATCH__wsnt__GetMessages(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__GetMessages(soap, data), 0) || soap_put__wsnt__GetMessages(soap, data, "wsnt:GetMessages", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__GetMessages
#define soap_POST_send__wsnt__GetMessages(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__GetMessages(soap, data), 0) || soap_put__wsnt__GetMessages(soap, data, "wsnt:GetMessages", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__GetMessages * SOAP_FMAC4 soap_get__wsnt__GetMessages(struct soap*, struct _wsnt__GetMessages *, const char*, const char*);

#ifndef soap_read__wsnt__GetMessages
#define soap_read__wsnt__GetMessages(soap, data) ( ((data) ? (soap_default__wsnt__GetMessages(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__GetMessages(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__GetMessages
#define soap_GET__wsnt__GetMessages(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__GetMessages(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__GetMessages
#define soap_POST_recv__wsnt__GetMessages(soap, data) ( soap_read__wsnt__GetMessages(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__GetCurrentMessageResponse_DEFINED
#define SOAP_TYPE__wsnt__GetCurrentMessageResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__GetCurrentMessageResponse(struct soap*, struct _wsnt__GetCurrentMessageResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__GetCurrentMessageResponse(struct soap*, const struct _wsnt__GetCurrentMessageResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__GetCurrentMessageResponse(struct soap*, const char*, int, const struct _wsnt__GetCurrentMessageResponse *, const char*);
SOAP_FMAC3 struct _wsnt__GetCurrentMessageResponse * SOAP_FMAC4 soap_in__wsnt__GetCurrentMessageResponse(struct soap*, const char*, struct _wsnt__GetCurrentMessageResponse *, const char*);

SOAP_FMAC3 struct _wsnt__GetCurrentMessageResponse * SOAP_FMAC4 soap_new__wsnt__GetCurrentMessageResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__GetCurrentMessageResponse(struct soap*, const struct _wsnt__GetCurrentMessageResponse *, const char*, const char*);

#ifndef soap_write__wsnt__GetCurrentMessageResponse
#define soap_write__wsnt__GetCurrentMessageResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__GetCurrentMessageResponse(soap, data), 0) || soap_put__wsnt__GetCurrentMessageResponse(soap, data, "wsnt:GetCurrentMessageResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__GetCurrentMessageResponse
#define soap_PUT__wsnt__GetCurrentMessageResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__GetCurrentMessageResponse(soap, data), 0) || soap_put__wsnt__GetCurrentMessageResponse(soap, data, "wsnt:GetCurrentMessageResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__GetCurrentMessageResponse
#define soap_PATCH__wsnt__GetCurrentMessageResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__GetCurrentMessageResponse(soap, data), 0) || soap_put__wsnt__GetCurrentMessageResponse(soap, data, "wsnt:GetCurrentMessageResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__GetCurrentMessageResponse
#define soap_POST_send__wsnt__GetCurrentMessageResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__GetCurrentMessageResponse(soap, data), 0) || soap_put__wsnt__GetCurrentMessageResponse(soap, data, "wsnt:GetCurrentMessageResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__GetCurrentMessageResponse * SOAP_FMAC4 soap_get__wsnt__GetCurrentMessageResponse(struct soap*, struct _wsnt__GetCurrentMessageResponse *, const char*, const char*);

#ifndef soap_read__wsnt__GetCurrentMessageResponse
#define soap_read__wsnt__GetCurrentMessageResponse(soap, data) ( ((data) ? (soap_default__wsnt__GetCurrentMessageResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__GetCurrentMessageResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__GetCurrentMessageResponse
#define soap_GET__wsnt__GetCurrentMessageResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__GetCurrentMessageResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__GetCurrentMessageResponse
#define soap_POST_recv__wsnt__GetCurrentMessageResponse(soap, data) ( soap_read__wsnt__GetCurrentMessageResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__GetCurrentMessage_DEFINED
#define SOAP_TYPE__wsnt__GetCurrentMessage_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__GetCurrentMessage(struct soap*, struct _wsnt__GetCurrentMessage *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__GetCurrentMessage(struct soap*, const struct _wsnt__GetCurrentMessage *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__GetCurrentMessage(struct soap*, const char*, int, const struct _wsnt__GetCurrentMessage *, const char*);
SOAP_FMAC3 struct _wsnt__GetCurrentMessage * SOAP_FMAC4 soap_in__wsnt__GetCurrentMessage(struct soap*, const char*, struct _wsnt__GetCurrentMessage *, const char*);

SOAP_FMAC3 struct _wsnt__GetCurrentMessage * SOAP_FMAC4 soap_new__wsnt__GetCurrentMessage(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__GetCurrentMessage(struct soap*, const struct _wsnt__GetCurrentMessage *, const char*, const char*);

#ifndef soap_write__wsnt__GetCurrentMessage
#define soap_write__wsnt__GetCurrentMessage(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__GetCurrentMessage(soap, data), 0) || soap_put__wsnt__GetCurrentMessage(soap, data, "wsnt:GetCurrentMessage", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__GetCurrentMessage
#define soap_PUT__wsnt__GetCurrentMessage(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__GetCurrentMessage(soap, data), 0) || soap_put__wsnt__GetCurrentMessage(soap, data, "wsnt:GetCurrentMessage", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__GetCurrentMessage
#define soap_PATCH__wsnt__GetCurrentMessage(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__GetCurrentMessage(soap, data), 0) || soap_put__wsnt__GetCurrentMessage(soap, data, "wsnt:GetCurrentMessage", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__GetCurrentMessage
#define soap_POST_send__wsnt__GetCurrentMessage(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__GetCurrentMessage(soap, data), 0) || soap_put__wsnt__GetCurrentMessage(soap, data, "wsnt:GetCurrentMessage", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__GetCurrentMessage * SOAP_FMAC4 soap_get__wsnt__GetCurrentMessage(struct soap*, struct _wsnt__GetCurrentMessage *, const char*, const char*);

#ifndef soap_read__wsnt__GetCurrentMessage
#define soap_read__wsnt__GetCurrentMessage(soap, data) ( ((data) ? (soap_default__wsnt__GetCurrentMessage(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__GetCurrentMessage(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__GetCurrentMessage
#define soap_GET__wsnt__GetCurrentMessage(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__GetCurrentMessage(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__GetCurrentMessage
#define soap_POST_recv__wsnt__GetCurrentMessage(soap, data) ( soap_read__wsnt__GetCurrentMessage(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__SubscribeResponse_DEFINED
#define SOAP_TYPE__wsnt__SubscribeResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__SubscribeResponse(struct soap*, struct _wsnt__SubscribeResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__SubscribeResponse(struct soap*, const struct _wsnt__SubscribeResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__SubscribeResponse(struct soap*, const char*, int, const struct _wsnt__SubscribeResponse *, const char*);
SOAP_FMAC3 struct _wsnt__SubscribeResponse * SOAP_FMAC4 soap_in__wsnt__SubscribeResponse(struct soap*, const char*, struct _wsnt__SubscribeResponse *, const char*);

SOAP_FMAC3 struct _wsnt__SubscribeResponse * SOAP_FMAC4 soap_new__wsnt__SubscribeResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__SubscribeResponse(struct soap*, const struct _wsnt__SubscribeResponse *, const char*, const char*);

#ifndef soap_write__wsnt__SubscribeResponse
#define soap_write__wsnt__SubscribeResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__SubscribeResponse(soap, data), 0) || soap_put__wsnt__SubscribeResponse(soap, data, "wsnt:SubscribeResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__SubscribeResponse
#define soap_PUT__wsnt__SubscribeResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__SubscribeResponse(soap, data), 0) || soap_put__wsnt__SubscribeResponse(soap, data, "wsnt:SubscribeResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__SubscribeResponse
#define soap_PATCH__wsnt__SubscribeResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__SubscribeResponse(soap, data), 0) || soap_put__wsnt__SubscribeResponse(soap, data, "wsnt:SubscribeResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__SubscribeResponse
#define soap_POST_send__wsnt__SubscribeResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__SubscribeResponse(soap, data), 0) || soap_put__wsnt__SubscribeResponse(soap, data, "wsnt:SubscribeResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__SubscribeResponse * SOAP_FMAC4 soap_get__wsnt__SubscribeResponse(struct soap*, struct _wsnt__SubscribeResponse *, const char*, const char*);

#ifndef soap_read__wsnt__SubscribeResponse
#define soap_read__wsnt__SubscribeResponse(soap, data) ( ((data) ? (soap_default__wsnt__SubscribeResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__SubscribeResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__SubscribeResponse
#define soap_GET__wsnt__SubscribeResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__SubscribeResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__SubscribeResponse
#define soap_POST_recv__wsnt__SubscribeResponse(soap, data) ( soap_read__wsnt__SubscribeResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__Subscribe_SubscriptionPolicy_DEFINED
#define SOAP_TYPE__wsnt__Subscribe_SubscriptionPolicy_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__Subscribe_SubscriptionPolicy(struct soap*, struct _wsnt__Subscribe_SubscriptionPolicy *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__Subscribe_SubscriptionPolicy(struct soap*, const struct _wsnt__Subscribe_SubscriptionPolicy *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__Subscribe_SubscriptionPolicy(struct soap*, const char*, int, const struct _wsnt__Subscribe_SubscriptionPolicy *, const char*);
SOAP_FMAC3 struct _wsnt__Subscribe_SubscriptionPolicy * SOAP_FMAC4 soap_in__wsnt__Subscribe_SubscriptionPolicy(struct soap*, const char*, struct _wsnt__Subscribe_SubscriptionPolicy *, const char*);

SOAP_FMAC3 struct _wsnt__Subscribe_SubscriptionPolicy * SOAP_FMAC4 soap_new__wsnt__Subscribe_SubscriptionPolicy(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__Subscribe_SubscriptionPolicy(struct soap*, const struct _wsnt__Subscribe_SubscriptionPolicy *, const char*, const char*);

#ifndef soap_write__wsnt__Subscribe_SubscriptionPolicy
#define soap_write__wsnt__Subscribe_SubscriptionPolicy(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__Subscribe_SubscriptionPolicy(soap, data), 0) || soap_put__wsnt__Subscribe_SubscriptionPolicy(soap, data, "wsnt:Subscribe-SubscriptionPolicy", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__Subscribe_SubscriptionPolicy
#define soap_PUT__wsnt__Subscribe_SubscriptionPolicy(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__Subscribe_SubscriptionPolicy(soap, data), 0) || soap_put__wsnt__Subscribe_SubscriptionPolicy(soap, data, "wsnt:Subscribe-SubscriptionPolicy", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__Subscribe_SubscriptionPolicy
#define soap_PATCH__wsnt__Subscribe_SubscriptionPolicy(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__Subscribe_SubscriptionPolicy(soap, data), 0) || soap_put__wsnt__Subscribe_SubscriptionPolicy(soap, data, "wsnt:Subscribe-SubscriptionPolicy", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__Subscribe_SubscriptionPolicy
#define soap_POST_send__wsnt__Subscribe_SubscriptionPolicy(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__Subscribe_SubscriptionPolicy(soap, data), 0) || soap_put__wsnt__Subscribe_SubscriptionPolicy(soap, data, "wsnt:Subscribe-SubscriptionPolicy", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__Subscribe_SubscriptionPolicy * SOAP_FMAC4 soap_get__wsnt__Subscribe_SubscriptionPolicy(struct soap*, struct _wsnt__Subscribe_SubscriptionPolicy *, const char*, const char*);

#ifndef soap_read__wsnt__Subscribe_SubscriptionPolicy
#define soap_read__wsnt__Subscribe_SubscriptionPolicy(soap, data) ( ((data) ? (soap_default__wsnt__Subscribe_SubscriptionPolicy(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__Subscribe_SubscriptionPolicy(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__Subscribe_SubscriptionPolicy
#define soap_GET__wsnt__Subscribe_SubscriptionPolicy(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__Subscribe_SubscriptionPolicy(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__Subscribe_SubscriptionPolicy
#define soap_POST_recv__wsnt__Subscribe_SubscriptionPolicy(soap, data) ( soap_read__wsnt__Subscribe_SubscriptionPolicy(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__Subscribe_DEFINED
#define SOAP_TYPE__wsnt__Subscribe_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__Subscribe(struct soap*, struct _wsnt__Subscribe *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__Subscribe(struct soap*, const struct _wsnt__Subscribe *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__Subscribe(struct soap*, const char*, int, const struct _wsnt__Subscribe *, const char*);
SOAP_FMAC3 struct _wsnt__Subscribe * SOAP_FMAC4 soap_in__wsnt__Subscribe(struct soap*, const char*, struct _wsnt__Subscribe *, const char*);

SOAP_FMAC3 struct _wsnt__Subscribe * SOAP_FMAC4 soap_new__wsnt__Subscribe(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__Subscribe(struct soap*, const struct _wsnt__Subscribe *, const char*, const char*);

#ifndef soap_write__wsnt__Subscribe
#define soap_write__wsnt__Subscribe(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__Subscribe(soap, data), 0) || soap_put__wsnt__Subscribe(soap, data, "wsnt:Subscribe", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__Subscribe
#define soap_PUT__wsnt__Subscribe(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__Subscribe(soap, data), 0) || soap_put__wsnt__Subscribe(soap, data, "wsnt:Subscribe", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__Subscribe
#define soap_PATCH__wsnt__Subscribe(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__Subscribe(soap, data), 0) || soap_put__wsnt__Subscribe(soap, data, "wsnt:Subscribe", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__Subscribe
#define soap_POST_send__wsnt__Subscribe(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__Subscribe(soap, data), 0) || soap_put__wsnt__Subscribe(soap, data, "wsnt:Subscribe", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__Subscribe * SOAP_FMAC4 soap_get__wsnt__Subscribe(struct soap*, struct _wsnt__Subscribe *, const char*, const char*);

#ifndef soap_read__wsnt__Subscribe
#define soap_read__wsnt__Subscribe(soap, data) ( ((data) ? (soap_default__wsnt__Subscribe(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__Subscribe(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__Subscribe
#define soap_GET__wsnt__Subscribe(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__Subscribe(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__Subscribe
#define soap_POST_recv__wsnt__Subscribe(soap, data) ( soap_read__wsnt__Subscribe(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__UseRaw_DEFINED
#define SOAP_TYPE__wsnt__UseRaw_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__UseRaw(struct soap*, struct _wsnt__UseRaw *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__UseRaw(struct soap*, const struct _wsnt__UseRaw *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UseRaw(struct soap*, const char*, int, const struct _wsnt__UseRaw *, const char*);
SOAP_FMAC3 struct _wsnt__UseRaw * SOAP_FMAC4 soap_in__wsnt__UseRaw(struct soap*, const char*, struct _wsnt__UseRaw *, const char*);

SOAP_FMAC3 struct _wsnt__UseRaw * SOAP_FMAC4 soap_new__wsnt__UseRaw(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__UseRaw(struct soap*, const struct _wsnt__UseRaw *, const char*, const char*);

#ifndef soap_write__wsnt__UseRaw
#define soap_write__wsnt__UseRaw(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__UseRaw(soap, data), 0) || soap_put__wsnt__UseRaw(soap, data, "wsnt:UseRaw", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__UseRaw
#define soap_PUT__wsnt__UseRaw(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UseRaw(soap, data), 0) || soap_put__wsnt__UseRaw(soap, data, "wsnt:UseRaw", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__UseRaw
#define soap_PATCH__wsnt__UseRaw(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UseRaw(soap, data), 0) || soap_put__wsnt__UseRaw(soap, data, "wsnt:UseRaw", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__UseRaw
#define soap_POST_send__wsnt__UseRaw(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__UseRaw(soap, data), 0) || soap_put__wsnt__UseRaw(soap, data, "wsnt:UseRaw", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__UseRaw * SOAP_FMAC4 soap_get__wsnt__UseRaw(struct soap*, struct _wsnt__UseRaw *, const char*, const char*);

#ifndef soap_read__wsnt__UseRaw
#define soap_read__wsnt__UseRaw(soap, data) ( ((data) ? (soap_default__wsnt__UseRaw(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UseRaw(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__UseRaw
#define soap_GET__wsnt__UseRaw(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__UseRaw(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__UseRaw
#define soap_POST_recv__wsnt__UseRaw(soap, data) ( soap_read__wsnt__UseRaw(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__Notify_DEFINED
#define SOAP_TYPE__wsnt__Notify_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__Notify(struct soap*, struct _wsnt__Notify *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__Notify(struct soap*, const struct _wsnt__Notify *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__Notify(struct soap*, const char*, int, const struct _wsnt__Notify *, const char*);
SOAP_FMAC3 struct _wsnt__Notify * SOAP_FMAC4 soap_in__wsnt__Notify(struct soap*, const char*, struct _wsnt__Notify *, const char*);

SOAP_FMAC3 struct _wsnt__Notify * SOAP_FMAC4 soap_new__wsnt__Notify(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__Notify(struct soap*, const struct _wsnt__Notify *, const char*, const char*);

#ifndef soap_write__wsnt__Notify
#define soap_write__wsnt__Notify(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__Notify(soap, data), 0) || soap_put__wsnt__Notify(soap, data, "wsnt:Notify", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__Notify
#define soap_PUT__wsnt__Notify(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__Notify(soap, data), 0) || soap_put__wsnt__Notify(soap, data, "wsnt:Notify", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__Notify
#define soap_PATCH__wsnt__Notify(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__Notify(soap, data), 0) || soap_put__wsnt__Notify(soap, data, "wsnt:Notify", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__Notify
#define soap_POST_send__wsnt__Notify(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__Notify(soap, data), 0) || soap_put__wsnt__Notify(soap, data, "wsnt:Notify", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__Notify * SOAP_FMAC4 soap_get__wsnt__Notify(struct soap*, struct _wsnt__Notify *, const char*, const char*);

#ifndef soap_read__wsnt__Notify
#define soap_read__wsnt__Notify(soap, data) ( ((data) ? (soap_default__wsnt__Notify(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__Notify(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__Notify
#define soap_GET__wsnt__Notify(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__Notify(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__Notify
#define soap_POST_recv__wsnt__Notify(soap, data) ( soap_read__wsnt__Notify(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__SubscriptionManagerRP_DEFINED
#define SOAP_TYPE__wsnt__SubscriptionManagerRP_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__SubscriptionManagerRP(struct soap*, struct _wsnt__SubscriptionManagerRP *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__SubscriptionManagerRP(struct soap*, const struct _wsnt__SubscriptionManagerRP *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__SubscriptionManagerRP(struct soap*, const char*, int, const struct _wsnt__SubscriptionManagerRP *, const char*);
SOAP_FMAC3 struct _wsnt__SubscriptionManagerRP * SOAP_FMAC4 soap_in__wsnt__SubscriptionManagerRP(struct soap*, const char*, struct _wsnt__SubscriptionManagerRP *, const char*);

SOAP_FMAC3 struct _wsnt__SubscriptionManagerRP * SOAP_FMAC4 soap_new__wsnt__SubscriptionManagerRP(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__SubscriptionManagerRP(struct soap*, const struct _wsnt__SubscriptionManagerRP *, const char*, const char*);

#ifndef soap_write__wsnt__SubscriptionManagerRP
#define soap_write__wsnt__SubscriptionManagerRP(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__SubscriptionManagerRP(soap, data), 0) || soap_put__wsnt__SubscriptionManagerRP(soap, data, "wsnt:SubscriptionManagerRP", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__SubscriptionManagerRP
#define soap_PUT__wsnt__SubscriptionManagerRP(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__SubscriptionManagerRP(soap, data), 0) || soap_put__wsnt__SubscriptionManagerRP(soap, data, "wsnt:SubscriptionManagerRP", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__SubscriptionManagerRP
#define soap_PATCH__wsnt__SubscriptionManagerRP(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__SubscriptionManagerRP(soap, data), 0) || soap_put__wsnt__SubscriptionManagerRP(soap, data, "wsnt:SubscriptionManagerRP", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__SubscriptionManagerRP
#define soap_POST_send__wsnt__SubscriptionManagerRP(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__SubscriptionManagerRP(soap, data), 0) || soap_put__wsnt__SubscriptionManagerRP(soap, data, "wsnt:SubscriptionManagerRP", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__SubscriptionManagerRP * SOAP_FMAC4 soap_get__wsnt__SubscriptionManagerRP(struct soap*, struct _wsnt__SubscriptionManagerRP *, const char*, const char*);

#ifndef soap_read__wsnt__SubscriptionManagerRP
#define soap_read__wsnt__SubscriptionManagerRP(soap, data) ( ((data) ? (soap_default__wsnt__SubscriptionManagerRP(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__SubscriptionManagerRP(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__SubscriptionManagerRP
#define soap_GET__wsnt__SubscriptionManagerRP(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__SubscriptionManagerRP(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__SubscriptionManagerRP
#define soap_POST_recv__wsnt__SubscriptionManagerRP(soap, data) ( soap_read__wsnt__SubscriptionManagerRP(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wstop__TopicSetType_DEFINED
#define SOAP_TYPE_wstop__TopicSetType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wstop__TopicSetType(struct soap*, struct wstop__TopicSetType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wstop__TopicSetType(struct soap*, const struct wstop__TopicSetType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wstop__TopicSetType(struct soap*, const char*, int, const struct wstop__TopicSetType *, const char*);
SOAP_FMAC3 struct wstop__TopicSetType * SOAP_FMAC4 soap_in_wstop__TopicSetType(struct soap*, const char*, struct wstop__TopicSetType *, const char*);

SOAP_FMAC3 struct wstop__TopicSetType * SOAP_FMAC4 soap_new_wstop__TopicSetType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wstop__TopicSetType(struct soap*, const struct wstop__TopicSetType *, const char*, const char*);

#ifndef soap_write_wstop__TopicSetType
#define soap_write_wstop__TopicSetType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wstop__TopicSetType(soap, data), 0) || soap_put_wstop__TopicSetType(soap, data, "wstop:TopicSetType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wstop__TopicSetType
#define soap_PUT_wstop__TopicSetType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wstop__TopicSetType(soap, data), 0) || soap_put_wstop__TopicSetType(soap, data, "wstop:TopicSetType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wstop__TopicSetType
#define soap_PATCH_wstop__TopicSetType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wstop__TopicSetType(soap, data), 0) || soap_put_wstop__TopicSetType(soap, data, "wstop:TopicSetType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wstop__TopicSetType
#define soap_POST_send_wstop__TopicSetType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wstop__TopicSetType(soap, data), 0) || soap_put_wstop__TopicSetType(soap, data, "wstop:TopicSetType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wstop__TopicSetType * SOAP_FMAC4 soap_get_wstop__TopicSetType(struct soap*, struct wstop__TopicSetType *, const char*, const char*);

#ifndef soap_read_wstop__TopicSetType
#define soap_read_wstop__TopicSetType(soap, data) ( ((data) ? (soap_default_wstop__TopicSetType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wstop__TopicSetType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wstop__TopicSetType
#define soap_GET_wstop__TopicSetType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wstop__TopicSetType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wstop__TopicSetType
#define soap_POST_recv_wstop__TopicSetType(soap, data) ( soap_read_wstop__TopicSetType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__NotificationProducerRP_DEFINED
#define SOAP_TYPE__wsnt__NotificationProducerRP_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__NotificationProducerRP(struct soap*, struct _wsnt__NotificationProducerRP *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__NotificationProducerRP(struct soap*, const struct _wsnt__NotificationProducerRP *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__NotificationProducerRP(struct soap*, const char*, int, const struct _wsnt__NotificationProducerRP *, const char*);
SOAP_FMAC3 struct _wsnt__NotificationProducerRP * SOAP_FMAC4 soap_in__wsnt__NotificationProducerRP(struct soap*, const char*, struct _wsnt__NotificationProducerRP *, const char*);

SOAP_FMAC3 struct _wsnt__NotificationProducerRP * SOAP_FMAC4 soap_new__wsnt__NotificationProducerRP(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__NotificationProducerRP(struct soap*, const struct _wsnt__NotificationProducerRP *, const char*, const char*);

#ifndef soap_write__wsnt__NotificationProducerRP
#define soap_write__wsnt__NotificationProducerRP(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__NotificationProducerRP(soap, data), 0) || soap_put__wsnt__NotificationProducerRP(soap, data, "wsnt:NotificationProducerRP", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__NotificationProducerRP
#define soap_PUT__wsnt__NotificationProducerRP(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__NotificationProducerRP(soap, data), 0) || soap_put__wsnt__NotificationProducerRP(soap, data, "wsnt:NotificationProducerRP", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__NotificationProducerRP
#define soap_PATCH__wsnt__NotificationProducerRP(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__NotificationProducerRP(soap, data), 0) || soap_put__wsnt__NotificationProducerRP(soap, data, "wsnt:NotificationProducerRP", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__NotificationProducerRP
#define soap_POST_send__wsnt__NotificationProducerRP(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__NotificationProducerRP(soap, data), 0) || soap_put__wsnt__NotificationProducerRP(soap, data, "wsnt:NotificationProducerRP", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__NotificationProducerRP * SOAP_FMAC4 soap_get__wsnt__NotificationProducerRP(struct soap*, struct _wsnt__NotificationProducerRP *, const char*, const char*);

#ifndef soap_read__wsnt__NotificationProducerRP
#define soap_read__wsnt__NotificationProducerRP(soap, data) ( ((data) ? (soap_default__wsnt__NotificationProducerRP(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__NotificationProducerRP(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__NotificationProducerRP
#define soap_GET__wsnt__NotificationProducerRP(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__NotificationProducerRP(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__NotificationProducerRP
#define soap_POST_recv__wsnt__NotificationProducerRP(soap, data) ( soap_read__wsnt__NotificationProducerRP(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsnt__NotificationMessageHolderType_Message_DEFINED
#define SOAP_TYPE__wsnt__NotificationMessageHolderType_Message_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsnt__NotificationMessageHolderType_Message(struct soap*, struct _wsnt__NotificationMessageHolderType_Message *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsnt__NotificationMessageHolderType_Message(struct soap*, const struct _wsnt__NotificationMessageHolderType_Message *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__NotificationMessageHolderType_Message(struct soap*, const char*, int, const struct _wsnt__NotificationMessageHolderType_Message *, const char*);
SOAP_FMAC3 struct _wsnt__NotificationMessageHolderType_Message * SOAP_FMAC4 soap_in__wsnt__NotificationMessageHolderType_Message(struct soap*, const char*, struct _wsnt__NotificationMessageHolderType_Message *, const char*);

SOAP_FMAC3 struct _wsnt__NotificationMessageHolderType_Message * SOAP_FMAC4 soap_new__wsnt__NotificationMessageHolderType_Message(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsnt__NotificationMessageHolderType_Message(struct soap*, const struct _wsnt__NotificationMessageHolderType_Message *, const char*, const char*);

#ifndef soap_write__wsnt__NotificationMessageHolderType_Message
#define soap_write__wsnt__NotificationMessageHolderType_Message(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsnt__NotificationMessageHolderType_Message(soap, data), 0) || soap_put__wsnt__NotificationMessageHolderType_Message(soap, data, "wsnt:NotificationMessageHolderType-Message", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsnt__NotificationMessageHolderType_Message
#define soap_PUT__wsnt__NotificationMessageHolderType_Message(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__NotificationMessageHolderType_Message(soap, data), 0) || soap_put__wsnt__NotificationMessageHolderType_Message(soap, data, "wsnt:NotificationMessageHolderType-Message", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsnt__NotificationMessageHolderType_Message
#define soap_PATCH__wsnt__NotificationMessageHolderType_Message(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__NotificationMessageHolderType_Message(soap, data), 0) || soap_put__wsnt__NotificationMessageHolderType_Message(soap, data, "wsnt:NotificationMessageHolderType-Message", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsnt__NotificationMessageHolderType_Message
#define soap_POST_send__wsnt__NotificationMessageHolderType_Message(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsnt__NotificationMessageHolderType_Message(soap, data), 0) || soap_put__wsnt__NotificationMessageHolderType_Message(soap, data, "wsnt:NotificationMessageHolderType-Message", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsnt__NotificationMessageHolderType_Message * SOAP_FMAC4 soap_get__wsnt__NotificationMessageHolderType_Message(struct soap*, struct _wsnt__NotificationMessageHolderType_Message *, const char*, const char*);

#ifndef soap_read__wsnt__NotificationMessageHolderType_Message
#define soap_read__wsnt__NotificationMessageHolderType_Message(soap, data) ( ((data) ? (soap_default__wsnt__NotificationMessageHolderType_Message(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__NotificationMessageHolderType_Message(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsnt__NotificationMessageHolderType_Message
#define soap_GET__wsnt__NotificationMessageHolderType_Message(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsnt__NotificationMessageHolderType_Message(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsnt__NotificationMessageHolderType_Message
#define soap_POST_recv__wsnt__NotificationMessageHolderType_Message(soap, data) ( soap_read__wsnt__NotificationMessageHolderType_Message(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsnt__NotificationMessageHolderType_DEFINED
#define SOAP_TYPE_wsnt__NotificationMessageHolderType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsnt__NotificationMessageHolderType(struct soap*, struct wsnt__NotificationMessageHolderType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__NotificationMessageHolderType(struct soap*, const struct wsnt__NotificationMessageHolderType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__NotificationMessageHolderType(struct soap*, const char*, int, const struct wsnt__NotificationMessageHolderType *, const char*);
SOAP_FMAC3 struct wsnt__NotificationMessageHolderType * SOAP_FMAC4 soap_in_wsnt__NotificationMessageHolderType(struct soap*, const char*, struct wsnt__NotificationMessageHolderType *, const char*);

SOAP_FMAC3 struct wsnt__NotificationMessageHolderType * SOAP_FMAC4 soap_new_wsnt__NotificationMessageHolderType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__NotificationMessageHolderType(struct soap*, const struct wsnt__NotificationMessageHolderType *, const char*, const char*);

#ifndef soap_write_wsnt__NotificationMessageHolderType
#define soap_write_wsnt__NotificationMessageHolderType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsnt__NotificationMessageHolderType(soap, data), 0) || soap_put_wsnt__NotificationMessageHolderType(soap, data, "wsnt:NotificationMessageHolderType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsnt__NotificationMessageHolderType
#define soap_PUT_wsnt__NotificationMessageHolderType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__NotificationMessageHolderType(soap, data), 0) || soap_put_wsnt__NotificationMessageHolderType(soap, data, "wsnt:NotificationMessageHolderType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsnt__NotificationMessageHolderType
#define soap_PATCH_wsnt__NotificationMessageHolderType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__NotificationMessageHolderType(soap, data), 0) || soap_put_wsnt__NotificationMessageHolderType(soap, data, "wsnt:NotificationMessageHolderType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsnt__NotificationMessageHolderType
#define soap_POST_send_wsnt__NotificationMessageHolderType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__NotificationMessageHolderType(soap, data), 0) || soap_put_wsnt__NotificationMessageHolderType(soap, data, "wsnt:NotificationMessageHolderType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsnt__NotificationMessageHolderType * SOAP_FMAC4 soap_get_wsnt__NotificationMessageHolderType(struct soap*, struct wsnt__NotificationMessageHolderType *, const char*, const char*);

#ifndef soap_read_wsnt__NotificationMessageHolderType
#define soap_read_wsnt__NotificationMessageHolderType(soap, data) ( ((data) ? (soap_default_wsnt__NotificationMessageHolderType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__NotificationMessageHolderType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsnt__NotificationMessageHolderType
#define soap_GET_wsnt__NotificationMessageHolderType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsnt__NotificationMessageHolderType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsnt__NotificationMessageHolderType
#define soap_POST_recv_wsnt__NotificationMessageHolderType(soap, data) ( soap_read_wsnt__NotificationMessageHolderType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsnt__SubscriptionPolicyType_DEFINED
#define SOAP_TYPE_wsnt__SubscriptionPolicyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsnt__SubscriptionPolicyType(struct soap*, struct wsnt__SubscriptionPolicyType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__SubscriptionPolicyType(struct soap*, const struct wsnt__SubscriptionPolicyType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__SubscriptionPolicyType(struct soap*, const char*, int, const struct wsnt__SubscriptionPolicyType *, const char*);
SOAP_FMAC3 struct wsnt__SubscriptionPolicyType * SOAP_FMAC4 soap_in_wsnt__SubscriptionPolicyType(struct soap*, const char*, struct wsnt__SubscriptionPolicyType *, const char*);

SOAP_FMAC3 struct wsnt__SubscriptionPolicyType * SOAP_FMAC4 soap_new_wsnt__SubscriptionPolicyType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__SubscriptionPolicyType(struct soap*, const struct wsnt__SubscriptionPolicyType *, const char*, const char*);

#ifndef soap_write_wsnt__SubscriptionPolicyType
#define soap_write_wsnt__SubscriptionPolicyType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsnt__SubscriptionPolicyType(soap, data), 0) || soap_put_wsnt__SubscriptionPolicyType(soap, data, "wsnt:SubscriptionPolicyType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsnt__SubscriptionPolicyType
#define soap_PUT_wsnt__SubscriptionPolicyType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__SubscriptionPolicyType(soap, data), 0) || soap_put_wsnt__SubscriptionPolicyType(soap, data, "wsnt:SubscriptionPolicyType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsnt__SubscriptionPolicyType
#define soap_PATCH_wsnt__SubscriptionPolicyType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__SubscriptionPolicyType(soap, data), 0) || soap_put_wsnt__SubscriptionPolicyType(soap, data, "wsnt:SubscriptionPolicyType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsnt__SubscriptionPolicyType
#define soap_POST_send_wsnt__SubscriptionPolicyType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__SubscriptionPolicyType(soap, data), 0) || soap_put_wsnt__SubscriptionPolicyType(soap, data, "wsnt:SubscriptionPolicyType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsnt__SubscriptionPolicyType * SOAP_FMAC4 soap_get_wsnt__SubscriptionPolicyType(struct soap*, struct wsnt__SubscriptionPolicyType *, const char*, const char*);

#ifndef soap_read_wsnt__SubscriptionPolicyType
#define soap_read_wsnt__SubscriptionPolicyType(soap, data) ( ((data) ? (soap_default_wsnt__SubscriptionPolicyType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__SubscriptionPolicyType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsnt__SubscriptionPolicyType
#define soap_GET_wsnt__SubscriptionPolicyType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsnt__SubscriptionPolicyType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsnt__SubscriptionPolicyType
#define soap_POST_recv_wsnt__SubscriptionPolicyType(soap, data) ( soap_read_wsnt__SubscriptionPolicyType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsnt__FilterType_DEFINED
#define SOAP_TYPE_wsnt__FilterType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsnt__FilterType(struct soap*, struct wsnt__FilterType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__FilterType(struct soap*, const struct wsnt__FilterType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__FilterType(struct soap*, const char*, int, const struct wsnt__FilterType *, const char*);
SOAP_FMAC3 struct wsnt__FilterType * SOAP_FMAC4 soap_in_wsnt__FilterType(struct soap*, const char*, struct wsnt__FilterType *, const char*);

SOAP_FMAC3 struct wsnt__FilterType * SOAP_FMAC4 soap_new_wsnt__FilterType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__FilterType(struct soap*, const struct wsnt__FilterType *, const char*, const char*);

#ifndef soap_write_wsnt__FilterType
#define soap_write_wsnt__FilterType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsnt__FilterType(soap, data), 0) || soap_put_wsnt__FilterType(soap, data, "wsnt:FilterType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsnt__FilterType
#define soap_PUT_wsnt__FilterType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__FilterType(soap, data), 0) || soap_put_wsnt__FilterType(soap, data, "wsnt:FilterType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsnt__FilterType
#define soap_PATCH_wsnt__FilterType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__FilterType(soap, data), 0) || soap_put_wsnt__FilterType(soap, data, "wsnt:FilterType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsnt__FilterType
#define soap_POST_send_wsnt__FilterType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__FilterType(soap, data), 0) || soap_put_wsnt__FilterType(soap, data, "wsnt:FilterType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsnt__FilterType * SOAP_FMAC4 soap_get_wsnt__FilterType(struct soap*, struct wsnt__FilterType *, const char*, const char*);

#ifndef soap_read_wsnt__FilterType
#define soap_read_wsnt__FilterType(soap, data) ( ((data) ? (soap_default_wsnt__FilterType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__FilterType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsnt__FilterType
#define soap_GET_wsnt__FilterType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsnt__FilterType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsnt__FilterType
#define soap_POST_recv_wsnt__FilterType(soap, data) ( soap_read_wsnt__FilterType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsnt__TopicExpressionType_DEFINED
#define SOAP_TYPE_wsnt__TopicExpressionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsnt__TopicExpressionType(struct soap*, struct wsnt__TopicExpressionType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__TopicExpressionType(struct soap*, const struct wsnt__TopicExpressionType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__TopicExpressionType(struct soap*, const char*, int, const struct wsnt__TopicExpressionType *, const char*);
SOAP_FMAC3 struct wsnt__TopicExpressionType * SOAP_FMAC4 soap_in_wsnt__TopicExpressionType(struct soap*, const char*, struct wsnt__TopicExpressionType *, const char*);

SOAP_FMAC3 struct wsnt__TopicExpressionType * SOAP_FMAC4 soap_new_wsnt__TopicExpressionType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__TopicExpressionType(struct soap*, const struct wsnt__TopicExpressionType *, const char*, const char*);

#ifndef soap_write_wsnt__TopicExpressionType
#define soap_write_wsnt__TopicExpressionType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsnt__TopicExpressionType(soap, data), 0) || soap_put_wsnt__TopicExpressionType(soap, data, "wsnt:TopicExpressionType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsnt__TopicExpressionType
#define soap_PUT_wsnt__TopicExpressionType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__TopicExpressionType(soap, data), 0) || soap_put_wsnt__TopicExpressionType(soap, data, "wsnt:TopicExpressionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsnt__TopicExpressionType
#define soap_PATCH_wsnt__TopicExpressionType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__TopicExpressionType(soap, data), 0) || soap_put_wsnt__TopicExpressionType(soap, data, "wsnt:TopicExpressionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsnt__TopicExpressionType
#define soap_POST_send_wsnt__TopicExpressionType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__TopicExpressionType(soap, data), 0) || soap_put_wsnt__TopicExpressionType(soap, data, "wsnt:TopicExpressionType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsnt__TopicExpressionType * SOAP_FMAC4 soap_get_wsnt__TopicExpressionType(struct soap*, struct wsnt__TopicExpressionType *, const char*, const char*);

#ifndef soap_read_wsnt__TopicExpressionType
#define soap_read_wsnt__TopicExpressionType(soap, data) ( ((data) ? (soap_default_wsnt__TopicExpressionType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__TopicExpressionType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsnt__TopicExpressionType
#define soap_GET_wsnt__TopicExpressionType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsnt__TopicExpressionType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsnt__TopicExpressionType
#define soap_POST_recv_wsnt__TopicExpressionType(soap, data) ( soap_read_wsnt__TopicExpressionType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsnt__QueryExpressionType_DEFINED
#define SOAP_TYPE_wsnt__QueryExpressionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsnt__QueryExpressionType(struct soap*, struct wsnt__QueryExpressionType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__QueryExpressionType(struct soap*, const struct wsnt__QueryExpressionType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__QueryExpressionType(struct soap*, const char*, int, const struct wsnt__QueryExpressionType *, const char*);
SOAP_FMAC3 struct wsnt__QueryExpressionType * SOAP_FMAC4 soap_in_wsnt__QueryExpressionType(struct soap*, const char*, struct wsnt__QueryExpressionType *, const char*);

SOAP_FMAC3 struct wsnt__QueryExpressionType * SOAP_FMAC4 soap_new_wsnt__QueryExpressionType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__QueryExpressionType(struct soap*, const struct wsnt__QueryExpressionType *, const char*, const char*);

#ifndef soap_write_wsnt__QueryExpressionType
#define soap_write_wsnt__QueryExpressionType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsnt__QueryExpressionType(soap, data), 0) || soap_put_wsnt__QueryExpressionType(soap, data, "wsnt:QueryExpressionType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsnt__QueryExpressionType
#define soap_PUT_wsnt__QueryExpressionType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__QueryExpressionType(soap, data), 0) || soap_put_wsnt__QueryExpressionType(soap, data, "wsnt:QueryExpressionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsnt__QueryExpressionType
#define soap_PATCH_wsnt__QueryExpressionType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__QueryExpressionType(soap, data), 0) || soap_put_wsnt__QueryExpressionType(soap, data, "wsnt:QueryExpressionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsnt__QueryExpressionType
#define soap_POST_send_wsnt__QueryExpressionType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsnt__QueryExpressionType(soap, data), 0) || soap_put_wsnt__QueryExpressionType(soap, data, "wsnt:QueryExpressionType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsnt__QueryExpressionType * SOAP_FMAC4 soap_get_wsnt__QueryExpressionType(struct soap*, struct wsnt__QueryExpressionType *, const char*, const char*);

#ifndef soap_read_wsnt__QueryExpressionType
#define soap_read_wsnt__QueryExpressionType(soap, data) ( ((data) ? (soap_default_wsnt__QueryExpressionType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__QueryExpressionType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsnt__QueryExpressionType
#define soap_GET_wsnt__QueryExpressionType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsnt__QueryExpressionType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsnt__QueryExpressionType
#define soap_POST_recv_wsnt__QueryExpressionType(soap, data) ( soap_read_wsnt__QueryExpressionType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__tt__Message_DEFINED
#define SOAP_TYPE__tt__Message_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__tt__Message(struct soap*, struct _tt__Message *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tt__Message(struct soap*, const struct _tt__Message *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tt__Message(struct soap*, const char*, int, const struct _tt__Message *, const char*);
SOAP_FMAC3 struct _tt__Message * SOAP_FMAC4 soap_in__tt__Message(struct soap*, const char*, struct _tt__Message *, const char*);

SOAP_FMAC3 struct _tt__Message * SOAP_FMAC4 soap_new__tt__Message(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__tt__Message(struct soap*, const struct _tt__Message *, const char*, const char*);

#ifndef soap_write__tt__Message
#define soap_write__tt__Message(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__tt__Message(soap, data), 0) || soap_put__tt__Message(soap, data, "tt:Message", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__tt__Message
#define soap_PUT__tt__Message(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tt__Message(soap, data), 0) || soap_put__tt__Message(soap, data, "tt:Message", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__tt__Message
#define soap_PATCH__tt__Message(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tt__Message(soap, data), 0) || soap_put__tt__Message(soap, data, "tt:Message", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__tt__Message
#define soap_POST_send__tt__Message(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tt__Message(soap, data), 0) || soap_put__tt__Message(soap, data, "tt:Message", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _tt__Message * SOAP_FMAC4 soap_get__tt__Message(struct soap*, struct _tt__Message *, const char*, const char*);

#ifndef soap_read__tt__Message
#define soap_read__tt__Message(soap, data) ( ((data) ? (soap_default__tt__Message(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__tt__Message(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__tt__Message
#define soap_GET__tt__Message(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__tt__Message(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__tt__Message
#define soap_POST_recv__tt__Message(soap, data) ( soap_read__tt__Message(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__MediaUri_DEFINED
#define SOAP_TYPE_tt__MediaUri_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__MediaUri(struct soap*, struct tt__MediaUri *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__MediaUri(struct soap*, const struct tt__MediaUri *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MediaUri(struct soap*, const char*, int, const struct tt__MediaUri *, const char*);
SOAP_FMAC3 struct tt__MediaUri * SOAP_FMAC4 soap_in_tt__MediaUri(struct soap*, const char*, struct tt__MediaUri *, const char*);

SOAP_FMAC3 struct tt__MediaUri * SOAP_FMAC4 soap_new_tt__MediaUri(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__MediaUri(struct soap*, const struct tt__MediaUri *, const char*, const char*);

#ifndef soap_write_tt__MediaUri
#define soap_write_tt__MediaUri(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__MediaUri(soap, data), 0) || soap_put_tt__MediaUri(soap, data, "tt:MediaUri", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__MediaUri
#define soap_PUT_tt__MediaUri(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__MediaUri(soap, data), 0) || soap_put_tt__MediaUri(soap, data, "tt:MediaUri", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__MediaUri
#define soap_PATCH_tt__MediaUri(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__MediaUri(soap, data), 0) || soap_put_tt__MediaUri(soap, data, "tt:MediaUri", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__MediaUri
#define soap_POST_send_tt__MediaUri(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__MediaUri(soap, data), 0) || soap_put_tt__MediaUri(soap, data, "tt:MediaUri", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__MediaUri * SOAP_FMAC4 soap_get_tt__MediaUri(struct soap*, struct tt__MediaUri *, const char*, const char*);

#ifndef soap_read_tt__MediaUri
#define soap_read_tt__MediaUri(soap, data) ( ((data) ? (soap_default_tt__MediaUri(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__MediaUri(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__MediaUri
#define soap_GET_tt__MediaUri(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__MediaUri(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__MediaUri
#define soap_POST_recv_tt__MediaUri(soap, data) ( soap_read_tt__MediaUri(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__MulticastConfiguration_DEFINED
#define SOAP_TYPE_tt__MulticastConfiguration_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__MulticastConfiguration(struct soap*, struct tt__MulticastConfiguration *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__MulticastConfiguration(struct soap*, const struct tt__MulticastConfiguration *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MulticastConfiguration(struct soap*, const char*, int, const struct tt__MulticastConfiguration *, const char*);
SOAP_FMAC3 struct tt__MulticastConfiguration * SOAP_FMAC4 soap_in_tt__MulticastConfiguration(struct soap*, const char*, struct tt__MulticastConfiguration *, const char*);

SOAP_FMAC3 struct tt__MulticastConfiguration * SOAP_FMAC4 soap_new_tt__MulticastConfiguration(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__MulticastConfiguration(struct soap*, const struct tt__MulticastConfiguration *, const char*, const char*);

#ifndef soap_write_tt__MulticastConfiguration
#define soap_write_tt__MulticastConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__MulticastConfiguration(soap, data), 0) || soap_put_tt__MulticastConfiguration(soap, data, "tt:MulticastConfiguration", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__MulticastConfiguration
#define soap_PUT_tt__MulticastConfiguration(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__MulticastConfiguration(soap, data), 0) || soap_put_tt__MulticastConfiguration(soap, data, "tt:MulticastConfiguration", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__MulticastConfiguration
#define soap_PATCH_tt__MulticastConfiguration(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__MulticastConfiguration(soap, data), 0) || soap_put_tt__MulticastConfiguration(soap, data, "tt:MulticastConfiguration", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__MulticastConfiguration
#define soap_POST_send_tt__MulticastConfiguration(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__MulticastConfiguration(soap, data), 0) || soap_put_tt__MulticastConfiguration(soap, data, "tt:MulticastConfiguration", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__MulticastConfiguration * SOAP_FMAC4 soap_get_tt__MulticastConfiguration(struct soap*, struct tt__MulticastConfiguration *, const char*, const char*);

#ifndef soap_read_tt__MulticastConfiguration
#define soap_read_tt__MulticastConfiguration(soap, data) ( ((data) ? (soap_default_tt__MulticastConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__MulticastConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__MulticastConfiguration
#define soap_GET_tt__MulticastConfiguration(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__MulticastConfiguration(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__MulticastConfiguration
#define soap_POST_recv_tt__MulticastConfiguration(soap, data) ( soap_read_tt__MulticastConfiguration(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__IPAddress_DEFINED
#define SOAP_TYPE_tt__IPAddress_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__IPAddress(struct soap*, struct tt__IPAddress *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__IPAddress(struct soap*, const struct tt__IPAddress *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IPAddress(struct soap*, const char*, int, const struct tt__IPAddress *, const char*);
SOAP_FMAC3 struct tt__IPAddress * SOAP_FMAC4 soap_in_tt__IPAddress(struct soap*, const char*, struct tt__IPAddress *, const char*);

SOAP_FMAC3 struct tt__IPAddress * SOAP_FMAC4 soap_new_tt__IPAddress(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__IPAddress(struct soap*, const struct tt__IPAddress *, const char*, const char*);

#ifndef soap_write_tt__IPAddress
#define soap_write_tt__IPAddress(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__IPAddress(soap, data), 0) || soap_put_tt__IPAddress(soap, data, "tt:IPAddress", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__IPAddress
#define soap_PUT_tt__IPAddress(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__IPAddress(soap, data), 0) || soap_put_tt__IPAddress(soap, data, "tt:IPAddress", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__IPAddress
#define soap_PATCH_tt__IPAddress(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__IPAddress(soap, data), 0) || soap_put_tt__IPAddress(soap, data, "tt:IPAddress", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__IPAddress
#define soap_POST_send_tt__IPAddress(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__IPAddress(soap, data), 0) || soap_put_tt__IPAddress(soap, data, "tt:IPAddress", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__IPAddress * SOAP_FMAC4 soap_get_tt__IPAddress(struct soap*, struct tt__IPAddress *, const char*, const char*);

#ifndef soap_read_tt__IPAddress
#define soap_read_tt__IPAddress(soap, data) ( ((data) ? (soap_default_tt__IPAddress(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__IPAddress(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__IPAddress
#define soap_GET_tt__IPAddress(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__IPAddress(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__IPAddress
#define soap_POST_recv_tt__IPAddress(soap, data) ( soap_read_tt__IPAddress(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__VideoEncoderOptionsExtension2_DEFINED
#define SOAP_TYPE_tt__VideoEncoderOptionsExtension2_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__VideoEncoderOptionsExtension2(struct soap*, struct tt__VideoEncoderOptionsExtension2 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__VideoEncoderOptionsExtension2(struct soap*, const struct tt__VideoEncoderOptionsExtension2 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoEncoderOptionsExtension2(struct soap*, const char*, int, const struct tt__VideoEncoderOptionsExtension2 *, const char*);
SOAP_FMAC3 struct tt__VideoEncoderOptionsExtension2 * SOAP_FMAC4 soap_in_tt__VideoEncoderOptionsExtension2(struct soap*, const char*, struct tt__VideoEncoderOptionsExtension2 *, const char*);

SOAP_FMAC3 struct tt__VideoEncoderOptionsExtension2 * SOAP_FMAC4 soap_new_tt__VideoEncoderOptionsExtension2(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__VideoEncoderOptionsExtension2(struct soap*, const struct tt__VideoEncoderOptionsExtension2 *, const char*, const char*);

#ifndef soap_write_tt__VideoEncoderOptionsExtension2
#define soap_write_tt__VideoEncoderOptionsExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__VideoEncoderOptionsExtension2(soap, data), 0) || soap_put_tt__VideoEncoderOptionsExtension2(soap, data, "tt:VideoEncoderOptionsExtension2", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__VideoEncoderOptionsExtension2
#define soap_PUT_tt__VideoEncoderOptionsExtension2(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__VideoEncoderOptionsExtension2(soap, data), 0) || soap_put_tt__VideoEncoderOptionsExtension2(soap, data, "tt:VideoEncoderOptionsExtension2", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__VideoEncoderOptionsExtension2
#define soap_PATCH_tt__VideoEncoderOptionsExtension2(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__VideoEncoderOptionsExtension2(soap, data), 0) || soap_put_tt__VideoEncoderOptionsExtension2(soap, data, "tt:VideoEncoderOptionsExtension2", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__VideoEncoderOptionsExtension2
#define soap_POST_send_tt__VideoEncoderOptionsExtension2(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__VideoEncoderOptionsExtension2(soap, data), 0) || soap_put_tt__VideoEncoderOptionsExtension2(soap, data, "tt:VideoEncoderOptionsExtension2", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__VideoEncoderOptionsExtension2 * SOAP_FMAC4 soap_get_tt__VideoEncoderOptionsExtension2(struct soap*, struct tt__VideoEncoderOptionsExtension2 *, const char*, const char*);

#ifndef soap_read_tt__VideoEncoderOptionsExtension2
#define soap_read_tt__VideoEncoderOptionsExtension2(soap, data) ( ((data) ? (soap_default_tt__VideoEncoderOptionsExtension2(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__VideoEncoderOptionsExtension2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__VideoEncoderOptionsExtension2
#define soap_GET_tt__VideoEncoderOptionsExtension2(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__VideoEncoderOptionsExtension2(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__VideoEncoderOptionsExtension2
#define soap_POST_recv_tt__VideoEncoderOptionsExtension2(soap, data) ( soap_read_tt__VideoEncoderOptionsExtension2(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__H264Options2_DEFINED
#define SOAP_TYPE_tt__H264Options2_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__H264Options2(struct soap*, struct tt__H264Options2 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__H264Options2(struct soap*, const struct tt__H264Options2 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__H264Options2(struct soap*, const char*, int, const struct tt__H264Options2 *, const char*);
SOAP_FMAC3 struct tt__H264Options2 * SOAP_FMAC4 soap_in_tt__H264Options2(struct soap*, const char*, struct tt__H264Options2 *, const char*);

SOAP_FMAC3 struct tt__H264Options2 * SOAP_FMAC4 soap_new_tt__H264Options2(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__H264Options2(struct soap*, const struct tt__H264Options2 *, const char*, const char*);

#ifndef soap_write_tt__H264Options2
#define soap_write_tt__H264Options2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__H264Options2(soap, data), 0) || soap_put_tt__H264Options2(soap, data, "tt:H264Options2", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__H264Options2
#define soap_PUT_tt__H264Options2(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__H264Options2(soap, data), 0) || soap_put_tt__H264Options2(soap, data, "tt:H264Options2", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__H264Options2
#define soap_PATCH_tt__H264Options2(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__H264Options2(soap, data), 0) || soap_put_tt__H264Options2(soap, data, "tt:H264Options2", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__H264Options2
#define soap_POST_send_tt__H264Options2(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__H264Options2(soap, data), 0) || soap_put_tt__H264Options2(soap, data, "tt:H264Options2", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__H264Options2 * SOAP_FMAC4 soap_get_tt__H264Options2(struct soap*, struct tt__H264Options2 *, const char*, const char*);

#ifndef soap_read_tt__H264Options2
#define soap_read_tt__H264Options2(soap, data) ( ((data) ? (soap_default_tt__H264Options2(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__H264Options2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__H264Options2
#define soap_GET_tt__H264Options2(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__H264Options2(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__H264Options2
#define soap_POST_recv_tt__H264Options2(soap, data) ( soap_read_tt__H264Options2(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__Mpeg4Options2_DEFINED
#define SOAP_TYPE_tt__Mpeg4Options2_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__Mpeg4Options2(struct soap*, struct tt__Mpeg4Options2 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__Mpeg4Options2(struct soap*, const struct tt__Mpeg4Options2 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Mpeg4Options2(struct soap*, const char*, int, const struct tt__Mpeg4Options2 *, const char*);
SOAP_FMAC3 struct tt__Mpeg4Options2 * SOAP_FMAC4 soap_in_tt__Mpeg4Options2(struct soap*, const char*, struct tt__Mpeg4Options2 *, const char*);

SOAP_FMAC3 struct tt__Mpeg4Options2 * SOAP_FMAC4 soap_new_tt__Mpeg4Options2(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__Mpeg4Options2(struct soap*, const struct tt__Mpeg4Options2 *, const char*, const char*);

#ifndef soap_write_tt__Mpeg4Options2
#define soap_write_tt__Mpeg4Options2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__Mpeg4Options2(soap, data), 0) || soap_put_tt__Mpeg4Options2(soap, data, "tt:Mpeg4Options2", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__Mpeg4Options2
#define soap_PUT_tt__Mpeg4Options2(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__Mpeg4Options2(soap, data), 0) || soap_put_tt__Mpeg4Options2(soap, data, "tt:Mpeg4Options2", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__Mpeg4Options2
#define soap_PATCH_tt__Mpeg4Options2(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__Mpeg4Options2(soap, data), 0) || soap_put_tt__Mpeg4Options2(soap, data, "tt:Mpeg4Options2", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__Mpeg4Options2
#define soap_POST_send_tt__Mpeg4Options2(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__Mpeg4Options2(soap, data), 0) || soap_put_tt__Mpeg4Options2(soap, data, "tt:Mpeg4Options2", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__Mpeg4Options2 * SOAP_FMAC4 soap_get_tt__Mpeg4Options2(struct soap*, struct tt__Mpeg4Options2 *, const char*, const char*);

#ifndef soap_read_tt__Mpeg4Options2
#define soap_read_tt__Mpeg4Options2(soap, data) ( ((data) ? (soap_default_tt__Mpeg4Options2(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Mpeg4Options2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__Mpeg4Options2
#define soap_GET_tt__Mpeg4Options2(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__Mpeg4Options2(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__Mpeg4Options2
#define soap_POST_recv_tt__Mpeg4Options2(soap, data) ( soap_read_tt__Mpeg4Options2(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__JpegOptions2_DEFINED
#define SOAP_TYPE_tt__JpegOptions2_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__JpegOptions2(struct soap*, struct tt__JpegOptions2 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__JpegOptions2(struct soap*, const struct tt__JpegOptions2 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__JpegOptions2(struct soap*, const char*, int, const struct tt__JpegOptions2 *, const char*);
SOAP_FMAC3 struct tt__JpegOptions2 * SOAP_FMAC4 soap_in_tt__JpegOptions2(struct soap*, const char*, struct tt__JpegOptions2 *, const char*);

SOAP_FMAC3 struct tt__JpegOptions2 * SOAP_FMAC4 soap_new_tt__JpegOptions2(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__JpegOptions2(struct soap*, const struct tt__JpegOptions2 *, const char*, const char*);

#ifndef soap_write_tt__JpegOptions2
#define soap_write_tt__JpegOptions2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__JpegOptions2(soap, data), 0) || soap_put_tt__JpegOptions2(soap, data, "tt:JpegOptions2", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__JpegOptions2
#define soap_PUT_tt__JpegOptions2(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__JpegOptions2(soap, data), 0) || soap_put_tt__JpegOptions2(soap, data, "tt:JpegOptions2", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__JpegOptions2
#define soap_PATCH_tt__JpegOptions2(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__JpegOptions2(soap, data), 0) || soap_put_tt__JpegOptions2(soap, data, "tt:JpegOptions2", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__JpegOptions2
#define soap_POST_send_tt__JpegOptions2(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__JpegOptions2(soap, data), 0) || soap_put_tt__JpegOptions2(soap, data, "tt:JpegOptions2", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__JpegOptions2 * SOAP_FMAC4 soap_get_tt__JpegOptions2(struct soap*, struct tt__JpegOptions2 *, const char*, const char*);

#ifndef soap_read_tt__JpegOptions2
#define soap_read_tt__JpegOptions2(soap, data) ( ((data) ? (soap_default_tt__JpegOptions2(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__JpegOptions2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__JpegOptions2
#define soap_GET_tt__JpegOptions2(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__JpegOptions2(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__JpegOptions2
#define soap_POST_recv_tt__JpegOptions2(soap, data) ( soap_read_tt__JpegOptions2(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__VideoEncoderOptionsExtension_DEFINED
#define SOAP_TYPE_tt__VideoEncoderOptionsExtension_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__VideoEncoderOptionsExtension(struct soap*, struct tt__VideoEncoderOptionsExtension *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__VideoEncoderOptionsExtension(struct soap*, const struct tt__VideoEncoderOptionsExtension *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoEncoderOptionsExtension(struct soap*, const char*, int, const struct tt__VideoEncoderOptionsExtension *, const char*);
SOAP_FMAC3 struct tt__VideoEncoderOptionsExtension * SOAP_FMAC4 soap_in_tt__VideoEncoderOptionsExtension(struct soap*, const char*, struct tt__VideoEncoderOptionsExtension *, const char*);

SOAP_FMAC3 struct tt__VideoEncoderOptionsExtension * SOAP_FMAC4 soap_new_tt__VideoEncoderOptionsExtension(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__VideoEncoderOptionsExtension(struct soap*, const struct tt__VideoEncoderOptionsExtension *, const char*, const char*);

#ifndef soap_write_tt__VideoEncoderOptionsExtension
#define soap_write_tt__VideoEncoderOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__VideoEncoderOptionsExtension(soap, data), 0) || soap_put_tt__VideoEncoderOptionsExtension(soap, data, "tt:VideoEncoderOptionsExtension", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__VideoEncoderOptionsExtension
#define soap_PUT_tt__VideoEncoderOptionsExtension(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__VideoEncoderOptionsExtension(soap, data), 0) || soap_put_tt__VideoEncoderOptionsExtension(soap, data, "tt:VideoEncoderOptionsExtension", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__VideoEncoderOptionsExtension
#define soap_PATCH_tt__VideoEncoderOptionsExtension(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__VideoEncoderOptionsExtension(soap, data), 0) || soap_put_tt__VideoEncoderOptionsExtension(soap, data, "tt:VideoEncoderOptionsExtension", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__VideoEncoderOptionsExtension
#define soap_POST_send_tt__VideoEncoderOptionsExtension(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__VideoEncoderOptionsExtension(soap, data), 0) || soap_put_tt__VideoEncoderOptionsExtension(soap, data, "tt:VideoEncoderOptionsExtension", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__VideoEncoderOptionsExtension * SOAP_FMAC4 soap_get_tt__VideoEncoderOptionsExtension(struct soap*, struct tt__VideoEncoderOptionsExtension *, const char*, const char*);

#ifndef soap_read_tt__VideoEncoderOptionsExtension
#define soap_read_tt__VideoEncoderOptionsExtension(soap, data) ( ((data) ? (soap_default_tt__VideoEncoderOptionsExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__VideoEncoderOptionsExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__VideoEncoderOptionsExtension
#define soap_GET_tt__VideoEncoderOptionsExtension(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__VideoEncoderOptionsExtension(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__VideoEncoderOptionsExtension
#define soap_POST_recv_tt__VideoEncoderOptionsExtension(soap, data) ( soap_read_tt__VideoEncoderOptionsExtension(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__H264Options_DEFINED
#define SOAP_TYPE_tt__H264Options_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__H264Options(struct soap*, struct tt__H264Options *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__H264Options(struct soap*, const struct tt__H264Options *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__H264Options(struct soap*, const char*, int, const struct tt__H264Options *, const char*);
SOAP_FMAC3 struct tt__H264Options * SOAP_FMAC4 soap_in_tt__H264Options(struct soap*, const char*, struct tt__H264Options *, const char*);

SOAP_FMAC3 struct tt__H264Options * SOAP_FMAC4 soap_new_tt__H264Options(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__H264Options(struct soap*, const struct tt__H264Options *, const char*, const char*);

#ifndef soap_write_tt__H264Options
#define soap_write_tt__H264Options(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__H264Options(soap, data), 0) || soap_put_tt__H264Options(soap, data, "tt:H264Options", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__H264Options
#define soap_PUT_tt__H264Options(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__H264Options(soap, data), 0) || soap_put_tt__H264Options(soap, data, "tt:H264Options", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__H264Options
#define soap_PATCH_tt__H264Options(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__H264Options(soap, data), 0) || soap_put_tt__H264Options(soap, data, "tt:H264Options", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__H264Options
#define soap_POST_send_tt__H264Options(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__H264Options(soap, data), 0) || soap_put_tt__H264Options(soap, data, "tt:H264Options", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__H264Options * SOAP_FMAC4 soap_get_tt__H264Options(struct soap*, struct tt__H264Options *, const char*, const char*);

#ifndef soap_read_tt__H264Options
#define soap_read_tt__H264Options(soap, data) ( ((data) ? (soap_default_tt__H264Options(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__H264Options(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__H264Options
#define soap_GET_tt__H264Options(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__H264Options(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__H264Options
#define soap_POST_recv_tt__H264Options(soap, data) ( soap_read_tt__H264Options(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__Mpeg4Options_DEFINED
#define SOAP_TYPE_tt__Mpeg4Options_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__Mpeg4Options(struct soap*, struct tt__Mpeg4Options *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__Mpeg4Options(struct soap*, const struct tt__Mpeg4Options *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Mpeg4Options(struct soap*, const char*, int, const struct tt__Mpeg4Options *, const char*);
SOAP_FMAC3 struct tt__Mpeg4Options * SOAP_FMAC4 soap_in_tt__Mpeg4Options(struct soap*, const char*, struct tt__Mpeg4Options *, const char*);

SOAP_FMAC3 struct tt__Mpeg4Options * SOAP_FMAC4 soap_new_tt__Mpeg4Options(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__Mpeg4Options(struct soap*, const struct tt__Mpeg4Options *, const char*, const char*);

#ifndef soap_write_tt__Mpeg4Options
#define soap_write_tt__Mpeg4Options(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__Mpeg4Options(soap, data), 0) || soap_put_tt__Mpeg4Options(soap, data, "tt:Mpeg4Options", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__Mpeg4Options
#define soap_PUT_tt__Mpeg4Options(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__Mpeg4Options(soap, data), 0) || soap_put_tt__Mpeg4Options(soap, data, "tt:Mpeg4Options", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__Mpeg4Options
#define soap_PATCH_tt__Mpeg4Options(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__Mpeg4Options(soap, data), 0) || soap_put_tt__Mpeg4Options(soap, data, "tt:Mpeg4Options", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__Mpeg4Options
#define soap_POST_send_tt__Mpeg4Options(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__Mpeg4Options(soap, data), 0) || soap_put_tt__Mpeg4Options(soap, data, "tt:Mpeg4Options", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__Mpeg4Options * SOAP_FMAC4 soap_get_tt__Mpeg4Options(struct soap*, struct tt__Mpeg4Options *, const char*, const char*);

#ifndef soap_read_tt__Mpeg4Options
#define soap_read_tt__Mpeg4Options(soap, data) ( ((data) ? (soap_default_tt__Mpeg4Options(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Mpeg4Options(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__Mpeg4Options
#define soap_GET_tt__Mpeg4Options(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__Mpeg4Options(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__Mpeg4Options
#define soap_POST_recv_tt__Mpeg4Options(soap, data) ( soap_read_tt__Mpeg4Options(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__JpegOptions_DEFINED
#define SOAP_TYPE_tt__JpegOptions_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__JpegOptions(struct soap*, struct tt__JpegOptions *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__JpegOptions(struct soap*, const struct tt__JpegOptions *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__JpegOptions(struct soap*, const char*, int, const struct tt__JpegOptions *, const char*);
SOAP_FMAC3 struct tt__JpegOptions * SOAP_FMAC4 soap_in_tt__JpegOptions(struct soap*, const char*, struct tt__JpegOptions *, const char*);

SOAP_FMAC3 struct tt__JpegOptions * SOAP_FMAC4 soap_new_tt__JpegOptions(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__JpegOptions(struct soap*, const struct tt__JpegOptions *, const char*, const char*);

#ifndef soap_write_tt__JpegOptions
#define soap_write_tt__JpegOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__JpegOptions(soap, data), 0) || soap_put_tt__JpegOptions(soap, data, "tt:JpegOptions", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__JpegOptions
#define soap_PUT_tt__JpegOptions(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__JpegOptions(soap, data), 0) || soap_put_tt__JpegOptions(soap, data, "tt:JpegOptions", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__JpegOptions
#define soap_PATCH_tt__JpegOptions(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__JpegOptions(soap, data), 0) || soap_put_tt__JpegOptions(soap, data, "tt:JpegOptions", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__JpegOptions
#define soap_POST_send_tt__JpegOptions(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__JpegOptions(soap, data), 0) || soap_put_tt__JpegOptions(soap, data, "tt:JpegOptions", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__JpegOptions * SOAP_FMAC4 soap_get_tt__JpegOptions(struct soap*, struct tt__JpegOptions *, const char*, const char*);

#ifndef soap_read_tt__JpegOptions
#define soap_read_tt__JpegOptions(soap, data) ( ((data) ? (soap_default_tt__JpegOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__JpegOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__JpegOptions
#define soap_GET_tt__JpegOptions(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__JpegOptions(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__JpegOptions
#define soap_POST_recv_tt__JpegOptions(soap, data) ( soap_read_tt__JpegOptions(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__VideoEncoderConfigurationOptions_DEFINED
#define SOAP_TYPE_tt__VideoEncoderConfigurationOptions_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__VideoEncoderConfigurationOptions(struct soap*, struct tt__VideoEncoderConfigurationOptions *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__VideoEncoderConfigurationOptions(struct soap*, const struct tt__VideoEncoderConfigurationOptions *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoEncoderConfigurationOptions(struct soap*, const char*, int, const struct tt__VideoEncoderConfigurationOptions *, const char*);
SOAP_FMAC3 struct tt__VideoEncoderConfigurationOptions * SOAP_FMAC4 soap_in_tt__VideoEncoderConfigurationOptions(struct soap*, const char*, struct tt__VideoEncoderConfigurationOptions *, const char*);

SOAP_FMAC3 struct tt__VideoEncoderConfigurationOptions * SOAP_FMAC4 soap_new_tt__VideoEncoderConfigurationOptions(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__VideoEncoderConfigurationOptions(struct soap*, const struct tt__VideoEncoderConfigurationOptions *, const char*, const char*);

#ifndef soap_write_tt__VideoEncoderConfigurationOptions
#define soap_write_tt__VideoEncoderConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__VideoEncoderConfigurationOptions(soap, data), 0) || soap_put_tt__VideoEncoderConfigurationOptions(soap, data, "tt:VideoEncoderConfigurationOptions", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__VideoEncoderConfigurationOptions
#define soap_PUT_tt__VideoEncoderConfigurationOptions(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__VideoEncoderConfigurationOptions(soap, data), 0) || soap_put_tt__VideoEncoderConfigurationOptions(soap, data, "tt:VideoEncoderConfigurationOptions", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__VideoEncoderConfigurationOptions
#define soap_PATCH_tt__VideoEncoderConfigurationOptions(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__VideoEncoderConfigurationOptions(soap, data), 0) || soap_put_tt__VideoEncoderConfigurationOptions(soap, data, "tt:VideoEncoderConfigurationOptions", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__VideoEncoderConfigurationOptions
#define soap_POST_send_tt__VideoEncoderConfigurationOptions(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__VideoEncoderConfigurationOptions(soap, data), 0) || soap_put_tt__VideoEncoderConfigurationOptions(soap, data, "tt:VideoEncoderConfigurationOptions", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__VideoEncoderConfigurationOptions * SOAP_FMAC4 soap_get_tt__VideoEncoderConfigurationOptions(struct soap*, struct tt__VideoEncoderConfigurationOptions *, const char*, const char*);

#ifndef soap_read_tt__VideoEncoderConfigurationOptions
#define soap_read_tt__VideoEncoderConfigurationOptions(soap, data) ( ((data) ? (soap_default_tt__VideoEncoderConfigurationOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__VideoEncoderConfigurationOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__VideoEncoderConfigurationOptions
#define soap_GET_tt__VideoEncoderConfigurationOptions(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__VideoEncoderConfigurationOptions(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__VideoEncoderConfigurationOptions
#define soap_POST_recv_tt__VideoEncoderConfigurationOptions(soap, data) ( soap_read_tt__VideoEncoderConfigurationOptions(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__H264Configuration_DEFINED
#define SOAP_TYPE_tt__H264Configuration_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__H264Configuration(struct soap*, struct tt__H264Configuration *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__H264Configuration(struct soap*, const struct tt__H264Configuration *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__H264Configuration(struct soap*, const char*, int, const struct tt__H264Configuration *, const char*);
SOAP_FMAC3 struct tt__H264Configuration * SOAP_FMAC4 soap_in_tt__H264Configuration(struct soap*, const char*, struct tt__H264Configuration *, const char*);

SOAP_FMAC3 struct tt__H264Configuration * SOAP_FMAC4 soap_new_tt__H264Configuration(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__H264Configuration(struct soap*, const struct tt__H264Configuration *, const char*, const char*);

#ifndef soap_write_tt__H264Configuration
#define soap_write_tt__H264Configuration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__H264Configuration(soap, data), 0) || soap_put_tt__H264Configuration(soap, data, "tt:H264Configuration", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__H264Configuration
#define soap_PUT_tt__H264Configuration(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__H264Configuration(soap, data), 0) || soap_put_tt__H264Configuration(soap, data, "tt:H264Configuration", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__H264Configuration
#define soap_PATCH_tt__H264Configuration(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__H264Configuration(soap, data), 0) || soap_put_tt__H264Configuration(soap, data, "tt:H264Configuration", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__H264Configuration
#define soap_POST_send_tt__H264Configuration(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__H264Configuration(soap, data), 0) || soap_put_tt__H264Configuration(soap, data, "tt:H264Configuration", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__H264Configuration * SOAP_FMAC4 soap_get_tt__H264Configuration(struct soap*, struct tt__H264Configuration *, const char*, const char*);

#ifndef soap_read_tt__H264Configuration
#define soap_read_tt__H264Configuration(soap, data) ( ((data) ? (soap_default_tt__H264Configuration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__H264Configuration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__H264Configuration
#define soap_GET_tt__H264Configuration(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__H264Configuration(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__H264Configuration
#define soap_POST_recv_tt__H264Configuration(soap, data) ( soap_read_tt__H264Configuration(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__Mpeg4Configuration_DEFINED
#define SOAP_TYPE_tt__Mpeg4Configuration_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__Mpeg4Configuration(struct soap*, struct tt__Mpeg4Configuration *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__Mpeg4Configuration(struct soap*, const struct tt__Mpeg4Configuration *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Mpeg4Configuration(struct soap*, const char*, int, const struct tt__Mpeg4Configuration *, const char*);
SOAP_FMAC3 struct tt__Mpeg4Configuration * SOAP_FMAC4 soap_in_tt__Mpeg4Configuration(struct soap*, const char*, struct tt__Mpeg4Configuration *, const char*);

SOAP_FMAC3 struct tt__Mpeg4Configuration * SOAP_FMAC4 soap_new_tt__Mpeg4Configuration(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__Mpeg4Configuration(struct soap*, const struct tt__Mpeg4Configuration *, const char*, const char*);

#ifndef soap_write_tt__Mpeg4Configuration
#define soap_write_tt__Mpeg4Configuration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__Mpeg4Configuration(soap, data), 0) || soap_put_tt__Mpeg4Configuration(soap, data, "tt:Mpeg4Configuration", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__Mpeg4Configuration
#define soap_PUT_tt__Mpeg4Configuration(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__Mpeg4Configuration(soap, data), 0) || soap_put_tt__Mpeg4Configuration(soap, data, "tt:Mpeg4Configuration", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__Mpeg4Configuration
#define soap_PATCH_tt__Mpeg4Configuration(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__Mpeg4Configuration(soap, data), 0) || soap_put_tt__Mpeg4Configuration(soap, data, "tt:Mpeg4Configuration", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__Mpeg4Configuration
#define soap_POST_send_tt__Mpeg4Configuration(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__Mpeg4Configuration(soap, data), 0) || soap_put_tt__Mpeg4Configuration(soap, data, "tt:Mpeg4Configuration", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__Mpeg4Configuration * SOAP_FMAC4 soap_get_tt__Mpeg4Configuration(struct soap*, struct tt__Mpeg4Configuration *, const char*, const char*);

#ifndef soap_read_tt__Mpeg4Configuration
#define soap_read_tt__Mpeg4Configuration(soap, data) ( ((data) ? (soap_default_tt__Mpeg4Configuration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Mpeg4Configuration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__Mpeg4Configuration
#define soap_GET_tt__Mpeg4Configuration(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__Mpeg4Configuration(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__Mpeg4Configuration
#define soap_POST_recv_tt__Mpeg4Configuration(soap, data) ( soap_read_tt__Mpeg4Configuration(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__VideoRateControl_DEFINED
#define SOAP_TYPE_tt__VideoRateControl_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__VideoRateControl(struct soap*, struct tt__VideoRateControl *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__VideoRateControl(struct soap*, const struct tt__VideoRateControl *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoRateControl(struct soap*, const char*, int, const struct tt__VideoRateControl *, const char*);
SOAP_FMAC3 struct tt__VideoRateControl * SOAP_FMAC4 soap_in_tt__VideoRateControl(struct soap*, const char*, struct tt__VideoRateControl *, const char*);

SOAP_FMAC3 struct tt__VideoRateControl * SOAP_FMAC4 soap_new_tt__VideoRateControl(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__VideoRateControl(struct soap*, const struct tt__VideoRateControl *, const char*, const char*);

#ifndef soap_write_tt__VideoRateControl
#define soap_write_tt__VideoRateControl(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__VideoRateControl(soap, data), 0) || soap_put_tt__VideoRateControl(soap, data, "tt:VideoRateControl", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__VideoRateControl
#define soap_PUT_tt__VideoRateControl(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__VideoRateControl(soap, data), 0) || soap_put_tt__VideoRateControl(soap, data, "tt:VideoRateControl", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__VideoRateControl
#define soap_PATCH_tt__VideoRateControl(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__VideoRateControl(soap, data), 0) || soap_put_tt__VideoRateControl(soap, data, "tt:VideoRateControl", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__VideoRateControl
#define soap_POST_send_tt__VideoRateControl(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__VideoRateControl(soap, data), 0) || soap_put_tt__VideoRateControl(soap, data, "tt:VideoRateControl", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__VideoRateControl * SOAP_FMAC4 soap_get_tt__VideoRateControl(struct soap*, struct tt__VideoRateControl *, const char*, const char*);

#ifndef soap_read_tt__VideoRateControl
#define soap_read_tt__VideoRateControl(soap, data) ( ((data) ? (soap_default_tt__VideoRateControl(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__VideoRateControl(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__VideoRateControl
#define soap_GET_tt__VideoRateControl(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__VideoRateControl(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__VideoRateControl
#define soap_POST_recv_tt__VideoRateControl(soap, data) ( soap_read_tt__VideoRateControl(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__VideoResolution_DEFINED
#define SOAP_TYPE_tt__VideoResolution_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__VideoResolution(struct soap*, struct tt__VideoResolution *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__VideoResolution(struct soap*, const struct tt__VideoResolution *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoResolution(struct soap*, const char*, int, const struct tt__VideoResolution *, const char*);
SOAP_FMAC3 struct tt__VideoResolution * SOAP_FMAC4 soap_in_tt__VideoResolution(struct soap*, const char*, struct tt__VideoResolution *, const char*);

SOAP_FMAC3 struct tt__VideoResolution * SOAP_FMAC4 soap_new_tt__VideoResolution(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__VideoResolution(struct soap*, const struct tt__VideoResolution *, const char*, const char*);

#ifndef soap_write_tt__VideoResolution
#define soap_write_tt__VideoResolution(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__VideoResolution(soap, data), 0) || soap_put_tt__VideoResolution(soap, data, "tt:VideoResolution", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__VideoResolution
#define soap_PUT_tt__VideoResolution(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__VideoResolution(soap, data), 0) || soap_put_tt__VideoResolution(soap, data, "tt:VideoResolution", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__VideoResolution
#define soap_PATCH_tt__VideoResolution(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__VideoResolution(soap, data), 0) || soap_put_tt__VideoResolution(soap, data, "tt:VideoResolution", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__VideoResolution
#define soap_POST_send_tt__VideoResolution(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__VideoResolution(soap, data), 0) || soap_put_tt__VideoResolution(soap, data, "tt:VideoResolution", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__VideoResolution * SOAP_FMAC4 soap_get_tt__VideoResolution(struct soap*, struct tt__VideoResolution *, const char*, const char*);

#ifndef soap_read_tt__VideoResolution
#define soap_read_tt__VideoResolution(soap, data) ( ((data) ? (soap_default_tt__VideoResolution(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__VideoResolution(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__VideoResolution
#define soap_GET_tt__VideoResolution(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__VideoResolution(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__VideoResolution
#define soap_POST_recv_tt__VideoResolution(soap, data) ( soap_read_tt__VideoResolution(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__ItemListDescriptionExtension_DEFINED
#define SOAP_TYPE_tt__ItemListDescriptionExtension_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__ItemListDescriptionExtension(struct soap*, struct tt__ItemListDescriptionExtension *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__ItemListDescriptionExtension(struct soap*, const struct tt__ItemListDescriptionExtension *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ItemListDescriptionExtension(struct soap*, const char*, int, const struct tt__ItemListDescriptionExtension *, const char*);
SOAP_FMAC3 struct tt__ItemListDescriptionExtension * SOAP_FMAC4 soap_in_tt__ItemListDescriptionExtension(struct soap*, const char*, struct tt__ItemListDescriptionExtension *, const char*);

SOAP_FMAC3 struct tt__ItemListDescriptionExtension * SOAP_FMAC4 soap_new_tt__ItemListDescriptionExtension(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__ItemListDescriptionExtension(struct soap*, const struct tt__ItemListDescriptionExtension *, const char*, const char*);

#ifndef soap_write_tt__ItemListDescriptionExtension
#define soap_write_tt__ItemListDescriptionExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__ItemListDescriptionExtension(soap, data), 0) || soap_put_tt__ItemListDescriptionExtension(soap, data, "tt:ItemListDescriptionExtension", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__ItemListDescriptionExtension
#define soap_PUT_tt__ItemListDescriptionExtension(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__ItemListDescriptionExtension(soap, data), 0) || soap_put_tt__ItemListDescriptionExtension(soap, data, "tt:ItemListDescriptionExtension", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__ItemListDescriptionExtension
#define soap_PATCH_tt__ItemListDescriptionExtension(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__ItemListDescriptionExtension(soap, data), 0) || soap_put_tt__ItemListDescriptionExtension(soap, data, "tt:ItemListDescriptionExtension", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__ItemListDescriptionExtension
#define soap_POST_send_tt__ItemListDescriptionExtension(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__ItemListDescriptionExtension(soap, data), 0) || soap_put_tt__ItemListDescriptionExtension(soap, data, "tt:ItemListDescriptionExtension", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__ItemListDescriptionExtension * SOAP_FMAC4 soap_get_tt__ItemListDescriptionExtension(struct soap*, struct tt__ItemListDescriptionExtension *, const char*, const char*);

#ifndef soap_read_tt__ItemListDescriptionExtension
#define soap_read_tt__ItemListDescriptionExtension(soap, data) ( ((data) ? (soap_default_tt__ItemListDescriptionExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ItemListDescriptionExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__ItemListDescriptionExtension
#define soap_GET_tt__ItemListDescriptionExtension(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__ItemListDescriptionExtension(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__ItemListDescriptionExtension
#define soap_POST_recv_tt__ItemListDescriptionExtension(soap, data) ( soap_read_tt__ItemListDescriptionExtension(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__tt__ItemListDescription_ElementItemDescription_DEFINED
#define SOAP_TYPE__tt__ItemListDescription_ElementItemDescription_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__tt__ItemListDescription_ElementItemDescription(struct soap*, struct _tt__ItemListDescription_ElementItemDescription *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tt__ItemListDescription_ElementItemDescription(struct soap*, const struct _tt__ItemListDescription_ElementItemDescription *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tt__ItemListDescription_ElementItemDescription(struct soap*, const char*, int, const struct _tt__ItemListDescription_ElementItemDescription *, const char*);
SOAP_FMAC3 struct _tt__ItemListDescription_ElementItemDescription * SOAP_FMAC4 soap_in__tt__ItemListDescription_ElementItemDescription(struct soap*, const char*, struct _tt__ItemListDescription_ElementItemDescription *, const char*);

SOAP_FMAC3 struct _tt__ItemListDescription_ElementItemDescription * SOAP_FMAC4 soap_new__tt__ItemListDescription_ElementItemDescription(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__tt__ItemListDescription_ElementItemDescription(struct soap*, const struct _tt__ItemListDescription_ElementItemDescription *, const char*, const char*);

#ifndef soap_write__tt__ItemListDescription_ElementItemDescription
#define soap_write__tt__ItemListDescription_ElementItemDescription(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__tt__ItemListDescription_ElementItemDescription(soap, data), 0) || soap_put__tt__ItemListDescription_ElementItemDescription(soap, data, "tt:ItemListDescription-ElementItemDescription", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__tt__ItemListDescription_ElementItemDescription
#define soap_PUT__tt__ItemListDescription_ElementItemDescription(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tt__ItemListDescription_ElementItemDescription(soap, data), 0) || soap_put__tt__ItemListDescription_ElementItemDescription(soap, data, "tt:ItemListDescription-ElementItemDescription", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__tt__ItemListDescription_ElementItemDescription
#define soap_PATCH__tt__ItemListDescription_ElementItemDescription(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tt__ItemListDescription_ElementItemDescription(soap, data), 0) || soap_put__tt__ItemListDescription_ElementItemDescription(soap, data, "tt:ItemListDescription-ElementItemDescription", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__tt__ItemListDescription_ElementItemDescription
#define soap_POST_send__tt__ItemListDescription_ElementItemDescription(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tt__ItemListDescription_ElementItemDescription(soap, data), 0) || soap_put__tt__ItemListDescription_ElementItemDescription(soap, data, "tt:ItemListDescription-ElementItemDescription", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _tt__ItemListDescription_ElementItemDescription * SOAP_FMAC4 soap_get__tt__ItemListDescription_ElementItemDescription(struct soap*, struct _tt__ItemListDescription_ElementItemDescription *, const char*, const char*);

#ifndef soap_read__tt__ItemListDescription_ElementItemDescription
#define soap_read__tt__ItemListDescription_ElementItemDescription(soap, data) ( ((data) ? (soap_default__tt__ItemListDescription_ElementItemDescription(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__tt__ItemListDescription_ElementItemDescription(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__tt__ItemListDescription_ElementItemDescription
#define soap_GET__tt__ItemListDescription_ElementItemDescription(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__tt__ItemListDescription_ElementItemDescription(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__tt__ItemListDescription_ElementItemDescription
#define soap_POST_recv__tt__ItemListDescription_ElementItemDescription(soap, data) ( soap_read__tt__ItemListDescription_ElementItemDescription(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__tt__ItemListDescription_SimpleItemDescription_DEFINED
#define SOAP_TYPE__tt__ItemListDescription_SimpleItemDescription_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__tt__ItemListDescription_SimpleItemDescription(struct soap*, struct _tt__ItemListDescription_SimpleItemDescription *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tt__ItemListDescription_SimpleItemDescription(struct soap*, const struct _tt__ItemListDescription_SimpleItemDescription *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tt__ItemListDescription_SimpleItemDescription(struct soap*, const char*, int, const struct _tt__ItemListDescription_SimpleItemDescription *, const char*);
SOAP_FMAC3 struct _tt__ItemListDescription_SimpleItemDescription * SOAP_FMAC4 soap_in__tt__ItemListDescription_SimpleItemDescription(struct soap*, const char*, struct _tt__ItemListDescription_SimpleItemDescription *, const char*);

SOAP_FMAC3 struct _tt__ItemListDescription_SimpleItemDescription * SOAP_FMAC4 soap_new__tt__ItemListDescription_SimpleItemDescription(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__tt__ItemListDescription_SimpleItemDescription(struct soap*, const struct _tt__ItemListDescription_SimpleItemDescription *, const char*, const char*);

#ifndef soap_write__tt__ItemListDescription_SimpleItemDescription
#define soap_write__tt__ItemListDescription_SimpleItemDescription(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__tt__ItemListDescription_SimpleItemDescription(soap, data), 0) || soap_put__tt__ItemListDescription_SimpleItemDescription(soap, data, "tt:ItemListDescription-SimpleItemDescription", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__tt__ItemListDescription_SimpleItemDescription
#define soap_PUT__tt__ItemListDescription_SimpleItemDescription(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tt__ItemListDescription_SimpleItemDescription(soap, data), 0) || soap_put__tt__ItemListDescription_SimpleItemDescription(soap, data, "tt:ItemListDescription-SimpleItemDescription", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__tt__ItemListDescription_SimpleItemDescription
#define soap_PATCH__tt__ItemListDescription_SimpleItemDescription(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tt__ItemListDescription_SimpleItemDescription(soap, data), 0) || soap_put__tt__ItemListDescription_SimpleItemDescription(soap, data, "tt:ItemListDescription-SimpleItemDescription", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__tt__ItemListDescription_SimpleItemDescription
#define soap_POST_send__tt__ItemListDescription_SimpleItemDescription(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tt__ItemListDescription_SimpleItemDescription(soap, data), 0) || soap_put__tt__ItemListDescription_SimpleItemDescription(soap, data, "tt:ItemListDescription-SimpleItemDescription", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _tt__ItemListDescription_SimpleItemDescription * SOAP_FMAC4 soap_get__tt__ItemListDescription_SimpleItemDescription(struct soap*, struct _tt__ItemListDescription_SimpleItemDescription *, const char*, const char*);

#ifndef soap_read__tt__ItemListDescription_SimpleItemDescription
#define soap_read__tt__ItemListDescription_SimpleItemDescription(soap, data) ( ((data) ? (soap_default__tt__ItemListDescription_SimpleItemDescription(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__tt__ItemListDescription_SimpleItemDescription(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__tt__ItemListDescription_SimpleItemDescription
#define soap_GET__tt__ItemListDescription_SimpleItemDescription(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__tt__ItemListDescription_SimpleItemDescription(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__tt__ItemListDescription_SimpleItemDescription
#define soap_POST_recv__tt__ItemListDescription_SimpleItemDescription(soap, data) ( soap_read__tt__ItemListDescription_SimpleItemDescription(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__MessageDescriptionExtension_DEFINED
#define SOAP_TYPE_tt__MessageDescriptionExtension_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__MessageDescriptionExtension(struct soap*, struct tt__MessageDescriptionExtension *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__MessageDescriptionExtension(struct soap*, const struct tt__MessageDescriptionExtension *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MessageDescriptionExtension(struct soap*, const char*, int, const struct tt__MessageDescriptionExtension *, const char*);
SOAP_FMAC3 struct tt__MessageDescriptionExtension * SOAP_FMAC4 soap_in_tt__MessageDescriptionExtension(struct soap*, const char*, struct tt__MessageDescriptionExtension *, const char*);

SOAP_FMAC3 struct tt__MessageDescriptionExtension * SOAP_FMAC4 soap_new_tt__MessageDescriptionExtension(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__MessageDescriptionExtension(struct soap*, const struct tt__MessageDescriptionExtension *, const char*, const char*);

#ifndef soap_write_tt__MessageDescriptionExtension
#define soap_write_tt__MessageDescriptionExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__MessageDescriptionExtension(soap, data), 0) || soap_put_tt__MessageDescriptionExtension(soap, data, "tt:MessageDescriptionExtension", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__MessageDescriptionExtension
#define soap_PUT_tt__MessageDescriptionExtension(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__MessageDescriptionExtension(soap, data), 0) || soap_put_tt__MessageDescriptionExtension(soap, data, "tt:MessageDescriptionExtension", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__MessageDescriptionExtension
#define soap_PATCH_tt__MessageDescriptionExtension(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__MessageDescriptionExtension(soap, data), 0) || soap_put_tt__MessageDescriptionExtension(soap, data, "tt:MessageDescriptionExtension", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__MessageDescriptionExtension
#define soap_POST_send_tt__MessageDescriptionExtension(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__MessageDescriptionExtension(soap, data), 0) || soap_put_tt__MessageDescriptionExtension(soap, data, "tt:MessageDescriptionExtension", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__MessageDescriptionExtension * SOAP_FMAC4 soap_get_tt__MessageDescriptionExtension(struct soap*, struct tt__MessageDescriptionExtension *, const char*, const char*);

#ifndef soap_read_tt__MessageDescriptionExtension
#define soap_read_tt__MessageDescriptionExtension(soap, data) ( ((data) ? (soap_default_tt__MessageDescriptionExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__MessageDescriptionExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__MessageDescriptionExtension
#define soap_GET_tt__MessageDescriptionExtension(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__MessageDescriptionExtension(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__MessageDescriptionExtension
#define soap_POST_recv_tt__MessageDescriptionExtension(soap, data) ( soap_read_tt__MessageDescriptionExtension(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__ItemListDescription_DEFINED
#define SOAP_TYPE_tt__ItemListDescription_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__ItemListDescription(struct soap*, struct tt__ItemListDescription *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__ItemListDescription(struct soap*, const struct tt__ItemListDescription *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ItemListDescription(struct soap*, const char*, int, const struct tt__ItemListDescription *, const char*);
SOAP_FMAC3 struct tt__ItemListDescription * SOAP_FMAC4 soap_in_tt__ItemListDescription(struct soap*, const char*, struct tt__ItemListDescription *, const char*);

SOAP_FMAC3 struct tt__ItemListDescription * SOAP_FMAC4 soap_new_tt__ItemListDescription(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__ItemListDescription(struct soap*, const struct tt__ItemListDescription *, const char*, const char*);

#ifndef soap_write_tt__ItemListDescription
#define soap_write_tt__ItemListDescription(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__ItemListDescription(soap, data), 0) || soap_put_tt__ItemListDescription(soap, data, "tt:ItemListDescription", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__ItemListDescription
#define soap_PUT_tt__ItemListDescription(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__ItemListDescription(soap, data), 0) || soap_put_tt__ItemListDescription(soap, data, "tt:ItemListDescription", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__ItemListDescription
#define soap_PATCH_tt__ItemListDescription(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__ItemListDescription(soap, data), 0) || soap_put_tt__ItemListDescription(soap, data, "tt:ItemListDescription", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__ItemListDescription
#define soap_POST_send_tt__ItemListDescription(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__ItemListDescription(soap, data), 0) || soap_put_tt__ItemListDescription(soap, data, "tt:ItemListDescription", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__ItemListDescription * SOAP_FMAC4 soap_get_tt__ItemListDescription(struct soap*, struct tt__ItemListDescription *, const char*, const char*);

#ifndef soap_read_tt__ItemListDescription
#define soap_read_tt__ItemListDescription(soap, data) ( ((data) ? (soap_default_tt__ItemListDescription(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ItemListDescription(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__ItemListDescription
#define soap_GET_tt__ItemListDescription(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__ItemListDescription(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__ItemListDescription
#define soap_POST_recv_tt__ItemListDescription(soap, data) ( soap_read_tt__ItemListDescription(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__MessageDescription_DEFINED
#define SOAP_TYPE_tt__MessageDescription_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__MessageDescription(struct soap*, struct tt__MessageDescription *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__MessageDescription(struct soap*, const struct tt__MessageDescription *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MessageDescription(struct soap*, const char*, int, const struct tt__MessageDescription *, const char*);
SOAP_FMAC3 struct tt__MessageDescription * SOAP_FMAC4 soap_in_tt__MessageDescription(struct soap*, const char*, struct tt__MessageDescription *, const char*);

SOAP_FMAC3 struct tt__MessageDescription * SOAP_FMAC4 soap_new_tt__MessageDescription(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__MessageDescription(struct soap*, const struct tt__MessageDescription *, const char*, const char*);

#ifndef soap_write_tt__MessageDescription
#define soap_write_tt__MessageDescription(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__MessageDescription(soap, data), 0) || soap_put_tt__MessageDescription(soap, data, "tt:MessageDescription", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__MessageDescription
#define soap_PUT_tt__MessageDescription(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__MessageDescription(soap, data), 0) || soap_put_tt__MessageDescription(soap, data, "tt:MessageDescription", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__MessageDescription
#define soap_PATCH_tt__MessageDescription(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__MessageDescription(soap, data), 0) || soap_put_tt__MessageDescription(soap, data, "tt:MessageDescription", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__MessageDescription
#define soap_POST_send_tt__MessageDescription(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__MessageDescription(soap, data), 0) || soap_put_tt__MessageDescription(soap, data, "tt:MessageDescription", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__MessageDescription * SOAP_FMAC4 soap_get_tt__MessageDescription(struct soap*, struct tt__MessageDescription *, const char*, const char*);

#ifndef soap_read_tt__MessageDescription
#define soap_read_tt__MessageDescription(soap, data) ( ((data) ? (soap_default_tt__MessageDescription(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__MessageDescription(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__MessageDescription
#define soap_GET_tt__MessageDescription(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__MessageDescription(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__MessageDescription
#define soap_POST_recv_tt__MessageDescription(soap, data) ( soap_read_tt__MessageDescription(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__ItemListExtension_DEFINED
#define SOAP_TYPE_tt__ItemListExtension_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__ItemListExtension(struct soap*, struct tt__ItemListExtension *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__ItemListExtension(struct soap*, const struct tt__ItemListExtension *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ItemListExtension(struct soap*, const char*, int, const struct tt__ItemListExtension *, const char*);
SOAP_FMAC3 struct tt__ItemListExtension * SOAP_FMAC4 soap_in_tt__ItemListExtension(struct soap*, const char*, struct tt__ItemListExtension *, const char*);

SOAP_FMAC3 struct tt__ItemListExtension * SOAP_FMAC4 soap_new_tt__ItemListExtension(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__ItemListExtension(struct soap*, const struct tt__ItemListExtension *, const char*, const char*);

#ifndef soap_write_tt__ItemListExtension
#define soap_write_tt__ItemListExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__ItemListExtension(soap, data), 0) || soap_put_tt__ItemListExtension(soap, data, "tt:ItemListExtension", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__ItemListExtension
#define soap_PUT_tt__ItemListExtension(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__ItemListExtension(soap, data), 0) || soap_put_tt__ItemListExtension(soap, data, "tt:ItemListExtension", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__ItemListExtension
#define soap_PATCH_tt__ItemListExtension(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__ItemListExtension(soap, data), 0) || soap_put_tt__ItemListExtension(soap, data, "tt:ItemListExtension", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__ItemListExtension
#define soap_POST_send_tt__ItemListExtension(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__ItemListExtension(soap, data), 0) || soap_put_tt__ItemListExtension(soap, data, "tt:ItemListExtension", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__ItemListExtension * SOAP_FMAC4 soap_get_tt__ItemListExtension(struct soap*, struct tt__ItemListExtension *, const char*, const char*);

#ifndef soap_read_tt__ItemListExtension
#define soap_read_tt__ItemListExtension(soap, data) ( ((data) ? (soap_default_tt__ItemListExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ItemListExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__ItemListExtension
#define soap_GET_tt__ItemListExtension(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__ItemListExtension(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__ItemListExtension
#define soap_POST_recv_tt__ItemListExtension(soap, data) ( soap_read_tt__ItemListExtension(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__tt__ItemList_ElementItem_DEFINED
#define SOAP_TYPE__tt__ItemList_ElementItem_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__tt__ItemList_ElementItem(struct soap*, struct _tt__ItemList_ElementItem *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tt__ItemList_ElementItem(struct soap*, const struct _tt__ItemList_ElementItem *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tt__ItemList_ElementItem(struct soap*, const char*, int, const struct _tt__ItemList_ElementItem *, const char*);
SOAP_FMAC3 struct _tt__ItemList_ElementItem * SOAP_FMAC4 soap_in__tt__ItemList_ElementItem(struct soap*, const char*, struct _tt__ItemList_ElementItem *, const char*);

SOAP_FMAC3 struct _tt__ItemList_ElementItem * SOAP_FMAC4 soap_new__tt__ItemList_ElementItem(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__tt__ItemList_ElementItem(struct soap*, const struct _tt__ItemList_ElementItem *, const char*, const char*);

#ifndef soap_write__tt__ItemList_ElementItem
#define soap_write__tt__ItemList_ElementItem(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__tt__ItemList_ElementItem(soap, data), 0) || soap_put__tt__ItemList_ElementItem(soap, data, "tt:ItemList-ElementItem", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__tt__ItemList_ElementItem
#define soap_PUT__tt__ItemList_ElementItem(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tt__ItemList_ElementItem(soap, data), 0) || soap_put__tt__ItemList_ElementItem(soap, data, "tt:ItemList-ElementItem", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__tt__ItemList_ElementItem
#define soap_PATCH__tt__ItemList_ElementItem(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tt__ItemList_ElementItem(soap, data), 0) || soap_put__tt__ItemList_ElementItem(soap, data, "tt:ItemList-ElementItem", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__tt__ItemList_ElementItem
#define soap_POST_send__tt__ItemList_ElementItem(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tt__ItemList_ElementItem(soap, data), 0) || soap_put__tt__ItemList_ElementItem(soap, data, "tt:ItemList-ElementItem", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _tt__ItemList_ElementItem * SOAP_FMAC4 soap_get__tt__ItemList_ElementItem(struct soap*, struct _tt__ItemList_ElementItem *, const char*, const char*);

#ifndef soap_read__tt__ItemList_ElementItem
#define soap_read__tt__ItemList_ElementItem(soap, data) ( ((data) ? (soap_default__tt__ItemList_ElementItem(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__tt__ItemList_ElementItem(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__tt__ItemList_ElementItem
#define soap_GET__tt__ItemList_ElementItem(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__tt__ItemList_ElementItem(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__tt__ItemList_ElementItem
#define soap_POST_recv__tt__ItemList_ElementItem(soap, data) ( soap_read__tt__ItemList_ElementItem(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__tt__ItemList_SimpleItem_DEFINED
#define SOAP_TYPE__tt__ItemList_SimpleItem_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__tt__ItemList_SimpleItem(struct soap*, struct _tt__ItemList_SimpleItem *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tt__ItemList_SimpleItem(struct soap*, const struct _tt__ItemList_SimpleItem *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tt__ItemList_SimpleItem(struct soap*, const char*, int, const struct _tt__ItemList_SimpleItem *, const char*);
SOAP_FMAC3 struct _tt__ItemList_SimpleItem * SOAP_FMAC4 soap_in__tt__ItemList_SimpleItem(struct soap*, const char*, struct _tt__ItemList_SimpleItem *, const char*);

SOAP_FMAC3 struct _tt__ItemList_SimpleItem * SOAP_FMAC4 soap_new__tt__ItemList_SimpleItem(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__tt__ItemList_SimpleItem(struct soap*, const struct _tt__ItemList_SimpleItem *, const char*, const char*);

#ifndef soap_write__tt__ItemList_SimpleItem
#define soap_write__tt__ItemList_SimpleItem(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__tt__ItemList_SimpleItem(soap, data), 0) || soap_put__tt__ItemList_SimpleItem(soap, data, "tt:ItemList-SimpleItem", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__tt__ItemList_SimpleItem
#define soap_PUT__tt__ItemList_SimpleItem(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tt__ItemList_SimpleItem(soap, data), 0) || soap_put__tt__ItemList_SimpleItem(soap, data, "tt:ItemList-SimpleItem", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__tt__ItemList_SimpleItem
#define soap_PATCH__tt__ItemList_SimpleItem(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tt__ItemList_SimpleItem(soap, data), 0) || soap_put__tt__ItemList_SimpleItem(soap, data, "tt:ItemList-SimpleItem", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__tt__ItemList_SimpleItem
#define soap_POST_send__tt__ItemList_SimpleItem(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tt__ItemList_SimpleItem(soap, data), 0) || soap_put__tt__ItemList_SimpleItem(soap, data, "tt:ItemList-SimpleItem", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _tt__ItemList_SimpleItem * SOAP_FMAC4 soap_get__tt__ItemList_SimpleItem(struct soap*, struct _tt__ItemList_SimpleItem *, const char*, const char*);

#ifndef soap_read__tt__ItemList_SimpleItem
#define soap_read__tt__ItemList_SimpleItem(soap, data) ( ((data) ? (soap_default__tt__ItemList_SimpleItem(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__tt__ItemList_SimpleItem(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__tt__ItemList_SimpleItem
#define soap_GET__tt__ItemList_SimpleItem(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__tt__ItemList_SimpleItem(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__tt__ItemList_SimpleItem
#define soap_POST_recv__tt__ItemList_SimpleItem(soap, data) ( soap_read__tt__ItemList_SimpleItem(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__ItemList_DEFINED
#define SOAP_TYPE_tt__ItemList_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__ItemList(struct soap*, struct tt__ItemList *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__ItemList(struct soap*, const struct tt__ItemList *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ItemList(struct soap*, const char*, int, const struct tt__ItemList *, const char*);
SOAP_FMAC3 struct tt__ItemList * SOAP_FMAC4 soap_in_tt__ItemList(struct soap*, const char*, struct tt__ItemList *, const char*);

SOAP_FMAC3 struct tt__ItemList * SOAP_FMAC4 soap_new_tt__ItemList(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__ItemList(struct soap*, const struct tt__ItemList *, const char*, const char*);

#ifndef soap_write_tt__ItemList
#define soap_write_tt__ItemList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__ItemList(soap, data), 0) || soap_put_tt__ItemList(soap, data, "tt:ItemList", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__ItemList
#define soap_PUT_tt__ItemList(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__ItemList(soap, data), 0) || soap_put_tt__ItemList(soap, data, "tt:ItemList", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__ItemList
#define soap_PATCH_tt__ItemList(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__ItemList(soap, data), 0) || soap_put_tt__ItemList(soap, data, "tt:ItemList", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__ItemList
#define soap_POST_send_tt__ItemList(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__ItemList(soap, data), 0) || soap_put_tt__ItemList(soap, data, "tt:ItemList", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__ItemList * SOAP_FMAC4 soap_get_tt__ItemList(struct soap*, struct tt__ItemList *, const char*, const char*);

#ifndef soap_read_tt__ItemList
#define soap_read_tt__ItemList(soap, data) ( ((data) ? (soap_default_tt__ItemList(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ItemList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__ItemList
#define soap_GET_tt__ItemList(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__ItemList(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__ItemList
#define soap_POST_recv_tt__ItemList(soap, data) ( soap_read_tt__ItemList(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__MessageExtension_DEFINED
#define SOAP_TYPE_tt__MessageExtension_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__MessageExtension(struct soap*, struct tt__MessageExtension *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__MessageExtension(struct soap*, const struct tt__MessageExtension *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MessageExtension(struct soap*, const char*, int, const struct tt__MessageExtension *, const char*);
SOAP_FMAC3 struct tt__MessageExtension * SOAP_FMAC4 soap_in_tt__MessageExtension(struct soap*, const char*, struct tt__MessageExtension *, const char*);

SOAP_FMAC3 struct tt__MessageExtension * SOAP_FMAC4 soap_new_tt__MessageExtension(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__MessageExtension(struct soap*, const struct tt__MessageExtension *, const char*, const char*);

#ifndef soap_write_tt__MessageExtension
#define soap_write_tt__MessageExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__MessageExtension(soap, data), 0) || soap_put_tt__MessageExtension(soap, data, "tt:MessageExtension", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__MessageExtension
#define soap_PUT_tt__MessageExtension(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__MessageExtension(soap, data), 0) || soap_put_tt__MessageExtension(soap, data, "tt:MessageExtension", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__MessageExtension
#define soap_PATCH_tt__MessageExtension(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__MessageExtension(soap, data), 0) || soap_put_tt__MessageExtension(soap, data, "tt:MessageExtension", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__MessageExtension
#define soap_POST_send_tt__MessageExtension(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__MessageExtension(soap, data), 0) || soap_put_tt__MessageExtension(soap, data, "tt:MessageExtension", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__MessageExtension * SOAP_FMAC4 soap_get_tt__MessageExtension(struct soap*, struct tt__MessageExtension *, const char*, const char*);

#ifndef soap_read_tt__MessageExtension
#define soap_read_tt__MessageExtension(soap, data) ( ((data) ? (soap_default_tt__MessageExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__MessageExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__MessageExtension
#define soap_GET_tt__MessageExtension(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__MessageExtension(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__MessageExtension
#define soap_POST_recv_tt__MessageExtension(soap, data) ( soap_read_tt__MessageExtension(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__PTZMoveStatus_DEFINED
#define SOAP_TYPE_tt__PTZMoveStatus_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__PTZMoveStatus(struct soap*, struct tt__PTZMoveStatus *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__PTZMoveStatus(struct soap*, const struct tt__PTZMoveStatus *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZMoveStatus(struct soap*, const char*, int, const struct tt__PTZMoveStatus *, const char*);
SOAP_FMAC3 struct tt__PTZMoveStatus * SOAP_FMAC4 soap_in_tt__PTZMoveStatus(struct soap*, const char*, struct tt__PTZMoveStatus *, const char*);

SOAP_FMAC3 struct tt__PTZMoveStatus * SOAP_FMAC4 soap_new_tt__PTZMoveStatus(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__PTZMoveStatus(struct soap*, const struct tt__PTZMoveStatus *, const char*, const char*);

#ifndef soap_write_tt__PTZMoveStatus
#define soap_write_tt__PTZMoveStatus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__PTZMoveStatus(soap, data), 0) || soap_put_tt__PTZMoveStatus(soap, data, "tt:PTZMoveStatus", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__PTZMoveStatus
#define soap_PUT_tt__PTZMoveStatus(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__PTZMoveStatus(soap, data), 0) || soap_put_tt__PTZMoveStatus(soap, data, "tt:PTZMoveStatus", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__PTZMoveStatus
#define soap_PATCH_tt__PTZMoveStatus(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__PTZMoveStatus(soap, data), 0) || soap_put_tt__PTZMoveStatus(soap, data, "tt:PTZMoveStatus", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__PTZMoveStatus
#define soap_POST_send_tt__PTZMoveStatus(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__PTZMoveStatus(soap, data), 0) || soap_put_tt__PTZMoveStatus(soap, data, "tt:PTZMoveStatus", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__PTZMoveStatus * SOAP_FMAC4 soap_get_tt__PTZMoveStatus(struct soap*, struct tt__PTZMoveStatus *, const char*, const char*);

#ifndef soap_read_tt__PTZMoveStatus
#define soap_read_tt__PTZMoveStatus(soap, data) ( ((data) ? (soap_default_tt__PTZMoveStatus(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PTZMoveStatus(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__PTZMoveStatus
#define soap_GET_tt__PTZMoveStatus(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__PTZMoveStatus(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__PTZMoveStatus
#define soap_POST_recv_tt__PTZMoveStatus(soap, data) ( soap_read_tt__PTZMoveStatus(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__PTZPreset_DEFINED
#define SOAP_TYPE_tt__PTZPreset_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__PTZPreset(struct soap*, struct tt__PTZPreset *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__PTZPreset(struct soap*, const struct tt__PTZPreset *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZPreset(struct soap*, const char*, int, const struct tt__PTZPreset *, const char*);
SOAP_FMAC3 struct tt__PTZPreset * SOAP_FMAC4 soap_in_tt__PTZPreset(struct soap*, const char*, struct tt__PTZPreset *, const char*);

SOAP_FMAC3 struct tt__PTZPreset * SOAP_FMAC4 soap_new_tt__PTZPreset(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__PTZPreset(struct soap*, const struct tt__PTZPreset *, const char*, const char*);

#ifndef soap_write_tt__PTZPreset
#define soap_write_tt__PTZPreset(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__PTZPreset(soap, data), 0) || soap_put_tt__PTZPreset(soap, data, "tt:PTZPreset", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__PTZPreset
#define soap_PUT_tt__PTZPreset(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__PTZPreset(soap, data), 0) || soap_put_tt__PTZPreset(soap, data, "tt:PTZPreset", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__PTZPreset
#define soap_PATCH_tt__PTZPreset(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__PTZPreset(soap, data), 0) || soap_put_tt__PTZPreset(soap, data, "tt:PTZPreset", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__PTZPreset
#define soap_POST_send_tt__PTZPreset(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__PTZPreset(soap, data), 0) || soap_put_tt__PTZPreset(soap, data, "tt:PTZPreset", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__PTZPreset * SOAP_FMAC4 soap_get_tt__PTZPreset(struct soap*, struct tt__PTZPreset *, const char*, const char*);

#ifndef soap_read_tt__PTZPreset
#define soap_read_tt__PTZPreset(soap, data) ( ((data) ? (soap_default_tt__PTZPreset(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PTZPreset(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__PTZPreset
#define soap_GET_tt__PTZPreset(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__PTZPreset(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__PTZPreset
#define soap_POST_recv_tt__PTZPreset(soap, data) ( soap_read_tt__PTZPreset(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__PTZSpeed_DEFINED
#define SOAP_TYPE_tt__PTZSpeed_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__PTZSpeed(struct soap*, struct tt__PTZSpeed *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__PTZSpeed(struct soap*, const struct tt__PTZSpeed *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZSpeed(struct soap*, const char*, int, const struct tt__PTZSpeed *, const char*);
SOAP_FMAC3 struct tt__PTZSpeed * SOAP_FMAC4 soap_in_tt__PTZSpeed(struct soap*, const char*, struct tt__PTZSpeed *, const char*);

SOAP_FMAC3 struct tt__PTZSpeed * SOAP_FMAC4 soap_new_tt__PTZSpeed(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__PTZSpeed(struct soap*, const struct tt__PTZSpeed *, const char*, const char*);

#ifndef soap_write_tt__PTZSpeed
#define soap_write_tt__PTZSpeed(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__PTZSpeed(soap, data), 0) || soap_put_tt__PTZSpeed(soap, data, "tt:PTZSpeed", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__PTZSpeed
#define soap_PUT_tt__PTZSpeed(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__PTZSpeed(soap, data), 0) || soap_put_tt__PTZSpeed(soap, data, "tt:PTZSpeed", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__PTZSpeed
#define soap_PATCH_tt__PTZSpeed(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__PTZSpeed(soap, data), 0) || soap_put_tt__PTZSpeed(soap, data, "tt:PTZSpeed", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__PTZSpeed
#define soap_POST_send_tt__PTZSpeed(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__PTZSpeed(soap, data), 0) || soap_put_tt__PTZSpeed(soap, data, "tt:PTZSpeed", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__PTZSpeed * SOAP_FMAC4 soap_get_tt__PTZSpeed(struct soap*, struct tt__PTZSpeed *, const char*, const char*);

#ifndef soap_read_tt__PTZSpeed
#define soap_read_tt__PTZSpeed(soap, data) ( ((data) ? (soap_default_tt__PTZSpeed(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PTZSpeed(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__PTZSpeed
#define soap_GET_tt__PTZSpeed(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__PTZSpeed(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__PTZSpeed
#define soap_POST_recv_tt__PTZSpeed(soap, data) ( soap_read_tt__PTZSpeed(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__PTZVector_DEFINED
#define SOAP_TYPE_tt__PTZVector_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__PTZVector(struct soap*, struct tt__PTZVector *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__PTZVector(struct soap*, const struct tt__PTZVector *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZVector(struct soap*, const char*, int, const struct tt__PTZVector *, const char*);
SOAP_FMAC3 struct tt__PTZVector * SOAP_FMAC4 soap_in_tt__PTZVector(struct soap*, const char*, struct tt__PTZVector *, const char*);

SOAP_FMAC3 struct tt__PTZVector * SOAP_FMAC4 soap_new_tt__PTZVector(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__PTZVector(struct soap*, const struct tt__PTZVector *, const char*, const char*);

#ifndef soap_write_tt__PTZVector
#define soap_write_tt__PTZVector(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__PTZVector(soap, data), 0) || soap_put_tt__PTZVector(soap, data, "tt:PTZVector", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__PTZVector
#define soap_PUT_tt__PTZVector(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__PTZVector(soap, data), 0) || soap_put_tt__PTZVector(soap, data, "tt:PTZVector", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__PTZVector
#define soap_PATCH_tt__PTZVector(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__PTZVector(soap, data), 0) || soap_put_tt__PTZVector(soap, data, "tt:PTZVector", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__PTZVector
#define soap_POST_send_tt__PTZVector(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__PTZVector(soap, data), 0) || soap_put_tt__PTZVector(soap, data, "tt:PTZVector", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__PTZVector * SOAP_FMAC4 soap_get_tt__PTZVector(struct soap*, struct tt__PTZVector *, const char*, const char*);

#ifndef soap_read_tt__PTZVector
#define soap_read_tt__PTZVector(soap, data) ( ((data) ? (soap_default_tt__PTZVector(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PTZVector(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__PTZVector
#define soap_GET_tt__PTZVector(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__PTZVector(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__PTZVector
#define soap_POST_recv_tt__PTZVector(soap, data) ( soap_read_tt__PTZVector(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__Vector1D_DEFINED
#define SOAP_TYPE_tt__Vector1D_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__Vector1D(struct soap*, struct tt__Vector1D *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__Vector1D(struct soap*, const struct tt__Vector1D *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Vector1D(struct soap*, const char*, int, const struct tt__Vector1D *, const char*);
SOAP_FMAC3 struct tt__Vector1D * SOAP_FMAC4 soap_in_tt__Vector1D(struct soap*, const char*, struct tt__Vector1D *, const char*);

SOAP_FMAC3 struct tt__Vector1D * SOAP_FMAC4 soap_new_tt__Vector1D(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__Vector1D(struct soap*, const struct tt__Vector1D *, const char*, const char*);

#ifndef soap_write_tt__Vector1D
#define soap_write_tt__Vector1D(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__Vector1D(soap, data), 0) || soap_put_tt__Vector1D(soap, data, "tt:Vector1D", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__Vector1D
#define soap_PUT_tt__Vector1D(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__Vector1D(soap, data), 0) || soap_put_tt__Vector1D(soap, data, "tt:Vector1D", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__Vector1D
#define soap_PATCH_tt__Vector1D(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__Vector1D(soap, data), 0) || soap_put_tt__Vector1D(soap, data, "tt:Vector1D", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__Vector1D
#define soap_POST_send_tt__Vector1D(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__Vector1D(soap, data), 0) || soap_put_tt__Vector1D(soap, data, "tt:Vector1D", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__Vector1D * SOAP_FMAC4 soap_get_tt__Vector1D(struct soap*, struct tt__Vector1D *, const char*, const char*);

#ifndef soap_read_tt__Vector1D
#define soap_read_tt__Vector1D(soap, data) ( ((data) ? (soap_default_tt__Vector1D(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Vector1D(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__Vector1D
#define soap_GET_tt__Vector1D(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__Vector1D(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__Vector1D
#define soap_POST_recv_tt__Vector1D(soap, data) ( soap_read_tt__Vector1D(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__Vector2D_DEFINED
#define SOAP_TYPE_tt__Vector2D_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__Vector2D(struct soap*, struct tt__Vector2D *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__Vector2D(struct soap*, const struct tt__Vector2D *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Vector2D(struct soap*, const char*, int, const struct tt__Vector2D *, const char*);
SOAP_FMAC3 struct tt__Vector2D * SOAP_FMAC4 soap_in_tt__Vector2D(struct soap*, const char*, struct tt__Vector2D *, const char*);

SOAP_FMAC3 struct tt__Vector2D * SOAP_FMAC4 soap_new_tt__Vector2D(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__Vector2D(struct soap*, const struct tt__Vector2D *, const char*, const char*);

#ifndef soap_write_tt__Vector2D
#define soap_write_tt__Vector2D(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__Vector2D(soap, data), 0) || soap_put_tt__Vector2D(soap, data, "tt:Vector2D", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__Vector2D
#define soap_PUT_tt__Vector2D(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__Vector2D(soap, data), 0) || soap_put_tt__Vector2D(soap, data, "tt:Vector2D", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__Vector2D
#define soap_PATCH_tt__Vector2D(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__Vector2D(soap, data), 0) || soap_put_tt__Vector2D(soap, data, "tt:Vector2D", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__Vector2D
#define soap_POST_send_tt__Vector2D(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__Vector2D(soap, data), 0) || soap_put_tt__Vector2D(soap, data, "tt:Vector2D", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__Vector2D * SOAP_FMAC4 soap_get_tt__Vector2D(struct soap*, struct tt__Vector2D *, const char*, const char*);

#ifndef soap_read_tt__Vector2D
#define soap_read_tt__Vector2D(soap, data) ( ((data) ? (soap_default_tt__Vector2D(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Vector2D(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__Vector2D
#define soap_GET_tt__Vector2D(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__Vector2D(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__Vector2D
#define soap_POST_recv_tt__Vector2D(soap, data) ( soap_read_tt__Vector2D(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__PTZSpaces_DEFINED
#define SOAP_TYPE_tt__PTZSpaces_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__PTZSpaces(struct soap*, struct tt__PTZSpaces *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__PTZSpaces(struct soap*, const struct tt__PTZSpaces *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZSpaces(struct soap*, const char*, int, const struct tt__PTZSpaces *, const char*);
SOAP_FMAC3 struct tt__PTZSpaces * SOAP_FMAC4 soap_in_tt__PTZSpaces(struct soap*, const char*, struct tt__PTZSpaces *, const char*);

SOAP_FMAC3 struct tt__PTZSpaces * SOAP_FMAC4 soap_new_tt__PTZSpaces(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__PTZSpaces(struct soap*, const struct tt__PTZSpaces *, const char*, const char*);

#ifndef soap_write_tt__PTZSpaces
#define soap_write_tt__PTZSpaces(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__PTZSpaces(soap, data), 0) || soap_put_tt__PTZSpaces(soap, data, "tt:PTZSpaces", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__PTZSpaces
#define soap_PUT_tt__PTZSpaces(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__PTZSpaces(soap, data), 0) || soap_put_tt__PTZSpaces(soap, data, "tt:PTZSpaces", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__PTZSpaces
#define soap_PATCH_tt__PTZSpaces(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__PTZSpaces(soap, data), 0) || soap_put_tt__PTZSpaces(soap, data, "tt:PTZSpaces", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__PTZSpaces
#define soap_POST_send_tt__PTZSpaces(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__PTZSpaces(soap, data), 0) || soap_put_tt__PTZSpaces(soap, data, "tt:PTZSpaces", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__PTZSpaces * SOAP_FMAC4 soap_get_tt__PTZSpaces(struct soap*, struct tt__PTZSpaces *, const char*, const char*);

#ifndef soap_read_tt__PTZSpaces
#define soap_read_tt__PTZSpaces(soap, data) ( ((data) ? (soap_default_tt__PTZSpaces(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PTZSpaces(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__PTZSpaces
#define soap_GET_tt__PTZSpaces(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__PTZSpaces(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__PTZSpaces
#define soap_POST_recv_tt__PTZSpaces(soap, data) ( soap_read_tt__PTZSpaces(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__Space1DDescription_DEFINED
#define SOAP_TYPE_tt__Space1DDescription_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__Space1DDescription(struct soap*, struct tt__Space1DDescription *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__Space1DDescription(struct soap*, const struct tt__Space1DDescription *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Space1DDescription(struct soap*, const char*, int, const struct tt__Space1DDescription *, const char*);
SOAP_FMAC3 struct tt__Space1DDescription * SOAP_FMAC4 soap_in_tt__Space1DDescription(struct soap*, const char*, struct tt__Space1DDescription *, const char*);

SOAP_FMAC3 struct tt__Space1DDescription * SOAP_FMAC4 soap_new_tt__Space1DDescription(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__Space1DDescription(struct soap*, const struct tt__Space1DDescription *, const char*, const char*);

#ifndef soap_write_tt__Space1DDescription
#define soap_write_tt__Space1DDescription(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__Space1DDescription(soap, data), 0) || soap_put_tt__Space1DDescription(soap, data, "tt:Space1DDescription", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__Space1DDescription
#define soap_PUT_tt__Space1DDescription(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__Space1DDescription(soap, data), 0) || soap_put_tt__Space1DDescription(soap, data, "tt:Space1DDescription", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__Space1DDescription
#define soap_PATCH_tt__Space1DDescription(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__Space1DDescription(soap, data), 0) || soap_put_tt__Space1DDescription(soap, data, "tt:Space1DDescription", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__Space1DDescription
#define soap_POST_send_tt__Space1DDescription(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__Space1DDescription(soap, data), 0) || soap_put_tt__Space1DDescription(soap, data, "tt:Space1DDescription", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__Space1DDescription * SOAP_FMAC4 soap_get_tt__Space1DDescription(struct soap*, struct tt__Space1DDescription *, const char*, const char*);

#ifndef soap_read_tt__Space1DDescription
#define soap_read_tt__Space1DDescription(soap, data) ( ((data) ? (soap_default_tt__Space1DDescription(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Space1DDescription(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__Space1DDescription
#define soap_GET_tt__Space1DDescription(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__Space1DDescription(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__Space1DDescription
#define soap_POST_recv_tt__Space1DDescription(soap, data) ( soap_read_tt__Space1DDescription(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__ZoomLimits_DEFINED
#define SOAP_TYPE_tt__ZoomLimits_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__ZoomLimits(struct soap*, struct tt__ZoomLimits *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__ZoomLimits(struct soap*, const struct tt__ZoomLimits *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ZoomLimits(struct soap*, const char*, int, const struct tt__ZoomLimits *, const char*);
SOAP_FMAC3 struct tt__ZoomLimits * SOAP_FMAC4 soap_in_tt__ZoomLimits(struct soap*, const char*, struct tt__ZoomLimits *, const char*);

SOAP_FMAC3 struct tt__ZoomLimits * SOAP_FMAC4 soap_new_tt__ZoomLimits(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__ZoomLimits(struct soap*, const struct tt__ZoomLimits *, const char*, const char*);

#ifndef soap_write_tt__ZoomLimits
#define soap_write_tt__ZoomLimits(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__ZoomLimits(soap, data), 0) || soap_put_tt__ZoomLimits(soap, data, "tt:ZoomLimits", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__ZoomLimits
#define soap_PUT_tt__ZoomLimits(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__ZoomLimits(soap, data), 0) || soap_put_tt__ZoomLimits(soap, data, "tt:ZoomLimits", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__ZoomLimits
#define soap_PATCH_tt__ZoomLimits(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__ZoomLimits(soap, data), 0) || soap_put_tt__ZoomLimits(soap, data, "tt:ZoomLimits", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__ZoomLimits
#define soap_POST_send_tt__ZoomLimits(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__ZoomLimits(soap, data), 0) || soap_put_tt__ZoomLimits(soap, data, "tt:ZoomLimits", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__ZoomLimits * SOAP_FMAC4 soap_get_tt__ZoomLimits(struct soap*, struct tt__ZoomLimits *, const char*, const char*);

#ifndef soap_read_tt__ZoomLimits
#define soap_read_tt__ZoomLimits(soap, data) ( ((data) ? (soap_default_tt__ZoomLimits(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ZoomLimits(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__ZoomLimits
#define soap_GET_tt__ZoomLimits(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__ZoomLimits(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__ZoomLimits
#define soap_POST_recv_tt__ZoomLimits(soap, data) ( soap_read_tt__ZoomLimits(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__Space2DDescription_DEFINED
#define SOAP_TYPE_tt__Space2DDescription_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__Space2DDescription(struct soap*, struct tt__Space2DDescription *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__Space2DDescription(struct soap*, const struct tt__Space2DDescription *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Space2DDescription(struct soap*, const char*, int, const struct tt__Space2DDescription *, const char*);
SOAP_FMAC3 struct tt__Space2DDescription * SOAP_FMAC4 soap_in_tt__Space2DDescription(struct soap*, const char*, struct tt__Space2DDescription *, const char*);

SOAP_FMAC3 struct tt__Space2DDescription * SOAP_FMAC4 soap_new_tt__Space2DDescription(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__Space2DDescription(struct soap*, const struct tt__Space2DDescription *, const char*, const char*);

#ifndef soap_write_tt__Space2DDescription
#define soap_write_tt__Space2DDescription(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__Space2DDescription(soap, data), 0) || soap_put_tt__Space2DDescription(soap, data, "tt:Space2DDescription", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__Space2DDescription
#define soap_PUT_tt__Space2DDescription(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__Space2DDescription(soap, data), 0) || soap_put_tt__Space2DDescription(soap, data, "tt:Space2DDescription", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__Space2DDescription
#define soap_PATCH_tt__Space2DDescription(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__Space2DDescription(soap, data), 0) || soap_put_tt__Space2DDescription(soap, data, "tt:Space2DDescription", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__Space2DDescription
#define soap_POST_send_tt__Space2DDescription(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__Space2DDescription(soap, data), 0) || soap_put_tt__Space2DDescription(soap, data, "tt:Space2DDescription", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__Space2DDescription * SOAP_FMAC4 soap_get_tt__Space2DDescription(struct soap*, struct tt__Space2DDescription *, const char*, const char*);

#ifndef soap_read_tt__Space2DDescription
#define soap_read_tt__Space2DDescription(soap, data) ( ((data) ? (soap_default_tt__Space2DDescription(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Space2DDescription(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__Space2DDescription
#define soap_GET_tt__Space2DDescription(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__Space2DDescription(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__Space2DDescription
#define soap_POST_recv_tt__Space2DDescription(soap, data) ( soap_read_tt__Space2DDescription(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__PanTiltLimits_DEFINED
#define SOAP_TYPE_tt__PanTiltLimits_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__PanTiltLimits(struct soap*, struct tt__PanTiltLimits *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__PanTiltLimits(struct soap*, const struct tt__PanTiltLimits *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PanTiltLimits(struct soap*, const char*, int, const struct tt__PanTiltLimits *, const char*);
SOAP_FMAC3 struct tt__PanTiltLimits * SOAP_FMAC4 soap_in_tt__PanTiltLimits(struct soap*, const char*, struct tt__PanTiltLimits *, const char*);

SOAP_FMAC3 struct tt__PanTiltLimits * SOAP_FMAC4 soap_new_tt__PanTiltLimits(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__PanTiltLimits(struct soap*, const struct tt__PanTiltLimits *, const char*, const char*);

#ifndef soap_write_tt__PanTiltLimits
#define soap_write_tt__PanTiltLimits(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__PanTiltLimits(soap, data), 0) || soap_put_tt__PanTiltLimits(soap, data, "tt:PanTiltLimits", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__PanTiltLimits
#define soap_PUT_tt__PanTiltLimits(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__PanTiltLimits(soap, data), 0) || soap_put_tt__PanTiltLimits(soap, data, "tt:PanTiltLimits", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__PanTiltLimits
#define soap_PATCH_tt__PanTiltLimits(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__PanTiltLimits(soap, data), 0) || soap_put_tt__PanTiltLimits(soap, data, "tt:PanTiltLimits", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__PanTiltLimits
#define soap_POST_send_tt__PanTiltLimits(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__PanTiltLimits(soap, data), 0) || soap_put_tt__PanTiltLimits(soap, data, "tt:PanTiltLimits", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__PanTiltLimits * SOAP_FMAC4 soap_get_tt__PanTiltLimits(struct soap*, struct tt__PanTiltLimits *, const char*, const char*);

#ifndef soap_read_tt__PanTiltLimits
#define soap_read_tt__PanTiltLimits(soap, data) ( ((data) ? (soap_default_tt__PanTiltLimits(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PanTiltLimits(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__PanTiltLimits
#define soap_GET_tt__PanTiltLimits(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__PanTiltLimits(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__PanTiltLimits
#define soap_POST_recv_tt__PanTiltLimits(soap, data) ( soap_read_tt__PanTiltLimits(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__ProfileCapabilities_DEFINED
#define SOAP_TYPE_tt__ProfileCapabilities_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__ProfileCapabilities(struct soap*, struct tt__ProfileCapabilities *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__ProfileCapabilities(struct soap*, const struct tt__ProfileCapabilities *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ProfileCapabilities(struct soap*, const char*, int, const struct tt__ProfileCapabilities *, const char*);
SOAP_FMAC3 struct tt__ProfileCapabilities * SOAP_FMAC4 soap_in_tt__ProfileCapabilities(struct soap*, const char*, struct tt__ProfileCapabilities *, const char*);

SOAP_FMAC3 struct tt__ProfileCapabilities * SOAP_FMAC4 soap_new_tt__ProfileCapabilities(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__ProfileCapabilities(struct soap*, const struct tt__ProfileCapabilities *, const char*, const char*);

#ifndef soap_write_tt__ProfileCapabilities
#define soap_write_tt__ProfileCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__ProfileCapabilities(soap, data), 0) || soap_put_tt__ProfileCapabilities(soap, data, "tt:ProfileCapabilities", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__ProfileCapabilities
#define soap_PUT_tt__ProfileCapabilities(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__ProfileCapabilities(soap, data), 0) || soap_put_tt__ProfileCapabilities(soap, data, "tt:ProfileCapabilities", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__ProfileCapabilities
#define soap_PATCH_tt__ProfileCapabilities(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__ProfileCapabilities(soap, data), 0) || soap_put_tt__ProfileCapabilities(soap, data, "tt:ProfileCapabilities", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__ProfileCapabilities
#define soap_POST_send_tt__ProfileCapabilities(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__ProfileCapabilities(soap, data), 0) || soap_put_tt__ProfileCapabilities(soap, data, "tt:ProfileCapabilities", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__ProfileCapabilities * SOAP_FMAC4 soap_get_tt__ProfileCapabilities(struct soap*, struct tt__ProfileCapabilities *, const char*, const char*);

#ifndef soap_read_tt__ProfileCapabilities
#define soap_read_tt__ProfileCapabilities(soap, data) ( ((data) ? (soap_default_tt__ProfileCapabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ProfileCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__ProfileCapabilities
#define soap_GET_tt__ProfileCapabilities(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__ProfileCapabilities(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__ProfileCapabilities
#define soap_POST_recv_tt__ProfileCapabilities(soap, data) ( soap_read_tt__ProfileCapabilities(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__MediaCapabilitiesExtension_DEFINED
#define SOAP_TYPE_tt__MediaCapabilitiesExtension_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__MediaCapabilitiesExtension(struct soap*, struct tt__MediaCapabilitiesExtension *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__MediaCapabilitiesExtension(struct soap*, const struct tt__MediaCapabilitiesExtension *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MediaCapabilitiesExtension(struct soap*, const char*, int, const struct tt__MediaCapabilitiesExtension *, const char*);
SOAP_FMAC3 struct tt__MediaCapabilitiesExtension * SOAP_FMAC4 soap_in_tt__MediaCapabilitiesExtension(struct soap*, const char*, struct tt__MediaCapabilitiesExtension *, const char*);

SOAP_FMAC3 struct tt__MediaCapabilitiesExtension * SOAP_FMAC4 soap_new_tt__MediaCapabilitiesExtension(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__MediaCapabilitiesExtension(struct soap*, const struct tt__MediaCapabilitiesExtension *, const char*, const char*);

#ifndef soap_write_tt__MediaCapabilitiesExtension
#define soap_write_tt__MediaCapabilitiesExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__MediaCapabilitiesExtension(soap, data), 0) || soap_put_tt__MediaCapabilitiesExtension(soap, data, "tt:MediaCapabilitiesExtension", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__MediaCapabilitiesExtension
#define soap_PUT_tt__MediaCapabilitiesExtension(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__MediaCapabilitiesExtension(soap, data), 0) || soap_put_tt__MediaCapabilitiesExtension(soap, data, "tt:MediaCapabilitiesExtension", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__MediaCapabilitiesExtension
#define soap_PATCH_tt__MediaCapabilitiesExtension(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__MediaCapabilitiesExtension(soap, data), 0) || soap_put_tt__MediaCapabilitiesExtension(soap, data, "tt:MediaCapabilitiesExtension", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__MediaCapabilitiesExtension
#define soap_POST_send_tt__MediaCapabilitiesExtension(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__MediaCapabilitiesExtension(soap, data), 0) || soap_put_tt__MediaCapabilitiesExtension(soap, data, "tt:MediaCapabilitiesExtension", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__MediaCapabilitiesExtension * SOAP_FMAC4 soap_get_tt__MediaCapabilitiesExtension(struct soap*, struct tt__MediaCapabilitiesExtension *, const char*, const char*);

#ifndef soap_read_tt__MediaCapabilitiesExtension
#define soap_read_tt__MediaCapabilitiesExtension(soap, data) ( ((data) ? (soap_default_tt__MediaCapabilitiesExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__MediaCapabilitiesExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__MediaCapabilitiesExtension
#define soap_GET_tt__MediaCapabilitiesExtension(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__MediaCapabilitiesExtension(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__MediaCapabilitiesExtension
#define soap_POST_recv_tt__MediaCapabilitiesExtension(soap, data) ( soap_read_tt__MediaCapabilitiesExtension(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__RealTimeStreamingCapabilities_DEFINED
#define SOAP_TYPE_tt__RealTimeStreamingCapabilities_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__RealTimeStreamingCapabilities(struct soap*, struct tt__RealTimeStreamingCapabilities *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__RealTimeStreamingCapabilities(struct soap*, const struct tt__RealTimeStreamingCapabilities *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RealTimeStreamingCapabilities(struct soap*, const char*, int, const struct tt__RealTimeStreamingCapabilities *, const char*);
SOAP_FMAC3 struct tt__RealTimeStreamingCapabilities * SOAP_FMAC4 soap_in_tt__RealTimeStreamingCapabilities(struct soap*, const char*, struct tt__RealTimeStreamingCapabilities *, const char*);

SOAP_FMAC3 struct tt__RealTimeStreamingCapabilities * SOAP_FMAC4 soap_new_tt__RealTimeStreamingCapabilities(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__RealTimeStreamingCapabilities(struct soap*, const struct tt__RealTimeStreamingCapabilities *, const char*, const char*);

#ifndef soap_write_tt__RealTimeStreamingCapabilities
#define soap_write_tt__RealTimeStreamingCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__RealTimeStreamingCapabilities(soap, data), 0) || soap_put_tt__RealTimeStreamingCapabilities(soap, data, "tt:RealTimeStreamingCapabilities", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__RealTimeStreamingCapabilities
#define soap_PUT_tt__RealTimeStreamingCapabilities(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__RealTimeStreamingCapabilities(soap, data), 0) || soap_put_tt__RealTimeStreamingCapabilities(soap, data, "tt:RealTimeStreamingCapabilities", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__RealTimeStreamingCapabilities
#define soap_PATCH_tt__RealTimeStreamingCapabilities(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__RealTimeStreamingCapabilities(soap, data), 0) || soap_put_tt__RealTimeStreamingCapabilities(soap, data, "tt:RealTimeStreamingCapabilities", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__RealTimeStreamingCapabilities
#define soap_POST_send_tt__RealTimeStreamingCapabilities(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__RealTimeStreamingCapabilities(soap, data), 0) || soap_put_tt__RealTimeStreamingCapabilities(soap, data, "tt:RealTimeStreamingCapabilities", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__RealTimeStreamingCapabilities * SOAP_FMAC4 soap_get_tt__RealTimeStreamingCapabilities(struct soap*, struct tt__RealTimeStreamingCapabilities *, const char*, const char*);

#ifndef soap_read_tt__RealTimeStreamingCapabilities
#define soap_read_tt__RealTimeStreamingCapabilities(soap, data) ( ((data) ? (soap_default_tt__RealTimeStreamingCapabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__RealTimeStreamingCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__RealTimeStreamingCapabilities
#define soap_GET_tt__RealTimeStreamingCapabilities(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__RealTimeStreamingCapabilities(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__RealTimeStreamingCapabilities
#define soap_POST_recv_tt__RealTimeStreamingCapabilities(soap, data) ( soap_read_tt__RealTimeStreamingCapabilities(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__SystemCapabilities_DEFINED
#define SOAP_TYPE_tt__SystemCapabilities_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__SystemCapabilities(struct soap*, struct tt__SystemCapabilities *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__SystemCapabilities(struct soap*, const struct tt__SystemCapabilities *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SystemCapabilities(struct soap*, const char*, int, const struct tt__SystemCapabilities *, const char*);
SOAP_FMAC3 struct tt__SystemCapabilities * SOAP_FMAC4 soap_in_tt__SystemCapabilities(struct soap*, const char*, struct tt__SystemCapabilities *, const char*);

SOAP_FMAC3 struct tt__SystemCapabilities * SOAP_FMAC4 soap_new_tt__SystemCapabilities(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__SystemCapabilities(struct soap*, const struct tt__SystemCapabilities *, const char*, const char*);

#ifndef soap_write_tt__SystemCapabilities
#define soap_write_tt__SystemCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__SystemCapabilities(soap, data), 0) || soap_put_tt__SystemCapabilities(soap, data, "tt:SystemCapabilities", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__SystemCapabilities
#define soap_PUT_tt__SystemCapabilities(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__SystemCapabilities(soap, data), 0) || soap_put_tt__SystemCapabilities(soap, data, "tt:SystemCapabilities", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__SystemCapabilities
#define soap_PATCH_tt__SystemCapabilities(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__SystemCapabilities(soap, data), 0) || soap_put_tt__SystemCapabilities(soap, data, "tt:SystemCapabilities", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__SystemCapabilities
#define soap_POST_send_tt__SystemCapabilities(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__SystemCapabilities(soap, data), 0) || soap_put_tt__SystemCapabilities(soap, data, "tt:SystemCapabilities", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__SystemCapabilities * SOAP_FMAC4 soap_get_tt__SystemCapabilities(struct soap*, struct tt__SystemCapabilities *, const char*, const char*);

#ifndef soap_read_tt__SystemCapabilities
#define soap_read_tt__SystemCapabilities(soap, data) ( ((data) ? (soap_default_tt__SystemCapabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__SystemCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__SystemCapabilities
#define soap_GET_tt__SystemCapabilities(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__SystemCapabilities(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__SystemCapabilities
#define soap_POST_recv_tt__SystemCapabilities(soap, data) ( soap_read_tt__SystemCapabilities(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__PTZCapabilities_DEFINED
#define SOAP_TYPE_tt__PTZCapabilities_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__PTZCapabilities(struct soap*, struct tt__PTZCapabilities *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__PTZCapabilities(struct soap*, const struct tt__PTZCapabilities *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZCapabilities(struct soap*, const char*, int, const struct tt__PTZCapabilities *, const char*);
SOAP_FMAC3 struct tt__PTZCapabilities * SOAP_FMAC4 soap_in_tt__PTZCapabilities(struct soap*, const char*, struct tt__PTZCapabilities *, const char*);

SOAP_FMAC3 struct tt__PTZCapabilities * SOAP_FMAC4 soap_new_tt__PTZCapabilities(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__PTZCapabilities(struct soap*, const struct tt__PTZCapabilities *, const char*, const char*);

#ifndef soap_write_tt__PTZCapabilities
#define soap_write_tt__PTZCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__PTZCapabilities(soap, data), 0) || soap_put_tt__PTZCapabilities(soap, data, "tt:PTZCapabilities", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__PTZCapabilities
#define soap_PUT_tt__PTZCapabilities(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__PTZCapabilities(soap, data), 0) || soap_put_tt__PTZCapabilities(soap, data, "tt:PTZCapabilities", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__PTZCapabilities
#define soap_PATCH_tt__PTZCapabilities(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__PTZCapabilities(soap, data), 0) || soap_put_tt__PTZCapabilities(soap, data, "tt:PTZCapabilities", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__PTZCapabilities
#define soap_POST_send_tt__PTZCapabilities(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__PTZCapabilities(soap, data), 0) || soap_put_tt__PTZCapabilities(soap, data, "tt:PTZCapabilities", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__PTZCapabilities * SOAP_FMAC4 soap_get_tt__PTZCapabilities(struct soap*, struct tt__PTZCapabilities *, const char*, const char*);

#ifndef soap_read_tt__PTZCapabilities
#define soap_read_tt__PTZCapabilities(soap, data) ( ((data) ? (soap_default_tt__PTZCapabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PTZCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__PTZCapabilities
#define soap_GET_tt__PTZCapabilities(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__PTZCapabilities(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__PTZCapabilities
#define soap_POST_recv_tt__PTZCapabilities(soap, data) ( soap_read_tt__PTZCapabilities(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__MediaCapabilities_DEFINED
#define SOAP_TYPE_tt__MediaCapabilities_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__MediaCapabilities(struct soap*, struct tt__MediaCapabilities *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__MediaCapabilities(struct soap*, const struct tt__MediaCapabilities *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MediaCapabilities(struct soap*, const char*, int, const struct tt__MediaCapabilities *, const char*);
SOAP_FMAC3 struct tt__MediaCapabilities * SOAP_FMAC4 soap_in_tt__MediaCapabilities(struct soap*, const char*, struct tt__MediaCapabilities *, const char*);

SOAP_FMAC3 struct tt__MediaCapabilities * SOAP_FMAC4 soap_new_tt__MediaCapabilities(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__MediaCapabilities(struct soap*, const struct tt__MediaCapabilities *, const char*, const char*);

#ifndef soap_write_tt__MediaCapabilities
#define soap_write_tt__MediaCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__MediaCapabilities(soap, data), 0) || soap_put_tt__MediaCapabilities(soap, data, "tt:MediaCapabilities", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__MediaCapabilities
#define soap_PUT_tt__MediaCapabilities(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__MediaCapabilities(soap, data), 0) || soap_put_tt__MediaCapabilities(soap, data, "tt:MediaCapabilities", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__MediaCapabilities
#define soap_PATCH_tt__MediaCapabilities(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__MediaCapabilities(soap, data), 0) || soap_put_tt__MediaCapabilities(soap, data, "tt:MediaCapabilities", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__MediaCapabilities
#define soap_POST_send_tt__MediaCapabilities(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__MediaCapabilities(soap, data), 0) || soap_put_tt__MediaCapabilities(soap, data, "tt:MediaCapabilities", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__MediaCapabilities * SOAP_FMAC4 soap_get_tt__MediaCapabilities(struct soap*, struct tt__MediaCapabilities *, const char*, const char*);

#ifndef soap_read_tt__MediaCapabilities
#define soap_read_tt__MediaCapabilities(soap, data) ( ((data) ? (soap_default_tt__MediaCapabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__MediaCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__MediaCapabilities
#define soap_GET_tt__MediaCapabilities(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__MediaCapabilities(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__MediaCapabilities
#define soap_POST_recv_tt__MediaCapabilities(soap, data) ( soap_read_tt__MediaCapabilities(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__EventCapabilities_DEFINED
#define SOAP_TYPE_tt__EventCapabilities_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__EventCapabilities(struct soap*, struct tt__EventCapabilities *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__EventCapabilities(struct soap*, const struct tt__EventCapabilities *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__EventCapabilities(struct soap*, const char*, int, const struct tt__EventCapabilities *, const char*);
SOAP_FMAC3 struct tt__EventCapabilities * SOAP_FMAC4 soap_in_tt__EventCapabilities(struct soap*, const char*, struct tt__EventCapabilities *, const char*);

SOAP_FMAC3 struct tt__EventCapabilities * SOAP_FMAC4 soap_new_tt__EventCapabilities(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__EventCapabilities(struct soap*, const struct tt__EventCapabilities *, const char*, const char*);

#ifndef soap_write_tt__EventCapabilities
#define soap_write_tt__EventCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__EventCapabilities(soap, data), 0) || soap_put_tt__EventCapabilities(soap, data, "tt:EventCapabilities", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__EventCapabilities
#define soap_PUT_tt__EventCapabilities(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__EventCapabilities(soap, data), 0) || soap_put_tt__EventCapabilities(soap, data, "tt:EventCapabilities", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__EventCapabilities
#define soap_PATCH_tt__EventCapabilities(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__EventCapabilities(soap, data), 0) || soap_put_tt__EventCapabilities(soap, data, "tt:EventCapabilities", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__EventCapabilities
#define soap_POST_send_tt__EventCapabilities(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__EventCapabilities(soap, data), 0) || soap_put_tt__EventCapabilities(soap, data, "tt:EventCapabilities", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__EventCapabilities * SOAP_FMAC4 soap_get_tt__EventCapabilities(struct soap*, struct tt__EventCapabilities *, const char*, const char*);

#ifndef soap_read_tt__EventCapabilities
#define soap_read_tt__EventCapabilities(soap, data) ( ((data) ? (soap_default_tt__EventCapabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__EventCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__EventCapabilities
#define soap_GET_tt__EventCapabilities(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__EventCapabilities(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__EventCapabilities
#define soap_POST_recv_tt__EventCapabilities(soap, data) ( soap_read_tt__EventCapabilities(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__DeviceCapabilities_DEFINED
#define SOAP_TYPE_tt__DeviceCapabilities_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__DeviceCapabilities(struct soap*, struct tt__DeviceCapabilities *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__DeviceCapabilities(struct soap*, const struct tt__DeviceCapabilities *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__DeviceCapabilities(struct soap*, const char*, int, const struct tt__DeviceCapabilities *, const char*);
SOAP_FMAC3 struct tt__DeviceCapabilities * SOAP_FMAC4 soap_in_tt__DeviceCapabilities(struct soap*, const char*, struct tt__DeviceCapabilities *, const char*);

SOAP_FMAC3 struct tt__DeviceCapabilities * SOAP_FMAC4 soap_new_tt__DeviceCapabilities(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__DeviceCapabilities(struct soap*, const struct tt__DeviceCapabilities *, const char*, const char*);

#ifndef soap_write_tt__DeviceCapabilities
#define soap_write_tt__DeviceCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__DeviceCapabilities(soap, data), 0) || soap_put_tt__DeviceCapabilities(soap, data, "tt:DeviceCapabilities", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__DeviceCapabilities
#define soap_PUT_tt__DeviceCapabilities(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__DeviceCapabilities(soap, data), 0) || soap_put_tt__DeviceCapabilities(soap, data, "tt:DeviceCapabilities", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__DeviceCapabilities
#define soap_PATCH_tt__DeviceCapabilities(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__DeviceCapabilities(soap, data), 0) || soap_put_tt__DeviceCapabilities(soap, data, "tt:DeviceCapabilities", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__DeviceCapabilities
#define soap_POST_send_tt__DeviceCapabilities(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__DeviceCapabilities(soap, data), 0) || soap_put_tt__DeviceCapabilities(soap, data, "tt:DeviceCapabilities", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__DeviceCapabilities * SOAP_FMAC4 soap_get_tt__DeviceCapabilities(struct soap*, struct tt__DeviceCapabilities *, const char*, const char*);

#ifndef soap_read_tt__DeviceCapabilities
#define soap_read_tt__DeviceCapabilities(soap, data) ( ((data) ? (soap_default_tt__DeviceCapabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__DeviceCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__DeviceCapabilities
#define soap_GET_tt__DeviceCapabilities(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__DeviceCapabilities(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__DeviceCapabilities
#define soap_POST_recv_tt__DeviceCapabilities(soap, data) ( soap_read_tt__DeviceCapabilities(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__ConfigurationEntity_DEFINED
#define SOAP_TYPE_tt__ConfigurationEntity_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__ConfigurationEntity(struct soap*, struct tt__ConfigurationEntity *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__ConfigurationEntity(struct soap*, const struct tt__ConfigurationEntity *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ConfigurationEntity(struct soap*, const char*, int, const struct tt__ConfigurationEntity *, const char*);
SOAP_FMAC3 struct tt__ConfigurationEntity * SOAP_FMAC4 soap_in_tt__ConfigurationEntity(struct soap*, const char*, struct tt__ConfigurationEntity *, const char*);

SOAP_FMAC3 struct tt__ConfigurationEntity * SOAP_FMAC4 soap_new_tt__ConfigurationEntity(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__ConfigurationEntity(struct soap*, const struct tt__ConfigurationEntity *, const char*, const char*);

#ifndef soap_write_tt__ConfigurationEntity
#define soap_write_tt__ConfigurationEntity(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__ConfigurationEntity(soap, data), 0) || soap_put_tt__ConfigurationEntity(soap, data, "tt:ConfigurationEntity", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__ConfigurationEntity
#define soap_PUT_tt__ConfigurationEntity(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__ConfigurationEntity(soap, data), 0) || soap_put_tt__ConfigurationEntity(soap, data, "tt:ConfigurationEntity", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__ConfigurationEntity
#define soap_PATCH_tt__ConfigurationEntity(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__ConfigurationEntity(soap, data), 0) || soap_put_tt__ConfigurationEntity(soap, data, "tt:ConfigurationEntity", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__ConfigurationEntity
#define soap_POST_send_tt__ConfigurationEntity(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__ConfigurationEntity(soap, data), 0) || soap_put_tt__ConfigurationEntity(soap, data, "tt:ConfigurationEntity", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__ConfigurationEntity * SOAP_FMAC4 soap_get_tt__ConfigurationEntity(struct soap*, struct tt__ConfigurationEntity *, const char*, const char*);

#ifndef soap_read_tt__ConfigurationEntity
#define soap_read_tt__ConfigurationEntity(soap, data) ( ((data) ? (soap_default_tt__ConfigurationEntity(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ConfigurationEntity(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__ConfigurationEntity
#define soap_GET_tt__ConfigurationEntity(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__ConfigurationEntity(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__ConfigurationEntity
#define soap_POST_recv_tt__ConfigurationEntity(soap, data) ( soap_read_tt__ConfigurationEntity(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__VideoEncoderConfiguration_DEFINED
#define SOAP_TYPE_tt__VideoEncoderConfiguration_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__VideoEncoderConfiguration(struct soap*, struct tt__VideoEncoderConfiguration *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__VideoEncoderConfiguration(struct soap*, const struct tt__VideoEncoderConfiguration *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoEncoderConfiguration(struct soap*, const char*, int, const struct tt__VideoEncoderConfiguration *, const char*);
SOAP_FMAC3 struct tt__VideoEncoderConfiguration * SOAP_FMAC4 soap_in_tt__VideoEncoderConfiguration(struct soap*, const char*, struct tt__VideoEncoderConfiguration *, const char*);

SOAP_FMAC3 struct tt__VideoEncoderConfiguration * SOAP_FMAC4 soap_new_tt__VideoEncoderConfiguration(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__VideoEncoderConfiguration(struct soap*, const struct tt__VideoEncoderConfiguration *, const char*, const char*);

#ifndef soap_write_tt__VideoEncoderConfiguration
#define soap_write_tt__VideoEncoderConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__VideoEncoderConfiguration(soap, data), 0) || soap_put_tt__VideoEncoderConfiguration(soap, data, "tt:VideoEncoderConfiguration", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__VideoEncoderConfiguration
#define soap_PUT_tt__VideoEncoderConfiguration(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__VideoEncoderConfiguration(soap, data), 0) || soap_put_tt__VideoEncoderConfiguration(soap, data, "tt:VideoEncoderConfiguration", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__VideoEncoderConfiguration
#define soap_PATCH_tt__VideoEncoderConfiguration(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__VideoEncoderConfiguration(soap, data), 0) || soap_put_tt__VideoEncoderConfiguration(soap, data, "tt:VideoEncoderConfiguration", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__VideoEncoderConfiguration
#define soap_POST_send_tt__VideoEncoderConfiguration(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__VideoEncoderConfiguration(soap, data), 0) || soap_put_tt__VideoEncoderConfiguration(soap, data, "tt:VideoEncoderConfiguration", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__VideoEncoderConfiguration * SOAP_FMAC4 soap_get_tt__VideoEncoderConfiguration(struct soap*, struct tt__VideoEncoderConfiguration *, const char*, const char*);

#ifndef soap_read_tt__VideoEncoderConfiguration
#define soap_read_tt__VideoEncoderConfiguration(soap, data) ( ((data) ? (soap_default_tt__VideoEncoderConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__VideoEncoderConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__VideoEncoderConfiguration
#define soap_GET_tt__VideoEncoderConfiguration(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__VideoEncoderConfiguration(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__VideoEncoderConfiguration
#define soap_POST_recv_tt__VideoEncoderConfiguration(soap, data) ( soap_read_tt__VideoEncoderConfiguration(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__Profile_DEFINED
#define SOAP_TYPE_tt__Profile_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__Profile(struct soap*, struct tt__Profile *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__Profile(struct soap*, const struct tt__Profile *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Profile(struct soap*, const char*, int, const struct tt__Profile *, const char*);
SOAP_FMAC3 struct tt__Profile * SOAP_FMAC4 soap_in_tt__Profile(struct soap*, const char*, struct tt__Profile *, const char*);

SOAP_FMAC3 struct tt__Profile * SOAP_FMAC4 soap_new_tt__Profile(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__Profile(struct soap*, const struct tt__Profile *, const char*, const char*);

#ifndef soap_write_tt__Profile
#define soap_write_tt__Profile(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__Profile(soap, data), 0) || soap_put_tt__Profile(soap, data, "tt:Profile", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__Profile
#define soap_PUT_tt__Profile(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__Profile(soap, data), 0) || soap_put_tt__Profile(soap, data, "tt:Profile", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__Profile
#define soap_PATCH_tt__Profile(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__Profile(soap, data), 0) || soap_put_tt__Profile(soap, data, "tt:Profile", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__Profile
#define soap_POST_send_tt__Profile(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__Profile(soap, data), 0) || soap_put_tt__Profile(soap, data, "tt:Profile", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__Profile * SOAP_FMAC4 soap_get_tt__Profile(struct soap*, struct tt__Profile *, const char*, const char*);

#ifndef soap_read_tt__Profile
#define soap_read_tt__Profile(soap, data) ( ((data) ? (soap_default_tt__Profile(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Profile(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__Profile
#define soap_GET_tt__Profile(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__Profile(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__Profile
#define soap_POST_recv_tt__Profile(soap, data) ( soap_read_tt__Profile(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__AnyHolder_DEFINED
#define SOAP_TYPE_tt__AnyHolder_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__AnyHolder(struct soap*, struct tt__AnyHolder *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__AnyHolder(struct soap*, const struct tt__AnyHolder *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AnyHolder(struct soap*, const char*, int, const struct tt__AnyHolder *, const char*);
SOAP_FMAC3 struct tt__AnyHolder * SOAP_FMAC4 soap_in_tt__AnyHolder(struct soap*, const char*, struct tt__AnyHolder *, const char*);

SOAP_FMAC3 struct tt__AnyHolder * SOAP_FMAC4 soap_new_tt__AnyHolder(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__AnyHolder(struct soap*, const struct tt__AnyHolder *, const char*, const char*);

#ifndef soap_write_tt__AnyHolder
#define soap_write_tt__AnyHolder(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__AnyHolder(soap, data), 0) || soap_put_tt__AnyHolder(soap, data, "tt:AnyHolder", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__AnyHolder
#define soap_PUT_tt__AnyHolder(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__AnyHolder(soap, data), 0) || soap_put_tt__AnyHolder(soap, data, "tt:AnyHolder", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__AnyHolder
#define soap_PATCH_tt__AnyHolder(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__AnyHolder(soap, data), 0) || soap_put_tt__AnyHolder(soap, data, "tt:AnyHolder", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__AnyHolder
#define soap_POST_send_tt__AnyHolder(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__AnyHolder(soap, data), 0) || soap_put_tt__AnyHolder(soap, data, "tt:AnyHolder", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__AnyHolder * SOAP_FMAC4 soap_get_tt__AnyHolder(struct soap*, struct tt__AnyHolder *, const char*, const char*);

#ifndef soap_read_tt__AnyHolder
#define soap_read_tt__AnyHolder(soap, data) ( ((data) ? (soap_default_tt__AnyHolder(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__AnyHolder(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__AnyHolder
#define soap_GET_tt__AnyHolder(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__AnyHolder(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__AnyHolder
#define soap_POST_recv_tt__AnyHolder(soap, data) ( soap_read_tt__AnyHolder(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__FloatList_DEFINED
#define SOAP_TYPE_tt__FloatList_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__FloatList(struct soap*, struct tt__FloatList *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__FloatList(struct soap*, const struct tt__FloatList *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__FloatList(struct soap*, const char*, int, const struct tt__FloatList *, const char*);
SOAP_FMAC3 struct tt__FloatList * SOAP_FMAC4 soap_in_tt__FloatList(struct soap*, const char*, struct tt__FloatList *, const char*);

SOAP_FMAC3 struct tt__FloatList * SOAP_FMAC4 soap_new_tt__FloatList(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__FloatList(struct soap*, const struct tt__FloatList *, const char*, const char*);

#ifndef soap_write_tt__FloatList
#define soap_write_tt__FloatList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__FloatList(soap, data), 0) || soap_put_tt__FloatList(soap, data, "tt:FloatList", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__FloatList
#define soap_PUT_tt__FloatList(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__FloatList(soap, data), 0) || soap_put_tt__FloatList(soap, data, "tt:FloatList", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__FloatList
#define soap_PATCH_tt__FloatList(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__FloatList(soap, data), 0) || soap_put_tt__FloatList(soap, data, "tt:FloatList", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__FloatList
#define soap_POST_send_tt__FloatList(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__FloatList(soap, data), 0) || soap_put_tt__FloatList(soap, data, "tt:FloatList", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__FloatList * SOAP_FMAC4 soap_get_tt__FloatList(struct soap*, struct tt__FloatList *, const char*, const char*);

#ifndef soap_read_tt__FloatList
#define soap_read_tt__FloatList(soap, data) ( ((data) ? (soap_default_tt__FloatList(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__FloatList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__FloatList
#define soap_GET_tt__FloatList(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__FloatList(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__FloatList
#define soap_POST_recv_tt__FloatList(soap, data) ( soap_read_tt__FloatList(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__IntList_DEFINED
#define SOAP_TYPE_tt__IntList_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__IntList(struct soap*, struct tt__IntList *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__IntList(struct soap*, const struct tt__IntList *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IntList(struct soap*, const char*, int, const struct tt__IntList *, const char*);
SOAP_FMAC3 struct tt__IntList * SOAP_FMAC4 soap_in_tt__IntList(struct soap*, const char*, struct tt__IntList *, const char*);

SOAP_FMAC3 struct tt__IntList * SOAP_FMAC4 soap_new_tt__IntList(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__IntList(struct soap*, const struct tt__IntList *, const char*, const char*);

#ifndef soap_write_tt__IntList
#define soap_write_tt__IntList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__IntList(soap, data), 0) || soap_put_tt__IntList(soap, data, "tt:IntList", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__IntList
#define soap_PUT_tt__IntList(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__IntList(soap, data), 0) || soap_put_tt__IntList(soap, data, "tt:IntList", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__IntList
#define soap_PATCH_tt__IntList(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__IntList(soap, data), 0) || soap_put_tt__IntList(soap, data, "tt:IntList", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__IntList
#define soap_POST_send_tt__IntList(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__IntList(soap, data), 0) || soap_put_tt__IntList(soap, data, "tt:IntList", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__IntList * SOAP_FMAC4 soap_get_tt__IntList(struct soap*, struct tt__IntList *, const char*, const char*);

#ifndef soap_read_tt__IntList
#define soap_read_tt__IntList(soap, data) ( ((data) ? (soap_default_tt__IntList(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__IntList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__IntList
#define soap_GET_tt__IntList(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__IntList(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__IntList
#define soap_POST_recv_tt__IntList(soap, data) ( soap_read_tt__IntList(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__DurationRange_DEFINED
#define SOAP_TYPE_tt__DurationRange_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__DurationRange(struct soap*, struct tt__DurationRange *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__DurationRange(struct soap*, const struct tt__DurationRange *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__DurationRange(struct soap*, const char*, int, const struct tt__DurationRange *, const char*);
SOAP_FMAC3 struct tt__DurationRange * SOAP_FMAC4 soap_in_tt__DurationRange(struct soap*, const char*, struct tt__DurationRange *, const char*);

SOAP_FMAC3 struct tt__DurationRange * SOAP_FMAC4 soap_new_tt__DurationRange(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__DurationRange(struct soap*, const struct tt__DurationRange *, const char*, const char*);

#ifndef soap_write_tt__DurationRange
#define soap_write_tt__DurationRange(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__DurationRange(soap, data), 0) || soap_put_tt__DurationRange(soap, data, "tt:DurationRange", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__DurationRange
#define soap_PUT_tt__DurationRange(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__DurationRange(soap, data), 0) || soap_put_tt__DurationRange(soap, data, "tt:DurationRange", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__DurationRange
#define soap_PATCH_tt__DurationRange(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__DurationRange(soap, data), 0) || soap_put_tt__DurationRange(soap, data, "tt:DurationRange", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__DurationRange
#define soap_POST_send_tt__DurationRange(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__DurationRange(soap, data), 0) || soap_put_tt__DurationRange(soap, data, "tt:DurationRange", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__DurationRange * SOAP_FMAC4 soap_get_tt__DurationRange(struct soap*, struct tt__DurationRange *, const char*, const char*);

#ifndef soap_read_tt__DurationRange
#define soap_read_tt__DurationRange(soap, data) ( ((data) ? (soap_default_tt__DurationRange(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__DurationRange(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__DurationRange
#define soap_GET_tt__DurationRange(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__DurationRange(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__DurationRange
#define soap_POST_recv_tt__DurationRange(soap, data) ( soap_read_tt__DurationRange(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__FloatRange_DEFINED
#define SOAP_TYPE_tt__FloatRange_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__FloatRange(struct soap*, struct tt__FloatRange *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__FloatRange(struct soap*, const struct tt__FloatRange *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__FloatRange(struct soap*, const char*, int, const struct tt__FloatRange *, const char*);
SOAP_FMAC3 struct tt__FloatRange * SOAP_FMAC4 soap_in_tt__FloatRange(struct soap*, const char*, struct tt__FloatRange *, const char*);

SOAP_FMAC3 struct tt__FloatRange * SOAP_FMAC4 soap_new_tt__FloatRange(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__FloatRange(struct soap*, const struct tt__FloatRange *, const char*, const char*);

#ifndef soap_write_tt__FloatRange
#define soap_write_tt__FloatRange(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__FloatRange(soap, data), 0) || soap_put_tt__FloatRange(soap, data, "tt:FloatRange", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__FloatRange
#define soap_PUT_tt__FloatRange(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__FloatRange(soap, data), 0) || soap_put_tt__FloatRange(soap, data, "tt:FloatRange", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__FloatRange
#define soap_PATCH_tt__FloatRange(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__FloatRange(soap, data), 0) || soap_put_tt__FloatRange(soap, data, "tt:FloatRange", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__FloatRange
#define soap_POST_send_tt__FloatRange(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__FloatRange(soap, data), 0) || soap_put_tt__FloatRange(soap, data, "tt:FloatRange", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__FloatRange * SOAP_FMAC4 soap_get_tt__FloatRange(struct soap*, struct tt__FloatRange *, const char*, const char*);

#ifndef soap_read_tt__FloatRange
#define soap_read_tt__FloatRange(soap, data) ( ((data) ? (soap_default_tt__FloatRange(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__FloatRange(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__FloatRange
#define soap_GET_tt__FloatRange(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__FloatRange(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__FloatRange
#define soap_POST_recv_tt__FloatRange(soap, data) ( soap_read_tt__FloatRange(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__IntRange_DEFINED
#define SOAP_TYPE_tt__IntRange_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__IntRange(struct soap*, struct tt__IntRange *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__IntRange(struct soap*, const struct tt__IntRange *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IntRange(struct soap*, const char*, int, const struct tt__IntRange *, const char*);
SOAP_FMAC3 struct tt__IntRange * SOAP_FMAC4 soap_in_tt__IntRange(struct soap*, const char*, struct tt__IntRange *, const char*);

SOAP_FMAC3 struct tt__IntRange * SOAP_FMAC4 soap_new_tt__IntRange(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__IntRange(struct soap*, const struct tt__IntRange *, const char*, const char*);

#ifndef soap_write_tt__IntRange
#define soap_write_tt__IntRange(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__IntRange(soap, data), 0) || soap_put_tt__IntRange(soap, data, "tt:IntRange", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__IntRange
#define soap_PUT_tt__IntRange(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__IntRange(soap, data), 0) || soap_put_tt__IntRange(soap, data, "tt:IntRange", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__IntRange
#define soap_PATCH_tt__IntRange(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__IntRange(soap, data), 0) || soap_put_tt__IntRange(soap, data, "tt:IntRange", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__IntRange
#define soap_POST_send_tt__IntRange(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__IntRange(soap, data), 0) || soap_put_tt__IntRange(soap, data, "tt:IntRange", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__IntRange * SOAP_FMAC4 soap_get_tt__IntRange(struct soap*, struct tt__IntRange *, const char*, const char*);

#ifndef soap_read_tt__IntRange
#define soap_read_tt__IntRange(soap, data) ( ((data) ? (soap_default_tt__IntRange(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__IntRange(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__IntRange
#define soap_GET_tt__IntRange(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__IntRange(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__IntRange
#define soap_POST_recv_tt__IntRange(soap, data) ( soap_read_tt__IntRange(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__IntRectangleRange_DEFINED
#define SOAP_TYPE_tt__IntRectangleRange_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__IntRectangleRange(struct soap*, struct tt__IntRectangleRange *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__IntRectangleRange(struct soap*, const struct tt__IntRectangleRange *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IntRectangleRange(struct soap*, const char*, int, const struct tt__IntRectangleRange *, const char*);
SOAP_FMAC3 struct tt__IntRectangleRange * SOAP_FMAC4 soap_in_tt__IntRectangleRange(struct soap*, const char*, struct tt__IntRectangleRange *, const char*);

SOAP_FMAC3 struct tt__IntRectangleRange * SOAP_FMAC4 soap_new_tt__IntRectangleRange(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__IntRectangleRange(struct soap*, const struct tt__IntRectangleRange *, const char*, const char*);

#ifndef soap_write_tt__IntRectangleRange
#define soap_write_tt__IntRectangleRange(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__IntRectangleRange(soap, data), 0) || soap_put_tt__IntRectangleRange(soap, data, "tt:IntRectangleRange", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__IntRectangleRange
#define soap_PUT_tt__IntRectangleRange(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__IntRectangleRange(soap, data), 0) || soap_put_tt__IntRectangleRange(soap, data, "tt:IntRectangleRange", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__IntRectangleRange
#define soap_PATCH_tt__IntRectangleRange(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__IntRectangleRange(soap, data), 0) || soap_put_tt__IntRectangleRange(soap, data, "tt:IntRectangleRange", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__IntRectangleRange
#define soap_POST_send_tt__IntRectangleRange(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__IntRectangleRange(soap, data), 0) || soap_put_tt__IntRectangleRange(soap, data, "tt:IntRectangleRange", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__IntRectangleRange * SOAP_FMAC4 soap_get_tt__IntRectangleRange(struct soap*, struct tt__IntRectangleRange *, const char*, const char*);

#ifndef soap_read_tt__IntRectangleRange
#define soap_read_tt__IntRectangleRange(soap, data) ( ((data) ? (soap_default_tt__IntRectangleRange(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__IntRectangleRange(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__IntRectangleRange
#define soap_GET_tt__IntRectangleRange(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__IntRectangleRange(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__IntRectangleRange
#define soap_POST_recv_tt__IntRectangleRange(soap, data) ( soap_read_tt__IntRectangleRange(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__IntRectangle_DEFINED
#define SOAP_TYPE_tt__IntRectangle_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__IntRectangle(struct soap*, struct tt__IntRectangle *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__IntRectangle(struct soap*, const struct tt__IntRectangle *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IntRectangle(struct soap*, const char*, int, const struct tt__IntRectangle *, const char*);
SOAP_FMAC3 struct tt__IntRectangle * SOAP_FMAC4 soap_in_tt__IntRectangle(struct soap*, const char*, struct tt__IntRectangle *, const char*);

SOAP_FMAC3 struct tt__IntRectangle * SOAP_FMAC4 soap_new_tt__IntRectangle(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__IntRectangle(struct soap*, const struct tt__IntRectangle *, const char*, const char*);

#ifndef soap_write_tt__IntRectangle
#define soap_write_tt__IntRectangle(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__IntRectangle(soap, data), 0) || soap_put_tt__IntRectangle(soap, data, "tt:IntRectangle", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__IntRectangle
#define soap_PUT_tt__IntRectangle(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__IntRectangle(soap, data), 0) || soap_put_tt__IntRectangle(soap, data, "tt:IntRectangle", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__IntRectangle
#define soap_PATCH_tt__IntRectangle(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__IntRectangle(soap, data), 0) || soap_put_tt__IntRectangle(soap, data, "tt:IntRectangle", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__IntRectangle
#define soap_POST_send_tt__IntRectangle(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__IntRectangle(soap, data), 0) || soap_put_tt__IntRectangle(soap, data, "tt:IntRectangle", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__IntRectangle * SOAP_FMAC4 soap_get_tt__IntRectangle(struct soap*, struct tt__IntRectangle *, const char*, const char*);

#ifndef soap_read_tt__IntRectangle
#define soap_read_tt__IntRectangle(soap, data) ( ((data) ? (soap_default_tt__IntRectangle(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__IntRectangle(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__IntRectangle
#define soap_GET_tt__IntRectangle(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__IntRectangle(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__IntRectangle
#define soap_POST_recv_tt__IntRectangle(soap, data) ( soap_read_tt__IntRectangle(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__DeviceEntity_DEFINED
#define SOAP_TYPE_tt__DeviceEntity_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__DeviceEntity(struct soap*, struct tt__DeviceEntity *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__DeviceEntity(struct soap*, const struct tt__DeviceEntity *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__DeviceEntity(struct soap*, const char*, int, const struct tt__DeviceEntity *, const char*);
SOAP_FMAC3 struct tt__DeviceEntity * SOAP_FMAC4 soap_in_tt__DeviceEntity(struct soap*, const char*, struct tt__DeviceEntity *, const char*);

SOAP_FMAC3 struct tt__DeviceEntity * SOAP_FMAC4 soap_new_tt__DeviceEntity(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__DeviceEntity(struct soap*, const struct tt__DeviceEntity *, const char*, const char*);

#ifndef soap_write_tt__DeviceEntity
#define soap_write_tt__DeviceEntity(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__DeviceEntity(soap, data), 0) || soap_put_tt__DeviceEntity(soap, data, "tt:DeviceEntity", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__DeviceEntity
#define soap_PUT_tt__DeviceEntity(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__DeviceEntity(soap, data), 0) || soap_put_tt__DeviceEntity(soap, data, "tt:DeviceEntity", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__DeviceEntity
#define soap_PATCH_tt__DeviceEntity(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__DeviceEntity(soap, data), 0) || soap_put_tt__DeviceEntity(soap, data, "tt:DeviceEntity", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__DeviceEntity
#define soap_POST_send_tt__DeviceEntity(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__DeviceEntity(soap, data), 0) || soap_put_tt__DeviceEntity(soap, data, "tt:DeviceEntity", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__DeviceEntity * SOAP_FMAC4 soap_get_tt__DeviceEntity(struct soap*, struct tt__DeviceEntity *, const char*, const char*);

#ifndef soap_read_tt__DeviceEntity
#define soap_read_tt__DeviceEntity(soap, data) ( ((data) ? (soap_default_tt__DeviceEntity(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__DeviceEntity(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__DeviceEntity
#define soap_GET_tt__DeviceEntity(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__DeviceEntity(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__DeviceEntity
#define soap_POST_recv_tt__DeviceEntity(soap, data) ( soap_read_tt__DeviceEntity(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__Capabilities_DEFINED
#define SOAP_TYPE_tt__Capabilities_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__Capabilities(struct soap*, struct tt__Capabilities *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__Capabilities(struct soap*, const struct tt__Capabilities *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Capabilities(struct soap*, const char*, int, const struct tt__Capabilities *, const char*);
SOAP_FMAC3 struct tt__Capabilities * SOAP_FMAC4 soap_in_tt__Capabilities(struct soap*, const char*, struct tt__Capabilities *, const char*);

SOAP_FMAC3 struct tt__Capabilities * SOAP_FMAC4 soap_new_tt__Capabilities(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__Capabilities(struct soap*, const struct tt__Capabilities *, const char*, const char*);

#ifndef soap_write_tt__Capabilities
#define soap_write_tt__Capabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__Capabilities(soap, data), 0) || soap_put_tt__Capabilities(soap, data, "tt:Capabilities", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__Capabilities
#define soap_PUT_tt__Capabilities(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__Capabilities(soap, data), 0) || soap_put_tt__Capabilities(soap, data, "tt:Capabilities", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__Capabilities
#define soap_PATCH_tt__Capabilities(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__Capabilities(soap, data), 0) || soap_put_tt__Capabilities(soap, data, "tt:Capabilities", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__Capabilities
#define soap_POST_send_tt__Capabilities(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__Capabilities(soap, data), 0) || soap_put_tt__Capabilities(soap, data, "tt:Capabilities", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__Capabilities * SOAP_FMAC4 soap_get_tt__Capabilities(struct soap*, struct tt__Capabilities *, const char*, const char*);

#ifndef soap_read_tt__Capabilities
#define soap_read_tt__Capabilities(soap, data) ( ((data) ? (soap_default_tt__Capabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Capabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__Capabilities
#define soap_GET_tt__Capabilities(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__Capabilities(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__Capabilities
#define soap_POST_recv_tt__Capabilities(soap, data) ( soap_read_tt__Capabilities(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__tds__GetCapabilitiesResponse_DEFINED
#define SOAP_TYPE__tds__GetCapabilitiesResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__tds__GetCapabilitiesResponse(struct soap*, struct _tds__GetCapabilitiesResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tds__GetCapabilitiesResponse(struct soap*, const struct _tds__GetCapabilitiesResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetCapabilitiesResponse(struct soap*, const char*, int, const struct _tds__GetCapabilitiesResponse *, const char*);
SOAP_FMAC3 struct _tds__GetCapabilitiesResponse * SOAP_FMAC4 soap_in__tds__GetCapabilitiesResponse(struct soap*, const char*, struct _tds__GetCapabilitiesResponse *, const char*);

SOAP_FMAC3 struct _tds__GetCapabilitiesResponse * SOAP_FMAC4 soap_new__tds__GetCapabilitiesResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__tds__GetCapabilitiesResponse(struct soap*, const struct _tds__GetCapabilitiesResponse *, const char*, const char*);

#ifndef soap_write__tds__GetCapabilitiesResponse
#define soap_write__tds__GetCapabilitiesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__tds__GetCapabilitiesResponse(soap, data), 0) || soap_put__tds__GetCapabilitiesResponse(soap, data, "tds:GetCapabilitiesResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__tds__GetCapabilitiesResponse
#define soap_PUT__tds__GetCapabilitiesResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tds__GetCapabilitiesResponse(soap, data), 0) || soap_put__tds__GetCapabilitiesResponse(soap, data, "tds:GetCapabilitiesResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__tds__GetCapabilitiesResponse
#define soap_PATCH__tds__GetCapabilitiesResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tds__GetCapabilitiesResponse(soap, data), 0) || soap_put__tds__GetCapabilitiesResponse(soap, data, "tds:GetCapabilitiesResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__tds__GetCapabilitiesResponse
#define soap_POST_send__tds__GetCapabilitiesResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tds__GetCapabilitiesResponse(soap, data), 0) || soap_put__tds__GetCapabilitiesResponse(soap, data, "tds:GetCapabilitiesResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _tds__GetCapabilitiesResponse * SOAP_FMAC4 soap_get__tds__GetCapabilitiesResponse(struct soap*, struct _tds__GetCapabilitiesResponse *, const char*, const char*);

#ifndef soap_read__tds__GetCapabilitiesResponse
#define soap_read__tds__GetCapabilitiesResponse(soap, data) ( ((data) ? (soap_default__tds__GetCapabilitiesResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetCapabilitiesResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__tds__GetCapabilitiesResponse
#define soap_GET__tds__GetCapabilitiesResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__tds__GetCapabilitiesResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__tds__GetCapabilitiesResponse
#define soap_POST_recv__tds__GetCapabilitiesResponse(soap, data) ( soap_read__tds__GetCapabilitiesResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__tds__GetCapabilities_DEFINED
#define SOAP_TYPE__tds__GetCapabilities_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__tds__GetCapabilities(struct soap*, struct _tds__GetCapabilities *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tds__GetCapabilities(struct soap*, const struct _tds__GetCapabilities *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetCapabilities(struct soap*, const char*, int, const struct _tds__GetCapabilities *, const char*);
SOAP_FMAC3 struct _tds__GetCapabilities * SOAP_FMAC4 soap_in__tds__GetCapabilities(struct soap*, const char*, struct _tds__GetCapabilities *, const char*);

SOAP_FMAC3 struct _tds__GetCapabilities * SOAP_FMAC4 soap_new__tds__GetCapabilities(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__tds__GetCapabilities(struct soap*, const struct _tds__GetCapabilities *, const char*, const char*);

#ifndef soap_write__tds__GetCapabilities
#define soap_write__tds__GetCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__tds__GetCapabilities(soap, data), 0) || soap_put__tds__GetCapabilities(soap, data, "tds:GetCapabilities", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__tds__GetCapabilities
#define soap_PUT__tds__GetCapabilities(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tds__GetCapabilities(soap, data), 0) || soap_put__tds__GetCapabilities(soap, data, "tds:GetCapabilities", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__tds__GetCapabilities
#define soap_PATCH__tds__GetCapabilities(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tds__GetCapabilities(soap, data), 0) || soap_put__tds__GetCapabilities(soap, data, "tds:GetCapabilities", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__tds__GetCapabilities
#define soap_POST_send__tds__GetCapabilities(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tds__GetCapabilities(soap, data), 0) || soap_put__tds__GetCapabilities(soap, data, "tds:GetCapabilities", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _tds__GetCapabilities * SOAP_FMAC4 soap_get__tds__GetCapabilities(struct soap*, struct _tds__GetCapabilities *, const char*, const char*);

#ifndef soap_read__tds__GetCapabilities
#define soap_read__tds__GetCapabilities(soap, data) ( ((data) ? (soap_default__tds__GetCapabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__tds__GetCapabilities
#define soap_GET__tds__GetCapabilities(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__tds__GetCapabilities(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__tds__GetCapabilities
#define soap_POST_recv__tds__GetCapabilities(soap, data) ( soap_read__tds__GetCapabilities(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__tds__SystemRebootResponse_DEFINED
#define SOAP_TYPE__tds__SystemRebootResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__tds__SystemRebootResponse(struct soap*, struct _tds__SystemRebootResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tds__SystemRebootResponse(struct soap*, const struct _tds__SystemRebootResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SystemRebootResponse(struct soap*, const char*, int, const struct _tds__SystemRebootResponse *, const char*);
SOAP_FMAC3 struct _tds__SystemRebootResponse * SOAP_FMAC4 soap_in__tds__SystemRebootResponse(struct soap*, const char*, struct _tds__SystemRebootResponse *, const char*);

SOAP_FMAC3 struct _tds__SystemRebootResponse * SOAP_FMAC4 soap_new__tds__SystemRebootResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__tds__SystemRebootResponse(struct soap*, const struct _tds__SystemRebootResponse *, const char*, const char*);

#ifndef soap_write__tds__SystemRebootResponse
#define soap_write__tds__SystemRebootResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__tds__SystemRebootResponse(soap, data), 0) || soap_put__tds__SystemRebootResponse(soap, data, "tds:SystemRebootResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__tds__SystemRebootResponse
#define soap_PUT__tds__SystemRebootResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tds__SystemRebootResponse(soap, data), 0) || soap_put__tds__SystemRebootResponse(soap, data, "tds:SystemRebootResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__tds__SystemRebootResponse
#define soap_PATCH__tds__SystemRebootResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tds__SystemRebootResponse(soap, data), 0) || soap_put__tds__SystemRebootResponse(soap, data, "tds:SystemRebootResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__tds__SystemRebootResponse
#define soap_POST_send__tds__SystemRebootResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tds__SystemRebootResponse(soap, data), 0) || soap_put__tds__SystemRebootResponse(soap, data, "tds:SystemRebootResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _tds__SystemRebootResponse * SOAP_FMAC4 soap_get__tds__SystemRebootResponse(struct soap*, struct _tds__SystemRebootResponse *, const char*, const char*);

#ifndef soap_read__tds__SystemRebootResponse
#define soap_read__tds__SystemRebootResponse(soap, data) ( ((data) ? (soap_default__tds__SystemRebootResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SystemRebootResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__tds__SystemRebootResponse
#define soap_GET__tds__SystemRebootResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__tds__SystemRebootResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__tds__SystemRebootResponse
#define soap_POST_recv__tds__SystemRebootResponse(soap, data) ( soap_read__tds__SystemRebootResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__tds__SystemReboot_DEFINED
#define SOAP_TYPE__tds__SystemReboot_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__tds__SystemReboot(struct soap*, struct _tds__SystemReboot *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tds__SystemReboot(struct soap*, const struct _tds__SystemReboot *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SystemReboot(struct soap*, const char*, int, const struct _tds__SystemReboot *, const char*);
SOAP_FMAC3 struct _tds__SystemReboot * SOAP_FMAC4 soap_in__tds__SystemReboot(struct soap*, const char*, struct _tds__SystemReboot *, const char*);

SOAP_FMAC3 struct _tds__SystemReboot * SOAP_FMAC4 soap_new__tds__SystemReboot(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__tds__SystemReboot(struct soap*, const struct _tds__SystemReboot *, const char*, const char*);

#ifndef soap_write__tds__SystemReboot
#define soap_write__tds__SystemReboot(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__tds__SystemReboot(soap, data), 0) || soap_put__tds__SystemReboot(soap, data, "tds:SystemReboot", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__tds__SystemReboot
#define soap_PUT__tds__SystemReboot(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tds__SystemReboot(soap, data), 0) || soap_put__tds__SystemReboot(soap, data, "tds:SystemReboot", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__tds__SystemReboot
#define soap_PATCH__tds__SystemReboot(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tds__SystemReboot(soap, data), 0) || soap_put__tds__SystemReboot(soap, data, "tds:SystemReboot", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__tds__SystemReboot
#define soap_POST_send__tds__SystemReboot(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tds__SystemReboot(soap, data), 0) || soap_put__tds__SystemReboot(soap, data, "tds:SystemReboot", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _tds__SystemReboot * SOAP_FMAC4 soap_get__tds__SystemReboot(struct soap*, struct _tds__SystemReboot *, const char*, const char*);

#ifndef soap_read__tds__SystemReboot
#define soap_read__tds__SystemReboot(soap, data) ( ((data) ? (soap_default__tds__SystemReboot(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SystemReboot(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__tds__SystemReboot
#define soap_GET__tds__SystemReboot(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__tds__SystemReboot(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__tds__SystemReboot
#define soap_POST_recv__tds__SystemReboot(soap, data) ( soap_read__tds__SystemReboot(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__tds__GetDeviceInformationResponse_DEFINED
#define SOAP_TYPE__tds__GetDeviceInformationResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__tds__GetDeviceInformationResponse(struct soap*, struct _tds__GetDeviceInformationResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tds__GetDeviceInformationResponse(struct soap*, const struct _tds__GetDeviceInformationResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetDeviceInformationResponse(struct soap*, const char*, int, const struct _tds__GetDeviceInformationResponse *, const char*);
SOAP_FMAC3 struct _tds__GetDeviceInformationResponse * SOAP_FMAC4 soap_in__tds__GetDeviceInformationResponse(struct soap*, const char*, struct _tds__GetDeviceInformationResponse *, const char*);

SOAP_FMAC3 struct _tds__GetDeviceInformationResponse * SOAP_FMAC4 soap_new__tds__GetDeviceInformationResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__tds__GetDeviceInformationResponse(struct soap*, const struct _tds__GetDeviceInformationResponse *, const char*, const char*);

#ifndef soap_write__tds__GetDeviceInformationResponse
#define soap_write__tds__GetDeviceInformationResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__tds__GetDeviceInformationResponse(soap, data), 0) || soap_put__tds__GetDeviceInformationResponse(soap, data, "tds:GetDeviceInformationResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__tds__GetDeviceInformationResponse
#define soap_PUT__tds__GetDeviceInformationResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tds__GetDeviceInformationResponse(soap, data), 0) || soap_put__tds__GetDeviceInformationResponse(soap, data, "tds:GetDeviceInformationResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__tds__GetDeviceInformationResponse
#define soap_PATCH__tds__GetDeviceInformationResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tds__GetDeviceInformationResponse(soap, data), 0) || soap_put__tds__GetDeviceInformationResponse(soap, data, "tds:GetDeviceInformationResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__tds__GetDeviceInformationResponse
#define soap_POST_send__tds__GetDeviceInformationResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tds__GetDeviceInformationResponse(soap, data), 0) || soap_put__tds__GetDeviceInformationResponse(soap, data, "tds:GetDeviceInformationResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _tds__GetDeviceInformationResponse * SOAP_FMAC4 soap_get__tds__GetDeviceInformationResponse(struct soap*, struct _tds__GetDeviceInformationResponse *, const char*, const char*);

#ifndef soap_read__tds__GetDeviceInformationResponse
#define soap_read__tds__GetDeviceInformationResponse(soap, data) ( ((data) ? (soap_default__tds__GetDeviceInformationResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetDeviceInformationResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__tds__GetDeviceInformationResponse
#define soap_GET__tds__GetDeviceInformationResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__tds__GetDeviceInformationResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__tds__GetDeviceInformationResponse
#define soap_POST_recv__tds__GetDeviceInformationResponse(soap, data) ( soap_read__tds__GetDeviceInformationResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__tds__GetDeviceInformation_DEFINED
#define SOAP_TYPE__tds__GetDeviceInformation_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__tds__GetDeviceInformation(struct soap*, struct _tds__GetDeviceInformation *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tds__GetDeviceInformation(struct soap*, const struct _tds__GetDeviceInformation *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetDeviceInformation(struct soap*, const char*, int, const struct _tds__GetDeviceInformation *, const char*);
SOAP_FMAC3 struct _tds__GetDeviceInformation * SOAP_FMAC4 soap_in__tds__GetDeviceInformation(struct soap*, const char*, struct _tds__GetDeviceInformation *, const char*);

SOAP_FMAC3 struct _tds__GetDeviceInformation * SOAP_FMAC4 soap_new__tds__GetDeviceInformation(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__tds__GetDeviceInformation(struct soap*, const struct _tds__GetDeviceInformation *, const char*, const char*);

#ifndef soap_write__tds__GetDeviceInformation
#define soap_write__tds__GetDeviceInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__tds__GetDeviceInformation(soap, data), 0) || soap_put__tds__GetDeviceInformation(soap, data, "tds:GetDeviceInformation", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__tds__GetDeviceInformation
#define soap_PUT__tds__GetDeviceInformation(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tds__GetDeviceInformation(soap, data), 0) || soap_put__tds__GetDeviceInformation(soap, data, "tds:GetDeviceInformation", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__tds__GetDeviceInformation
#define soap_PATCH__tds__GetDeviceInformation(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tds__GetDeviceInformation(soap, data), 0) || soap_put__tds__GetDeviceInformation(soap, data, "tds:GetDeviceInformation", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__tds__GetDeviceInformation
#define soap_POST_send__tds__GetDeviceInformation(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tds__GetDeviceInformation(soap, data), 0) || soap_put__tds__GetDeviceInformation(soap, data, "tds:GetDeviceInformation", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _tds__GetDeviceInformation * SOAP_FMAC4 soap_get__tds__GetDeviceInformation(struct soap*, struct _tds__GetDeviceInformation *, const char*, const char*);

#ifndef soap_read__tds__GetDeviceInformation
#define soap_read__tds__GetDeviceInformation(soap, data) ( ((data) ? (soap_default__tds__GetDeviceInformation(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetDeviceInformation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__tds__GetDeviceInformation
#define soap_GET__tds__GetDeviceInformation(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__tds__GetDeviceInformation(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__tds__GetDeviceInformation
#define soap_POST_recv__tds__GetDeviceInformation(soap, data) ( soap_read__tds__GetDeviceInformation(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__tds__GetServiceCapabilitiesResponse_DEFINED
#define SOAP_TYPE__tds__GetServiceCapabilitiesResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__tds__GetServiceCapabilitiesResponse(struct soap*, struct _tds__GetServiceCapabilitiesResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tds__GetServiceCapabilitiesResponse(struct soap*, const struct _tds__GetServiceCapabilitiesResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetServiceCapabilitiesResponse(struct soap*, const char*, int, const struct _tds__GetServiceCapabilitiesResponse *, const char*);
SOAP_FMAC3 struct _tds__GetServiceCapabilitiesResponse * SOAP_FMAC4 soap_in__tds__GetServiceCapabilitiesResponse(struct soap*, const char*, struct _tds__GetServiceCapabilitiesResponse *, const char*);

SOAP_FMAC3 struct _tds__GetServiceCapabilitiesResponse * SOAP_FMAC4 soap_new__tds__GetServiceCapabilitiesResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__tds__GetServiceCapabilitiesResponse(struct soap*, const struct _tds__GetServiceCapabilitiesResponse *, const char*, const char*);

#ifndef soap_write__tds__GetServiceCapabilitiesResponse
#define soap_write__tds__GetServiceCapabilitiesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__tds__GetServiceCapabilitiesResponse(soap, data), 0) || soap_put__tds__GetServiceCapabilitiesResponse(soap, data, "tds:GetServiceCapabilitiesResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__tds__GetServiceCapabilitiesResponse
#define soap_PUT__tds__GetServiceCapabilitiesResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tds__GetServiceCapabilitiesResponse(soap, data), 0) || soap_put__tds__GetServiceCapabilitiesResponse(soap, data, "tds:GetServiceCapabilitiesResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__tds__GetServiceCapabilitiesResponse
#define soap_PATCH__tds__GetServiceCapabilitiesResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tds__GetServiceCapabilitiesResponse(soap, data), 0) || soap_put__tds__GetServiceCapabilitiesResponse(soap, data, "tds:GetServiceCapabilitiesResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__tds__GetServiceCapabilitiesResponse
#define soap_POST_send__tds__GetServiceCapabilitiesResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tds__GetServiceCapabilitiesResponse(soap, data), 0) || soap_put__tds__GetServiceCapabilitiesResponse(soap, data, "tds:GetServiceCapabilitiesResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _tds__GetServiceCapabilitiesResponse * SOAP_FMAC4 soap_get__tds__GetServiceCapabilitiesResponse(struct soap*, struct _tds__GetServiceCapabilitiesResponse *, const char*, const char*);

#ifndef soap_read__tds__GetServiceCapabilitiesResponse
#define soap_read__tds__GetServiceCapabilitiesResponse(soap, data) ( ((data) ? (soap_default__tds__GetServiceCapabilitiesResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetServiceCapabilitiesResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__tds__GetServiceCapabilitiesResponse
#define soap_GET__tds__GetServiceCapabilitiesResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__tds__GetServiceCapabilitiesResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__tds__GetServiceCapabilitiesResponse
#define soap_POST_recv__tds__GetServiceCapabilitiesResponse(soap, data) ( soap_read__tds__GetServiceCapabilitiesResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__tds__GetServiceCapabilities_DEFINED
#define SOAP_TYPE__tds__GetServiceCapabilities_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__tds__GetServiceCapabilities(struct soap*, struct _tds__GetServiceCapabilities *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tds__GetServiceCapabilities(struct soap*, const struct _tds__GetServiceCapabilities *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetServiceCapabilities(struct soap*, const char*, int, const struct _tds__GetServiceCapabilities *, const char*);
SOAP_FMAC3 struct _tds__GetServiceCapabilities * SOAP_FMAC4 soap_in__tds__GetServiceCapabilities(struct soap*, const char*, struct _tds__GetServiceCapabilities *, const char*);

SOAP_FMAC3 struct _tds__GetServiceCapabilities * SOAP_FMAC4 soap_new__tds__GetServiceCapabilities(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__tds__GetServiceCapabilities(struct soap*, const struct _tds__GetServiceCapabilities *, const char*, const char*);

#ifndef soap_write__tds__GetServiceCapabilities
#define soap_write__tds__GetServiceCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__tds__GetServiceCapabilities(soap, data), 0) || soap_put__tds__GetServiceCapabilities(soap, data, "tds:GetServiceCapabilities", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__tds__GetServiceCapabilities
#define soap_PUT__tds__GetServiceCapabilities(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tds__GetServiceCapabilities(soap, data), 0) || soap_put__tds__GetServiceCapabilities(soap, data, "tds:GetServiceCapabilities", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__tds__GetServiceCapabilities
#define soap_PATCH__tds__GetServiceCapabilities(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tds__GetServiceCapabilities(soap, data), 0) || soap_put__tds__GetServiceCapabilities(soap, data, "tds:GetServiceCapabilities", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__tds__GetServiceCapabilities
#define soap_POST_send__tds__GetServiceCapabilities(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tds__GetServiceCapabilities(soap, data), 0) || soap_put__tds__GetServiceCapabilities(soap, data, "tds:GetServiceCapabilities", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _tds__GetServiceCapabilities * SOAP_FMAC4 soap_get__tds__GetServiceCapabilities(struct soap*, struct _tds__GetServiceCapabilities *, const char*, const char*);

#ifndef soap_read__tds__GetServiceCapabilities
#define soap_read__tds__GetServiceCapabilities(soap, data) ( ((data) ? (soap_default__tds__GetServiceCapabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetServiceCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__tds__GetServiceCapabilities
#define soap_GET__tds__GetServiceCapabilities(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__tds__GetServiceCapabilities(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__tds__GetServiceCapabilities
#define soap_POST_recv__tds__GetServiceCapabilities(soap, data) ( soap_read__tds__GetServiceCapabilities(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__tds__GetServicesResponse_DEFINED
#define SOAP_TYPE__tds__GetServicesResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__tds__GetServicesResponse(struct soap*, struct _tds__GetServicesResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tds__GetServicesResponse(struct soap*, const struct _tds__GetServicesResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetServicesResponse(struct soap*, const char*, int, const struct _tds__GetServicesResponse *, const char*);
SOAP_FMAC3 struct _tds__GetServicesResponse * SOAP_FMAC4 soap_in__tds__GetServicesResponse(struct soap*, const char*, struct _tds__GetServicesResponse *, const char*);

SOAP_FMAC3 struct _tds__GetServicesResponse * SOAP_FMAC4 soap_new__tds__GetServicesResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__tds__GetServicesResponse(struct soap*, const struct _tds__GetServicesResponse *, const char*, const char*);

#ifndef soap_write__tds__GetServicesResponse
#define soap_write__tds__GetServicesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__tds__GetServicesResponse(soap, data), 0) || soap_put__tds__GetServicesResponse(soap, data, "tds:GetServicesResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__tds__GetServicesResponse
#define soap_PUT__tds__GetServicesResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tds__GetServicesResponse(soap, data), 0) || soap_put__tds__GetServicesResponse(soap, data, "tds:GetServicesResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__tds__GetServicesResponse
#define soap_PATCH__tds__GetServicesResponse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tds__GetServicesResponse(soap, data), 0) || soap_put__tds__GetServicesResponse(soap, data, "tds:GetServicesResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__tds__GetServicesResponse
#define soap_POST_send__tds__GetServicesResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tds__GetServicesResponse(soap, data), 0) || soap_put__tds__GetServicesResponse(soap, data, "tds:GetServicesResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _tds__GetServicesResponse * SOAP_FMAC4 soap_get__tds__GetServicesResponse(struct soap*, struct _tds__GetServicesResponse *, const char*, const char*);

#ifndef soap_read__tds__GetServicesResponse
#define soap_read__tds__GetServicesResponse(soap, data) ( ((data) ? (soap_default__tds__GetServicesResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetServicesResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__tds__GetServicesResponse
#define soap_GET__tds__GetServicesResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__tds__GetServicesResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__tds__GetServicesResponse
#define soap_POST_recv__tds__GetServicesResponse(soap, data) ( soap_read__tds__GetServicesResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__tds__GetServices_DEFINED
#define SOAP_TYPE__tds__GetServices_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__tds__GetServices(struct soap*, struct _tds__GetServices *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tds__GetServices(struct soap*, const struct _tds__GetServices *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetServices(struct soap*, const char*, int, const struct _tds__GetServices *, const char*);
SOAP_FMAC3 struct _tds__GetServices * SOAP_FMAC4 soap_in__tds__GetServices(struct soap*, const char*, struct _tds__GetServices *, const char*);

SOAP_FMAC3 struct _tds__GetServices * SOAP_FMAC4 soap_new__tds__GetServices(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__tds__GetServices(struct soap*, const struct _tds__GetServices *, const char*, const char*);

#ifndef soap_write__tds__GetServices
#define soap_write__tds__GetServices(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__tds__GetServices(soap, data), 0) || soap_put__tds__GetServices(soap, data, "tds:GetServices", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__tds__GetServices
#define soap_PUT__tds__GetServices(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tds__GetServices(soap, data), 0) || soap_put__tds__GetServices(soap, data, "tds:GetServices", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__tds__GetServices
#define soap_PATCH__tds__GetServices(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tds__GetServices(soap, data), 0) || soap_put__tds__GetServices(soap, data, "tds:GetServices", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__tds__GetServices
#define soap_POST_send__tds__GetServices(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tds__GetServices(soap, data), 0) || soap_put__tds__GetServices(soap, data, "tds:GetServices", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _tds__GetServices * SOAP_FMAC4 soap_get__tds__GetServices(struct soap*, struct _tds__GetServices *, const char*, const char*);

#ifndef soap_read__tds__GetServices
#define soap_read__tds__GetServices(soap, data) ( ((data) ? (soap_default__tds__GetServices(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetServices(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__tds__GetServices
#define soap_GET__tds__GetServices(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__tds__GetServices(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__tds__GetServices
#define soap_POST_recv__tds__GetServices(soap, data) ( soap_read__tds__GetServices(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tds__DeviceServiceCapabilities_DEFINED
#define SOAP_TYPE_tds__DeviceServiceCapabilities_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tds__DeviceServiceCapabilities(struct soap*, struct tds__DeviceServiceCapabilities *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tds__DeviceServiceCapabilities(struct soap*, const struct tds__DeviceServiceCapabilities *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tds__DeviceServiceCapabilities(struct soap*, const char*, int, const struct tds__DeviceServiceCapabilities *, const char*);
SOAP_FMAC3 struct tds__DeviceServiceCapabilities * SOAP_FMAC4 soap_in_tds__DeviceServiceCapabilities(struct soap*, const char*, struct tds__DeviceServiceCapabilities *, const char*);

SOAP_FMAC3 struct tds__DeviceServiceCapabilities * SOAP_FMAC4 soap_new_tds__DeviceServiceCapabilities(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tds__DeviceServiceCapabilities(struct soap*, const struct tds__DeviceServiceCapabilities *, const char*, const char*);

#ifndef soap_write_tds__DeviceServiceCapabilities
#define soap_write_tds__DeviceServiceCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tds__DeviceServiceCapabilities(soap, data), 0) || soap_put_tds__DeviceServiceCapabilities(soap, data, "tds:DeviceServiceCapabilities", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tds__DeviceServiceCapabilities
#define soap_PUT_tds__DeviceServiceCapabilities(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tds__DeviceServiceCapabilities(soap, data), 0) || soap_put_tds__DeviceServiceCapabilities(soap, data, "tds:DeviceServiceCapabilities", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tds__DeviceServiceCapabilities
#define soap_PATCH_tds__DeviceServiceCapabilities(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tds__DeviceServiceCapabilities(soap, data), 0) || soap_put_tds__DeviceServiceCapabilities(soap, data, "tds:DeviceServiceCapabilities", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tds__DeviceServiceCapabilities
#define soap_POST_send_tds__DeviceServiceCapabilities(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tds__DeviceServiceCapabilities(soap, data), 0) || soap_put_tds__DeviceServiceCapabilities(soap, data, "tds:DeviceServiceCapabilities", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tds__DeviceServiceCapabilities * SOAP_FMAC4 soap_get_tds__DeviceServiceCapabilities(struct soap*, struct tds__DeviceServiceCapabilities *, const char*, const char*);

#ifndef soap_read_tds__DeviceServiceCapabilities
#define soap_read_tds__DeviceServiceCapabilities(soap, data) ( ((data) ? (soap_default_tds__DeviceServiceCapabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tds__DeviceServiceCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tds__DeviceServiceCapabilities
#define soap_GET_tds__DeviceServiceCapabilities(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tds__DeviceServiceCapabilities(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tds__DeviceServiceCapabilities
#define soap_POST_recv_tds__DeviceServiceCapabilities(soap, data) ( soap_read_tds__DeviceServiceCapabilities(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__OnvifVersion_DEFINED
#define SOAP_TYPE_tt__OnvifVersion_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__OnvifVersion(struct soap*, struct tt__OnvifVersion *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__OnvifVersion(struct soap*, const struct tt__OnvifVersion *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__OnvifVersion(struct soap*, const char*, int, const struct tt__OnvifVersion *, const char*);
SOAP_FMAC3 struct tt__OnvifVersion * SOAP_FMAC4 soap_in_tt__OnvifVersion(struct soap*, const char*, struct tt__OnvifVersion *, const char*);

SOAP_FMAC3 struct tt__OnvifVersion * SOAP_FMAC4 soap_new_tt__OnvifVersion(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__OnvifVersion(struct soap*, const struct tt__OnvifVersion *, const char*, const char*);

#ifndef soap_write_tt__OnvifVersion
#define soap_write_tt__OnvifVersion(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__OnvifVersion(soap, data), 0) || soap_put_tt__OnvifVersion(soap, data, "tt:OnvifVersion", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__OnvifVersion
#define soap_PUT_tt__OnvifVersion(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__OnvifVersion(soap, data), 0) || soap_put_tt__OnvifVersion(soap, data, "tt:OnvifVersion", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__OnvifVersion
#define soap_PATCH_tt__OnvifVersion(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__OnvifVersion(soap, data), 0) || soap_put_tt__OnvifVersion(soap, data, "tt:OnvifVersion", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__OnvifVersion
#define soap_POST_send_tt__OnvifVersion(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tt__OnvifVersion(soap, data), 0) || soap_put_tt__OnvifVersion(soap, data, "tt:OnvifVersion", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tt__OnvifVersion * SOAP_FMAC4 soap_get_tt__OnvifVersion(struct soap*, struct tt__OnvifVersion *, const char*, const char*);

#ifndef soap_read_tt__OnvifVersion
#define soap_read_tt__OnvifVersion(soap, data) ( ((data) ? (soap_default_tt__OnvifVersion(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__OnvifVersion(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__OnvifVersion
#define soap_GET_tt__OnvifVersion(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__OnvifVersion(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__OnvifVersion
#define soap_POST_recv_tt__OnvifVersion(soap, data) ( soap_read_tt__OnvifVersion(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__tds__Service_Capabilities_DEFINED
#define SOAP_TYPE__tds__Service_Capabilities_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__tds__Service_Capabilities(struct soap*, struct _tds__Service_Capabilities *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tds__Service_Capabilities(struct soap*, const struct _tds__Service_Capabilities *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__Service_Capabilities(struct soap*, const char*, int, const struct _tds__Service_Capabilities *, const char*);
SOAP_FMAC3 struct _tds__Service_Capabilities * SOAP_FMAC4 soap_in__tds__Service_Capabilities(struct soap*, const char*, struct _tds__Service_Capabilities *, const char*);

SOAP_FMAC3 struct _tds__Service_Capabilities * SOAP_FMAC4 soap_new__tds__Service_Capabilities(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__tds__Service_Capabilities(struct soap*, const struct _tds__Service_Capabilities *, const char*, const char*);

#ifndef soap_write__tds__Service_Capabilities
#define soap_write__tds__Service_Capabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__tds__Service_Capabilities(soap, data), 0) || soap_put__tds__Service_Capabilities(soap, data, "tds:Service-Capabilities", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__tds__Service_Capabilities
#define soap_PUT__tds__Service_Capabilities(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tds__Service_Capabilities(soap, data), 0) || soap_put__tds__Service_Capabilities(soap, data, "tds:Service-Capabilities", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__tds__Service_Capabilities
#define soap_PATCH__tds__Service_Capabilities(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tds__Service_Capabilities(soap, data), 0) || soap_put__tds__Service_Capabilities(soap, data, "tds:Service-Capabilities", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__tds__Service_Capabilities
#define soap_POST_send__tds__Service_Capabilities(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tds__Service_Capabilities(soap, data), 0) || soap_put__tds__Service_Capabilities(soap, data, "tds:Service-Capabilities", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _tds__Service_Capabilities * SOAP_FMAC4 soap_get__tds__Service_Capabilities(struct soap*, struct _tds__Service_Capabilities *, const char*, const char*);

#ifndef soap_read__tds__Service_Capabilities
#define soap_read__tds__Service_Capabilities(soap, data) ( ((data) ? (soap_default__tds__Service_Capabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__Service_Capabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__tds__Service_Capabilities
#define soap_GET__tds__Service_Capabilities(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__tds__Service_Capabilities(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__tds__Service_Capabilities
#define soap_POST_recv__tds__Service_Capabilities(soap, data) ( soap_read__tds__Service_Capabilities(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tds__Service_DEFINED
#define SOAP_TYPE_tds__Service_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tds__Service(struct soap*, struct tds__Service *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tds__Service(struct soap*, const struct tds__Service *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tds__Service(struct soap*, const char*, int, const struct tds__Service *, const char*);
SOAP_FMAC3 struct tds__Service * SOAP_FMAC4 soap_in_tds__Service(struct soap*, const char*, struct tds__Service *, const char*);

SOAP_FMAC3 struct tds__Service * SOAP_FMAC4 soap_new_tds__Service(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tds__Service(struct soap*, const struct tds__Service *, const char*, const char*);

#ifndef soap_write_tds__Service
#define soap_write_tds__Service(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tds__Service(soap, data), 0) || soap_put_tds__Service(soap, data, "tds:Service", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tds__Service
#define soap_PUT_tds__Service(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tds__Service(soap, data), 0) || soap_put_tds__Service(soap, data, "tds:Service", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tds__Service
#define soap_PATCH_tds__Service(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tds__Service(soap, data), 0) || soap_put_tds__Service(soap, data, "tds:Service", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tds__Service
#define soap_POST_send_tds__Service(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_tds__Service(soap, data), 0) || soap_put_tds__Service(soap, data, "tds:Service", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct tds__Service * SOAP_FMAC4 soap_get_tds__Service(struct soap*, struct tds__Service *, const char*, const char*);

#ifndef soap_read_tds__Service
#define soap_read_tds__Service(soap, data) ( ((data) ? (soap_default_tds__Service(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tds__Service(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tds__Service
#define soap_GET_tds__Service(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tds__Service(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tds__Service
#define soap_POST_recv_tds__Service(soap, data) ( soap_read_tds__Service(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsse__Security_DEFINED
#define SOAP_TYPE__wsse__Security_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsse__Security(struct soap*, struct _wsse__Security *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsse__Security(struct soap*, const struct _wsse__Security *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsse__Security(struct soap*, const char*, int, const struct _wsse__Security *, const char*);
SOAP_FMAC3 struct _wsse__Security * SOAP_FMAC4 soap_in__wsse__Security(struct soap*, const char*, struct _wsse__Security *, const char*);

SOAP_FMAC3 struct _wsse__Security * SOAP_FMAC4 soap_new__wsse__Security(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsse__Security(struct soap*, const struct _wsse__Security *, const char*, const char*);

#ifndef soap_write__wsse__Security
#define soap_write__wsse__Security(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsse__Security(soap, data), 0) || soap_put__wsse__Security(soap, data, "wsse:Security", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsse__Security
#define soap_PUT__wsse__Security(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsse__Security(soap, data), 0) || soap_put__wsse__Security(soap, data, "wsse:Security", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsse__Security
#define soap_PATCH__wsse__Security(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsse__Security(soap, data), 0) || soap_put__wsse__Security(soap, data, "wsse:Security", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsse__Security
#define soap_POST_send__wsse__Security(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsse__Security(soap, data), 0) || soap_put__wsse__Security(soap, data, "wsse:Security", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsse__Security * SOAP_FMAC4 soap_get__wsse__Security(struct soap*, struct _wsse__Security *, const char*, const char*);

#ifndef soap_read__wsse__Security
#define soap_read__wsse__Security(soap, data) ( ((data) ? (soap_default__wsse__Security(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsse__Security(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsse__Security
#define soap_GET__wsse__Security(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsse__Security(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsse__Security
#define soap_POST_recv__wsse__Security(soap, data) ( soap_read__wsse__Security(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif
/* _saml2__EncryptedAttribute is a typedef synonym of saml2__EncryptedElementType */

#ifndef SOAP_TYPE__saml2__EncryptedAttribute_DEFINED
#define SOAP_TYPE__saml2__EncryptedAttribute_DEFINED

#define soap_default__saml2__EncryptedAttribute soap_default_saml2__EncryptedElementType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__EncryptedElementType(struct soap*, const struct saml2__EncryptedElementType *);

#define soap_serialize__saml2__EncryptedAttribute soap_serialize_saml2__EncryptedElementType


#define soap__saml2__EncryptedAttribute2s soap_saml2__EncryptedElementType2s


#define soap_out__saml2__EncryptedAttribute soap_out_saml2__EncryptedElementType


#define soap_s2_saml2__EncryptedAttribute soap_s2saml2__EncryptedElementType


#define soap_in__saml2__EncryptedAttribute soap_in_saml2__EncryptedElementType

#define soap_new__saml2__EncryptedAttribute soap_new_saml2__EncryptedElementType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__EncryptedAttribute(struct soap*, const struct saml2__EncryptedElementType *, const char*, const char*);

#ifndef soap_write__saml2__EncryptedAttribute
#define soap_write__saml2__EncryptedAttribute(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml2__EncryptedAttribute(soap, data), 0) || soap_put__saml2__EncryptedAttribute(soap, data, "saml2:EncryptedAttribute", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__EncryptedAttribute
#define soap_PUT__saml2__EncryptedAttribute(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__EncryptedAttribute(soap, data), 0) || soap_put__saml2__EncryptedAttribute(soap, data, "saml2:EncryptedAttribute", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__EncryptedAttribute
#define soap_PATCH__saml2__EncryptedAttribute(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__EncryptedAttribute(soap, data), 0) || soap_put__saml2__EncryptedAttribute(soap, data, "saml2:EncryptedAttribute", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__EncryptedAttribute
#define soap_POST_send__saml2__EncryptedAttribute(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__EncryptedAttribute(soap, data), 0) || soap_put__saml2__EncryptedAttribute(soap, data, "saml2:EncryptedAttribute", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__EncryptedAttribute soap_get_saml2__EncryptedElementType


#define soap_read__saml2__EncryptedAttribute soap_read_saml2__EncryptedElementType


#define soap_GET__saml2__EncryptedAttribute soap_GET_saml2__EncryptedElementType


#define soap_POST_recv__saml2__EncryptedAttribute soap_POST_recv_saml2__EncryptedElementType

#endif
/* _saml2__Attribute is a typedef synonym of saml2__AttributeType */

#ifndef SOAP_TYPE__saml2__Attribute_DEFINED
#define SOAP_TYPE__saml2__Attribute_DEFINED

#define soap_default__saml2__Attribute soap_default_saml2__AttributeType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__AttributeType(struct soap*, const struct saml2__AttributeType *);

#define soap_serialize__saml2__Attribute soap_serialize_saml2__AttributeType


#define soap__saml2__Attribute2s soap_saml2__AttributeType2s


#define soap_out__saml2__Attribute soap_out_saml2__AttributeType


#define soap_s2_saml2__Attribute soap_s2saml2__AttributeType


#define soap_in__saml2__Attribute soap_in_saml2__AttributeType

#define soap_new__saml2__Attribute soap_new_saml2__AttributeType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__Attribute(struct soap*, const struct saml2__AttributeType *, const char*, const char*);

#ifndef soap_write__saml2__Attribute
#define soap_write__saml2__Attribute(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml2__Attribute(soap, data), 0) || soap_put__saml2__Attribute(soap, data, "saml2:Attribute", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__Attribute
#define soap_PUT__saml2__Attribute(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Attribute(soap, data), 0) || soap_put__saml2__Attribute(soap, data, "saml2:Attribute", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__Attribute
#define soap_PATCH__saml2__Attribute(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Attribute(soap, data), 0) || soap_put__saml2__Attribute(soap, data, "saml2:Attribute", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__Attribute
#define soap_POST_send__saml2__Attribute(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Attribute(soap, data), 0) || soap_put__saml2__Attribute(soap, data, "saml2:Attribute", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__Attribute soap_get_saml2__AttributeType


#define soap_read__saml2__Attribute soap_read_saml2__AttributeType


#define soap_GET__saml2__Attribute soap_GET_saml2__AttributeType


#define soap_POST_recv__saml2__Attribute soap_POST_recv_saml2__AttributeType

#endif
/* _saml2__AttributeStatement is a typedef synonym of saml2__AttributeStatementType */

#ifndef SOAP_TYPE__saml2__AttributeStatement_DEFINED
#define SOAP_TYPE__saml2__AttributeStatement_DEFINED

#define soap_default__saml2__AttributeStatement soap_default_saml2__AttributeStatementType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__AttributeStatementType(struct soap*, const struct saml2__AttributeStatementType *);

#define soap_serialize__saml2__AttributeStatement soap_serialize_saml2__AttributeStatementType


#define soap__saml2__AttributeStatement2s soap_saml2__AttributeStatementType2s


#define soap_out__saml2__AttributeStatement soap_out_saml2__AttributeStatementType


#define soap_s2_saml2__AttributeStatement soap_s2saml2__AttributeStatementType


#define soap_in__saml2__AttributeStatement soap_in_saml2__AttributeStatementType

#define soap_new__saml2__AttributeStatement soap_new_saml2__AttributeStatementType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__AttributeStatement(struct soap*, const struct saml2__AttributeStatementType *, const char*, const char*);

#ifndef soap_write__saml2__AttributeStatement
#define soap_write__saml2__AttributeStatement(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml2__AttributeStatement(soap, data), 0) || soap_put__saml2__AttributeStatement(soap, data, "saml2:AttributeStatement", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__AttributeStatement
#define soap_PUT__saml2__AttributeStatement(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__AttributeStatement(soap, data), 0) || soap_put__saml2__AttributeStatement(soap, data, "saml2:AttributeStatement", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__AttributeStatement
#define soap_PATCH__saml2__AttributeStatement(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__AttributeStatement(soap, data), 0) || soap_put__saml2__AttributeStatement(soap, data, "saml2:AttributeStatement", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__AttributeStatement
#define soap_POST_send__saml2__AttributeStatement(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__AttributeStatement(soap, data), 0) || soap_put__saml2__AttributeStatement(soap, data, "saml2:AttributeStatement", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__AttributeStatement soap_get_saml2__AttributeStatementType


#define soap_read__saml2__AttributeStatement soap_read_saml2__AttributeStatementType


#define soap_GET__saml2__AttributeStatement soap_GET_saml2__AttributeStatementType


#define soap_POST_recv__saml2__AttributeStatement soap_POST_recv_saml2__AttributeStatementType

#endif
/* _saml2__Evidence is a typedef synonym of saml2__EvidenceType */

#ifndef SOAP_TYPE__saml2__Evidence_DEFINED
#define SOAP_TYPE__saml2__Evidence_DEFINED

#define soap_default__saml2__Evidence soap_default_saml2__EvidenceType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__EvidenceType(struct soap*, const struct saml2__EvidenceType *);

#define soap_serialize__saml2__Evidence soap_serialize_saml2__EvidenceType


#define soap__saml2__Evidence2s soap_saml2__EvidenceType2s


#define soap_out__saml2__Evidence soap_out_saml2__EvidenceType


#define soap_s2_saml2__Evidence soap_s2saml2__EvidenceType


#define soap_in__saml2__Evidence soap_in_saml2__EvidenceType

#define soap_new__saml2__Evidence soap_new_saml2__EvidenceType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__Evidence(struct soap*, const struct saml2__EvidenceType *, const char*, const char*);

#ifndef soap_write__saml2__Evidence
#define soap_write__saml2__Evidence(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml2__Evidence(soap, data), 0) || soap_put__saml2__Evidence(soap, data, "saml2:Evidence", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__Evidence
#define soap_PUT__saml2__Evidence(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Evidence(soap, data), 0) || soap_put__saml2__Evidence(soap, data, "saml2:Evidence", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__Evidence
#define soap_PATCH__saml2__Evidence(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Evidence(soap, data), 0) || soap_put__saml2__Evidence(soap, data, "saml2:Evidence", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__Evidence
#define soap_POST_send__saml2__Evidence(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Evidence(soap, data), 0) || soap_put__saml2__Evidence(soap, data, "saml2:Evidence", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__Evidence soap_get_saml2__EvidenceType


#define soap_read__saml2__Evidence soap_read_saml2__EvidenceType


#define soap_GET__saml2__Evidence soap_GET_saml2__EvidenceType


#define soap_POST_recv__saml2__Evidence soap_POST_recv_saml2__EvidenceType

#endif
/* _saml2__Action is a typedef synonym of saml2__ActionType */

#ifndef SOAP_TYPE__saml2__Action_DEFINED
#define SOAP_TYPE__saml2__Action_DEFINED

#define soap_default__saml2__Action soap_default_saml2__ActionType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__ActionType(struct soap*, const struct saml2__ActionType *);

#define soap_serialize__saml2__Action soap_serialize_saml2__ActionType


#define soap__saml2__Action2s soap_saml2__ActionType2s


#define soap_out__saml2__Action soap_out_saml2__ActionType


#define soap_s2_saml2__Action soap_s2saml2__ActionType


#define soap_in__saml2__Action soap_in_saml2__ActionType

#define soap_new__saml2__Action soap_new_saml2__ActionType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__Action(struct soap*, const struct saml2__ActionType *, const char*, const char*);

#ifndef soap_write__saml2__Action
#define soap_write__saml2__Action(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml2__Action(soap, data), 0) || soap_put__saml2__Action(soap, data, "saml2:Action", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__Action
#define soap_PUT__saml2__Action(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Action(soap, data), 0) || soap_put__saml2__Action(soap, data, "saml2:Action", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__Action
#define soap_PATCH__saml2__Action(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Action(soap, data), 0) || soap_put__saml2__Action(soap, data, "saml2:Action", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__Action
#define soap_POST_send__saml2__Action(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Action(soap, data), 0) || soap_put__saml2__Action(soap, data, "saml2:Action", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__Action soap_get_saml2__ActionType


#define soap_read__saml2__Action soap_read_saml2__ActionType


#define soap_GET__saml2__Action soap_GET_saml2__ActionType


#define soap_POST_recv__saml2__Action soap_POST_recv_saml2__ActionType

#endif
/* _saml2__AuthzDecisionStatement is a typedef synonym of saml2__AuthzDecisionStatementType */

#ifndef SOAP_TYPE__saml2__AuthzDecisionStatement_DEFINED
#define SOAP_TYPE__saml2__AuthzDecisionStatement_DEFINED

#define soap_default__saml2__AuthzDecisionStatement soap_default_saml2__AuthzDecisionStatementType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__AuthzDecisionStatementType(struct soap*, const struct saml2__AuthzDecisionStatementType *);

#define soap_serialize__saml2__AuthzDecisionStatement soap_serialize_saml2__AuthzDecisionStatementType


#define soap__saml2__AuthzDecisionStatement2s soap_saml2__AuthzDecisionStatementType2s


#define soap_out__saml2__AuthzDecisionStatement soap_out_saml2__AuthzDecisionStatementType


#define soap_s2_saml2__AuthzDecisionStatement soap_s2saml2__AuthzDecisionStatementType


#define soap_in__saml2__AuthzDecisionStatement soap_in_saml2__AuthzDecisionStatementType

#define soap_new__saml2__AuthzDecisionStatement soap_new_saml2__AuthzDecisionStatementType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__AuthzDecisionStatement(struct soap*, const struct saml2__AuthzDecisionStatementType *, const char*, const char*);

#ifndef soap_write__saml2__AuthzDecisionStatement
#define soap_write__saml2__AuthzDecisionStatement(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml2__AuthzDecisionStatement(soap, data), 0) || soap_put__saml2__AuthzDecisionStatement(soap, data, "saml2:AuthzDecisionStatement", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__AuthzDecisionStatement
#define soap_PUT__saml2__AuthzDecisionStatement(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__AuthzDecisionStatement(soap, data), 0) || soap_put__saml2__AuthzDecisionStatement(soap, data, "saml2:AuthzDecisionStatement", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__AuthzDecisionStatement
#define soap_PATCH__saml2__AuthzDecisionStatement(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__AuthzDecisionStatement(soap, data), 0) || soap_put__saml2__AuthzDecisionStatement(soap, data, "saml2:AuthzDecisionStatement", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__AuthzDecisionStatement
#define soap_POST_send__saml2__AuthzDecisionStatement(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__AuthzDecisionStatement(soap, data), 0) || soap_put__saml2__AuthzDecisionStatement(soap, data, "saml2:AuthzDecisionStatement", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__AuthzDecisionStatement soap_get_saml2__AuthzDecisionStatementType


#define soap_read__saml2__AuthzDecisionStatement soap_read_saml2__AuthzDecisionStatementType


#define soap_GET__saml2__AuthzDecisionStatement soap_GET_saml2__AuthzDecisionStatementType


#define soap_POST_recv__saml2__AuthzDecisionStatement soap_POST_recv_saml2__AuthzDecisionStatementType

#endif
/* _saml2__AuthnContext is a typedef synonym of saml2__AuthnContextType */

#ifndef SOAP_TYPE__saml2__AuthnContext_DEFINED
#define SOAP_TYPE__saml2__AuthnContext_DEFINED

#define soap_default__saml2__AuthnContext soap_default_saml2__AuthnContextType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__AuthnContextType(struct soap*, const struct saml2__AuthnContextType *);

#define soap_serialize__saml2__AuthnContext soap_serialize_saml2__AuthnContextType


#define soap__saml2__AuthnContext2s soap_saml2__AuthnContextType2s


#define soap_out__saml2__AuthnContext soap_out_saml2__AuthnContextType


#define soap_s2_saml2__AuthnContext soap_s2saml2__AuthnContextType


#define soap_in__saml2__AuthnContext soap_in_saml2__AuthnContextType

#define soap_new__saml2__AuthnContext soap_new_saml2__AuthnContextType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__AuthnContext(struct soap*, const struct saml2__AuthnContextType *, const char*, const char*);

#ifndef soap_write__saml2__AuthnContext
#define soap_write__saml2__AuthnContext(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml2__AuthnContext(soap, data), 0) || soap_put__saml2__AuthnContext(soap, data, "saml2:AuthnContext", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__AuthnContext
#define soap_PUT__saml2__AuthnContext(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__AuthnContext(soap, data), 0) || soap_put__saml2__AuthnContext(soap, data, "saml2:AuthnContext", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__AuthnContext
#define soap_PATCH__saml2__AuthnContext(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__AuthnContext(soap, data), 0) || soap_put__saml2__AuthnContext(soap, data, "saml2:AuthnContext", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__AuthnContext
#define soap_POST_send__saml2__AuthnContext(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__AuthnContext(soap, data), 0) || soap_put__saml2__AuthnContext(soap, data, "saml2:AuthnContext", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__AuthnContext soap_get_saml2__AuthnContextType


#define soap_read__saml2__AuthnContext soap_read_saml2__AuthnContextType


#define soap_GET__saml2__AuthnContext soap_GET_saml2__AuthnContextType


#define soap_POST_recv__saml2__AuthnContext soap_POST_recv_saml2__AuthnContextType

#endif
/* _saml2__SubjectLocality is a typedef synonym of saml2__SubjectLocalityType */

#ifndef SOAP_TYPE__saml2__SubjectLocality_DEFINED
#define SOAP_TYPE__saml2__SubjectLocality_DEFINED

#define soap_default__saml2__SubjectLocality soap_default_saml2__SubjectLocalityType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__SubjectLocalityType(struct soap*, const struct saml2__SubjectLocalityType *);

#define soap_serialize__saml2__SubjectLocality soap_serialize_saml2__SubjectLocalityType


#define soap__saml2__SubjectLocality2s soap_saml2__SubjectLocalityType2s


#define soap_out__saml2__SubjectLocality soap_out_saml2__SubjectLocalityType


#define soap_s2_saml2__SubjectLocality soap_s2saml2__SubjectLocalityType


#define soap_in__saml2__SubjectLocality soap_in_saml2__SubjectLocalityType

#define soap_new__saml2__SubjectLocality soap_new_saml2__SubjectLocalityType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__SubjectLocality(struct soap*, const struct saml2__SubjectLocalityType *, const char*, const char*);

#ifndef soap_write__saml2__SubjectLocality
#define soap_write__saml2__SubjectLocality(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml2__SubjectLocality(soap, data), 0) || soap_put__saml2__SubjectLocality(soap, data, "saml2:SubjectLocality", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__SubjectLocality
#define soap_PUT__saml2__SubjectLocality(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__SubjectLocality(soap, data), 0) || soap_put__saml2__SubjectLocality(soap, data, "saml2:SubjectLocality", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__SubjectLocality
#define soap_PATCH__saml2__SubjectLocality(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__SubjectLocality(soap, data), 0) || soap_put__saml2__SubjectLocality(soap, data, "saml2:SubjectLocality", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__SubjectLocality
#define soap_POST_send__saml2__SubjectLocality(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__SubjectLocality(soap, data), 0) || soap_put__saml2__SubjectLocality(soap, data, "saml2:SubjectLocality", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__SubjectLocality soap_get_saml2__SubjectLocalityType


#define soap_read__saml2__SubjectLocality soap_read_saml2__SubjectLocalityType


#define soap_GET__saml2__SubjectLocality soap_GET_saml2__SubjectLocalityType


#define soap_POST_recv__saml2__SubjectLocality soap_POST_recv_saml2__SubjectLocalityType

#endif
/* _saml2__AuthnStatement is a typedef synonym of saml2__AuthnStatementType */

#ifndef SOAP_TYPE__saml2__AuthnStatement_DEFINED
#define SOAP_TYPE__saml2__AuthnStatement_DEFINED

#define soap_default__saml2__AuthnStatement soap_default_saml2__AuthnStatementType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__AuthnStatementType(struct soap*, const struct saml2__AuthnStatementType *);

#define soap_serialize__saml2__AuthnStatement soap_serialize_saml2__AuthnStatementType


#define soap__saml2__AuthnStatement2s soap_saml2__AuthnStatementType2s


#define soap_out__saml2__AuthnStatement soap_out_saml2__AuthnStatementType


#define soap_s2_saml2__AuthnStatement soap_s2saml2__AuthnStatementType


#define soap_in__saml2__AuthnStatement soap_in_saml2__AuthnStatementType

#define soap_new__saml2__AuthnStatement soap_new_saml2__AuthnStatementType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__AuthnStatement(struct soap*, const struct saml2__AuthnStatementType *, const char*, const char*);

#ifndef soap_write__saml2__AuthnStatement
#define soap_write__saml2__AuthnStatement(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml2__AuthnStatement(soap, data), 0) || soap_put__saml2__AuthnStatement(soap, data, "saml2:AuthnStatement", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__AuthnStatement
#define soap_PUT__saml2__AuthnStatement(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__AuthnStatement(soap, data), 0) || soap_put__saml2__AuthnStatement(soap, data, "saml2:AuthnStatement", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__AuthnStatement
#define soap_PATCH__saml2__AuthnStatement(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__AuthnStatement(soap, data), 0) || soap_put__saml2__AuthnStatement(soap, data, "saml2:AuthnStatement", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__AuthnStatement
#define soap_POST_send__saml2__AuthnStatement(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__AuthnStatement(soap, data), 0) || soap_put__saml2__AuthnStatement(soap, data, "saml2:AuthnStatement", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__AuthnStatement soap_get_saml2__AuthnStatementType


#define soap_read__saml2__AuthnStatement soap_read_saml2__AuthnStatementType


#define soap_GET__saml2__AuthnStatement soap_GET_saml2__AuthnStatementType


#define soap_POST_recv__saml2__AuthnStatement soap_POST_recv_saml2__AuthnStatementType

#endif
/* _saml2__Statement is a typedef synonym of saml2__StatementAbstractType */

#ifndef SOAP_TYPE__saml2__Statement_DEFINED
#define SOAP_TYPE__saml2__Statement_DEFINED

#define soap_default__saml2__Statement soap_default_saml2__StatementAbstractType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__StatementAbstractType(struct soap*, const struct saml2__StatementAbstractType *);

#define soap_serialize__saml2__Statement soap_serialize_saml2__StatementAbstractType


#define soap__saml2__Statement2s soap_saml2__StatementAbstractType2s


#define soap_out__saml2__Statement soap_out_saml2__StatementAbstractType


#define soap_s2_saml2__Statement soap_s2saml2__StatementAbstractType


#define soap_in__saml2__Statement soap_in_saml2__StatementAbstractType

#define soap_new__saml2__Statement soap_new_saml2__StatementAbstractType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__Statement(struct soap*, const struct saml2__StatementAbstractType *, const char*, const char*);

#ifndef soap_write__saml2__Statement
#define soap_write__saml2__Statement(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml2__Statement(soap, data), 0) || soap_put__saml2__Statement(soap, data, "saml2:Statement", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__Statement
#define soap_PUT__saml2__Statement(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Statement(soap, data), 0) || soap_put__saml2__Statement(soap, data, "saml2:Statement", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__Statement
#define soap_PATCH__saml2__Statement(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Statement(soap, data), 0) || soap_put__saml2__Statement(soap, data, "saml2:Statement", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__Statement
#define soap_POST_send__saml2__Statement(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Statement(soap, data), 0) || soap_put__saml2__Statement(soap, data, "saml2:Statement", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__Statement soap_get_saml2__StatementAbstractType


#define soap_read__saml2__Statement soap_read_saml2__StatementAbstractType


#define soap_GET__saml2__Statement soap_GET_saml2__StatementAbstractType


#define soap_POST_recv__saml2__Statement soap_POST_recv_saml2__StatementAbstractType

#endif
/* _saml2__EncryptedAssertion is a typedef synonym of saml2__EncryptedElementType */

#ifndef SOAP_TYPE__saml2__EncryptedAssertion_DEFINED
#define SOAP_TYPE__saml2__EncryptedAssertion_DEFINED

#define soap_default__saml2__EncryptedAssertion soap_default_saml2__EncryptedElementType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__EncryptedElementType(struct soap*, const struct saml2__EncryptedElementType *);

#define soap_serialize__saml2__EncryptedAssertion soap_serialize_saml2__EncryptedElementType


#define soap__saml2__EncryptedAssertion2s soap_saml2__EncryptedElementType2s


#define soap_out__saml2__EncryptedAssertion soap_out_saml2__EncryptedElementType


#define soap_s2_saml2__EncryptedAssertion soap_s2saml2__EncryptedElementType


#define soap_in__saml2__EncryptedAssertion soap_in_saml2__EncryptedElementType

#define soap_new__saml2__EncryptedAssertion soap_new_saml2__EncryptedElementType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__EncryptedAssertion(struct soap*, const struct saml2__EncryptedElementType *, const char*, const char*);

#ifndef soap_write__saml2__EncryptedAssertion
#define soap_write__saml2__EncryptedAssertion(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml2__EncryptedAssertion(soap, data), 0) || soap_put__saml2__EncryptedAssertion(soap, data, "saml2:EncryptedAssertion", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__EncryptedAssertion
#define soap_PUT__saml2__EncryptedAssertion(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__EncryptedAssertion(soap, data), 0) || soap_put__saml2__EncryptedAssertion(soap, data, "saml2:EncryptedAssertion", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__EncryptedAssertion
#define soap_PATCH__saml2__EncryptedAssertion(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__EncryptedAssertion(soap, data), 0) || soap_put__saml2__EncryptedAssertion(soap, data, "saml2:EncryptedAssertion", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__EncryptedAssertion
#define soap_POST_send__saml2__EncryptedAssertion(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__EncryptedAssertion(soap, data), 0) || soap_put__saml2__EncryptedAssertion(soap, data, "saml2:EncryptedAssertion", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__EncryptedAssertion soap_get_saml2__EncryptedElementType


#define soap_read__saml2__EncryptedAssertion soap_read_saml2__EncryptedElementType


#define soap_GET__saml2__EncryptedAssertion soap_GET_saml2__EncryptedElementType


#define soap_POST_recv__saml2__EncryptedAssertion soap_POST_recv_saml2__EncryptedElementType

#endif
/* _saml2__Advice is a typedef synonym of saml2__AdviceType */

#ifndef SOAP_TYPE__saml2__Advice_DEFINED
#define SOAP_TYPE__saml2__Advice_DEFINED

#define soap_default__saml2__Advice soap_default_saml2__AdviceType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__AdviceType(struct soap*, const struct saml2__AdviceType *);

#define soap_serialize__saml2__Advice soap_serialize_saml2__AdviceType


#define soap__saml2__Advice2s soap_saml2__AdviceType2s


#define soap_out__saml2__Advice soap_out_saml2__AdviceType


#define soap_s2_saml2__Advice soap_s2saml2__AdviceType


#define soap_in__saml2__Advice soap_in_saml2__AdviceType

#define soap_new__saml2__Advice soap_new_saml2__AdviceType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__Advice(struct soap*, const struct saml2__AdviceType *, const char*, const char*);

#ifndef soap_write__saml2__Advice
#define soap_write__saml2__Advice(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml2__Advice(soap, data), 0) || soap_put__saml2__Advice(soap, data, "saml2:Advice", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__Advice
#define soap_PUT__saml2__Advice(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Advice(soap, data), 0) || soap_put__saml2__Advice(soap, data, "saml2:Advice", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__Advice
#define soap_PATCH__saml2__Advice(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Advice(soap, data), 0) || soap_put__saml2__Advice(soap, data, "saml2:Advice", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__Advice
#define soap_POST_send__saml2__Advice(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Advice(soap, data), 0) || soap_put__saml2__Advice(soap, data, "saml2:Advice", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__Advice soap_get_saml2__AdviceType


#define soap_read__saml2__Advice soap_read_saml2__AdviceType


#define soap_GET__saml2__Advice soap_GET_saml2__AdviceType


#define soap_POST_recv__saml2__Advice soap_POST_recv_saml2__AdviceType

#endif
/* _saml2__ProxyRestriction is a typedef synonym of saml2__ProxyRestrictionType */

#ifndef SOAP_TYPE__saml2__ProxyRestriction_DEFINED
#define SOAP_TYPE__saml2__ProxyRestriction_DEFINED

#define soap_default__saml2__ProxyRestriction soap_default_saml2__ProxyRestrictionType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__ProxyRestrictionType(struct soap*, const struct saml2__ProxyRestrictionType *);

#define soap_serialize__saml2__ProxyRestriction soap_serialize_saml2__ProxyRestrictionType


#define soap__saml2__ProxyRestriction2s soap_saml2__ProxyRestrictionType2s


#define soap_out__saml2__ProxyRestriction soap_out_saml2__ProxyRestrictionType


#define soap_s2_saml2__ProxyRestriction soap_s2saml2__ProxyRestrictionType


#define soap_in__saml2__ProxyRestriction soap_in_saml2__ProxyRestrictionType

#define soap_new__saml2__ProxyRestriction soap_new_saml2__ProxyRestrictionType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__ProxyRestriction(struct soap*, const struct saml2__ProxyRestrictionType *, const char*, const char*);

#ifndef soap_write__saml2__ProxyRestriction
#define soap_write__saml2__ProxyRestriction(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml2__ProxyRestriction(soap, data), 0) || soap_put__saml2__ProxyRestriction(soap, data, "saml2:ProxyRestriction", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__ProxyRestriction
#define soap_PUT__saml2__ProxyRestriction(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__ProxyRestriction(soap, data), 0) || soap_put__saml2__ProxyRestriction(soap, data, "saml2:ProxyRestriction", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__ProxyRestriction
#define soap_PATCH__saml2__ProxyRestriction(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__ProxyRestriction(soap, data), 0) || soap_put__saml2__ProxyRestriction(soap, data, "saml2:ProxyRestriction", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__ProxyRestriction
#define soap_POST_send__saml2__ProxyRestriction(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__ProxyRestriction(soap, data), 0) || soap_put__saml2__ProxyRestriction(soap, data, "saml2:ProxyRestriction", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__ProxyRestriction soap_get_saml2__ProxyRestrictionType


#define soap_read__saml2__ProxyRestriction soap_read_saml2__ProxyRestrictionType


#define soap_GET__saml2__ProxyRestriction soap_GET_saml2__ProxyRestrictionType


#define soap_POST_recv__saml2__ProxyRestriction soap_POST_recv_saml2__ProxyRestrictionType

#endif
/* _saml2__OneTimeUse is a typedef synonym of saml2__OneTimeUseType */

#ifndef SOAP_TYPE__saml2__OneTimeUse_DEFINED
#define SOAP_TYPE__saml2__OneTimeUse_DEFINED

#define soap_default__saml2__OneTimeUse soap_default_saml2__OneTimeUseType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__OneTimeUseType(struct soap*, const struct saml2__OneTimeUseType *);

#define soap_serialize__saml2__OneTimeUse soap_serialize_saml2__OneTimeUseType


#define soap__saml2__OneTimeUse2s soap_saml2__OneTimeUseType2s


#define soap_out__saml2__OneTimeUse soap_out_saml2__OneTimeUseType


#define soap_s2_saml2__OneTimeUse soap_s2saml2__OneTimeUseType


#define soap_in__saml2__OneTimeUse soap_in_saml2__OneTimeUseType

#define soap_new__saml2__OneTimeUse soap_new_saml2__OneTimeUseType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__OneTimeUse(struct soap*, const struct saml2__OneTimeUseType *, const char*, const char*);

#ifndef soap_write__saml2__OneTimeUse
#define soap_write__saml2__OneTimeUse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml2__OneTimeUse(soap, data), 0) || soap_put__saml2__OneTimeUse(soap, data, "saml2:OneTimeUse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__OneTimeUse
#define soap_PUT__saml2__OneTimeUse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__OneTimeUse(soap, data), 0) || soap_put__saml2__OneTimeUse(soap, data, "saml2:OneTimeUse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__OneTimeUse
#define soap_PATCH__saml2__OneTimeUse(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__OneTimeUse(soap, data), 0) || soap_put__saml2__OneTimeUse(soap, data, "saml2:OneTimeUse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__OneTimeUse
#define soap_POST_send__saml2__OneTimeUse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__OneTimeUse(soap, data), 0) || soap_put__saml2__OneTimeUse(soap, data, "saml2:OneTimeUse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__OneTimeUse soap_get_saml2__OneTimeUseType


#define soap_read__saml2__OneTimeUse soap_read_saml2__OneTimeUseType


#define soap_GET__saml2__OneTimeUse soap_GET_saml2__OneTimeUseType


#define soap_POST_recv__saml2__OneTimeUse soap_POST_recv_saml2__OneTimeUseType

#endif
/* _saml2__AudienceRestriction is a typedef synonym of saml2__AudienceRestrictionType */

#ifndef SOAP_TYPE__saml2__AudienceRestriction_DEFINED
#define SOAP_TYPE__saml2__AudienceRestriction_DEFINED

#define soap_default__saml2__AudienceRestriction soap_default_saml2__AudienceRestrictionType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__AudienceRestrictionType(struct soap*, const struct saml2__AudienceRestrictionType *);

#define soap_serialize__saml2__AudienceRestriction soap_serialize_saml2__AudienceRestrictionType


#define soap__saml2__AudienceRestriction2s soap_saml2__AudienceRestrictionType2s


#define soap_out__saml2__AudienceRestriction soap_out_saml2__AudienceRestrictionType


#define soap_s2_saml2__AudienceRestriction soap_s2saml2__AudienceRestrictionType


#define soap_in__saml2__AudienceRestriction soap_in_saml2__AudienceRestrictionType

#define soap_new__saml2__AudienceRestriction soap_new_saml2__AudienceRestrictionType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__AudienceRestriction(struct soap*, const struct saml2__AudienceRestrictionType *, const char*, const char*);

#ifndef soap_write__saml2__AudienceRestriction
#define soap_write__saml2__AudienceRestriction(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml2__AudienceRestriction(soap, data), 0) || soap_put__saml2__AudienceRestriction(soap, data, "saml2:AudienceRestriction", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__AudienceRestriction
#define soap_PUT__saml2__AudienceRestriction(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__AudienceRestriction(soap, data), 0) || soap_put__saml2__AudienceRestriction(soap, data, "saml2:AudienceRestriction", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__AudienceRestriction
#define soap_PATCH__saml2__AudienceRestriction(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__AudienceRestriction(soap, data), 0) || soap_put__saml2__AudienceRestriction(soap, data, "saml2:AudienceRestriction", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__AudienceRestriction
#define soap_POST_send__saml2__AudienceRestriction(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__AudienceRestriction(soap, data), 0) || soap_put__saml2__AudienceRestriction(soap, data, "saml2:AudienceRestriction", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__AudienceRestriction soap_get_saml2__AudienceRestrictionType


#define soap_read__saml2__AudienceRestriction soap_read_saml2__AudienceRestrictionType


#define soap_GET__saml2__AudienceRestriction soap_GET_saml2__AudienceRestrictionType


#define soap_POST_recv__saml2__AudienceRestriction soap_POST_recv_saml2__AudienceRestrictionType

#endif
/* _saml2__Condition is a typedef synonym of saml2__ConditionAbstractType */

#ifndef SOAP_TYPE__saml2__Condition_DEFINED
#define SOAP_TYPE__saml2__Condition_DEFINED

#define soap_default__saml2__Condition soap_default_saml2__ConditionAbstractType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__ConditionAbstractType(struct soap*, const struct saml2__ConditionAbstractType *);

#define soap_serialize__saml2__Condition soap_serialize_saml2__ConditionAbstractType


#define soap__saml2__Condition2s soap_saml2__ConditionAbstractType2s


#define soap_out__saml2__Condition soap_out_saml2__ConditionAbstractType


#define soap_s2_saml2__Condition soap_s2saml2__ConditionAbstractType


#define soap_in__saml2__Condition soap_in_saml2__ConditionAbstractType

#define soap_new__saml2__Condition soap_new_saml2__ConditionAbstractType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__Condition(struct soap*, const struct saml2__ConditionAbstractType *, const char*, const char*);

#ifndef soap_write__saml2__Condition
#define soap_write__saml2__Condition(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml2__Condition(soap, data), 0) || soap_put__saml2__Condition(soap, data, "saml2:Condition", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__Condition
#define soap_PUT__saml2__Condition(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Condition(soap, data), 0) || soap_put__saml2__Condition(soap, data, "saml2:Condition", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__Condition
#define soap_PATCH__saml2__Condition(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Condition(soap, data), 0) || soap_put__saml2__Condition(soap, data, "saml2:Condition", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__Condition
#define soap_POST_send__saml2__Condition(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Condition(soap, data), 0) || soap_put__saml2__Condition(soap, data, "saml2:Condition", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__Condition soap_get_saml2__ConditionAbstractType


#define soap_read__saml2__Condition soap_read_saml2__ConditionAbstractType


#define soap_GET__saml2__Condition soap_GET_saml2__ConditionAbstractType


#define soap_POST_recv__saml2__Condition soap_POST_recv_saml2__ConditionAbstractType

#endif
/* _saml2__Conditions is a typedef synonym of saml2__ConditionsType */

#ifndef SOAP_TYPE__saml2__Conditions_DEFINED
#define SOAP_TYPE__saml2__Conditions_DEFINED

#define soap_default__saml2__Conditions soap_default_saml2__ConditionsType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__ConditionsType(struct soap*, const struct saml2__ConditionsType *);

#define soap_serialize__saml2__Conditions soap_serialize_saml2__ConditionsType


#define soap__saml2__Conditions2s soap_saml2__ConditionsType2s


#define soap_out__saml2__Conditions soap_out_saml2__ConditionsType


#define soap_s2_saml2__Conditions soap_s2saml2__ConditionsType


#define soap_in__saml2__Conditions soap_in_saml2__ConditionsType

#define soap_new__saml2__Conditions soap_new_saml2__ConditionsType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__Conditions(struct soap*, const struct saml2__ConditionsType *, const char*, const char*);

#ifndef soap_write__saml2__Conditions
#define soap_write__saml2__Conditions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml2__Conditions(soap, data), 0) || soap_put__saml2__Conditions(soap, data, "saml2:Conditions", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__Conditions
#define soap_PUT__saml2__Conditions(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Conditions(soap, data), 0) || soap_put__saml2__Conditions(soap, data, "saml2:Conditions", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__Conditions
#define soap_PATCH__saml2__Conditions(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Conditions(soap, data), 0) || soap_put__saml2__Conditions(soap, data, "saml2:Conditions", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__Conditions
#define soap_POST_send__saml2__Conditions(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Conditions(soap, data), 0) || soap_put__saml2__Conditions(soap, data, "saml2:Conditions", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__Conditions soap_get_saml2__ConditionsType


#define soap_read__saml2__Conditions soap_read_saml2__ConditionsType


#define soap_GET__saml2__Conditions soap_GET_saml2__ConditionsType


#define soap_POST_recv__saml2__Conditions soap_POST_recv_saml2__ConditionsType

#endif
/* _saml2__SubjectConfirmationData is a typedef synonym of saml2__SubjectConfirmationDataType */

#ifndef SOAP_TYPE__saml2__SubjectConfirmationData_DEFINED
#define SOAP_TYPE__saml2__SubjectConfirmationData_DEFINED

#define soap_default__saml2__SubjectConfirmationData soap_default_saml2__SubjectConfirmationDataType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__SubjectConfirmationDataType(struct soap*, const struct saml2__SubjectConfirmationDataType *);

#define soap_serialize__saml2__SubjectConfirmationData soap_serialize_saml2__SubjectConfirmationDataType


#define soap__saml2__SubjectConfirmationData2s soap_saml2__SubjectConfirmationDataType2s


#define soap_out__saml2__SubjectConfirmationData soap_out_saml2__SubjectConfirmationDataType


#define soap_s2_saml2__SubjectConfirmationData soap_s2saml2__SubjectConfirmationDataType


#define soap_in__saml2__SubjectConfirmationData soap_in_saml2__SubjectConfirmationDataType

#define soap_new__saml2__SubjectConfirmationData soap_new_saml2__SubjectConfirmationDataType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__SubjectConfirmationData(struct soap*, const struct saml2__SubjectConfirmationDataType *, const char*, const char*);

#ifndef soap_write__saml2__SubjectConfirmationData
#define soap_write__saml2__SubjectConfirmationData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml2__SubjectConfirmationData(soap, data), 0) || soap_put__saml2__SubjectConfirmationData(soap, data, "saml2:SubjectConfirmationData", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__SubjectConfirmationData
#define soap_PUT__saml2__SubjectConfirmationData(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__SubjectConfirmationData(soap, data), 0) || soap_put__saml2__SubjectConfirmationData(soap, data, "saml2:SubjectConfirmationData", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__SubjectConfirmationData
#define soap_PATCH__saml2__SubjectConfirmationData(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__SubjectConfirmationData(soap, data), 0) || soap_put__saml2__SubjectConfirmationData(soap, data, "saml2:SubjectConfirmationData", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__SubjectConfirmationData
#define soap_POST_send__saml2__SubjectConfirmationData(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__SubjectConfirmationData(soap, data), 0) || soap_put__saml2__SubjectConfirmationData(soap, data, "saml2:SubjectConfirmationData", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__SubjectConfirmationData soap_get_saml2__SubjectConfirmationDataType


#define soap_read__saml2__SubjectConfirmationData soap_read_saml2__SubjectConfirmationDataType


#define soap_GET__saml2__SubjectConfirmationData soap_GET_saml2__SubjectConfirmationDataType


#define soap_POST_recv__saml2__SubjectConfirmationData soap_POST_recv_saml2__SubjectConfirmationDataType

#endif
/* _saml2__SubjectConfirmation is a typedef synonym of saml2__SubjectConfirmationType */

#ifndef SOAP_TYPE__saml2__SubjectConfirmation_DEFINED
#define SOAP_TYPE__saml2__SubjectConfirmation_DEFINED

#define soap_default__saml2__SubjectConfirmation soap_default_saml2__SubjectConfirmationType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__SubjectConfirmationType(struct soap*, const struct saml2__SubjectConfirmationType *);

#define soap_serialize__saml2__SubjectConfirmation soap_serialize_saml2__SubjectConfirmationType


#define soap__saml2__SubjectConfirmation2s soap_saml2__SubjectConfirmationType2s


#define soap_out__saml2__SubjectConfirmation soap_out_saml2__SubjectConfirmationType


#define soap_s2_saml2__SubjectConfirmation soap_s2saml2__SubjectConfirmationType


#define soap_in__saml2__SubjectConfirmation soap_in_saml2__SubjectConfirmationType

#define soap_new__saml2__SubjectConfirmation soap_new_saml2__SubjectConfirmationType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__SubjectConfirmation(struct soap*, const struct saml2__SubjectConfirmationType *, const char*, const char*);

#ifndef soap_write__saml2__SubjectConfirmation
#define soap_write__saml2__SubjectConfirmation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml2__SubjectConfirmation(soap, data), 0) || soap_put__saml2__SubjectConfirmation(soap, data, "saml2:SubjectConfirmation", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__SubjectConfirmation
#define soap_PUT__saml2__SubjectConfirmation(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__SubjectConfirmation(soap, data), 0) || soap_put__saml2__SubjectConfirmation(soap, data, "saml2:SubjectConfirmation", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__SubjectConfirmation
#define soap_PATCH__saml2__SubjectConfirmation(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__SubjectConfirmation(soap, data), 0) || soap_put__saml2__SubjectConfirmation(soap, data, "saml2:SubjectConfirmation", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__SubjectConfirmation
#define soap_POST_send__saml2__SubjectConfirmation(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__SubjectConfirmation(soap, data), 0) || soap_put__saml2__SubjectConfirmation(soap, data, "saml2:SubjectConfirmation", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__SubjectConfirmation soap_get_saml2__SubjectConfirmationType


#define soap_read__saml2__SubjectConfirmation soap_read_saml2__SubjectConfirmationType


#define soap_GET__saml2__SubjectConfirmation soap_GET_saml2__SubjectConfirmationType


#define soap_POST_recv__saml2__SubjectConfirmation soap_POST_recv_saml2__SubjectConfirmationType

#endif
/* _saml2__Subject is a typedef synonym of saml2__SubjectType */

#ifndef SOAP_TYPE__saml2__Subject_DEFINED
#define SOAP_TYPE__saml2__Subject_DEFINED

#define soap_default__saml2__Subject soap_default_saml2__SubjectType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__SubjectType(struct soap*, const struct saml2__SubjectType *);

#define soap_serialize__saml2__Subject soap_serialize_saml2__SubjectType


#define soap__saml2__Subject2s soap_saml2__SubjectType2s


#define soap_out__saml2__Subject soap_out_saml2__SubjectType


#define soap_s2_saml2__Subject soap_s2saml2__SubjectType


#define soap_in__saml2__Subject soap_in_saml2__SubjectType

#define soap_new__saml2__Subject soap_new_saml2__SubjectType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__Subject(struct soap*, const struct saml2__SubjectType *, const char*, const char*);

#ifndef soap_write__saml2__Subject
#define soap_write__saml2__Subject(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml2__Subject(soap, data), 0) || soap_put__saml2__Subject(soap, data, "saml2:Subject", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__Subject
#define soap_PUT__saml2__Subject(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Subject(soap, data), 0) || soap_put__saml2__Subject(soap, data, "saml2:Subject", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__Subject
#define soap_PATCH__saml2__Subject(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Subject(soap, data), 0) || soap_put__saml2__Subject(soap, data, "saml2:Subject", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__Subject
#define soap_POST_send__saml2__Subject(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Subject(soap, data), 0) || soap_put__saml2__Subject(soap, data, "saml2:Subject", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__Subject soap_get_saml2__SubjectType


#define soap_read__saml2__Subject soap_read_saml2__SubjectType


#define soap_GET__saml2__Subject soap_GET_saml2__SubjectType


#define soap_POST_recv__saml2__Subject soap_POST_recv_saml2__SubjectType

#endif
/* _saml2__Assertion is a typedef synonym of saml2__AssertionType */

#ifndef SOAP_TYPE__saml2__Assertion_DEFINED
#define SOAP_TYPE__saml2__Assertion_DEFINED

#define soap_default__saml2__Assertion soap_default_saml2__AssertionType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__AssertionType(struct soap*, const struct saml2__AssertionType *);

#define soap_serialize__saml2__Assertion soap_serialize_saml2__AssertionType


#define soap__saml2__Assertion2s soap_saml2__AssertionType2s


#define soap_out__saml2__Assertion soap_out_saml2__AssertionType


#define soap_s2_saml2__Assertion soap_s2saml2__AssertionType


#define soap_in__saml2__Assertion soap_in_saml2__AssertionType

#define soap_new__saml2__Assertion soap_new_saml2__AssertionType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__Assertion(struct soap*, const struct saml2__AssertionType *, const char*, const char*);

#ifndef soap_write__saml2__Assertion
#define soap_write__saml2__Assertion(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml2__Assertion(soap, data), 0) || soap_put__saml2__Assertion(soap, data, "saml2:Assertion", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__Assertion
#define soap_PUT__saml2__Assertion(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Assertion(soap, data), 0) || soap_put__saml2__Assertion(soap, data, "saml2:Assertion", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__Assertion
#define soap_PATCH__saml2__Assertion(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Assertion(soap, data), 0) || soap_put__saml2__Assertion(soap, data, "saml2:Assertion", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__Assertion
#define soap_POST_send__saml2__Assertion(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Assertion(soap, data), 0) || soap_put__saml2__Assertion(soap, data, "saml2:Assertion", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__Assertion soap_get_saml2__AssertionType


#define soap_read__saml2__Assertion soap_read_saml2__AssertionType


#define soap_GET__saml2__Assertion soap_GET_saml2__AssertionType


#define soap_POST_recv__saml2__Assertion soap_POST_recv_saml2__AssertionType

#endif
/* _saml2__Issuer is a typedef synonym of saml2__NameIDType */

#ifndef SOAP_TYPE__saml2__Issuer_DEFINED
#define SOAP_TYPE__saml2__Issuer_DEFINED

#define soap_default__saml2__Issuer soap_default_saml2__NameIDType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__NameIDType(struct soap*, const struct saml2__NameIDType *);

#define soap_serialize__saml2__Issuer soap_serialize_saml2__NameIDType


#define soap__saml2__Issuer2s soap_saml2__NameIDType2s


#define soap_out__saml2__Issuer soap_out_saml2__NameIDType


#define soap_s2_saml2__Issuer soap_s2saml2__NameIDType


#define soap_in__saml2__Issuer soap_in_saml2__NameIDType

#define soap_new__saml2__Issuer soap_new_saml2__NameIDType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__Issuer(struct soap*, const struct saml2__NameIDType *, const char*, const char*);

#ifndef soap_write__saml2__Issuer
#define soap_write__saml2__Issuer(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml2__Issuer(soap, data), 0) || soap_put__saml2__Issuer(soap, data, "saml2:Issuer", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__Issuer
#define soap_PUT__saml2__Issuer(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Issuer(soap, data), 0) || soap_put__saml2__Issuer(soap, data, "saml2:Issuer", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__Issuer
#define soap_PATCH__saml2__Issuer(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Issuer(soap, data), 0) || soap_put__saml2__Issuer(soap, data, "saml2:Issuer", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__Issuer
#define soap_POST_send__saml2__Issuer(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__Issuer(soap, data), 0) || soap_put__saml2__Issuer(soap, data, "saml2:Issuer", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__Issuer soap_get_saml2__NameIDType


#define soap_read__saml2__Issuer soap_read_saml2__NameIDType


#define soap_GET__saml2__Issuer soap_GET_saml2__NameIDType


#define soap_POST_recv__saml2__Issuer soap_POST_recv_saml2__NameIDType

#endif
/* _saml2__EncryptedID is a typedef synonym of saml2__EncryptedElementType */

#ifndef SOAP_TYPE__saml2__EncryptedID_DEFINED
#define SOAP_TYPE__saml2__EncryptedID_DEFINED

#define soap_default__saml2__EncryptedID soap_default_saml2__EncryptedElementType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__EncryptedElementType(struct soap*, const struct saml2__EncryptedElementType *);

#define soap_serialize__saml2__EncryptedID soap_serialize_saml2__EncryptedElementType


#define soap__saml2__EncryptedID2s soap_saml2__EncryptedElementType2s


#define soap_out__saml2__EncryptedID soap_out_saml2__EncryptedElementType


#define soap_s2_saml2__EncryptedID soap_s2saml2__EncryptedElementType


#define soap_in__saml2__EncryptedID soap_in_saml2__EncryptedElementType

#define soap_new__saml2__EncryptedID soap_new_saml2__EncryptedElementType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__EncryptedID(struct soap*, const struct saml2__EncryptedElementType *, const char*, const char*);

#ifndef soap_write__saml2__EncryptedID
#define soap_write__saml2__EncryptedID(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml2__EncryptedID(soap, data), 0) || soap_put__saml2__EncryptedID(soap, data, "saml2:EncryptedID", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__EncryptedID
#define soap_PUT__saml2__EncryptedID(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__EncryptedID(soap, data), 0) || soap_put__saml2__EncryptedID(soap, data, "saml2:EncryptedID", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__EncryptedID
#define soap_PATCH__saml2__EncryptedID(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__EncryptedID(soap, data), 0) || soap_put__saml2__EncryptedID(soap, data, "saml2:EncryptedID", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__EncryptedID
#define soap_POST_send__saml2__EncryptedID(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__EncryptedID(soap, data), 0) || soap_put__saml2__EncryptedID(soap, data, "saml2:EncryptedID", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__EncryptedID soap_get_saml2__EncryptedElementType


#define soap_read__saml2__EncryptedID soap_read_saml2__EncryptedElementType


#define soap_GET__saml2__EncryptedID soap_GET_saml2__EncryptedElementType


#define soap_POST_recv__saml2__EncryptedID soap_POST_recv_saml2__EncryptedElementType

#endif
/* _saml2__NameID is a typedef synonym of saml2__NameIDType */

#ifndef SOAP_TYPE__saml2__NameID_DEFINED
#define SOAP_TYPE__saml2__NameID_DEFINED

#define soap_default__saml2__NameID soap_default_saml2__NameIDType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__NameIDType(struct soap*, const struct saml2__NameIDType *);

#define soap_serialize__saml2__NameID soap_serialize_saml2__NameIDType


#define soap__saml2__NameID2s soap_saml2__NameIDType2s


#define soap_out__saml2__NameID soap_out_saml2__NameIDType


#define soap_s2_saml2__NameID soap_s2saml2__NameIDType


#define soap_in__saml2__NameID soap_in_saml2__NameIDType

#define soap_new__saml2__NameID soap_new_saml2__NameIDType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__NameID(struct soap*, const struct saml2__NameIDType *, const char*, const char*);

#ifndef soap_write__saml2__NameID
#define soap_write__saml2__NameID(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml2__NameID(soap, data), 0) || soap_put__saml2__NameID(soap, data, "saml2:NameID", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__NameID
#define soap_PUT__saml2__NameID(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__NameID(soap, data), 0) || soap_put__saml2__NameID(soap, data, "saml2:NameID", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__NameID
#define soap_PATCH__saml2__NameID(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__NameID(soap, data), 0) || soap_put__saml2__NameID(soap, data, "saml2:NameID", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__NameID
#define soap_POST_send__saml2__NameID(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__NameID(soap, data), 0) || soap_put__saml2__NameID(soap, data, "saml2:NameID", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__NameID soap_get_saml2__NameIDType


#define soap_read__saml2__NameID soap_read_saml2__NameIDType


#define soap_GET__saml2__NameID soap_GET_saml2__NameIDType


#define soap_POST_recv__saml2__NameID soap_POST_recv_saml2__NameIDType

#endif
/* _saml2__BaseID is a typedef synonym of saml2__BaseIDAbstractType */

#ifndef SOAP_TYPE__saml2__BaseID_DEFINED
#define SOAP_TYPE__saml2__BaseID_DEFINED

#define soap_default__saml2__BaseID soap_default_saml2__BaseIDAbstractType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__BaseIDAbstractType(struct soap*, const struct saml2__BaseIDAbstractType *);

#define soap_serialize__saml2__BaseID soap_serialize_saml2__BaseIDAbstractType


#define soap__saml2__BaseID2s soap_saml2__BaseIDAbstractType2s


#define soap_out__saml2__BaseID soap_out_saml2__BaseIDAbstractType


#define soap_s2_saml2__BaseID soap_s2saml2__BaseIDAbstractType


#define soap_in__saml2__BaseID soap_in_saml2__BaseIDAbstractType

#define soap_new__saml2__BaseID soap_new_saml2__BaseIDAbstractType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__BaseID(struct soap*, const struct saml2__BaseIDAbstractType *, const char*, const char*);

#ifndef soap_write__saml2__BaseID
#define soap_write__saml2__BaseID(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml2__BaseID(soap, data), 0) || soap_put__saml2__BaseID(soap, data, "saml2:BaseID", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__BaseID
#define soap_PUT__saml2__BaseID(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__BaseID(soap, data), 0) || soap_put__saml2__BaseID(soap, data, "saml2:BaseID", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__BaseID
#define soap_PATCH__saml2__BaseID(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__BaseID(soap, data), 0) || soap_put__saml2__BaseID(soap, data, "saml2:BaseID", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__BaseID
#define soap_POST_send__saml2__BaseID(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml2__BaseID(soap, data), 0) || soap_put__saml2__BaseID(soap, data, "saml2:BaseID", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__BaseID soap_get_saml2__BaseIDAbstractType


#define soap_read__saml2__BaseID soap_read_saml2__BaseIDAbstractType


#define soap_GET__saml2__BaseID soap_GET_saml2__BaseIDAbstractType


#define soap_POST_recv__saml2__BaseID soap_POST_recv_saml2__BaseIDAbstractType

#endif

#ifndef SOAP_TYPE___saml2__union_AttributeStatementType_DEFINED
#define SOAP_TYPE___saml2__union_AttributeStatementType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___saml2__union_AttributeStatementType(struct soap*, struct __saml2__union_AttributeStatementType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___saml2__union_AttributeStatementType(struct soap*, const struct __saml2__union_AttributeStatementType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___saml2__union_AttributeStatementType(struct soap*, const char*, int, const struct __saml2__union_AttributeStatementType *, const char*);
SOAP_FMAC3 struct __saml2__union_AttributeStatementType * SOAP_FMAC4 soap_in___saml2__union_AttributeStatementType(struct soap*, const char*, struct __saml2__union_AttributeStatementType *, const char*);

SOAP_FMAC3 struct __saml2__union_AttributeStatementType * SOAP_FMAC4 soap_new___saml2__union_AttributeStatementType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___saml2__union_AttributeStatementType(struct soap*, const struct __saml2__union_AttributeStatementType *, const char*, const char*);

#ifndef soap_write___saml2__union_AttributeStatementType
#define soap_write___saml2__union_AttributeStatementType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___saml2__union_AttributeStatementType(soap, data), 0) || soap_put___saml2__union_AttributeStatementType(soap, data, "-saml2:union-AttributeStatementType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___saml2__union_AttributeStatementType
#define soap_PUT___saml2__union_AttributeStatementType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml2__union_AttributeStatementType(soap, data), 0) || soap_put___saml2__union_AttributeStatementType(soap, data, "-saml2:union-AttributeStatementType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___saml2__union_AttributeStatementType
#define soap_PATCH___saml2__union_AttributeStatementType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml2__union_AttributeStatementType(soap, data), 0) || soap_put___saml2__union_AttributeStatementType(soap, data, "-saml2:union-AttributeStatementType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___saml2__union_AttributeStatementType
#define soap_POST_send___saml2__union_AttributeStatementType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml2__union_AttributeStatementType(soap, data), 0) || soap_put___saml2__union_AttributeStatementType(soap, data, "-saml2:union-AttributeStatementType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __saml2__union_AttributeStatementType * SOAP_FMAC4 soap_get___saml2__union_AttributeStatementType(struct soap*, struct __saml2__union_AttributeStatementType *, const char*, const char*);

#ifndef soap_read___saml2__union_AttributeStatementType
#define soap_read___saml2__union_AttributeStatementType(soap, data) ( ((data) ? (soap_default___saml2__union_AttributeStatementType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___saml2__union_AttributeStatementType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___saml2__union_AttributeStatementType
#define soap_GET___saml2__union_AttributeStatementType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___saml2__union_AttributeStatementType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___saml2__union_AttributeStatementType
#define soap_POST_recv___saml2__union_AttributeStatementType(soap, data) ( soap_read___saml2__union_AttributeStatementType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___saml2__union_EvidenceType_DEFINED
#define SOAP_TYPE___saml2__union_EvidenceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___saml2__union_EvidenceType(struct soap*, struct __saml2__union_EvidenceType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___saml2__union_EvidenceType(struct soap*, const struct __saml2__union_EvidenceType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___saml2__union_EvidenceType(struct soap*, const char*, int, const struct __saml2__union_EvidenceType *, const char*);
SOAP_FMAC3 struct __saml2__union_EvidenceType * SOAP_FMAC4 soap_in___saml2__union_EvidenceType(struct soap*, const char*, struct __saml2__union_EvidenceType *, const char*);

SOAP_FMAC3 struct __saml2__union_EvidenceType * SOAP_FMAC4 soap_new___saml2__union_EvidenceType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___saml2__union_EvidenceType(struct soap*, const struct __saml2__union_EvidenceType *, const char*, const char*);

#ifndef soap_write___saml2__union_EvidenceType
#define soap_write___saml2__union_EvidenceType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___saml2__union_EvidenceType(soap, data), 0) || soap_put___saml2__union_EvidenceType(soap, data, "-saml2:union-EvidenceType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___saml2__union_EvidenceType
#define soap_PUT___saml2__union_EvidenceType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml2__union_EvidenceType(soap, data), 0) || soap_put___saml2__union_EvidenceType(soap, data, "-saml2:union-EvidenceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___saml2__union_EvidenceType
#define soap_PATCH___saml2__union_EvidenceType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml2__union_EvidenceType(soap, data), 0) || soap_put___saml2__union_EvidenceType(soap, data, "-saml2:union-EvidenceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___saml2__union_EvidenceType
#define soap_POST_send___saml2__union_EvidenceType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml2__union_EvidenceType(soap, data), 0) || soap_put___saml2__union_EvidenceType(soap, data, "-saml2:union-EvidenceType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __saml2__union_EvidenceType * SOAP_FMAC4 soap_get___saml2__union_EvidenceType(struct soap*, struct __saml2__union_EvidenceType *, const char*, const char*);

#ifndef soap_read___saml2__union_EvidenceType
#define soap_read___saml2__union_EvidenceType(soap, data) ( ((data) ? (soap_default___saml2__union_EvidenceType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___saml2__union_EvidenceType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___saml2__union_EvidenceType
#define soap_GET___saml2__union_EvidenceType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___saml2__union_EvidenceType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___saml2__union_EvidenceType
#define soap_POST_recv___saml2__union_EvidenceType(soap, data) ( soap_read___saml2__union_EvidenceType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___saml2__union_AdviceType_DEFINED
#define SOAP_TYPE___saml2__union_AdviceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___saml2__union_AdviceType(struct soap*, struct __saml2__union_AdviceType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___saml2__union_AdviceType(struct soap*, const struct __saml2__union_AdviceType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___saml2__union_AdviceType(struct soap*, const char*, int, const struct __saml2__union_AdviceType *, const char*);
SOAP_FMAC3 struct __saml2__union_AdviceType * SOAP_FMAC4 soap_in___saml2__union_AdviceType(struct soap*, const char*, struct __saml2__union_AdviceType *, const char*);

SOAP_FMAC3 struct __saml2__union_AdviceType * SOAP_FMAC4 soap_new___saml2__union_AdviceType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___saml2__union_AdviceType(struct soap*, const struct __saml2__union_AdviceType *, const char*, const char*);

#ifndef soap_write___saml2__union_AdviceType
#define soap_write___saml2__union_AdviceType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___saml2__union_AdviceType(soap, data), 0) || soap_put___saml2__union_AdviceType(soap, data, "-saml2:union-AdviceType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___saml2__union_AdviceType
#define soap_PUT___saml2__union_AdviceType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml2__union_AdviceType(soap, data), 0) || soap_put___saml2__union_AdviceType(soap, data, "-saml2:union-AdviceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___saml2__union_AdviceType
#define soap_PATCH___saml2__union_AdviceType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml2__union_AdviceType(soap, data), 0) || soap_put___saml2__union_AdviceType(soap, data, "-saml2:union-AdviceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___saml2__union_AdviceType
#define soap_POST_send___saml2__union_AdviceType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml2__union_AdviceType(soap, data), 0) || soap_put___saml2__union_AdviceType(soap, data, "-saml2:union-AdviceType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __saml2__union_AdviceType * SOAP_FMAC4 soap_get___saml2__union_AdviceType(struct soap*, struct __saml2__union_AdviceType *, const char*, const char*);

#ifndef soap_read___saml2__union_AdviceType
#define soap_read___saml2__union_AdviceType(soap, data) ( ((data) ? (soap_default___saml2__union_AdviceType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___saml2__union_AdviceType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___saml2__union_AdviceType
#define soap_GET___saml2__union_AdviceType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___saml2__union_AdviceType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___saml2__union_AdviceType
#define soap_POST_recv___saml2__union_AdviceType(soap, data) ( soap_read___saml2__union_AdviceType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___saml2__union_ConditionsType_DEFINED
#define SOAP_TYPE___saml2__union_ConditionsType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___saml2__union_ConditionsType(struct soap*, struct __saml2__union_ConditionsType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___saml2__union_ConditionsType(struct soap*, const struct __saml2__union_ConditionsType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___saml2__union_ConditionsType(struct soap*, const char*, int, const struct __saml2__union_ConditionsType *, const char*);
SOAP_FMAC3 struct __saml2__union_ConditionsType * SOAP_FMAC4 soap_in___saml2__union_ConditionsType(struct soap*, const char*, struct __saml2__union_ConditionsType *, const char*);

SOAP_FMAC3 struct __saml2__union_ConditionsType * SOAP_FMAC4 soap_new___saml2__union_ConditionsType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___saml2__union_ConditionsType(struct soap*, const struct __saml2__union_ConditionsType *, const char*, const char*);

#ifndef soap_write___saml2__union_ConditionsType
#define soap_write___saml2__union_ConditionsType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___saml2__union_ConditionsType(soap, data), 0) || soap_put___saml2__union_ConditionsType(soap, data, "-saml2:union-ConditionsType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___saml2__union_ConditionsType
#define soap_PUT___saml2__union_ConditionsType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml2__union_ConditionsType(soap, data), 0) || soap_put___saml2__union_ConditionsType(soap, data, "-saml2:union-ConditionsType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___saml2__union_ConditionsType
#define soap_PATCH___saml2__union_ConditionsType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml2__union_ConditionsType(soap, data), 0) || soap_put___saml2__union_ConditionsType(soap, data, "-saml2:union-ConditionsType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___saml2__union_ConditionsType
#define soap_POST_send___saml2__union_ConditionsType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml2__union_ConditionsType(soap, data), 0) || soap_put___saml2__union_ConditionsType(soap, data, "-saml2:union-ConditionsType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __saml2__union_ConditionsType * SOAP_FMAC4 soap_get___saml2__union_ConditionsType(struct soap*, struct __saml2__union_ConditionsType *, const char*, const char*);

#ifndef soap_read___saml2__union_ConditionsType
#define soap_read___saml2__union_ConditionsType(soap, data) ( ((data) ? (soap_default___saml2__union_ConditionsType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___saml2__union_ConditionsType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___saml2__union_ConditionsType
#define soap_GET___saml2__union_ConditionsType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___saml2__union_ConditionsType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___saml2__union_ConditionsType
#define soap_POST_recv___saml2__union_ConditionsType(soap, data) ( soap_read___saml2__union_ConditionsType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___saml2__union_AssertionType_DEFINED
#define SOAP_TYPE___saml2__union_AssertionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___saml2__union_AssertionType(struct soap*, struct __saml2__union_AssertionType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___saml2__union_AssertionType(struct soap*, const struct __saml2__union_AssertionType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___saml2__union_AssertionType(struct soap*, const char*, int, const struct __saml2__union_AssertionType *, const char*);
SOAP_FMAC3 struct __saml2__union_AssertionType * SOAP_FMAC4 soap_in___saml2__union_AssertionType(struct soap*, const char*, struct __saml2__union_AssertionType *, const char*);

SOAP_FMAC3 struct __saml2__union_AssertionType * SOAP_FMAC4 soap_new___saml2__union_AssertionType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___saml2__union_AssertionType(struct soap*, const struct __saml2__union_AssertionType *, const char*, const char*);

#ifndef soap_write___saml2__union_AssertionType
#define soap_write___saml2__union_AssertionType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___saml2__union_AssertionType(soap, data), 0) || soap_put___saml2__union_AssertionType(soap, data, "-saml2:union-AssertionType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___saml2__union_AssertionType
#define soap_PUT___saml2__union_AssertionType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml2__union_AssertionType(soap, data), 0) || soap_put___saml2__union_AssertionType(soap, data, "-saml2:union-AssertionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___saml2__union_AssertionType
#define soap_PATCH___saml2__union_AssertionType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml2__union_AssertionType(soap, data), 0) || soap_put___saml2__union_AssertionType(soap, data, "-saml2:union-AssertionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___saml2__union_AssertionType
#define soap_POST_send___saml2__union_AssertionType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml2__union_AssertionType(soap, data), 0) || soap_put___saml2__union_AssertionType(soap, data, "-saml2:union-AssertionType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __saml2__union_AssertionType * SOAP_FMAC4 soap_get___saml2__union_AssertionType(struct soap*, struct __saml2__union_AssertionType *, const char*, const char*);

#ifndef soap_read___saml2__union_AssertionType
#define soap_read___saml2__union_AssertionType(soap, data) ( ((data) ? (soap_default___saml2__union_AssertionType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___saml2__union_AssertionType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___saml2__union_AssertionType
#define soap_GET___saml2__union_AssertionType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___saml2__union_AssertionType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___saml2__union_AssertionType
#define soap_POST_recv___saml2__union_AssertionType(soap, data) ( soap_read___saml2__union_AssertionType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml2__AttributeType_DEFINED
#define SOAP_TYPE_saml2__AttributeType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml2__AttributeType(struct soap*, struct saml2__AttributeType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__AttributeType(struct soap*, const struct saml2__AttributeType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml2__AttributeType(struct soap*, const char*, int, const struct saml2__AttributeType *, const char*);
SOAP_FMAC3 struct saml2__AttributeType * SOAP_FMAC4 soap_in_saml2__AttributeType(struct soap*, const char*, struct saml2__AttributeType *, const char*);

SOAP_FMAC3 struct saml2__AttributeType * SOAP_FMAC4 soap_new_saml2__AttributeType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml2__AttributeType(struct soap*, const struct saml2__AttributeType *, const char*, const char*);

#ifndef soap_write_saml2__AttributeType
#define soap_write_saml2__AttributeType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml2__AttributeType(soap, data), 0) || soap_put_saml2__AttributeType(soap, data, "saml2:AttributeType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml2__AttributeType
#define soap_PUT_saml2__AttributeType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__AttributeType(soap, data), 0) || soap_put_saml2__AttributeType(soap, data, "saml2:AttributeType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml2__AttributeType
#define soap_PATCH_saml2__AttributeType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__AttributeType(soap, data), 0) || soap_put_saml2__AttributeType(soap, data, "saml2:AttributeType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml2__AttributeType
#define soap_POST_send_saml2__AttributeType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__AttributeType(soap, data), 0) || soap_put_saml2__AttributeType(soap, data, "saml2:AttributeType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml2__AttributeType * SOAP_FMAC4 soap_get_saml2__AttributeType(struct soap*, struct saml2__AttributeType *, const char*, const char*);

#ifndef soap_read_saml2__AttributeType
#define soap_read_saml2__AttributeType(soap, data) ( ((data) ? (soap_default_saml2__AttributeType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml2__AttributeType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml2__AttributeType
#define soap_GET_saml2__AttributeType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml2__AttributeType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml2__AttributeType
#define soap_POST_recv_saml2__AttributeType(soap, data) ( soap_read_saml2__AttributeType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml2__AttributeStatementType_DEFINED
#define SOAP_TYPE_saml2__AttributeStatementType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml2__AttributeStatementType(struct soap*, struct saml2__AttributeStatementType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__AttributeStatementType(struct soap*, const struct saml2__AttributeStatementType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml2__AttributeStatementType(struct soap*, const char*, int, const struct saml2__AttributeStatementType *, const char*);
SOAP_FMAC3 struct saml2__AttributeStatementType * SOAP_FMAC4 soap_in_saml2__AttributeStatementType(struct soap*, const char*, struct saml2__AttributeStatementType *, const char*);

SOAP_FMAC3 struct saml2__AttributeStatementType * SOAP_FMAC4 soap_new_saml2__AttributeStatementType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml2__AttributeStatementType(struct soap*, const struct saml2__AttributeStatementType *, const char*, const char*);

#ifndef soap_write_saml2__AttributeStatementType
#define soap_write_saml2__AttributeStatementType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml2__AttributeStatementType(soap, data), 0) || soap_put_saml2__AttributeStatementType(soap, data, "saml2:AttributeStatementType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml2__AttributeStatementType
#define soap_PUT_saml2__AttributeStatementType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__AttributeStatementType(soap, data), 0) || soap_put_saml2__AttributeStatementType(soap, data, "saml2:AttributeStatementType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml2__AttributeStatementType
#define soap_PATCH_saml2__AttributeStatementType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__AttributeStatementType(soap, data), 0) || soap_put_saml2__AttributeStatementType(soap, data, "saml2:AttributeStatementType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml2__AttributeStatementType
#define soap_POST_send_saml2__AttributeStatementType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__AttributeStatementType(soap, data), 0) || soap_put_saml2__AttributeStatementType(soap, data, "saml2:AttributeStatementType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml2__AttributeStatementType * SOAP_FMAC4 soap_get_saml2__AttributeStatementType(struct soap*, struct saml2__AttributeStatementType *, const char*, const char*);

#ifndef soap_read_saml2__AttributeStatementType
#define soap_read_saml2__AttributeStatementType(soap, data) ( ((data) ? (soap_default_saml2__AttributeStatementType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml2__AttributeStatementType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml2__AttributeStatementType
#define soap_GET_saml2__AttributeStatementType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml2__AttributeStatementType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml2__AttributeStatementType
#define soap_POST_recv_saml2__AttributeStatementType(soap, data) ( soap_read_saml2__AttributeStatementType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml2__EvidenceType_DEFINED
#define SOAP_TYPE_saml2__EvidenceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml2__EvidenceType(struct soap*, struct saml2__EvidenceType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__EvidenceType(struct soap*, const struct saml2__EvidenceType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml2__EvidenceType(struct soap*, const char*, int, const struct saml2__EvidenceType *, const char*);
SOAP_FMAC3 struct saml2__EvidenceType * SOAP_FMAC4 soap_in_saml2__EvidenceType(struct soap*, const char*, struct saml2__EvidenceType *, const char*);

SOAP_FMAC3 struct saml2__EvidenceType * SOAP_FMAC4 soap_new_saml2__EvidenceType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml2__EvidenceType(struct soap*, const struct saml2__EvidenceType *, const char*, const char*);

#ifndef soap_write_saml2__EvidenceType
#define soap_write_saml2__EvidenceType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml2__EvidenceType(soap, data), 0) || soap_put_saml2__EvidenceType(soap, data, "saml2:EvidenceType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml2__EvidenceType
#define soap_PUT_saml2__EvidenceType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__EvidenceType(soap, data), 0) || soap_put_saml2__EvidenceType(soap, data, "saml2:EvidenceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml2__EvidenceType
#define soap_PATCH_saml2__EvidenceType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__EvidenceType(soap, data), 0) || soap_put_saml2__EvidenceType(soap, data, "saml2:EvidenceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml2__EvidenceType
#define soap_POST_send_saml2__EvidenceType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__EvidenceType(soap, data), 0) || soap_put_saml2__EvidenceType(soap, data, "saml2:EvidenceType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml2__EvidenceType * SOAP_FMAC4 soap_get_saml2__EvidenceType(struct soap*, struct saml2__EvidenceType *, const char*, const char*);

#ifndef soap_read_saml2__EvidenceType
#define soap_read_saml2__EvidenceType(soap, data) ( ((data) ? (soap_default_saml2__EvidenceType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml2__EvidenceType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml2__EvidenceType
#define soap_GET_saml2__EvidenceType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml2__EvidenceType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml2__EvidenceType
#define soap_POST_recv_saml2__EvidenceType(soap, data) ( soap_read_saml2__EvidenceType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml2__ActionType_DEFINED
#define SOAP_TYPE_saml2__ActionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml2__ActionType(struct soap*, struct saml2__ActionType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__ActionType(struct soap*, const struct saml2__ActionType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml2__ActionType(struct soap*, const char*, int, const struct saml2__ActionType *, const char*);
SOAP_FMAC3 struct saml2__ActionType * SOAP_FMAC4 soap_in_saml2__ActionType(struct soap*, const char*, struct saml2__ActionType *, const char*);

SOAP_FMAC3 struct saml2__ActionType * SOAP_FMAC4 soap_new_saml2__ActionType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml2__ActionType(struct soap*, const struct saml2__ActionType *, const char*, const char*);

#ifndef soap_write_saml2__ActionType
#define soap_write_saml2__ActionType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml2__ActionType(soap, data), 0) || soap_put_saml2__ActionType(soap, data, "saml2:ActionType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml2__ActionType
#define soap_PUT_saml2__ActionType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__ActionType(soap, data), 0) || soap_put_saml2__ActionType(soap, data, "saml2:ActionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml2__ActionType
#define soap_PATCH_saml2__ActionType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__ActionType(soap, data), 0) || soap_put_saml2__ActionType(soap, data, "saml2:ActionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml2__ActionType
#define soap_POST_send_saml2__ActionType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__ActionType(soap, data), 0) || soap_put_saml2__ActionType(soap, data, "saml2:ActionType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml2__ActionType * SOAP_FMAC4 soap_get_saml2__ActionType(struct soap*, struct saml2__ActionType *, const char*, const char*);

#ifndef soap_read_saml2__ActionType
#define soap_read_saml2__ActionType(soap, data) ( ((data) ? (soap_default_saml2__ActionType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml2__ActionType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml2__ActionType
#define soap_GET_saml2__ActionType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml2__ActionType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml2__ActionType
#define soap_POST_recv_saml2__ActionType(soap, data) ( soap_read_saml2__ActionType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml2__AuthzDecisionStatementType_DEFINED
#define SOAP_TYPE_saml2__AuthzDecisionStatementType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml2__AuthzDecisionStatementType(struct soap*, struct saml2__AuthzDecisionStatementType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__AuthzDecisionStatementType(struct soap*, const struct saml2__AuthzDecisionStatementType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml2__AuthzDecisionStatementType(struct soap*, const char*, int, const struct saml2__AuthzDecisionStatementType *, const char*);
SOAP_FMAC3 struct saml2__AuthzDecisionStatementType * SOAP_FMAC4 soap_in_saml2__AuthzDecisionStatementType(struct soap*, const char*, struct saml2__AuthzDecisionStatementType *, const char*);

SOAP_FMAC3 struct saml2__AuthzDecisionStatementType * SOAP_FMAC4 soap_new_saml2__AuthzDecisionStatementType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml2__AuthzDecisionStatementType(struct soap*, const struct saml2__AuthzDecisionStatementType *, const char*, const char*);

#ifndef soap_write_saml2__AuthzDecisionStatementType
#define soap_write_saml2__AuthzDecisionStatementType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml2__AuthzDecisionStatementType(soap, data), 0) || soap_put_saml2__AuthzDecisionStatementType(soap, data, "saml2:AuthzDecisionStatementType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml2__AuthzDecisionStatementType
#define soap_PUT_saml2__AuthzDecisionStatementType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__AuthzDecisionStatementType(soap, data), 0) || soap_put_saml2__AuthzDecisionStatementType(soap, data, "saml2:AuthzDecisionStatementType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml2__AuthzDecisionStatementType
#define soap_PATCH_saml2__AuthzDecisionStatementType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__AuthzDecisionStatementType(soap, data), 0) || soap_put_saml2__AuthzDecisionStatementType(soap, data, "saml2:AuthzDecisionStatementType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml2__AuthzDecisionStatementType
#define soap_POST_send_saml2__AuthzDecisionStatementType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__AuthzDecisionStatementType(soap, data), 0) || soap_put_saml2__AuthzDecisionStatementType(soap, data, "saml2:AuthzDecisionStatementType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml2__AuthzDecisionStatementType * SOAP_FMAC4 soap_get_saml2__AuthzDecisionStatementType(struct soap*, struct saml2__AuthzDecisionStatementType *, const char*, const char*);

#ifndef soap_read_saml2__AuthzDecisionStatementType
#define soap_read_saml2__AuthzDecisionStatementType(soap, data) ( ((data) ? (soap_default_saml2__AuthzDecisionStatementType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml2__AuthzDecisionStatementType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml2__AuthzDecisionStatementType
#define soap_GET_saml2__AuthzDecisionStatementType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml2__AuthzDecisionStatementType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml2__AuthzDecisionStatementType
#define soap_POST_recv_saml2__AuthzDecisionStatementType(soap, data) ( soap_read_saml2__AuthzDecisionStatementType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml2__AuthnContextType_DEFINED
#define SOAP_TYPE_saml2__AuthnContextType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml2__AuthnContextType(struct soap*, struct saml2__AuthnContextType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__AuthnContextType(struct soap*, const struct saml2__AuthnContextType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml2__AuthnContextType(struct soap*, const char*, int, const struct saml2__AuthnContextType *, const char*);
SOAP_FMAC3 struct saml2__AuthnContextType * SOAP_FMAC4 soap_in_saml2__AuthnContextType(struct soap*, const char*, struct saml2__AuthnContextType *, const char*);

SOAP_FMAC3 struct saml2__AuthnContextType * SOAP_FMAC4 soap_new_saml2__AuthnContextType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml2__AuthnContextType(struct soap*, const struct saml2__AuthnContextType *, const char*, const char*);

#ifndef soap_write_saml2__AuthnContextType
#define soap_write_saml2__AuthnContextType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml2__AuthnContextType(soap, data), 0) || soap_put_saml2__AuthnContextType(soap, data, "saml2:AuthnContextType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml2__AuthnContextType
#define soap_PUT_saml2__AuthnContextType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__AuthnContextType(soap, data), 0) || soap_put_saml2__AuthnContextType(soap, data, "saml2:AuthnContextType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml2__AuthnContextType
#define soap_PATCH_saml2__AuthnContextType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__AuthnContextType(soap, data), 0) || soap_put_saml2__AuthnContextType(soap, data, "saml2:AuthnContextType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml2__AuthnContextType
#define soap_POST_send_saml2__AuthnContextType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__AuthnContextType(soap, data), 0) || soap_put_saml2__AuthnContextType(soap, data, "saml2:AuthnContextType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml2__AuthnContextType * SOAP_FMAC4 soap_get_saml2__AuthnContextType(struct soap*, struct saml2__AuthnContextType *, const char*, const char*);

#ifndef soap_read_saml2__AuthnContextType
#define soap_read_saml2__AuthnContextType(soap, data) ( ((data) ? (soap_default_saml2__AuthnContextType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml2__AuthnContextType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml2__AuthnContextType
#define soap_GET_saml2__AuthnContextType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml2__AuthnContextType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml2__AuthnContextType
#define soap_POST_recv_saml2__AuthnContextType(soap, data) ( soap_read_saml2__AuthnContextType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml2__SubjectLocalityType_DEFINED
#define SOAP_TYPE_saml2__SubjectLocalityType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml2__SubjectLocalityType(struct soap*, struct saml2__SubjectLocalityType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__SubjectLocalityType(struct soap*, const struct saml2__SubjectLocalityType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml2__SubjectLocalityType(struct soap*, const char*, int, const struct saml2__SubjectLocalityType *, const char*);
SOAP_FMAC3 struct saml2__SubjectLocalityType * SOAP_FMAC4 soap_in_saml2__SubjectLocalityType(struct soap*, const char*, struct saml2__SubjectLocalityType *, const char*);

SOAP_FMAC3 struct saml2__SubjectLocalityType * SOAP_FMAC4 soap_new_saml2__SubjectLocalityType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml2__SubjectLocalityType(struct soap*, const struct saml2__SubjectLocalityType *, const char*, const char*);

#ifndef soap_write_saml2__SubjectLocalityType
#define soap_write_saml2__SubjectLocalityType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml2__SubjectLocalityType(soap, data), 0) || soap_put_saml2__SubjectLocalityType(soap, data, "saml2:SubjectLocalityType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml2__SubjectLocalityType
#define soap_PUT_saml2__SubjectLocalityType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__SubjectLocalityType(soap, data), 0) || soap_put_saml2__SubjectLocalityType(soap, data, "saml2:SubjectLocalityType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml2__SubjectLocalityType
#define soap_PATCH_saml2__SubjectLocalityType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__SubjectLocalityType(soap, data), 0) || soap_put_saml2__SubjectLocalityType(soap, data, "saml2:SubjectLocalityType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml2__SubjectLocalityType
#define soap_POST_send_saml2__SubjectLocalityType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__SubjectLocalityType(soap, data), 0) || soap_put_saml2__SubjectLocalityType(soap, data, "saml2:SubjectLocalityType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml2__SubjectLocalityType * SOAP_FMAC4 soap_get_saml2__SubjectLocalityType(struct soap*, struct saml2__SubjectLocalityType *, const char*, const char*);

#ifndef soap_read_saml2__SubjectLocalityType
#define soap_read_saml2__SubjectLocalityType(soap, data) ( ((data) ? (soap_default_saml2__SubjectLocalityType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml2__SubjectLocalityType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml2__SubjectLocalityType
#define soap_GET_saml2__SubjectLocalityType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml2__SubjectLocalityType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml2__SubjectLocalityType
#define soap_POST_recv_saml2__SubjectLocalityType(soap, data) ( soap_read_saml2__SubjectLocalityType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml2__AuthnStatementType_DEFINED
#define SOAP_TYPE_saml2__AuthnStatementType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml2__AuthnStatementType(struct soap*, struct saml2__AuthnStatementType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__AuthnStatementType(struct soap*, const struct saml2__AuthnStatementType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml2__AuthnStatementType(struct soap*, const char*, int, const struct saml2__AuthnStatementType *, const char*);
SOAP_FMAC3 struct saml2__AuthnStatementType * SOAP_FMAC4 soap_in_saml2__AuthnStatementType(struct soap*, const char*, struct saml2__AuthnStatementType *, const char*);

SOAP_FMAC3 struct saml2__AuthnStatementType * SOAP_FMAC4 soap_new_saml2__AuthnStatementType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml2__AuthnStatementType(struct soap*, const struct saml2__AuthnStatementType *, const char*, const char*);

#ifndef soap_write_saml2__AuthnStatementType
#define soap_write_saml2__AuthnStatementType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml2__AuthnStatementType(soap, data), 0) || soap_put_saml2__AuthnStatementType(soap, data, "saml2:AuthnStatementType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml2__AuthnStatementType
#define soap_PUT_saml2__AuthnStatementType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__AuthnStatementType(soap, data), 0) || soap_put_saml2__AuthnStatementType(soap, data, "saml2:AuthnStatementType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml2__AuthnStatementType
#define soap_PATCH_saml2__AuthnStatementType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__AuthnStatementType(soap, data), 0) || soap_put_saml2__AuthnStatementType(soap, data, "saml2:AuthnStatementType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml2__AuthnStatementType
#define soap_POST_send_saml2__AuthnStatementType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__AuthnStatementType(soap, data), 0) || soap_put_saml2__AuthnStatementType(soap, data, "saml2:AuthnStatementType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml2__AuthnStatementType * SOAP_FMAC4 soap_get_saml2__AuthnStatementType(struct soap*, struct saml2__AuthnStatementType *, const char*, const char*);

#ifndef soap_read_saml2__AuthnStatementType
#define soap_read_saml2__AuthnStatementType(soap, data) ( ((data) ? (soap_default_saml2__AuthnStatementType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml2__AuthnStatementType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml2__AuthnStatementType
#define soap_GET_saml2__AuthnStatementType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml2__AuthnStatementType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml2__AuthnStatementType
#define soap_POST_recv_saml2__AuthnStatementType(soap, data) ( soap_read_saml2__AuthnStatementType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml2__StatementAbstractType_DEFINED
#define SOAP_TYPE_saml2__StatementAbstractType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml2__StatementAbstractType(struct soap*, struct saml2__StatementAbstractType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__StatementAbstractType(struct soap*, const struct saml2__StatementAbstractType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml2__StatementAbstractType(struct soap*, const char*, int, const struct saml2__StatementAbstractType *, const char*);
SOAP_FMAC3 struct saml2__StatementAbstractType * SOAP_FMAC4 soap_in_saml2__StatementAbstractType(struct soap*, const char*, struct saml2__StatementAbstractType *, const char*);

SOAP_FMAC3 struct saml2__StatementAbstractType * SOAP_FMAC4 soap_new_saml2__StatementAbstractType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml2__StatementAbstractType(struct soap*, const struct saml2__StatementAbstractType *, const char*, const char*);

#ifndef soap_write_saml2__StatementAbstractType
#define soap_write_saml2__StatementAbstractType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml2__StatementAbstractType(soap, data), 0) || soap_put_saml2__StatementAbstractType(soap, data, "saml2:StatementAbstractType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml2__StatementAbstractType
#define soap_PUT_saml2__StatementAbstractType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__StatementAbstractType(soap, data), 0) || soap_put_saml2__StatementAbstractType(soap, data, "saml2:StatementAbstractType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml2__StatementAbstractType
#define soap_PATCH_saml2__StatementAbstractType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__StatementAbstractType(soap, data), 0) || soap_put_saml2__StatementAbstractType(soap, data, "saml2:StatementAbstractType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml2__StatementAbstractType
#define soap_POST_send_saml2__StatementAbstractType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__StatementAbstractType(soap, data), 0) || soap_put_saml2__StatementAbstractType(soap, data, "saml2:StatementAbstractType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml2__StatementAbstractType * SOAP_FMAC4 soap_get_saml2__StatementAbstractType(struct soap*, struct saml2__StatementAbstractType *, const char*, const char*);

#ifndef soap_read_saml2__StatementAbstractType
#define soap_read_saml2__StatementAbstractType(soap, data) ( ((data) ? (soap_default_saml2__StatementAbstractType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml2__StatementAbstractType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml2__StatementAbstractType
#define soap_GET_saml2__StatementAbstractType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml2__StatementAbstractType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml2__StatementAbstractType
#define soap_POST_recv_saml2__StatementAbstractType(soap, data) ( soap_read_saml2__StatementAbstractType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml2__AdviceType_DEFINED
#define SOAP_TYPE_saml2__AdviceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml2__AdviceType(struct soap*, struct saml2__AdviceType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__AdviceType(struct soap*, const struct saml2__AdviceType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml2__AdviceType(struct soap*, const char*, int, const struct saml2__AdviceType *, const char*);
SOAP_FMAC3 struct saml2__AdviceType * SOAP_FMAC4 soap_in_saml2__AdviceType(struct soap*, const char*, struct saml2__AdviceType *, const char*);

SOAP_FMAC3 struct saml2__AdviceType * SOAP_FMAC4 soap_new_saml2__AdviceType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml2__AdviceType(struct soap*, const struct saml2__AdviceType *, const char*, const char*);

#ifndef soap_write_saml2__AdviceType
#define soap_write_saml2__AdviceType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml2__AdviceType(soap, data), 0) || soap_put_saml2__AdviceType(soap, data, "saml2:AdviceType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml2__AdviceType
#define soap_PUT_saml2__AdviceType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__AdviceType(soap, data), 0) || soap_put_saml2__AdviceType(soap, data, "saml2:AdviceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml2__AdviceType
#define soap_PATCH_saml2__AdviceType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__AdviceType(soap, data), 0) || soap_put_saml2__AdviceType(soap, data, "saml2:AdviceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml2__AdviceType
#define soap_POST_send_saml2__AdviceType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__AdviceType(soap, data), 0) || soap_put_saml2__AdviceType(soap, data, "saml2:AdviceType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml2__AdviceType * SOAP_FMAC4 soap_get_saml2__AdviceType(struct soap*, struct saml2__AdviceType *, const char*, const char*);

#ifndef soap_read_saml2__AdviceType
#define soap_read_saml2__AdviceType(soap, data) ( ((data) ? (soap_default_saml2__AdviceType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml2__AdviceType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml2__AdviceType
#define soap_GET_saml2__AdviceType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml2__AdviceType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml2__AdviceType
#define soap_POST_recv_saml2__AdviceType(soap, data) ( soap_read_saml2__AdviceType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml2__ProxyRestrictionType_DEFINED
#define SOAP_TYPE_saml2__ProxyRestrictionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml2__ProxyRestrictionType(struct soap*, struct saml2__ProxyRestrictionType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__ProxyRestrictionType(struct soap*, const struct saml2__ProxyRestrictionType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml2__ProxyRestrictionType(struct soap*, const char*, int, const struct saml2__ProxyRestrictionType *, const char*);
SOAP_FMAC3 struct saml2__ProxyRestrictionType * SOAP_FMAC4 soap_in_saml2__ProxyRestrictionType(struct soap*, const char*, struct saml2__ProxyRestrictionType *, const char*);

SOAP_FMAC3 struct saml2__ProxyRestrictionType * SOAP_FMAC4 soap_new_saml2__ProxyRestrictionType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml2__ProxyRestrictionType(struct soap*, const struct saml2__ProxyRestrictionType *, const char*, const char*);

#ifndef soap_write_saml2__ProxyRestrictionType
#define soap_write_saml2__ProxyRestrictionType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml2__ProxyRestrictionType(soap, data), 0) || soap_put_saml2__ProxyRestrictionType(soap, data, "saml2:ProxyRestrictionType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml2__ProxyRestrictionType
#define soap_PUT_saml2__ProxyRestrictionType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__ProxyRestrictionType(soap, data), 0) || soap_put_saml2__ProxyRestrictionType(soap, data, "saml2:ProxyRestrictionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml2__ProxyRestrictionType
#define soap_PATCH_saml2__ProxyRestrictionType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__ProxyRestrictionType(soap, data), 0) || soap_put_saml2__ProxyRestrictionType(soap, data, "saml2:ProxyRestrictionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml2__ProxyRestrictionType
#define soap_POST_send_saml2__ProxyRestrictionType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__ProxyRestrictionType(soap, data), 0) || soap_put_saml2__ProxyRestrictionType(soap, data, "saml2:ProxyRestrictionType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml2__ProxyRestrictionType * SOAP_FMAC4 soap_get_saml2__ProxyRestrictionType(struct soap*, struct saml2__ProxyRestrictionType *, const char*, const char*);

#ifndef soap_read_saml2__ProxyRestrictionType
#define soap_read_saml2__ProxyRestrictionType(soap, data) ( ((data) ? (soap_default_saml2__ProxyRestrictionType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml2__ProxyRestrictionType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml2__ProxyRestrictionType
#define soap_GET_saml2__ProxyRestrictionType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml2__ProxyRestrictionType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml2__ProxyRestrictionType
#define soap_POST_recv_saml2__ProxyRestrictionType(soap, data) ( soap_read_saml2__ProxyRestrictionType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml2__OneTimeUseType_DEFINED
#define SOAP_TYPE_saml2__OneTimeUseType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml2__OneTimeUseType(struct soap*, struct saml2__OneTimeUseType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__OneTimeUseType(struct soap*, const struct saml2__OneTimeUseType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml2__OneTimeUseType(struct soap*, const char*, int, const struct saml2__OneTimeUseType *, const char*);
SOAP_FMAC3 struct saml2__OneTimeUseType * SOAP_FMAC4 soap_in_saml2__OneTimeUseType(struct soap*, const char*, struct saml2__OneTimeUseType *, const char*);

SOAP_FMAC3 struct saml2__OneTimeUseType * SOAP_FMAC4 soap_new_saml2__OneTimeUseType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml2__OneTimeUseType(struct soap*, const struct saml2__OneTimeUseType *, const char*, const char*);

#ifndef soap_write_saml2__OneTimeUseType
#define soap_write_saml2__OneTimeUseType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml2__OneTimeUseType(soap, data), 0) || soap_put_saml2__OneTimeUseType(soap, data, "saml2:OneTimeUseType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml2__OneTimeUseType
#define soap_PUT_saml2__OneTimeUseType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__OneTimeUseType(soap, data), 0) || soap_put_saml2__OneTimeUseType(soap, data, "saml2:OneTimeUseType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml2__OneTimeUseType
#define soap_PATCH_saml2__OneTimeUseType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__OneTimeUseType(soap, data), 0) || soap_put_saml2__OneTimeUseType(soap, data, "saml2:OneTimeUseType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml2__OneTimeUseType
#define soap_POST_send_saml2__OneTimeUseType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__OneTimeUseType(soap, data), 0) || soap_put_saml2__OneTimeUseType(soap, data, "saml2:OneTimeUseType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml2__OneTimeUseType * SOAP_FMAC4 soap_get_saml2__OneTimeUseType(struct soap*, struct saml2__OneTimeUseType *, const char*, const char*);

#ifndef soap_read_saml2__OneTimeUseType
#define soap_read_saml2__OneTimeUseType(soap, data) ( ((data) ? (soap_default_saml2__OneTimeUseType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml2__OneTimeUseType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml2__OneTimeUseType
#define soap_GET_saml2__OneTimeUseType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml2__OneTimeUseType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml2__OneTimeUseType
#define soap_POST_recv_saml2__OneTimeUseType(soap, data) ( soap_read_saml2__OneTimeUseType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml2__AudienceRestrictionType_DEFINED
#define SOAP_TYPE_saml2__AudienceRestrictionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml2__AudienceRestrictionType(struct soap*, struct saml2__AudienceRestrictionType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__AudienceRestrictionType(struct soap*, const struct saml2__AudienceRestrictionType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml2__AudienceRestrictionType(struct soap*, const char*, int, const struct saml2__AudienceRestrictionType *, const char*);
SOAP_FMAC3 struct saml2__AudienceRestrictionType * SOAP_FMAC4 soap_in_saml2__AudienceRestrictionType(struct soap*, const char*, struct saml2__AudienceRestrictionType *, const char*);

SOAP_FMAC3 struct saml2__AudienceRestrictionType * SOAP_FMAC4 soap_new_saml2__AudienceRestrictionType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml2__AudienceRestrictionType(struct soap*, const struct saml2__AudienceRestrictionType *, const char*, const char*);

#ifndef soap_write_saml2__AudienceRestrictionType
#define soap_write_saml2__AudienceRestrictionType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml2__AudienceRestrictionType(soap, data), 0) || soap_put_saml2__AudienceRestrictionType(soap, data, "saml2:AudienceRestrictionType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml2__AudienceRestrictionType
#define soap_PUT_saml2__AudienceRestrictionType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__AudienceRestrictionType(soap, data), 0) || soap_put_saml2__AudienceRestrictionType(soap, data, "saml2:AudienceRestrictionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml2__AudienceRestrictionType
#define soap_PATCH_saml2__AudienceRestrictionType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__AudienceRestrictionType(soap, data), 0) || soap_put_saml2__AudienceRestrictionType(soap, data, "saml2:AudienceRestrictionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml2__AudienceRestrictionType
#define soap_POST_send_saml2__AudienceRestrictionType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__AudienceRestrictionType(soap, data), 0) || soap_put_saml2__AudienceRestrictionType(soap, data, "saml2:AudienceRestrictionType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml2__AudienceRestrictionType * SOAP_FMAC4 soap_get_saml2__AudienceRestrictionType(struct soap*, struct saml2__AudienceRestrictionType *, const char*, const char*);

#ifndef soap_read_saml2__AudienceRestrictionType
#define soap_read_saml2__AudienceRestrictionType(soap, data) ( ((data) ? (soap_default_saml2__AudienceRestrictionType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml2__AudienceRestrictionType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml2__AudienceRestrictionType
#define soap_GET_saml2__AudienceRestrictionType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml2__AudienceRestrictionType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml2__AudienceRestrictionType
#define soap_POST_recv_saml2__AudienceRestrictionType(soap, data) ( soap_read_saml2__AudienceRestrictionType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml2__ConditionAbstractType_DEFINED
#define SOAP_TYPE_saml2__ConditionAbstractType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml2__ConditionAbstractType(struct soap*, struct saml2__ConditionAbstractType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__ConditionAbstractType(struct soap*, const struct saml2__ConditionAbstractType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml2__ConditionAbstractType(struct soap*, const char*, int, const struct saml2__ConditionAbstractType *, const char*);
SOAP_FMAC3 struct saml2__ConditionAbstractType * SOAP_FMAC4 soap_in_saml2__ConditionAbstractType(struct soap*, const char*, struct saml2__ConditionAbstractType *, const char*);

SOAP_FMAC3 struct saml2__ConditionAbstractType * SOAP_FMAC4 soap_new_saml2__ConditionAbstractType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml2__ConditionAbstractType(struct soap*, const struct saml2__ConditionAbstractType *, const char*, const char*);

#ifndef soap_write_saml2__ConditionAbstractType
#define soap_write_saml2__ConditionAbstractType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml2__ConditionAbstractType(soap, data), 0) || soap_put_saml2__ConditionAbstractType(soap, data, "saml2:ConditionAbstractType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml2__ConditionAbstractType
#define soap_PUT_saml2__ConditionAbstractType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__ConditionAbstractType(soap, data), 0) || soap_put_saml2__ConditionAbstractType(soap, data, "saml2:ConditionAbstractType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml2__ConditionAbstractType
#define soap_PATCH_saml2__ConditionAbstractType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__ConditionAbstractType(soap, data), 0) || soap_put_saml2__ConditionAbstractType(soap, data, "saml2:ConditionAbstractType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml2__ConditionAbstractType
#define soap_POST_send_saml2__ConditionAbstractType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__ConditionAbstractType(soap, data), 0) || soap_put_saml2__ConditionAbstractType(soap, data, "saml2:ConditionAbstractType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml2__ConditionAbstractType * SOAP_FMAC4 soap_get_saml2__ConditionAbstractType(struct soap*, struct saml2__ConditionAbstractType *, const char*, const char*);

#ifndef soap_read_saml2__ConditionAbstractType
#define soap_read_saml2__ConditionAbstractType(soap, data) ( ((data) ? (soap_default_saml2__ConditionAbstractType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml2__ConditionAbstractType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml2__ConditionAbstractType
#define soap_GET_saml2__ConditionAbstractType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml2__ConditionAbstractType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml2__ConditionAbstractType
#define soap_POST_recv_saml2__ConditionAbstractType(soap, data) ( soap_read_saml2__ConditionAbstractType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml2__ConditionsType_DEFINED
#define SOAP_TYPE_saml2__ConditionsType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml2__ConditionsType(struct soap*, struct saml2__ConditionsType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__ConditionsType(struct soap*, const struct saml2__ConditionsType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml2__ConditionsType(struct soap*, const char*, int, const struct saml2__ConditionsType *, const char*);
SOAP_FMAC3 struct saml2__ConditionsType * SOAP_FMAC4 soap_in_saml2__ConditionsType(struct soap*, const char*, struct saml2__ConditionsType *, const char*);

SOAP_FMAC3 struct saml2__ConditionsType * SOAP_FMAC4 soap_new_saml2__ConditionsType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml2__ConditionsType(struct soap*, const struct saml2__ConditionsType *, const char*, const char*);

#ifndef soap_write_saml2__ConditionsType
#define soap_write_saml2__ConditionsType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml2__ConditionsType(soap, data), 0) || soap_put_saml2__ConditionsType(soap, data, "saml2:ConditionsType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml2__ConditionsType
#define soap_PUT_saml2__ConditionsType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__ConditionsType(soap, data), 0) || soap_put_saml2__ConditionsType(soap, data, "saml2:ConditionsType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml2__ConditionsType
#define soap_PATCH_saml2__ConditionsType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__ConditionsType(soap, data), 0) || soap_put_saml2__ConditionsType(soap, data, "saml2:ConditionsType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml2__ConditionsType
#define soap_POST_send_saml2__ConditionsType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__ConditionsType(soap, data), 0) || soap_put_saml2__ConditionsType(soap, data, "saml2:ConditionsType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml2__ConditionsType * SOAP_FMAC4 soap_get_saml2__ConditionsType(struct soap*, struct saml2__ConditionsType *, const char*, const char*);

#ifndef soap_read_saml2__ConditionsType
#define soap_read_saml2__ConditionsType(soap, data) ( ((data) ? (soap_default_saml2__ConditionsType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml2__ConditionsType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml2__ConditionsType
#define soap_GET_saml2__ConditionsType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml2__ConditionsType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml2__ConditionsType
#define soap_POST_recv_saml2__ConditionsType(soap, data) ( soap_read_saml2__ConditionsType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml2__KeyInfoConfirmationDataType_DEFINED
#define SOAP_TYPE_saml2__KeyInfoConfirmationDataType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml2__KeyInfoConfirmationDataType(struct soap*, struct saml2__KeyInfoConfirmationDataType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__KeyInfoConfirmationDataType(struct soap*, const struct saml2__KeyInfoConfirmationDataType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml2__KeyInfoConfirmationDataType(struct soap*, const char*, int, const struct saml2__KeyInfoConfirmationDataType *, const char*);
SOAP_FMAC3 struct saml2__KeyInfoConfirmationDataType * SOAP_FMAC4 soap_in_saml2__KeyInfoConfirmationDataType(struct soap*, const char*, struct saml2__KeyInfoConfirmationDataType *, const char*);

SOAP_FMAC3 struct saml2__KeyInfoConfirmationDataType * SOAP_FMAC4 soap_new_saml2__KeyInfoConfirmationDataType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml2__KeyInfoConfirmationDataType(struct soap*, const struct saml2__KeyInfoConfirmationDataType *, const char*, const char*);

#ifndef soap_write_saml2__KeyInfoConfirmationDataType
#define soap_write_saml2__KeyInfoConfirmationDataType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml2__KeyInfoConfirmationDataType(soap, data), 0) || soap_put_saml2__KeyInfoConfirmationDataType(soap, data, "saml2:KeyInfoConfirmationDataType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml2__KeyInfoConfirmationDataType
#define soap_PUT_saml2__KeyInfoConfirmationDataType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__KeyInfoConfirmationDataType(soap, data), 0) || soap_put_saml2__KeyInfoConfirmationDataType(soap, data, "saml2:KeyInfoConfirmationDataType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml2__KeyInfoConfirmationDataType
#define soap_PATCH_saml2__KeyInfoConfirmationDataType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__KeyInfoConfirmationDataType(soap, data), 0) || soap_put_saml2__KeyInfoConfirmationDataType(soap, data, "saml2:KeyInfoConfirmationDataType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml2__KeyInfoConfirmationDataType
#define soap_POST_send_saml2__KeyInfoConfirmationDataType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__KeyInfoConfirmationDataType(soap, data), 0) || soap_put_saml2__KeyInfoConfirmationDataType(soap, data, "saml2:KeyInfoConfirmationDataType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml2__KeyInfoConfirmationDataType * SOAP_FMAC4 soap_get_saml2__KeyInfoConfirmationDataType(struct soap*, struct saml2__KeyInfoConfirmationDataType *, const char*, const char*);

#ifndef soap_read_saml2__KeyInfoConfirmationDataType
#define soap_read_saml2__KeyInfoConfirmationDataType(soap, data) ( ((data) ? (soap_default_saml2__KeyInfoConfirmationDataType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml2__KeyInfoConfirmationDataType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml2__KeyInfoConfirmationDataType
#define soap_GET_saml2__KeyInfoConfirmationDataType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml2__KeyInfoConfirmationDataType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml2__KeyInfoConfirmationDataType
#define soap_POST_recv_saml2__KeyInfoConfirmationDataType(soap, data) ( soap_read_saml2__KeyInfoConfirmationDataType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml2__SubjectConfirmationDataType_DEFINED
#define SOAP_TYPE_saml2__SubjectConfirmationDataType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml2__SubjectConfirmationDataType(struct soap*, struct saml2__SubjectConfirmationDataType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__SubjectConfirmationDataType(struct soap*, const struct saml2__SubjectConfirmationDataType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml2__SubjectConfirmationDataType(struct soap*, const char*, int, const struct saml2__SubjectConfirmationDataType *, const char*);
SOAP_FMAC3 struct saml2__SubjectConfirmationDataType * SOAP_FMAC4 soap_in_saml2__SubjectConfirmationDataType(struct soap*, const char*, struct saml2__SubjectConfirmationDataType *, const char*);

SOAP_FMAC3 struct saml2__SubjectConfirmationDataType * SOAP_FMAC4 soap_new_saml2__SubjectConfirmationDataType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml2__SubjectConfirmationDataType(struct soap*, const struct saml2__SubjectConfirmationDataType *, const char*, const char*);

#ifndef soap_write_saml2__SubjectConfirmationDataType
#define soap_write_saml2__SubjectConfirmationDataType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml2__SubjectConfirmationDataType(soap, data), 0) || soap_put_saml2__SubjectConfirmationDataType(soap, data, "saml2:SubjectConfirmationDataType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml2__SubjectConfirmationDataType
#define soap_PUT_saml2__SubjectConfirmationDataType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__SubjectConfirmationDataType(soap, data), 0) || soap_put_saml2__SubjectConfirmationDataType(soap, data, "saml2:SubjectConfirmationDataType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml2__SubjectConfirmationDataType
#define soap_PATCH_saml2__SubjectConfirmationDataType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__SubjectConfirmationDataType(soap, data), 0) || soap_put_saml2__SubjectConfirmationDataType(soap, data, "saml2:SubjectConfirmationDataType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml2__SubjectConfirmationDataType
#define soap_POST_send_saml2__SubjectConfirmationDataType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__SubjectConfirmationDataType(soap, data), 0) || soap_put_saml2__SubjectConfirmationDataType(soap, data, "saml2:SubjectConfirmationDataType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml2__SubjectConfirmationDataType * SOAP_FMAC4 soap_get_saml2__SubjectConfirmationDataType(struct soap*, struct saml2__SubjectConfirmationDataType *, const char*, const char*);

#ifndef soap_read_saml2__SubjectConfirmationDataType
#define soap_read_saml2__SubjectConfirmationDataType(soap, data) ( ((data) ? (soap_default_saml2__SubjectConfirmationDataType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml2__SubjectConfirmationDataType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml2__SubjectConfirmationDataType
#define soap_GET_saml2__SubjectConfirmationDataType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml2__SubjectConfirmationDataType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml2__SubjectConfirmationDataType
#define soap_POST_recv_saml2__SubjectConfirmationDataType(soap, data) ( soap_read_saml2__SubjectConfirmationDataType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml2__SubjectConfirmationType_DEFINED
#define SOAP_TYPE_saml2__SubjectConfirmationType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml2__SubjectConfirmationType(struct soap*, struct saml2__SubjectConfirmationType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__SubjectConfirmationType(struct soap*, const struct saml2__SubjectConfirmationType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml2__SubjectConfirmationType(struct soap*, const char*, int, const struct saml2__SubjectConfirmationType *, const char*);
SOAP_FMAC3 struct saml2__SubjectConfirmationType * SOAP_FMAC4 soap_in_saml2__SubjectConfirmationType(struct soap*, const char*, struct saml2__SubjectConfirmationType *, const char*);

SOAP_FMAC3 struct saml2__SubjectConfirmationType * SOAP_FMAC4 soap_new_saml2__SubjectConfirmationType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml2__SubjectConfirmationType(struct soap*, const struct saml2__SubjectConfirmationType *, const char*, const char*);

#ifndef soap_write_saml2__SubjectConfirmationType
#define soap_write_saml2__SubjectConfirmationType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml2__SubjectConfirmationType(soap, data), 0) || soap_put_saml2__SubjectConfirmationType(soap, data, "saml2:SubjectConfirmationType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml2__SubjectConfirmationType
#define soap_PUT_saml2__SubjectConfirmationType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__SubjectConfirmationType(soap, data), 0) || soap_put_saml2__SubjectConfirmationType(soap, data, "saml2:SubjectConfirmationType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml2__SubjectConfirmationType
#define soap_PATCH_saml2__SubjectConfirmationType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__SubjectConfirmationType(soap, data), 0) || soap_put_saml2__SubjectConfirmationType(soap, data, "saml2:SubjectConfirmationType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml2__SubjectConfirmationType
#define soap_POST_send_saml2__SubjectConfirmationType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__SubjectConfirmationType(soap, data), 0) || soap_put_saml2__SubjectConfirmationType(soap, data, "saml2:SubjectConfirmationType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml2__SubjectConfirmationType * SOAP_FMAC4 soap_get_saml2__SubjectConfirmationType(struct soap*, struct saml2__SubjectConfirmationType *, const char*, const char*);

#ifndef soap_read_saml2__SubjectConfirmationType
#define soap_read_saml2__SubjectConfirmationType(soap, data) ( ((data) ? (soap_default_saml2__SubjectConfirmationType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml2__SubjectConfirmationType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml2__SubjectConfirmationType
#define soap_GET_saml2__SubjectConfirmationType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml2__SubjectConfirmationType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml2__SubjectConfirmationType
#define soap_POST_recv_saml2__SubjectConfirmationType(soap, data) ( soap_read_saml2__SubjectConfirmationType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml2__SubjectType_DEFINED
#define SOAP_TYPE_saml2__SubjectType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml2__SubjectType(struct soap*, struct saml2__SubjectType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__SubjectType(struct soap*, const struct saml2__SubjectType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml2__SubjectType(struct soap*, const char*, int, const struct saml2__SubjectType *, const char*);
SOAP_FMAC3 struct saml2__SubjectType * SOAP_FMAC4 soap_in_saml2__SubjectType(struct soap*, const char*, struct saml2__SubjectType *, const char*);

SOAP_FMAC3 struct saml2__SubjectType * SOAP_FMAC4 soap_new_saml2__SubjectType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml2__SubjectType(struct soap*, const struct saml2__SubjectType *, const char*, const char*);

#ifndef soap_write_saml2__SubjectType
#define soap_write_saml2__SubjectType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml2__SubjectType(soap, data), 0) || soap_put_saml2__SubjectType(soap, data, "saml2:SubjectType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml2__SubjectType
#define soap_PUT_saml2__SubjectType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__SubjectType(soap, data), 0) || soap_put_saml2__SubjectType(soap, data, "saml2:SubjectType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml2__SubjectType
#define soap_PATCH_saml2__SubjectType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__SubjectType(soap, data), 0) || soap_put_saml2__SubjectType(soap, data, "saml2:SubjectType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml2__SubjectType
#define soap_POST_send_saml2__SubjectType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__SubjectType(soap, data), 0) || soap_put_saml2__SubjectType(soap, data, "saml2:SubjectType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml2__SubjectType * SOAP_FMAC4 soap_get_saml2__SubjectType(struct soap*, struct saml2__SubjectType *, const char*, const char*);

#ifndef soap_read_saml2__SubjectType
#define soap_read_saml2__SubjectType(soap, data) ( ((data) ? (soap_default_saml2__SubjectType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml2__SubjectType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml2__SubjectType
#define soap_GET_saml2__SubjectType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml2__SubjectType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml2__SubjectType
#define soap_POST_recv_saml2__SubjectType(soap, data) ( soap_read_saml2__SubjectType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml2__AssertionType_DEFINED
#define SOAP_TYPE_saml2__AssertionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml2__AssertionType(struct soap*, struct saml2__AssertionType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__AssertionType(struct soap*, const struct saml2__AssertionType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml2__AssertionType(struct soap*, const char*, int, const struct saml2__AssertionType *, const char*);
SOAP_FMAC3 struct saml2__AssertionType * SOAP_FMAC4 soap_in_saml2__AssertionType(struct soap*, const char*, struct saml2__AssertionType *, const char*);

SOAP_FMAC3 struct saml2__AssertionType * SOAP_FMAC4 soap_new_saml2__AssertionType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml2__AssertionType(struct soap*, const struct saml2__AssertionType *, const char*, const char*);

#ifndef soap_write_saml2__AssertionType
#define soap_write_saml2__AssertionType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml2__AssertionType(soap, data), 0) || soap_put_saml2__AssertionType(soap, data, "saml2:AssertionType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml2__AssertionType
#define soap_PUT_saml2__AssertionType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__AssertionType(soap, data), 0) || soap_put_saml2__AssertionType(soap, data, "saml2:AssertionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml2__AssertionType
#define soap_PATCH_saml2__AssertionType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__AssertionType(soap, data), 0) || soap_put_saml2__AssertionType(soap, data, "saml2:AssertionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml2__AssertionType
#define soap_POST_send_saml2__AssertionType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__AssertionType(soap, data), 0) || soap_put_saml2__AssertionType(soap, data, "saml2:AssertionType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml2__AssertionType * SOAP_FMAC4 soap_get_saml2__AssertionType(struct soap*, struct saml2__AssertionType *, const char*, const char*);

#ifndef soap_read_saml2__AssertionType
#define soap_read_saml2__AssertionType(soap, data) ( ((data) ? (soap_default_saml2__AssertionType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml2__AssertionType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml2__AssertionType
#define soap_GET_saml2__AssertionType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml2__AssertionType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml2__AssertionType
#define soap_POST_recv_saml2__AssertionType(soap, data) ( soap_read_saml2__AssertionType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml2__EncryptedElementType_DEFINED
#define SOAP_TYPE_saml2__EncryptedElementType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml2__EncryptedElementType(struct soap*, struct saml2__EncryptedElementType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__EncryptedElementType(struct soap*, const struct saml2__EncryptedElementType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml2__EncryptedElementType(struct soap*, const char*, int, const struct saml2__EncryptedElementType *, const char*);
SOAP_FMAC3 struct saml2__EncryptedElementType * SOAP_FMAC4 soap_in_saml2__EncryptedElementType(struct soap*, const char*, struct saml2__EncryptedElementType *, const char*);

SOAP_FMAC3 struct saml2__EncryptedElementType * SOAP_FMAC4 soap_new_saml2__EncryptedElementType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml2__EncryptedElementType(struct soap*, const struct saml2__EncryptedElementType *, const char*, const char*);

#ifndef soap_write_saml2__EncryptedElementType
#define soap_write_saml2__EncryptedElementType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml2__EncryptedElementType(soap, data), 0) || soap_put_saml2__EncryptedElementType(soap, data, "saml2:EncryptedElementType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml2__EncryptedElementType
#define soap_PUT_saml2__EncryptedElementType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__EncryptedElementType(soap, data), 0) || soap_put_saml2__EncryptedElementType(soap, data, "saml2:EncryptedElementType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml2__EncryptedElementType
#define soap_PATCH_saml2__EncryptedElementType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__EncryptedElementType(soap, data), 0) || soap_put_saml2__EncryptedElementType(soap, data, "saml2:EncryptedElementType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml2__EncryptedElementType
#define soap_POST_send_saml2__EncryptedElementType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__EncryptedElementType(soap, data), 0) || soap_put_saml2__EncryptedElementType(soap, data, "saml2:EncryptedElementType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml2__EncryptedElementType * SOAP_FMAC4 soap_get_saml2__EncryptedElementType(struct soap*, struct saml2__EncryptedElementType *, const char*, const char*);

#ifndef soap_read_saml2__EncryptedElementType
#define soap_read_saml2__EncryptedElementType(soap, data) ( ((data) ? (soap_default_saml2__EncryptedElementType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml2__EncryptedElementType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml2__EncryptedElementType
#define soap_GET_saml2__EncryptedElementType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml2__EncryptedElementType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml2__EncryptedElementType
#define soap_POST_recv_saml2__EncryptedElementType(soap, data) ( soap_read_saml2__EncryptedElementType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml2__NameIDType_DEFINED
#define SOAP_TYPE_saml2__NameIDType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml2__NameIDType(struct soap*, struct saml2__NameIDType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__NameIDType(struct soap*, const struct saml2__NameIDType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml2__NameIDType(struct soap*, const char*, int, const struct saml2__NameIDType *, const char*);
SOAP_FMAC3 struct saml2__NameIDType * SOAP_FMAC4 soap_in_saml2__NameIDType(struct soap*, const char*, struct saml2__NameIDType *, const char*);

SOAP_FMAC3 struct saml2__NameIDType * SOAP_FMAC4 soap_new_saml2__NameIDType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml2__NameIDType(struct soap*, const struct saml2__NameIDType *, const char*, const char*);

#ifndef soap_write_saml2__NameIDType
#define soap_write_saml2__NameIDType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml2__NameIDType(soap, data), 0) || soap_put_saml2__NameIDType(soap, data, "saml2:NameIDType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml2__NameIDType
#define soap_PUT_saml2__NameIDType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__NameIDType(soap, data), 0) || soap_put_saml2__NameIDType(soap, data, "saml2:NameIDType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml2__NameIDType
#define soap_PATCH_saml2__NameIDType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__NameIDType(soap, data), 0) || soap_put_saml2__NameIDType(soap, data, "saml2:NameIDType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml2__NameIDType
#define soap_POST_send_saml2__NameIDType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__NameIDType(soap, data), 0) || soap_put_saml2__NameIDType(soap, data, "saml2:NameIDType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml2__NameIDType * SOAP_FMAC4 soap_get_saml2__NameIDType(struct soap*, struct saml2__NameIDType *, const char*, const char*);

#ifndef soap_read_saml2__NameIDType
#define soap_read_saml2__NameIDType(soap, data) ( ((data) ? (soap_default_saml2__NameIDType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml2__NameIDType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml2__NameIDType
#define soap_GET_saml2__NameIDType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml2__NameIDType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml2__NameIDType
#define soap_POST_recv_saml2__NameIDType(soap, data) ( soap_read_saml2__NameIDType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml2__BaseIDAbstractType_DEFINED
#define SOAP_TYPE_saml2__BaseIDAbstractType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml2__BaseIDAbstractType(struct soap*, struct saml2__BaseIDAbstractType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml2__BaseIDAbstractType(struct soap*, const struct saml2__BaseIDAbstractType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml2__BaseIDAbstractType(struct soap*, const char*, int, const struct saml2__BaseIDAbstractType *, const char*);
SOAP_FMAC3 struct saml2__BaseIDAbstractType * SOAP_FMAC4 soap_in_saml2__BaseIDAbstractType(struct soap*, const char*, struct saml2__BaseIDAbstractType *, const char*);

SOAP_FMAC3 struct saml2__BaseIDAbstractType * SOAP_FMAC4 soap_new_saml2__BaseIDAbstractType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml2__BaseIDAbstractType(struct soap*, const struct saml2__BaseIDAbstractType *, const char*, const char*);

#ifndef soap_write_saml2__BaseIDAbstractType
#define soap_write_saml2__BaseIDAbstractType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml2__BaseIDAbstractType(soap, data), 0) || soap_put_saml2__BaseIDAbstractType(soap, data, "saml2:BaseIDAbstractType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml2__BaseIDAbstractType
#define soap_PUT_saml2__BaseIDAbstractType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__BaseIDAbstractType(soap, data), 0) || soap_put_saml2__BaseIDAbstractType(soap, data, "saml2:BaseIDAbstractType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml2__BaseIDAbstractType
#define soap_PATCH_saml2__BaseIDAbstractType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__BaseIDAbstractType(soap, data), 0) || soap_put_saml2__BaseIDAbstractType(soap, data, "saml2:BaseIDAbstractType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml2__BaseIDAbstractType
#define soap_POST_send_saml2__BaseIDAbstractType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml2__BaseIDAbstractType(soap, data), 0) || soap_put_saml2__BaseIDAbstractType(soap, data, "saml2:BaseIDAbstractType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml2__BaseIDAbstractType * SOAP_FMAC4 soap_get_saml2__BaseIDAbstractType(struct soap*, struct saml2__BaseIDAbstractType *, const char*, const char*);

#ifndef soap_read_saml2__BaseIDAbstractType
#define soap_read_saml2__BaseIDAbstractType(soap, data) ( ((data) ? (soap_default_saml2__BaseIDAbstractType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml2__BaseIDAbstractType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml2__BaseIDAbstractType
#define soap_GET_saml2__BaseIDAbstractType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml2__BaseIDAbstractType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml2__BaseIDAbstractType
#define soap_POST_recv_saml2__BaseIDAbstractType(soap, data) ( soap_read_saml2__BaseIDAbstractType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif
/* _saml1__Attribute is a typedef synonym of saml1__AttributeType */

#ifndef SOAP_TYPE__saml1__Attribute_DEFINED
#define SOAP_TYPE__saml1__Attribute_DEFINED

#define soap_default__saml1__Attribute soap_default_saml1__AttributeType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__AttributeType(struct soap*, const struct saml1__AttributeType *);

#define soap_serialize__saml1__Attribute soap_serialize_saml1__AttributeType


#define soap__saml1__Attribute2s soap_saml1__AttributeType2s


#define soap_out__saml1__Attribute soap_out_saml1__AttributeType


#define soap_s2_saml1__Attribute soap_s2saml1__AttributeType


#define soap_in__saml1__Attribute soap_in_saml1__AttributeType

#define soap_new__saml1__Attribute soap_new_saml1__AttributeType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml1__Attribute(struct soap*, const struct saml1__AttributeType *, const char*, const char*);

#ifndef soap_write__saml1__Attribute
#define soap_write__saml1__Attribute(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml1__Attribute(soap, data), 0) || soap_put__saml1__Attribute(soap, data, "saml1:Attribute", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml1__Attribute
#define soap_PUT__saml1__Attribute(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Attribute(soap, data), 0) || soap_put__saml1__Attribute(soap, data, "saml1:Attribute", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml1__Attribute
#define soap_PATCH__saml1__Attribute(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Attribute(soap, data), 0) || soap_put__saml1__Attribute(soap, data, "saml1:Attribute", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml1__Attribute
#define soap_POST_send__saml1__Attribute(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Attribute(soap, data), 0) || soap_put__saml1__Attribute(soap, data, "saml1:Attribute", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml1__Attribute soap_get_saml1__AttributeType


#define soap_read__saml1__Attribute soap_read_saml1__AttributeType


#define soap_GET__saml1__Attribute soap_GET_saml1__AttributeType


#define soap_POST_recv__saml1__Attribute soap_POST_recv_saml1__AttributeType

#endif
/* _saml1__AttributeDesignator is a typedef synonym of saml1__AttributeDesignatorType */

#ifndef SOAP_TYPE__saml1__AttributeDesignator_DEFINED
#define SOAP_TYPE__saml1__AttributeDesignator_DEFINED

#define soap_default__saml1__AttributeDesignator soap_default_saml1__AttributeDesignatorType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__AttributeDesignatorType(struct soap*, const struct saml1__AttributeDesignatorType *);

#define soap_serialize__saml1__AttributeDesignator soap_serialize_saml1__AttributeDesignatorType


#define soap__saml1__AttributeDesignator2s soap_saml1__AttributeDesignatorType2s


#define soap_out__saml1__AttributeDesignator soap_out_saml1__AttributeDesignatorType


#define soap_s2_saml1__AttributeDesignator soap_s2saml1__AttributeDesignatorType


#define soap_in__saml1__AttributeDesignator soap_in_saml1__AttributeDesignatorType

#define soap_new__saml1__AttributeDesignator soap_new_saml1__AttributeDesignatorType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml1__AttributeDesignator(struct soap*, const struct saml1__AttributeDesignatorType *, const char*, const char*);

#ifndef soap_write__saml1__AttributeDesignator
#define soap_write__saml1__AttributeDesignator(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml1__AttributeDesignator(soap, data), 0) || soap_put__saml1__AttributeDesignator(soap, data, "saml1:AttributeDesignator", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml1__AttributeDesignator
#define soap_PUT__saml1__AttributeDesignator(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__AttributeDesignator(soap, data), 0) || soap_put__saml1__AttributeDesignator(soap, data, "saml1:AttributeDesignator", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml1__AttributeDesignator
#define soap_PATCH__saml1__AttributeDesignator(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__AttributeDesignator(soap, data), 0) || soap_put__saml1__AttributeDesignator(soap, data, "saml1:AttributeDesignator", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml1__AttributeDesignator
#define soap_POST_send__saml1__AttributeDesignator(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__AttributeDesignator(soap, data), 0) || soap_put__saml1__AttributeDesignator(soap, data, "saml1:AttributeDesignator", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml1__AttributeDesignator soap_get_saml1__AttributeDesignatorType


#define soap_read__saml1__AttributeDesignator soap_read_saml1__AttributeDesignatorType


#define soap_GET__saml1__AttributeDesignator soap_GET_saml1__AttributeDesignatorType


#define soap_POST_recv__saml1__AttributeDesignator soap_POST_recv_saml1__AttributeDesignatorType

#endif
/* _saml1__AttributeStatement is a typedef synonym of saml1__AttributeStatementType */

#ifndef SOAP_TYPE__saml1__AttributeStatement_DEFINED
#define SOAP_TYPE__saml1__AttributeStatement_DEFINED

#define soap_default__saml1__AttributeStatement soap_default_saml1__AttributeStatementType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__AttributeStatementType(struct soap*, const struct saml1__AttributeStatementType *);

#define soap_serialize__saml1__AttributeStatement soap_serialize_saml1__AttributeStatementType


#define soap__saml1__AttributeStatement2s soap_saml1__AttributeStatementType2s


#define soap_out__saml1__AttributeStatement soap_out_saml1__AttributeStatementType


#define soap_s2_saml1__AttributeStatement soap_s2saml1__AttributeStatementType


#define soap_in__saml1__AttributeStatement soap_in_saml1__AttributeStatementType

#define soap_new__saml1__AttributeStatement soap_new_saml1__AttributeStatementType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml1__AttributeStatement(struct soap*, const struct saml1__AttributeStatementType *, const char*, const char*);

#ifndef soap_write__saml1__AttributeStatement
#define soap_write__saml1__AttributeStatement(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml1__AttributeStatement(soap, data), 0) || soap_put__saml1__AttributeStatement(soap, data, "saml1:AttributeStatement", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml1__AttributeStatement
#define soap_PUT__saml1__AttributeStatement(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__AttributeStatement(soap, data), 0) || soap_put__saml1__AttributeStatement(soap, data, "saml1:AttributeStatement", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml1__AttributeStatement
#define soap_PATCH__saml1__AttributeStatement(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__AttributeStatement(soap, data), 0) || soap_put__saml1__AttributeStatement(soap, data, "saml1:AttributeStatement", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml1__AttributeStatement
#define soap_POST_send__saml1__AttributeStatement(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__AttributeStatement(soap, data), 0) || soap_put__saml1__AttributeStatement(soap, data, "saml1:AttributeStatement", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml1__AttributeStatement soap_get_saml1__AttributeStatementType


#define soap_read__saml1__AttributeStatement soap_read_saml1__AttributeStatementType


#define soap_GET__saml1__AttributeStatement soap_GET_saml1__AttributeStatementType


#define soap_POST_recv__saml1__AttributeStatement soap_POST_recv_saml1__AttributeStatementType

#endif
/* _saml1__Evidence is a typedef synonym of saml1__EvidenceType */

#ifndef SOAP_TYPE__saml1__Evidence_DEFINED
#define SOAP_TYPE__saml1__Evidence_DEFINED

#define soap_default__saml1__Evidence soap_default_saml1__EvidenceType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__EvidenceType(struct soap*, const struct saml1__EvidenceType *);

#define soap_serialize__saml1__Evidence soap_serialize_saml1__EvidenceType


#define soap__saml1__Evidence2s soap_saml1__EvidenceType2s


#define soap_out__saml1__Evidence soap_out_saml1__EvidenceType


#define soap_s2_saml1__Evidence soap_s2saml1__EvidenceType


#define soap_in__saml1__Evidence soap_in_saml1__EvidenceType

#define soap_new__saml1__Evidence soap_new_saml1__EvidenceType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml1__Evidence(struct soap*, const struct saml1__EvidenceType *, const char*, const char*);

#ifndef soap_write__saml1__Evidence
#define soap_write__saml1__Evidence(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml1__Evidence(soap, data), 0) || soap_put__saml1__Evidence(soap, data, "saml1:Evidence", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml1__Evidence
#define soap_PUT__saml1__Evidence(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Evidence(soap, data), 0) || soap_put__saml1__Evidence(soap, data, "saml1:Evidence", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml1__Evidence
#define soap_PATCH__saml1__Evidence(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Evidence(soap, data), 0) || soap_put__saml1__Evidence(soap, data, "saml1:Evidence", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml1__Evidence
#define soap_POST_send__saml1__Evidence(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Evidence(soap, data), 0) || soap_put__saml1__Evidence(soap, data, "saml1:Evidence", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml1__Evidence soap_get_saml1__EvidenceType


#define soap_read__saml1__Evidence soap_read_saml1__EvidenceType


#define soap_GET__saml1__Evidence soap_GET_saml1__EvidenceType


#define soap_POST_recv__saml1__Evidence soap_POST_recv_saml1__EvidenceType

#endif
/* _saml1__Action is a typedef synonym of saml1__ActionType */

#ifndef SOAP_TYPE__saml1__Action_DEFINED
#define SOAP_TYPE__saml1__Action_DEFINED

#define soap_default__saml1__Action soap_default_saml1__ActionType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__ActionType(struct soap*, const struct saml1__ActionType *);

#define soap_serialize__saml1__Action soap_serialize_saml1__ActionType


#define soap__saml1__Action2s soap_saml1__ActionType2s


#define soap_out__saml1__Action soap_out_saml1__ActionType


#define soap_s2_saml1__Action soap_s2saml1__ActionType


#define soap_in__saml1__Action soap_in_saml1__ActionType

#define soap_new__saml1__Action soap_new_saml1__ActionType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml1__Action(struct soap*, const struct saml1__ActionType *, const char*, const char*);

#ifndef soap_write__saml1__Action
#define soap_write__saml1__Action(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml1__Action(soap, data), 0) || soap_put__saml1__Action(soap, data, "saml1:Action", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml1__Action
#define soap_PUT__saml1__Action(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Action(soap, data), 0) || soap_put__saml1__Action(soap, data, "saml1:Action", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml1__Action
#define soap_PATCH__saml1__Action(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Action(soap, data), 0) || soap_put__saml1__Action(soap, data, "saml1:Action", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml1__Action
#define soap_POST_send__saml1__Action(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Action(soap, data), 0) || soap_put__saml1__Action(soap, data, "saml1:Action", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml1__Action soap_get_saml1__ActionType


#define soap_read__saml1__Action soap_read_saml1__ActionType


#define soap_GET__saml1__Action soap_GET_saml1__ActionType


#define soap_POST_recv__saml1__Action soap_POST_recv_saml1__ActionType

#endif
/* _saml1__AuthorizationDecisionStatement is a typedef synonym of saml1__AuthorizationDecisionStatementType */

#ifndef SOAP_TYPE__saml1__AuthorizationDecisionStatement_DEFINED
#define SOAP_TYPE__saml1__AuthorizationDecisionStatement_DEFINED

#define soap_default__saml1__AuthorizationDecisionStatement soap_default_saml1__AuthorizationDecisionStatementType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__AuthorizationDecisionStatementType(struct soap*, const struct saml1__AuthorizationDecisionStatementType *);

#define soap_serialize__saml1__AuthorizationDecisionStatement soap_serialize_saml1__AuthorizationDecisionStatementType


#define soap__saml1__AuthorizationDecisionStatement2s soap_saml1__AuthorizationDecisionStatementType2s


#define soap_out__saml1__AuthorizationDecisionStatement soap_out_saml1__AuthorizationDecisionStatementType


#define soap_s2_saml1__AuthorizationDecisionStatement soap_s2saml1__AuthorizationDecisionStatementType


#define soap_in__saml1__AuthorizationDecisionStatement soap_in_saml1__AuthorizationDecisionStatementType

#define soap_new__saml1__AuthorizationDecisionStatement soap_new_saml1__AuthorizationDecisionStatementType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml1__AuthorizationDecisionStatement(struct soap*, const struct saml1__AuthorizationDecisionStatementType *, const char*, const char*);

#ifndef soap_write__saml1__AuthorizationDecisionStatement
#define soap_write__saml1__AuthorizationDecisionStatement(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml1__AuthorizationDecisionStatement(soap, data), 0) || soap_put__saml1__AuthorizationDecisionStatement(soap, data, "saml1:AuthorizationDecisionStatement", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml1__AuthorizationDecisionStatement
#define soap_PUT__saml1__AuthorizationDecisionStatement(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__AuthorizationDecisionStatement(soap, data), 0) || soap_put__saml1__AuthorizationDecisionStatement(soap, data, "saml1:AuthorizationDecisionStatement", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml1__AuthorizationDecisionStatement
#define soap_PATCH__saml1__AuthorizationDecisionStatement(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__AuthorizationDecisionStatement(soap, data), 0) || soap_put__saml1__AuthorizationDecisionStatement(soap, data, "saml1:AuthorizationDecisionStatement", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml1__AuthorizationDecisionStatement
#define soap_POST_send__saml1__AuthorizationDecisionStatement(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__AuthorizationDecisionStatement(soap, data), 0) || soap_put__saml1__AuthorizationDecisionStatement(soap, data, "saml1:AuthorizationDecisionStatement", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml1__AuthorizationDecisionStatement soap_get_saml1__AuthorizationDecisionStatementType


#define soap_read__saml1__AuthorizationDecisionStatement soap_read_saml1__AuthorizationDecisionStatementType


#define soap_GET__saml1__AuthorizationDecisionStatement soap_GET_saml1__AuthorizationDecisionStatementType


#define soap_POST_recv__saml1__AuthorizationDecisionStatement soap_POST_recv_saml1__AuthorizationDecisionStatementType

#endif
/* _saml1__AuthorityBinding is a typedef synonym of saml1__AuthorityBindingType */

#ifndef SOAP_TYPE__saml1__AuthorityBinding_DEFINED
#define SOAP_TYPE__saml1__AuthorityBinding_DEFINED

#define soap_default__saml1__AuthorityBinding soap_default_saml1__AuthorityBindingType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__AuthorityBindingType(struct soap*, const struct saml1__AuthorityBindingType *);

#define soap_serialize__saml1__AuthorityBinding soap_serialize_saml1__AuthorityBindingType


#define soap__saml1__AuthorityBinding2s soap_saml1__AuthorityBindingType2s


#define soap_out__saml1__AuthorityBinding soap_out_saml1__AuthorityBindingType


#define soap_s2_saml1__AuthorityBinding soap_s2saml1__AuthorityBindingType


#define soap_in__saml1__AuthorityBinding soap_in_saml1__AuthorityBindingType

#define soap_new__saml1__AuthorityBinding soap_new_saml1__AuthorityBindingType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml1__AuthorityBinding(struct soap*, const struct saml1__AuthorityBindingType *, const char*, const char*);

#ifndef soap_write__saml1__AuthorityBinding
#define soap_write__saml1__AuthorityBinding(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml1__AuthorityBinding(soap, data), 0) || soap_put__saml1__AuthorityBinding(soap, data, "saml1:AuthorityBinding", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml1__AuthorityBinding
#define soap_PUT__saml1__AuthorityBinding(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__AuthorityBinding(soap, data), 0) || soap_put__saml1__AuthorityBinding(soap, data, "saml1:AuthorityBinding", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml1__AuthorityBinding
#define soap_PATCH__saml1__AuthorityBinding(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__AuthorityBinding(soap, data), 0) || soap_put__saml1__AuthorityBinding(soap, data, "saml1:AuthorityBinding", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml1__AuthorityBinding
#define soap_POST_send__saml1__AuthorityBinding(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__AuthorityBinding(soap, data), 0) || soap_put__saml1__AuthorityBinding(soap, data, "saml1:AuthorityBinding", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml1__AuthorityBinding soap_get_saml1__AuthorityBindingType


#define soap_read__saml1__AuthorityBinding soap_read_saml1__AuthorityBindingType


#define soap_GET__saml1__AuthorityBinding soap_GET_saml1__AuthorityBindingType


#define soap_POST_recv__saml1__AuthorityBinding soap_POST_recv_saml1__AuthorityBindingType

#endif
/* _saml1__SubjectLocality is a typedef synonym of saml1__SubjectLocalityType */

#ifndef SOAP_TYPE__saml1__SubjectLocality_DEFINED
#define SOAP_TYPE__saml1__SubjectLocality_DEFINED

#define soap_default__saml1__SubjectLocality soap_default_saml1__SubjectLocalityType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__SubjectLocalityType(struct soap*, const struct saml1__SubjectLocalityType *);

#define soap_serialize__saml1__SubjectLocality soap_serialize_saml1__SubjectLocalityType


#define soap__saml1__SubjectLocality2s soap_saml1__SubjectLocalityType2s


#define soap_out__saml1__SubjectLocality soap_out_saml1__SubjectLocalityType


#define soap_s2_saml1__SubjectLocality soap_s2saml1__SubjectLocalityType


#define soap_in__saml1__SubjectLocality soap_in_saml1__SubjectLocalityType

#define soap_new__saml1__SubjectLocality soap_new_saml1__SubjectLocalityType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml1__SubjectLocality(struct soap*, const struct saml1__SubjectLocalityType *, const char*, const char*);

#ifndef soap_write__saml1__SubjectLocality
#define soap_write__saml1__SubjectLocality(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml1__SubjectLocality(soap, data), 0) || soap_put__saml1__SubjectLocality(soap, data, "saml1:SubjectLocality", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml1__SubjectLocality
#define soap_PUT__saml1__SubjectLocality(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__SubjectLocality(soap, data), 0) || soap_put__saml1__SubjectLocality(soap, data, "saml1:SubjectLocality", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml1__SubjectLocality
#define soap_PATCH__saml1__SubjectLocality(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__SubjectLocality(soap, data), 0) || soap_put__saml1__SubjectLocality(soap, data, "saml1:SubjectLocality", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml1__SubjectLocality
#define soap_POST_send__saml1__SubjectLocality(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__SubjectLocality(soap, data), 0) || soap_put__saml1__SubjectLocality(soap, data, "saml1:SubjectLocality", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml1__SubjectLocality soap_get_saml1__SubjectLocalityType


#define soap_read__saml1__SubjectLocality soap_read_saml1__SubjectLocalityType


#define soap_GET__saml1__SubjectLocality soap_GET_saml1__SubjectLocalityType


#define soap_POST_recv__saml1__SubjectLocality soap_POST_recv_saml1__SubjectLocalityType

#endif
/* _saml1__AuthenticationStatement is a typedef synonym of saml1__AuthenticationStatementType */

#ifndef SOAP_TYPE__saml1__AuthenticationStatement_DEFINED
#define SOAP_TYPE__saml1__AuthenticationStatement_DEFINED

#define soap_default__saml1__AuthenticationStatement soap_default_saml1__AuthenticationStatementType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__AuthenticationStatementType(struct soap*, const struct saml1__AuthenticationStatementType *);

#define soap_serialize__saml1__AuthenticationStatement soap_serialize_saml1__AuthenticationStatementType


#define soap__saml1__AuthenticationStatement2s soap_saml1__AuthenticationStatementType2s


#define soap_out__saml1__AuthenticationStatement soap_out_saml1__AuthenticationStatementType


#define soap_s2_saml1__AuthenticationStatement soap_s2saml1__AuthenticationStatementType


#define soap_in__saml1__AuthenticationStatement soap_in_saml1__AuthenticationStatementType

#define soap_new__saml1__AuthenticationStatement soap_new_saml1__AuthenticationStatementType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml1__AuthenticationStatement(struct soap*, const struct saml1__AuthenticationStatementType *, const char*, const char*);

#ifndef soap_write__saml1__AuthenticationStatement
#define soap_write__saml1__AuthenticationStatement(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml1__AuthenticationStatement(soap, data), 0) || soap_put__saml1__AuthenticationStatement(soap, data, "saml1:AuthenticationStatement", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml1__AuthenticationStatement
#define soap_PUT__saml1__AuthenticationStatement(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__AuthenticationStatement(soap, data), 0) || soap_put__saml1__AuthenticationStatement(soap, data, "saml1:AuthenticationStatement", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml1__AuthenticationStatement
#define soap_PATCH__saml1__AuthenticationStatement(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__AuthenticationStatement(soap, data), 0) || soap_put__saml1__AuthenticationStatement(soap, data, "saml1:AuthenticationStatement", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml1__AuthenticationStatement
#define soap_POST_send__saml1__AuthenticationStatement(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__AuthenticationStatement(soap, data), 0) || soap_put__saml1__AuthenticationStatement(soap, data, "saml1:AuthenticationStatement", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml1__AuthenticationStatement soap_get_saml1__AuthenticationStatementType


#define soap_read__saml1__AuthenticationStatement soap_read_saml1__AuthenticationStatementType


#define soap_GET__saml1__AuthenticationStatement soap_GET_saml1__AuthenticationStatementType


#define soap_POST_recv__saml1__AuthenticationStatement soap_POST_recv_saml1__AuthenticationStatementType

#endif
/* _saml1__SubjectConfirmation is a typedef synonym of saml1__SubjectConfirmationType */

#ifndef SOAP_TYPE__saml1__SubjectConfirmation_DEFINED
#define SOAP_TYPE__saml1__SubjectConfirmation_DEFINED

#define soap_default__saml1__SubjectConfirmation soap_default_saml1__SubjectConfirmationType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__SubjectConfirmationType(struct soap*, const struct saml1__SubjectConfirmationType *);

#define soap_serialize__saml1__SubjectConfirmation soap_serialize_saml1__SubjectConfirmationType


#define soap__saml1__SubjectConfirmation2s soap_saml1__SubjectConfirmationType2s


#define soap_out__saml1__SubjectConfirmation soap_out_saml1__SubjectConfirmationType


#define soap_s2_saml1__SubjectConfirmation soap_s2saml1__SubjectConfirmationType


#define soap_in__saml1__SubjectConfirmation soap_in_saml1__SubjectConfirmationType

#define soap_new__saml1__SubjectConfirmation soap_new_saml1__SubjectConfirmationType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml1__SubjectConfirmation(struct soap*, const struct saml1__SubjectConfirmationType *, const char*, const char*);

#ifndef soap_write__saml1__SubjectConfirmation
#define soap_write__saml1__SubjectConfirmation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml1__SubjectConfirmation(soap, data), 0) || soap_put__saml1__SubjectConfirmation(soap, data, "saml1:SubjectConfirmation", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml1__SubjectConfirmation
#define soap_PUT__saml1__SubjectConfirmation(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__SubjectConfirmation(soap, data), 0) || soap_put__saml1__SubjectConfirmation(soap, data, "saml1:SubjectConfirmation", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml1__SubjectConfirmation
#define soap_PATCH__saml1__SubjectConfirmation(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__SubjectConfirmation(soap, data), 0) || soap_put__saml1__SubjectConfirmation(soap, data, "saml1:SubjectConfirmation", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml1__SubjectConfirmation
#define soap_POST_send__saml1__SubjectConfirmation(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__SubjectConfirmation(soap, data), 0) || soap_put__saml1__SubjectConfirmation(soap, data, "saml1:SubjectConfirmation", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml1__SubjectConfirmation soap_get_saml1__SubjectConfirmationType


#define soap_read__saml1__SubjectConfirmation soap_read_saml1__SubjectConfirmationType


#define soap_GET__saml1__SubjectConfirmation soap_GET_saml1__SubjectConfirmationType


#define soap_POST_recv__saml1__SubjectConfirmation soap_POST_recv_saml1__SubjectConfirmationType

#endif
/* _saml1__NameIdentifier is a typedef synonym of saml1__NameIdentifierType */

#ifndef SOAP_TYPE__saml1__NameIdentifier_DEFINED
#define SOAP_TYPE__saml1__NameIdentifier_DEFINED

#define soap_default__saml1__NameIdentifier soap_default_saml1__NameIdentifierType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__NameIdentifierType(struct soap*, const struct saml1__NameIdentifierType *);

#define soap_serialize__saml1__NameIdentifier soap_serialize_saml1__NameIdentifierType


#define soap__saml1__NameIdentifier2s soap_saml1__NameIdentifierType2s


#define soap_out__saml1__NameIdentifier soap_out_saml1__NameIdentifierType


#define soap_s2_saml1__NameIdentifier soap_s2saml1__NameIdentifierType


#define soap_in__saml1__NameIdentifier soap_in_saml1__NameIdentifierType

#define soap_new__saml1__NameIdentifier soap_new_saml1__NameIdentifierType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml1__NameIdentifier(struct soap*, const struct saml1__NameIdentifierType *, const char*, const char*);

#ifndef soap_write__saml1__NameIdentifier
#define soap_write__saml1__NameIdentifier(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml1__NameIdentifier(soap, data), 0) || soap_put__saml1__NameIdentifier(soap, data, "saml1:NameIdentifier", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml1__NameIdentifier
#define soap_PUT__saml1__NameIdentifier(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__NameIdentifier(soap, data), 0) || soap_put__saml1__NameIdentifier(soap, data, "saml1:NameIdentifier", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml1__NameIdentifier
#define soap_PATCH__saml1__NameIdentifier(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__NameIdentifier(soap, data), 0) || soap_put__saml1__NameIdentifier(soap, data, "saml1:NameIdentifier", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml1__NameIdentifier
#define soap_POST_send__saml1__NameIdentifier(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__NameIdentifier(soap, data), 0) || soap_put__saml1__NameIdentifier(soap, data, "saml1:NameIdentifier", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml1__NameIdentifier soap_get_saml1__NameIdentifierType


#define soap_read__saml1__NameIdentifier soap_read_saml1__NameIdentifierType


#define soap_GET__saml1__NameIdentifier soap_GET_saml1__NameIdentifierType


#define soap_POST_recv__saml1__NameIdentifier soap_POST_recv_saml1__NameIdentifierType

#endif
/* _saml1__Subject is a typedef synonym of saml1__SubjectType */

#ifndef SOAP_TYPE__saml1__Subject_DEFINED
#define SOAP_TYPE__saml1__Subject_DEFINED

#define soap_default__saml1__Subject soap_default_saml1__SubjectType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__SubjectType(struct soap*, const struct saml1__SubjectType *);

#define soap_serialize__saml1__Subject soap_serialize_saml1__SubjectType


#define soap__saml1__Subject2s soap_saml1__SubjectType2s


#define soap_out__saml1__Subject soap_out_saml1__SubjectType


#define soap_s2_saml1__Subject soap_s2saml1__SubjectType


#define soap_in__saml1__Subject soap_in_saml1__SubjectType

#define soap_new__saml1__Subject soap_new_saml1__SubjectType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml1__Subject(struct soap*, const struct saml1__SubjectType *, const char*, const char*);

#ifndef soap_write__saml1__Subject
#define soap_write__saml1__Subject(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml1__Subject(soap, data), 0) || soap_put__saml1__Subject(soap, data, "saml1:Subject", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml1__Subject
#define soap_PUT__saml1__Subject(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Subject(soap, data), 0) || soap_put__saml1__Subject(soap, data, "saml1:Subject", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml1__Subject
#define soap_PATCH__saml1__Subject(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Subject(soap, data), 0) || soap_put__saml1__Subject(soap, data, "saml1:Subject", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml1__Subject
#define soap_POST_send__saml1__Subject(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Subject(soap, data), 0) || soap_put__saml1__Subject(soap, data, "saml1:Subject", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml1__Subject soap_get_saml1__SubjectType


#define soap_read__saml1__Subject soap_read_saml1__SubjectType


#define soap_GET__saml1__Subject soap_GET_saml1__SubjectType


#define soap_POST_recv__saml1__Subject soap_POST_recv_saml1__SubjectType

#endif
/* _saml1__SubjectStatement is a typedef synonym of saml1__SubjectStatementAbstractType */

#ifndef SOAP_TYPE__saml1__SubjectStatement_DEFINED
#define SOAP_TYPE__saml1__SubjectStatement_DEFINED

#define soap_default__saml1__SubjectStatement soap_default_saml1__SubjectStatementAbstractType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__SubjectStatementAbstractType(struct soap*, const struct saml1__SubjectStatementAbstractType *);

#define soap_serialize__saml1__SubjectStatement soap_serialize_saml1__SubjectStatementAbstractType


#define soap__saml1__SubjectStatement2s soap_saml1__SubjectStatementAbstractType2s


#define soap_out__saml1__SubjectStatement soap_out_saml1__SubjectStatementAbstractType


#define soap_s2_saml1__SubjectStatement soap_s2saml1__SubjectStatementAbstractType


#define soap_in__saml1__SubjectStatement soap_in_saml1__SubjectStatementAbstractType

#define soap_new__saml1__SubjectStatement soap_new_saml1__SubjectStatementAbstractType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml1__SubjectStatement(struct soap*, const struct saml1__SubjectStatementAbstractType *, const char*, const char*);

#ifndef soap_write__saml1__SubjectStatement
#define soap_write__saml1__SubjectStatement(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml1__SubjectStatement(soap, data), 0) || soap_put__saml1__SubjectStatement(soap, data, "saml1:SubjectStatement", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml1__SubjectStatement
#define soap_PUT__saml1__SubjectStatement(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__SubjectStatement(soap, data), 0) || soap_put__saml1__SubjectStatement(soap, data, "saml1:SubjectStatement", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml1__SubjectStatement
#define soap_PATCH__saml1__SubjectStatement(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__SubjectStatement(soap, data), 0) || soap_put__saml1__SubjectStatement(soap, data, "saml1:SubjectStatement", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml1__SubjectStatement
#define soap_POST_send__saml1__SubjectStatement(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__SubjectStatement(soap, data), 0) || soap_put__saml1__SubjectStatement(soap, data, "saml1:SubjectStatement", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml1__SubjectStatement soap_get_saml1__SubjectStatementAbstractType


#define soap_read__saml1__SubjectStatement soap_read_saml1__SubjectStatementAbstractType


#define soap_GET__saml1__SubjectStatement soap_GET_saml1__SubjectStatementAbstractType


#define soap_POST_recv__saml1__SubjectStatement soap_POST_recv_saml1__SubjectStatementAbstractType

#endif
/* _saml1__Statement is a typedef synonym of saml1__StatementAbstractType */

#ifndef SOAP_TYPE__saml1__Statement_DEFINED
#define SOAP_TYPE__saml1__Statement_DEFINED

#define soap_default__saml1__Statement soap_default_saml1__StatementAbstractType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__StatementAbstractType(struct soap*, const struct saml1__StatementAbstractType *);

#define soap_serialize__saml1__Statement soap_serialize_saml1__StatementAbstractType


#define soap__saml1__Statement2s soap_saml1__StatementAbstractType2s


#define soap_out__saml1__Statement soap_out_saml1__StatementAbstractType


#define soap_s2_saml1__Statement soap_s2saml1__StatementAbstractType


#define soap_in__saml1__Statement soap_in_saml1__StatementAbstractType

#define soap_new__saml1__Statement soap_new_saml1__StatementAbstractType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml1__Statement(struct soap*, const struct saml1__StatementAbstractType *, const char*, const char*);

#ifndef soap_write__saml1__Statement
#define soap_write__saml1__Statement(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml1__Statement(soap, data), 0) || soap_put__saml1__Statement(soap, data, "saml1:Statement", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml1__Statement
#define soap_PUT__saml1__Statement(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Statement(soap, data), 0) || soap_put__saml1__Statement(soap, data, "saml1:Statement", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml1__Statement
#define soap_PATCH__saml1__Statement(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Statement(soap, data), 0) || soap_put__saml1__Statement(soap, data, "saml1:Statement", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml1__Statement
#define soap_POST_send__saml1__Statement(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Statement(soap, data), 0) || soap_put__saml1__Statement(soap, data, "saml1:Statement", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml1__Statement soap_get_saml1__StatementAbstractType


#define soap_read__saml1__Statement soap_read_saml1__StatementAbstractType


#define soap_GET__saml1__Statement soap_GET_saml1__StatementAbstractType


#define soap_POST_recv__saml1__Statement soap_POST_recv_saml1__StatementAbstractType

#endif
/* _saml1__Advice is a typedef synonym of saml1__AdviceType */

#ifndef SOAP_TYPE__saml1__Advice_DEFINED
#define SOAP_TYPE__saml1__Advice_DEFINED

#define soap_default__saml1__Advice soap_default_saml1__AdviceType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__AdviceType(struct soap*, const struct saml1__AdviceType *);

#define soap_serialize__saml1__Advice soap_serialize_saml1__AdviceType


#define soap__saml1__Advice2s soap_saml1__AdviceType2s


#define soap_out__saml1__Advice soap_out_saml1__AdviceType


#define soap_s2_saml1__Advice soap_s2saml1__AdviceType


#define soap_in__saml1__Advice soap_in_saml1__AdviceType

#define soap_new__saml1__Advice soap_new_saml1__AdviceType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml1__Advice(struct soap*, const struct saml1__AdviceType *, const char*, const char*);

#ifndef soap_write__saml1__Advice
#define soap_write__saml1__Advice(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml1__Advice(soap, data), 0) || soap_put__saml1__Advice(soap, data, "saml1:Advice", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml1__Advice
#define soap_PUT__saml1__Advice(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Advice(soap, data), 0) || soap_put__saml1__Advice(soap, data, "saml1:Advice", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml1__Advice
#define soap_PATCH__saml1__Advice(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Advice(soap, data), 0) || soap_put__saml1__Advice(soap, data, "saml1:Advice", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml1__Advice
#define soap_POST_send__saml1__Advice(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Advice(soap, data), 0) || soap_put__saml1__Advice(soap, data, "saml1:Advice", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml1__Advice soap_get_saml1__AdviceType


#define soap_read__saml1__Advice soap_read_saml1__AdviceType


#define soap_GET__saml1__Advice soap_GET_saml1__AdviceType


#define soap_POST_recv__saml1__Advice soap_POST_recv_saml1__AdviceType

#endif
/* _saml1__DoNotCacheCondition is a typedef synonym of saml1__DoNotCacheConditionType */

#ifndef SOAP_TYPE__saml1__DoNotCacheCondition_DEFINED
#define SOAP_TYPE__saml1__DoNotCacheCondition_DEFINED

#define soap_default__saml1__DoNotCacheCondition soap_default_saml1__DoNotCacheConditionType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__DoNotCacheConditionType(struct soap*, const struct saml1__DoNotCacheConditionType *);

#define soap_serialize__saml1__DoNotCacheCondition soap_serialize_saml1__DoNotCacheConditionType


#define soap__saml1__DoNotCacheCondition2s soap_saml1__DoNotCacheConditionType2s


#define soap_out__saml1__DoNotCacheCondition soap_out_saml1__DoNotCacheConditionType


#define soap_s2_saml1__DoNotCacheCondition soap_s2saml1__DoNotCacheConditionType


#define soap_in__saml1__DoNotCacheCondition soap_in_saml1__DoNotCacheConditionType

#define soap_new__saml1__DoNotCacheCondition soap_new_saml1__DoNotCacheConditionType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml1__DoNotCacheCondition(struct soap*, const struct saml1__DoNotCacheConditionType *, const char*, const char*);

#ifndef soap_write__saml1__DoNotCacheCondition
#define soap_write__saml1__DoNotCacheCondition(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml1__DoNotCacheCondition(soap, data), 0) || soap_put__saml1__DoNotCacheCondition(soap, data, "saml1:DoNotCacheCondition", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml1__DoNotCacheCondition
#define soap_PUT__saml1__DoNotCacheCondition(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__DoNotCacheCondition(soap, data), 0) || soap_put__saml1__DoNotCacheCondition(soap, data, "saml1:DoNotCacheCondition", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml1__DoNotCacheCondition
#define soap_PATCH__saml1__DoNotCacheCondition(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__DoNotCacheCondition(soap, data), 0) || soap_put__saml1__DoNotCacheCondition(soap, data, "saml1:DoNotCacheCondition", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml1__DoNotCacheCondition
#define soap_POST_send__saml1__DoNotCacheCondition(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__DoNotCacheCondition(soap, data), 0) || soap_put__saml1__DoNotCacheCondition(soap, data, "saml1:DoNotCacheCondition", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml1__DoNotCacheCondition soap_get_saml1__DoNotCacheConditionType


#define soap_read__saml1__DoNotCacheCondition soap_read_saml1__DoNotCacheConditionType


#define soap_GET__saml1__DoNotCacheCondition soap_GET_saml1__DoNotCacheConditionType


#define soap_POST_recv__saml1__DoNotCacheCondition soap_POST_recv_saml1__DoNotCacheConditionType

#endif
/* _saml1__AudienceRestrictionCondition is a typedef synonym of saml1__AudienceRestrictionConditionType */

#ifndef SOAP_TYPE__saml1__AudienceRestrictionCondition_DEFINED
#define SOAP_TYPE__saml1__AudienceRestrictionCondition_DEFINED

#define soap_default__saml1__AudienceRestrictionCondition soap_default_saml1__AudienceRestrictionConditionType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__AudienceRestrictionConditionType(struct soap*, const struct saml1__AudienceRestrictionConditionType *);

#define soap_serialize__saml1__AudienceRestrictionCondition soap_serialize_saml1__AudienceRestrictionConditionType


#define soap__saml1__AudienceRestrictionCondition2s soap_saml1__AudienceRestrictionConditionType2s


#define soap_out__saml1__AudienceRestrictionCondition soap_out_saml1__AudienceRestrictionConditionType


#define soap_s2_saml1__AudienceRestrictionCondition soap_s2saml1__AudienceRestrictionConditionType


#define soap_in__saml1__AudienceRestrictionCondition soap_in_saml1__AudienceRestrictionConditionType

#define soap_new__saml1__AudienceRestrictionCondition soap_new_saml1__AudienceRestrictionConditionType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml1__AudienceRestrictionCondition(struct soap*, const struct saml1__AudienceRestrictionConditionType *, const char*, const char*);

#ifndef soap_write__saml1__AudienceRestrictionCondition
#define soap_write__saml1__AudienceRestrictionCondition(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml1__AudienceRestrictionCondition(soap, data), 0) || soap_put__saml1__AudienceRestrictionCondition(soap, data, "saml1:AudienceRestrictionCondition", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml1__AudienceRestrictionCondition
#define soap_PUT__saml1__AudienceRestrictionCondition(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__AudienceRestrictionCondition(soap, data), 0) || soap_put__saml1__AudienceRestrictionCondition(soap, data, "saml1:AudienceRestrictionCondition", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml1__AudienceRestrictionCondition
#define soap_PATCH__saml1__AudienceRestrictionCondition(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__AudienceRestrictionCondition(soap, data), 0) || soap_put__saml1__AudienceRestrictionCondition(soap, data, "saml1:AudienceRestrictionCondition", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml1__AudienceRestrictionCondition
#define soap_POST_send__saml1__AudienceRestrictionCondition(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__AudienceRestrictionCondition(soap, data), 0) || soap_put__saml1__AudienceRestrictionCondition(soap, data, "saml1:AudienceRestrictionCondition", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml1__AudienceRestrictionCondition soap_get_saml1__AudienceRestrictionConditionType


#define soap_read__saml1__AudienceRestrictionCondition soap_read_saml1__AudienceRestrictionConditionType


#define soap_GET__saml1__AudienceRestrictionCondition soap_GET_saml1__AudienceRestrictionConditionType


#define soap_POST_recv__saml1__AudienceRestrictionCondition soap_POST_recv_saml1__AudienceRestrictionConditionType

#endif
/* _saml1__Condition is a typedef synonym of saml1__ConditionAbstractType */

#ifndef SOAP_TYPE__saml1__Condition_DEFINED
#define SOAP_TYPE__saml1__Condition_DEFINED

#define soap_default__saml1__Condition soap_default_saml1__ConditionAbstractType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__ConditionAbstractType(struct soap*, const struct saml1__ConditionAbstractType *);

#define soap_serialize__saml1__Condition soap_serialize_saml1__ConditionAbstractType


#define soap__saml1__Condition2s soap_saml1__ConditionAbstractType2s


#define soap_out__saml1__Condition soap_out_saml1__ConditionAbstractType


#define soap_s2_saml1__Condition soap_s2saml1__ConditionAbstractType


#define soap_in__saml1__Condition soap_in_saml1__ConditionAbstractType

#define soap_new__saml1__Condition soap_new_saml1__ConditionAbstractType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml1__Condition(struct soap*, const struct saml1__ConditionAbstractType *, const char*, const char*);

#ifndef soap_write__saml1__Condition
#define soap_write__saml1__Condition(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml1__Condition(soap, data), 0) || soap_put__saml1__Condition(soap, data, "saml1:Condition", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml1__Condition
#define soap_PUT__saml1__Condition(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Condition(soap, data), 0) || soap_put__saml1__Condition(soap, data, "saml1:Condition", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml1__Condition
#define soap_PATCH__saml1__Condition(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Condition(soap, data), 0) || soap_put__saml1__Condition(soap, data, "saml1:Condition", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml1__Condition
#define soap_POST_send__saml1__Condition(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Condition(soap, data), 0) || soap_put__saml1__Condition(soap, data, "saml1:Condition", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml1__Condition soap_get_saml1__ConditionAbstractType


#define soap_read__saml1__Condition soap_read_saml1__ConditionAbstractType


#define soap_GET__saml1__Condition soap_GET_saml1__ConditionAbstractType


#define soap_POST_recv__saml1__Condition soap_POST_recv_saml1__ConditionAbstractType

#endif
/* _saml1__Conditions is a typedef synonym of saml1__ConditionsType */

#ifndef SOAP_TYPE__saml1__Conditions_DEFINED
#define SOAP_TYPE__saml1__Conditions_DEFINED

#define soap_default__saml1__Conditions soap_default_saml1__ConditionsType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__ConditionsType(struct soap*, const struct saml1__ConditionsType *);

#define soap_serialize__saml1__Conditions soap_serialize_saml1__ConditionsType


#define soap__saml1__Conditions2s soap_saml1__ConditionsType2s


#define soap_out__saml1__Conditions soap_out_saml1__ConditionsType


#define soap_s2_saml1__Conditions soap_s2saml1__ConditionsType


#define soap_in__saml1__Conditions soap_in_saml1__ConditionsType

#define soap_new__saml1__Conditions soap_new_saml1__ConditionsType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml1__Conditions(struct soap*, const struct saml1__ConditionsType *, const char*, const char*);

#ifndef soap_write__saml1__Conditions
#define soap_write__saml1__Conditions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml1__Conditions(soap, data), 0) || soap_put__saml1__Conditions(soap, data, "saml1:Conditions", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml1__Conditions
#define soap_PUT__saml1__Conditions(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Conditions(soap, data), 0) || soap_put__saml1__Conditions(soap, data, "saml1:Conditions", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml1__Conditions
#define soap_PATCH__saml1__Conditions(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Conditions(soap, data), 0) || soap_put__saml1__Conditions(soap, data, "saml1:Conditions", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml1__Conditions
#define soap_POST_send__saml1__Conditions(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Conditions(soap, data), 0) || soap_put__saml1__Conditions(soap, data, "saml1:Conditions", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml1__Conditions soap_get_saml1__ConditionsType


#define soap_read__saml1__Conditions soap_read_saml1__ConditionsType


#define soap_GET__saml1__Conditions soap_GET_saml1__ConditionsType


#define soap_POST_recv__saml1__Conditions soap_POST_recv_saml1__ConditionsType

#endif
/* _saml1__Assertion is a typedef synonym of saml1__AssertionType */

#ifndef SOAP_TYPE__saml1__Assertion_DEFINED
#define SOAP_TYPE__saml1__Assertion_DEFINED

#define soap_default__saml1__Assertion soap_default_saml1__AssertionType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__AssertionType(struct soap*, const struct saml1__AssertionType *);

#define soap_serialize__saml1__Assertion soap_serialize_saml1__AssertionType


#define soap__saml1__Assertion2s soap_saml1__AssertionType2s


#define soap_out__saml1__Assertion soap_out_saml1__AssertionType


#define soap_s2_saml1__Assertion soap_s2saml1__AssertionType


#define soap_in__saml1__Assertion soap_in_saml1__AssertionType

#define soap_new__saml1__Assertion soap_new_saml1__AssertionType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml1__Assertion(struct soap*, const struct saml1__AssertionType *, const char*, const char*);

#ifndef soap_write__saml1__Assertion
#define soap_write__saml1__Assertion(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__saml1__Assertion(soap, data), 0) || soap_put__saml1__Assertion(soap, data, "saml1:Assertion", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml1__Assertion
#define soap_PUT__saml1__Assertion(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Assertion(soap, data), 0) || soap_put__saml1__Assertion(soap, data, "saml1:Assertion", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml1__Assertion
#define soap_PATCH__saml1__Assertion(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Assertion(soap, data), 0) || soap_put__saml1__Assertion(soap, data, "saml1:Assertion", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml1__Assertion
#define soap_POST_send__saml1__Assertion(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__saml1__Assertion(soap, data), 0) || soap_put__saml1__Assertion(soap, data, "saml1:Assertion", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml1__Assertion soap_get_saml1__AssertionType


#define soap_read__saml1__Assertion soap_read_saml1__AssertionType


#define soap_GET__saml1__Assertion soap_GET_saml1__AssertionType


#define soap_POST_recv__saml1__Assertion soap_POST_recv_saml1__AssertionType

#endif

#ifndef SOAP_TYPE___saml1__union_EvidenceType_DEFINED
#define SOAP_TYPE___saml1__union_EvidenceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___saml1__union_EvidenceType(struct soap*, struct __saml1__union_EvidenceType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___saml1__union_EvidenceType(struct soap*, const struct __saml1__union_EvidenceType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___saml1__union_EvidenceType(struct soap*, const char*, int, const struct __saml1__union_EvidenceType *, const char*);
SOAP_FMAC3 struct __saml1__union_EvidenceType * SOAP_FMAC4 soap_in___saml1__union_EvidenceType(struct soap*, const char*, struct __saml1__union_EvidenceType *, const char*);

SOAP_FMAC3 struct __saml1__union_EvidenceType * SOAP_FMAC4 soap_new___saml1__union_EvidenceType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___saml1__union_EvidenceType(struct soap*, const struct __saml1__union_EvidenceType *, const char*, const char*);

#ifndef soap_write___saml1__union_EvidenceType
#define soap_write___saml1__union_EvidenceType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___saml1__union_EvidenceType(soap, data), 0) || soap_put___saml1__union_EvidenceType(soap, data, "-saml1:union-EvidenceType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___saml1__union_EvidenceType
#define soap_PUT___saml1__union_EvidenceType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml1__union_EvidenceType(soap, data), 0) || soap_put___saml1__union_EvidenceType(soap, data, "-saml1:union-EvidenceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___saml1__union_EvidenceType
#define soap_PATCH___saml1__union_EvidenceType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml1__union_EvidenceType(soap, data), 0) || soap_put___saml1__union_EvidenceType(soap, data, "-saml1:union-EvidenceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___saml1__union_EvidenceType
#define soap_POST_send___saml1__union_EvidenceType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml1__union_EvidenceType(soap, data), 0) || soap_put___saml1__union_EvidenceType(soap, data, "-saml1:union-EvidenceType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __saml1__union_EvidenceType * SOAP_FMAC4 soap_get___saml1__union_EvidenceType(struct soap*, struct __saml1__union_EvidenceType *, const char*, const char*);

#ifndef soap_read___saml1__union_EvidenceType
#define soap_read___saml1__union_EvidenceType(soap, data) ( ((data) ? (soap_default___saml1__union_EvidenceType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___saml1__union_EvidenceType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___saml1__union_EvidenceType
#define soap_GET___saml1__union_EvidenceType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___saml1__union_EvidenceType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___saml1__union_EvidenceType
#define soap_POST_recv___saml1__union_EvidenceType(soap, data) ( soap_read___saml1__union_EvidenceType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___saml1__union_AdviceType_DEFINED
#define SOAP_TYPE___saml1__union_AdviceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___saml1__union_AdviceType(struct soap*, struct __saml1__union_AdviceType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___saml1__union_AdviceType(struct soap*, const struct __saml1__union_AdviceType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___saml1__union_AdviceType(struct soap*, const char*, int, const struct __saml1__union_AdviceType *, const char*);
SOAP_FMAC3 struct __saml1__union_AdviceType * SOAP_FMAC4 soap_in___saml1__union_AdviceType(struct soap*, const char*, struct __saml1__union_AdviceType *, const char*);

SOAP_FMAC3 struct __saml1__union_AdviceType * SOAP_FMAC4 soap_new___saml1__union_AdviceType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___saml1__union_AdviceType(struct soap*, const struct __saml1__union_AdviceType *, const char*, const char*);

#ifndef soap_write___saml1__union_AdviceType
#define soap_write___saml1__union_AdviceType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___saml1__union_AdviceType(soap, data), 0) || soap_put___saml1__union_AdviceType(soap, data, "-saml1:union-AdviceType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___saml1__union_AdviceType
#define soap_PUT___saml1__union_AdviceType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml1__union_AdviceType(soap, data), 0) || soap_put___saml1__union_AdviceType(soap, data, "-saml1:union-AdviceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___saml1__union_AdviceType
#define soap_PATCH___saml1__union_AdviceType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml1__union_AdviceType(soap, data), 0) || soap_put___saml1__union_AdviceType(soap, data, "-saml1:union-AdviceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___saml1__union_AdviceType
#define soap_POST_send___saml1__union_AdviceType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml1__union_AdviceType(soap, data), 0) || soap_put___saml1__union_AdviceType(soap, data, "-saml1:union-AdviceType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __saml1__union_AdviceType * SOAP_FMAC4 soap_get___saml1__union_AdviceType(struct soap*, struct __saml1__union_AdviceType *, const char*, const char*);

#ifndef soap_read___saml1__union_AdviceType
#define soap_read___saml1__union_AdviceType(soap, data) ( ((data) ? (soap_default___saml1__union_AdviceType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___saml1__union_AdviceType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___saml1__union_AdviceType
#define soap_GET___saml1__union_AdviceType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___saml1__union_AdviceType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___saml1__union_AdviceType
#define soap_POST_recv___saml1__union_AdviceType(soap, data) ( soap_read___saml1__union_AdviceType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___saml1__union_ConditionsType_DEFINED
#define SOAP_TYPE___saml1__union_ConditionsType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___saml1__union_ConditionsType(struct soap*, struct __saml1__union_ConditionsType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___saml1__union_ConditionsType(struct soap*, const struct __saml1__union_ConditionsType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___saml1__union_ConditionsType(struct soap*, const char*, int, const struct __saml1__union_ConditionsType *, const char*);
SOAP_FMAC3 struct __saml1__union_ConditionsType * SOAP_FMAC4 soap_in___saml1__union_ConditionsType(struct soap*, const char*, struct __saml1__union_ConditionsType *, const char*);

SOAP_FMAC3 struct __saml1__union_ConditionsType * SOAP_FMAC4 soap_new___saml1__union_ConditionsType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___saml1__union_ConditionsType(struct soap*, const struct __saml1__union_ConditionsType *, const char*, const char*);

#ifndef soap_write___saml1__union_ConditionsType
#define soap_write___saml1__union_ConditionsType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___saml1__union_ConditionsType(soap, data), 0) || soap_put___saml1__union_ConditionsType(soap, data, "-saml1:union-ConditionsType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___saml1__union_ConditionsType
#define soap_PUT___saml1__union_ConditionsType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml1__union_ConditionsType(soap, data), 0) || soap_put___saml1__union_ConditionsType(soap, data, "-saml1:union-ConditionsType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___saml1__union_ConditionsType
#define soap_PATCH___saml1__union_ConditionsType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml1__union_ConditionsType(soap, data), 0) || soap_put___saml1__union_ConditionsType(soap, data, "-saml1:union-ConditionsType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___saml1__union_ConditionsType
#define soap_POST_send___saml1__union_ConditionsType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml1__union_ConditionsType(soap, data), 0) || soap_put___saml1__union_ConditionsType(soap, data, "-saml1:union-ConditionsType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __saml1__union_ConditionsType * SOAP_FMAC4 soap_get___saml1__union_ConditionsType(struct soap*, struct __saml1__union_ConditionsType *, const char*, const char*);

#ifndef soap_read___saml1__union_ConditionsType
#define soap_read___saml1__union_ConditionsType(soap, data) ( ((data) ? (soap_default___saml1__union_ConditionsType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___saml1__union_ConditionsType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___saml1__union_ConditionsType
#define soap_GET___saml1__union_ConditionsType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___saml1__union_ConditionsType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___saml1__union_ConditionsType
#define soap_POST_recv___saml1__union_ConditionsType(soap, data) ( soap_read___saml1__union_ConditionsType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___saml1__union_AssertionType_DEFINED
#define SOAP_TYPE___saml1__union_AssertionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___saml1__union_AssertionType(struct soap*, struct __saml1__union_AssertionType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___saml1__union_AssertionType(struct soap*, const struct __saml1__union_AssertionType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___saml1__union_AssertionType(struct soap*, const char*, int, const struct __saml1__union_AssertionType *, const char*);
SOAP_FMAC3 struct __saml1__union_AssertionType * SOAP_FMAC4 soap_in___saml1__union_AssertionType(struct soap*, const char*, struct __saml1__union_AssertionType *, const char*);

SOAP_FMAC3 struct __saml1__union_AssertionType * SOAP_FMAC4 soap_new___saml1__union_AssertionType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___saml1__union_AssertionType(struct soap*, const struct __saml1__union_AssertionType *, const char*, const char*);

#ifndef soap_write___saml1__union_AssertionType
#define soap_write___saml1__union_AssertionType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___saml1__union_AssertionType(soap, data), 0) || soap_put___saml1__union_AssertionType(soap, data, "-saml1:union-AssertionType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___saml1__union_AssertionType
#define soap_PUT___saml1__union_AssertionType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml1__union_AssertionType(soap, data), 0) || soap_put___saml1__union_AssertionType(soap, data, "-saml1:union-AssertionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___saml1__union_AssertionType
#define soap_PATCH___saml1__union_AssertionType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml1__union_AssertionType(soap, data), 0) || soap_put___saml1__union_AssertionType(soap, data, "-saml1:union-AssertionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___saml1__union_AssertionType
#define soap_POST_send___saml1__union_AssertionType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___saml1__union_AssertionType(soap, data), 0) || soap_put___saml1__union_AssertionType(soap, data, "-saml1:union-AssertionType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __saml1__union_AssertionType * SOAP_FMAC4 soap_get___saml1__union_AssertionType(struct soap*, struct __saml1__union_AssertionType *, const char*, const char*);

#ifndef soap_read___saml1__union_AssertionType
#define soap_read___saml1__union_AssertionType(soap, data) ( ((data) ? (soap_default___saml1__union_AssertionType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___saml1__union_AssertionType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___saml1__union_AssertionType
#define soap_GET___saml1__union_AssertionType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___saml1__union_AssertionType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___saml1__union_AssertionType
#define soap_POST_recv___saml1__union_AssertionType(soap, data) ( soap_read___saml1__union_AssertionType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml1__AttributeType_DEFINED
#define SOAP_TYPE_saml1__AttributeType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml1__AttributeType(struct soap*, struct saml1__AttributeType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__AttributeType(struct soap*, const struct saml1__AttributeType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml1__AttributeType(struct soap*, const char*, int, const struct saml1__AttributeType *, const char*);
SOAP_FMAC3 struct saml1__AttributeType * SOAP_FMAC4 soap_in_saml1__AttributeType(struct soap*, const char*, struct saml1__AttributeType *, const char*);

SOAP_FMAC3 struct saml1__AttributeType * SOAP_FMAC4 soap_new_saml1__AttributeType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml1__AttributeType(struct soap*, const struct saml1__AttributeType *, const char*, const char*);

#ifndef soap_write_saml1__AttributeType
#define soap_write_saml1__AttributeType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml1__AttributeType(soap, data), 0) || soap_put_saml1__AttributeType(soap, data, "saml1:AttributeType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml1__AttributeType
#define soap_PUT_saml1__AttributeType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AttributeType(soap, data), 0) || soap_put_saml1__AttributeType(soap, data, "saml1:AttributeType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml1__AttributeType
#define soap_PATCH_saml1__AttributeType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AttributeType(soap, data), 0) || soap_put_saml1__AttributeType(soap, data, "saml1:AttributeType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml1__AttributeType
#define soap_POST_send_saml1__AttributeType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AttributeType(soap, data), 0) || soap_put_saml1__AttributeType(soap, data, "saml1:AttributeType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml1__AttributeType * SOAP_FMAC4 soap_get_saml1__AttributeType(struct soap*, struct saml1__AttributeType *, const char*, const char*);

#ifndef soap_read_saml1__AttributeType
#define soap_read_saml1__AttributeType(soap, data) ( ((data) ? (soap_default_saml1__AttributeType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml1__AttributeType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml1__AttributeType
#define soap_GET_saml1__AttributeType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml1__AttributeType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml1__AttributeType
#define soap_POST_recv_saml1__AttributeType(soap, data) ( soap_read_saml1__AttributeType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml1__AttributeDesignatorType_DEFINED
#define SOAP_TYPE_saml1__AttributeDesignatorType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml1__AttributeDesignatorType(struct soap*, struct saml1__AttributeDesignatorType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__AttributeDesignatorType(struct soap*, const struct saml1__AttributeDesignatorType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml1__AttributeDesignatorType(struct soap*, const char*, int, const struct saml1__AttributeDesignatorType *, const char*);
SOAP_FMAC3 struct saml1__AttributeDesignatorType * SOAP_FMAC4 soap_in_saml1__AttributeDesignatorType(struct soap*, const char*, struct saml1__AttributeDesignatorType *, const char*);

SOAP_FMAC3 struct saml1__AttributeDesignatorType * SOAP_FMAC4 soap_new_saml1__AttributeDesignatorType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml1__AttributeDesignatorType(struct soap*, const struct saml1__AttributeDesignatorType *, const char*, const char*);

#ifndef soap_write_saml1__AttributeDesignatorType
#define soap_write_saml1__AttributeDesignatorType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml1__AttributeDesignatorType(soap, data), 0) || soap_put_saml1__AttributeDesignatorType(soap, data, "saml1:AttributeDesignatorType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml1__AttributeDesignatorType
#define soap_PUT_saml1__AttributeDesignatorType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AttributeDesignatorType(soap, data), 0) || soap_put_saml1__AttributeDesignatorType(soap, data, "saml1:AttributeDesignatorType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml1__AttributeDesignatorType
#define soap_PATCH_saml1__AttributeDesignatorType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AttributeDesignatorType(soap, data), 0) || soap_put_saml1__AttributeDesignatorType(soap, data, "saml1:AttributeDesignatorType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml1__AttributeDesignatorType
#define soap_POST_send_saml1__AttributeDesignatorType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AttributeDesignatorType(soap, data), 0) || soap_put_saml1__AttributeDesignatorType(soap, data, "saml1:AttributeDesignatorType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml1__AttributeDesignatorType * SOAP_FMAC4 soap_get_saml1__AttributeDesignatorType(struct soap*, struct saml1__AttributeDesignatorType *, const char*, const char*);

#ifndef soap_read_saml1__AttributeDesignatorType
#define soap_read_saml1__AttributeDesignatorType(soap, data) ( ((data) ? (soap_default_saml1__AttributeDesignatorType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml1__AttributeDesignatorType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml1__AttributeDesignatorType
#define soap_GET_saml1__AttributeDesignatorType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml1__AttributeDesignatorType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml1__AttributeDesignatorType
#define soap_POST_recv_saml1__AttributeDesignatorType(soap, data) ( soap_read_saml1__AttributeDesignatorType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml1__AttributeStatementType_DEFINED
#define SOAP_TYPE_saml1__AttributeStatementType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml1__AttributeStatementType(struct soap*, struct saml1__AttributeStatementType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__AttributeStatementType(struct soap*, const struct saml1__AttributeStatementType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml1__AttributeStatementType(struct soap*, const char*, int, const struct saml1__AttributeStatementType *, const char*);
SOAP_FMAC3 struct saml1__AttributeStatementType * SOAP_FMAC4 soap_in_saml1__AttributeStatementType(struct soap*, const char*, struct saml1__AttributeStatementType *, const char*);

SOAP_FMAC3 struct saml1__AttributeStatementType * SOAP_FMAC4 soap_new_saml1__AttributeStatementType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml1__AttributeStatementType(struct soap*, const struct saml1__AttributeStatementType *, const char*, const char*);

#ifndef soap_write_saml1__AttributeStatementType
#define soap_write_saml1__AttributeStatementType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml1__AttributeStatementType(soap, data), 0) || soap_put_saml1__AttributeStatementType(soap, data, "saml1:AttributeStatementType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml1__AttributeStatementType
#define soap_PUT_saml1__AttributeStatementType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AttributeStatementType(soap, data), 0) || soap_put_saml1__AttributeStatementType(soap, data, "saml1:AttributeStatementType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml1__AttributeStatementType
#define soap_PATCH_saml1__AttributeStatementType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AttributeStatementType(soap, data), 0) || soap_put_saml1__AttributeStatementType(soap, data, "saml1:AttributeStatementType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml1__AttributeStatementType
#define soap_POST_send_saml1__AttributeStatementType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AttributeStatementType(soap, data), 0) || soap_put_saml1__AttributeStatementType(soap, data, "saml1:AttributeStatementType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml1__AttributeStatementType * SOAP_FMAC4 soap_get_saml1__AttributeStatementType(struct soap*, struct saml1__AttributeStatementType *, const char*, const char*);

#ifndef soap_read_saml1__AttributeStatementType
#define soap_read_saml1__AttributeStatementType(soap, data) ( ((data) ? (soap_default_saml1__AttributeStatementType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml1__AttributeStatementType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml1__AttributeStatementType
#define soap_GET_saml1__AttributeStatementType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml1__AttributeStatementType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml1__AttributeStatementType
#define soap_POST_recv_saml1__AttributeStatementType(soap, data) ( soap_read_saml1__AttributeStatementType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml1__EvidenceType_DEFINED
#define SOAP_TYPE_saml1__EvidenceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml1__EvidenceType(struct soap*, struct saml1__EvidenceType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__EvidenceType(struct soap*, const struct saml1__EvidenceType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml1__EvidenceType(struct soap*, const char*, int, const struct saml1__EvidenceType *, const char*);
SOAP_FMAC3 struct saml1__EvidenceType * SOAP_FMAC4 soap_in_saml1__EvidenceType(struct soap*, const char*, struct saml1__EvidenceType *, const char*);

SOAP_FMAC3 struct saml1__EvidenceType * SOAP_FMAC4 soap_new_saml1__EvidenceType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml1__EvidenceType(struct soap*, const struct saml1__EvidenceType *, const char*, const char*);

#ifndef soap_write_saml1__EvidenceType
#define soap_write_saml1__EvidenceType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml1__EvidenceType(soap, data), 0) || soap_put_saml1__EvidenceType(soap, data, "saml1:EvidenceType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml1__EvidenceType
#define soap_PUT_saml1__EvidenceType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__EvidenceType(soap, data), 0) || soap_put_saml1__EvidenceType(soap, data, "saml1:EvidenceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml1__EvidenceType
#define soap_PATCH_saml1__EvidenceType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__EvidenceType(soap, data), 0) || soap_put_saml1__EvidenceType(soap, data, "saml1:EvidenceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml1__EvidenceType
#define soap_POST_send_saml1__EvidenceType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__EvidenceType(soap, data), 0) || soap_put_saml1__EvidenceType(soap, data, "saml1:EvidenceType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml1__EvidenceType * SOAP_FMAC4 soap_get_saml1__EvidenceType(struct soap*, struct saml1__EvidenceType *, const char*, const char*);

#ifndef soap_read_saml1__EvidenceType
#define soap_read_saml1__EvidenceType(soap, data) ( ((data) ? (soap_default_saml1__EvidenceType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml1__EvidenceType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml1__EvidenceType
#define soap_GET_saml1__EvidenceType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml1__EvidenceType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml1__EvidenceType
#define soap_POST_recv_saml1__EvidenceType(soap, data) ( soap_read_saml1__EvidenceType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml1__ActionType_DEFINED
#define SOAP_TYPE_saml1__ActionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml1__ActionType(struct soap*, struct saml1__ActionType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__ActionType(struct soap*, const struct saml1__ActionType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml1__ActionType(struct soap*, const char*, int, const struct saml1__ActionType *, const char*);
SOAP_FMAC3 struct saml1__ActionType * SOAP_FMAC4 soap_in_saml1__ActionType(struct soap*, const char*, struct saml1__ActionType *, const char*);

SOAP_FMAC3 struct saml1__ActionType * SOAP_FMAC4 soap_new_saml1__ActionType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml1__ActionType(struct soap*, const struct saml1__ActionType *, const char*, const char*);

#ifndef soap_write_saml1__ActionType
#define soap_write_saml1__ActionType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml1__ActionType(soap, data), 0) || soap_put_saml1__ActionType(soap, data, "saml1:ActionType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml1__ActionType
#define soap_PUT_saml1__ActionType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__ActionType(soap, data), 0) || soap_put_saml1__ActionType(soap, data, "saml1:ActionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml1__ActionType
#define soap_PATCH_saml1__ActionType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__ActionType(soap, data), 0) || soap_put_saml1__ActionType(soap, data, "saml1:ActionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml1__ActionType
#define soap_POST_send_saml1__ActionType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__ActionType(soap, data), 0) || soap_put_saml1__ActionType(soap, data, "saml1:ActionType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml1__ActionType * SOAP_FMAC4 soap_get_saml1__ActionType(struct soap*, struct saml1__ActionType *, const char*, const char*);

#ifndef soap_read_saml1__ActionType
#define soap_read_saml1__ActionType(soap, data) ( ((data) ? (soap_default_saml1__ActionType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml1__ActionType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml1__ActionType
#define soap_GET_saml1__ActionType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml1__ActionType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml1__ActionType
#define soap_POST_recv_saml1__ActionType(soap, data) ( soap_read_saml1__ActionType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml1__AuthorizationDecisionStatementType_DEFINED
#define SOAP_TYPE_saml1__AuthorizationDecisionStatementType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml1__AuthorizationDecisionStatementType(struct soap*, struct saml1__AuthorizationDecisionStatementType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__AuthorizationDecisionStatementType(struct soap*, const struct saml1__AuthorizationDecisionStatementType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml1__AuthorizationDecisionStatementType(struct soap*, const char*, int, const struct saml1__AuthorizationDecisionStatementType *, const char*);
SOAP_FMAC3 struct saml1__AuthorizationDecisionStatementType * SOAP_FMAC4 soap_in_saml1__AuthorizationDecisionStatementType(struct soap*, const char*, struct saml1__AuthorizationDecisionStatementType *, const char*);

SOAP_FMAC3 struct saml1__AuthorizationDecisionStatementType * SOAP_FMAC4 soap_new_saml1__AuthorizationDecisionStatementType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml1__AuthorizationDecisionStatementType(struct soap*, const struct saml1__AuthorizationDecisionStatementType *, const char*, const char*);

#ifndef soap_write_saml1__AuthorizationDecisionStatementType
#define soap_write_saml1__AuthorizationDecisionStatementType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml1__AuthorizationDecisionStatementType(soap, data), 0) || soap_put_saml1__AuthorizationDecisionStatementType(soap, data, "saml1:AuthorizationDecisionStatementType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml1__AuthorizationDecisionStatementType
#define soap_PUT_saml1__AuthorizationDecisionStatementType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AuthorizationDecisionStatementType(soap, data), 0) || soap_put_saml1__AuthorizationDecisionStatementType(soap, data, "saml1:AuthorizationDecisionStatementType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml1__AuthorizationDecisionStatementType
#define soap_PATCH_saml1__AuthorizationDecisionStatementType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AuthorizationDecisionStatementType(soap, data), 0) || soap_put_saml1__AuthorizationDecisionStatementType(soap, data, "saml1:AuthorizationDecisionStatementType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml1__AuthorizationDecisionStatementType
#define soap_POST_send_saml1__AuthorizationDecisionStatementType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AuthorizationDecisionStatementType(soap, data), 0) || soap_put_saml1__AuthorizationDecisionStatementType(soap, data, "saml1:AuthorizationDecisionStatementType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml1__AuthorizationDecisionStatementType * SOAP_FMAC4 soap_get_saml1__AuthorizationDecisionStatementType(struct soap*, struct saml1__AuthorizationDecisionStatementType *, const char*, const char*);

#ifndef soap_read_saml1__AuthorizationDecisionStatementType
#define soap_read_saml1__AuthorizationDecisionStatementType(soap, data) ( ((data) ? (soap_default_saml1__AuthorizationDecisionStatementType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml1__AuthorizationDecisionStatementType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml1__AuthorizationDecisionStatementType
#define soap_GET_saml1__AuthorizationDecisionStatementType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml1__AuthorizationDecisionStatementType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml1__AuthorizationDecisionStatementType
#define soap_POST_recv_saml1__AuthorizationDecisionStatementType(soap, data) ( soap_read_saml1__AuthorizationDecisionStatementType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml1__AuthorityBindingType_DEFINED
#define SOAP_TYPE_saml1__AuthorityBindingType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml1__AuthorityBindingType(struct soap*, struct saml1__AuthorityBindingType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__AuthorityBindingType(struct soap*, const struct saml1__AuthorityBindingType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml1__AuthorityBindingType(struct soap*, const char*, int, const struct saml1__AuthorityBindingType *, const char*);
SOAP_FMAC3 struct saml1__AuthorityBindingType * SOAP_FMAC4 soap_in_saml1__AuthorityBindingType(struct soap*, const char*, struct saml1__AuthorityBindingType *, const char*);

SOAP_FMAC3 struct saml1__AuthorityBindingType * SOAP_FMAC4 soap_new_saml1__AuthorityBindingType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml1__AuthorityBindingType(struct soap*, const struct saml1__AuthorityBindingType *, const char*, const char*);

#ifndef soap_write_saml1__AuthorityBindingType
#define soap_write_saml1__AuthorityBindingType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml1__AuthorityBindingType(soap, data), 0) || soap_put_saml1__AuthorityBindingType(soap, data, "saml1:AuthorityBindingType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml1__AuthorityBindingType
#define soap_PUT_saml1__AuthorityBindingType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AuthorityBindingType(soap, data), 0) || soap_put_saml1__AuthorityBindingType(soap, data, "saml1:AuthorityBindingType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml1__AuthorityBindingType
#define soap_PATCH_saml1__AuthorityBindingType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AuthorityBindingType(soap, data), 0) || soap_put_saml1__AuthorityBindingType(soap, data, "saml1:AuthorityBindingType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml1__AuthorityBindingType
#define soap_POST_send_saml1__AuthorityBindingType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AuthorityBindingType(soap, data), 0) || soap_put_saml1__AuthorityBindingType(soap, data, "saml1:AuthorityBindingType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml1__AuthorityBindingType * SOAP_FMAC4 soap_get_saml1__AuthorityBindingType(struct soap*, struct saml1__AuthorityBindingType *, const char*, const char*);

#ifndef soap_read_saml1__AuthorityBindingType
#define soap_read_saml1__AuthorityBindingType(soap, data) ( ((data) ? (soap_default_saml1__AuthorityBindingType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml1__AuthorityBindingType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml1__AuthorityBindingType
#define soap_GET_saml1__AuthorityBindingType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml1__AuthorityBindingType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml1__AuthorityBindingType
#define soap_POST_recv_saml1__AuthorityBindingType(soap, data) ( soap_read_saml1__AuthorityBindingType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml1__SubjectLocalityType_DEFINED
#define SOAP_TYPE_saml1__SubjectLocalityType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml1__SubjectLocalityType(struct soap*, struct saml1__SubjectLocalityType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__SubjectLocalityType(struct soap*, const struct saml1__SubjectLocalityType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml1__SubjectLocalityType(struct soap*, const char*, int, const struct saml1__SubjectLocalityType *, const char*);
SOAP_FMAC3 struct saml1__SubjectLocalityType * SOAP_FMAC4 soap_in_saml1__SubjectLocalityType(struct soap*, const char*, struct saml1__SubjectLocalityType *, const char*);

SOAP_FMAC3 struct saml1__SubjectLocalityType * SOAP_FMAC4 soap_new_saml1__SubjectLocalityType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml1__SubjectLocalityType(struct soap*, const struct saml1__SubjectLocalityType *, const char*, const char*);

#ifndef soap_write_saml1__SubjectLocalityType
#define soap_write_saml1__SubjectLocalityType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml1__SubjectLocalityType(soap, data), 0) || soap_put_saml1__SubjectLocalityType(soap, data, "saml1:SubjectLocalityType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml1__SubjectLocalityType
#define soap_PUT_saml1__SubjectLocalityType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__SubjectLocalityType(soap, data), 0) || soap_put_saml1__SubjectLocalityType(soap, data, "saml1:SubjectLocalityType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml1__SubjectLocalityType
#define soap_PATCH_saml1__SubjectLocalityType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__SubjectLocalityType(soap, data), 0) || soap_put_saml1__SubjectLocalityType(soap, data, "saml1:SubjectLocalityType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml1__SubjectLocalityType
#define soap_POST_send_saml1__SubjectLocalityType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__SubjectLocalityType(soap, data), 0) || soap_put_saml1__SubjectLocalityType(soap, data, "saml1:SubjectLocalityType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml1__SubjectLocalityType * SOAP_FMAC4 soap_get_saml1__SubjectLocalityType(struct soap*, struct saml1__SubjectLocalityType *, const char*, const char*);

#ifndef soap_read_saml1__SubjectLocalityType
#define soap_read_saml1__SubjectLocalityType(soap, data) ( ((data) ? (soap_default_saml1__SubjectLocalityType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml1__SubjectLocalityType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml1__SubjectLocalityType
#define soap_GET_saml1__SubjectLocalityType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml1__SubjectLocalityType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml1__SubjectLocalityType
#define soap_POST_recv_saml1__SubjectLocalityType(soap, data) ( soap_read_saml1__SubjectLocalityType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml1__AuthenticationStatementType_DEFINED
#define SOAP_TYPE_saml1__AuthenticationStatementType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml1__AuthenticationStatementType(struct soap*, struct saml1__AuthenticationStatementType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__AuthenticationStatementType(struct soap*, const struct saml1__AuthenticationStatementType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml1__AuthenticationStatementType(struct soap*, const char*, int, const struct saml1__AuthenticationStatementType *, const char*);
SOAP_FMAC3 struct saml1__AuthenticationStatementType * SOAP_FMAC4 soap_in_saml1__AuthenticationStatementType(struct soap*, const char*, struct saml1__AuthenticationStatementType *, const char*);

SOAP_FMAC3 struct saml1__AuthenticationStatementType * SOAP_FMAC4 soap_new_saml1__AuthenticationStatementType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml1__AuthenticationStatementType(struct soap*, const struct saml1__AuthenticationStatementType *, const char*, const char*);

#ifndef soap_write_saml1__AuthenticationStatementType
#define soap_write_saml1__AuthenticationStatementType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml1__AuthenticationStatementType(soap, data), 0) || soap_put_saml1__AuthenticationStatementType(soap, data, "saml1:AuthenticationStatementType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml1__AuthenticationStatementType
#define soap_PUT_saml1__AuthenticationStatementType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AuthenticationStatementType(soap, data), 0) || soap_put_saml1__AuthenticationStatementType(soap, data, "saml1:AuthenticationStatementType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml1__AuthenticationStatementType
#define soap_PATCH_saml1__AuthenticationStatementType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AuthenticationStatementType(soap, data), 0) || soap_put_saml1__AuthenticationStatementType(soap, data, "saml1:AuthenticationStatementType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml1__AuthenticationStatementType
#define soap_POST_send_saml1__AuthenticationStatementType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AuthenticationStatementType(soap, data), 0) || soap_put_saml1__AuthenticationStatementType(soap, data, "saml1:AuthenticationStatementType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml1__AuthenticationStatementType * SOAP_FMAC4 soap_get_saml1__AuthenticationStatementType(struct soap*, struct saml1__AuthenticationStatementType *, const char*, const char*);

#ifndef soap_read_saml1__AuthenticationStatementType
#define soap_read_saml1__AuthenticationStatementType(soap, data) ( ((data) ? (soap_default_saml1__AuthenticationStatementType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml1__AuthenticationStatementType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml1__AuthenticationStatementType
#define soap_GET_saml1__AuthenticationStatementType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml1__AuthenticationStatementType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml1__AuthenticationStatementType
#define soap_POST_recv_saml1__AuthenticationStatementType(soap, data) ( soap_read_saml1__AuthenticationStatementType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml1__SubjectConfirmationType_DEFINED
#define SOAP_TYPE_saml1__SubjectConfirmationType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml1__SubjectConfirmationType(struct soap*, struct saml1__SubjectConfirmationType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__SubjectConfirmationType(struct soap*, const struct saml1__SubjectConfirmationType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml1__SubjectConfirmationType(struct soap*, const char*, int, const struct saml1__SubjectConfirmationType *, const char*);
SOAP_FMAC3 struct saml1__SubjectConfirmationType * SOAP_FMAC4 soap_in_saml1__SubjectConfirmationType(struct soap*, const char*, struct saml1__SubjectConfirmationType *, const char*);

SOAP_FMAC3 struct saml1__SubjectConfirmationType * SOAP_FMAC4 soap_new_saml1__SubjectConfirmationType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml1__SubjectConfirmationType(struct soap*, const struct saml1__SubjectConfirmationType *, const char*, const char*);

#ifndef soap_write_saml1__SubjectConfirmationType
#define soap_write_saml1__SubjectConfirmationType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml1__SubjectConfirmationType(soap, data), 0) || soap_put_saml1__SubjectConfirmationType(soap, data, "saml1:SubjectConfirmationType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml1__SubjectConfirmationType
#define soap_PUT_saml1__SubjectConfirmationType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__SubjectConfirmationType(soap, data), 0) || soap_put_saml1__SubjectConfirmationType(soap, data, "saml1:SubjectConfirmationType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml1__SubjectConfirmationType
#define soap_PATCH_saml1__SubjectConfirmationType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__SubjectConfirmationType(soap, data), 0) || soap_put_saml1__SubjectConfirmationType(soap, data, "saml1:SubjectConfirmationType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml1__SubjectConfirmationType
#define soap_POST_send_saml1__SubjectConfirmationType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__SubjectConfirmationType(soap, data), 0) || soap_put_saml1__SubjectConfirmationType(soap, data, "saml1:SubjectConfirmationType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml1__SubjectConfirmationType * SOAP_FMAC4 soap_get_saml1__SubjectConfirmationType(struct soap*, struct saml1__SubjectConfirmationType *, const char*, const char*);

#ifndef soap_read_saml1__SubjectConfirmationType
#define soap_read_saml1__SubjectConfirmationType(soap, data) ( ((data) ? (soap_default_saml1__SubjectConfirmationType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml1__SubjectConfirmationType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml1__SubjectConfirmationType
#define soap_GET_saml1__SubjectConfirmationType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml1__SubjectConfirmationType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml1__SubjectConfirmationType
#define soap_POST_recv_saml1__SubjectConfirmationType(soap, data) ( soap_read_saml1__SubjectConfirmationType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml1__NameIdentifierType_DEFINED
#define SOAP_TYPE_saml1__NameIdentifierType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml1__NameIdentifierType(struct soap*, struct saml1__NameIdentifierType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__NameIdentifierType(struct soap*, const struct saml1__NameIdentifierType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml1__NameIdentifierType(struct soap*, const char*, int, const struct saml1__NameIdentifierType *, const char*);
SOAP_FMAC3 struct saml1__NameIdentifierType * SOAP_FMAC4 soap_in_saml1__NameIdentifierType(struct soap*, const char*, struct saml1__NameIdentifierType *, const char*);

SOAP_FMAC3 struct saml1__NameIdentifierType * SOAP_FMAC4 soap_new_saml1__NameIdentifierType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml1__NameIdentifierType(struct soap*, const struct saml1__NameIdentifierType *, const char*, const char*);

#ifndef soap_write_saml1__NameIdentifierType
#define soap_write_saml1__NameIdentifierType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml1__NameIdentifierType(soap, data), 0) || soap_put_saml1__NameIdentifierType(soap, data, "saml1:NameIdentifierType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml1__NameIdentifierType
#define soap_PUT_saml1__NameIdentifierType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__NameIdentifierType(soap, data), 0) || soap_put_saml1__NameIdentifierType(soap, data, "saml1:NameIdentifierType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml1__NameIdentifierType
#define soap_PATCH_saml1__NameIdentifierType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__NameIdentifierType(soap, data), 0) || soap_put_saml1__NameIdentifierType(soap, data, "saml1:NameIdentifierType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml1__NameIdentifierType
#define soap_POST_send_saml1__NameIdentifierType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__NameIdentifierType(soap, data), 0) || soap_put_saml1__NameIdentifierType(soap, data, "saml1:NameIdentifierType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml1__NameIdentifierType * SOAP_FMAC4 soap_get_saml1__NameIdentifierType(struct soap*, struct saml1__NameIdentifierType *, const char*, const char*);

#ifndef soap_read_saml1__NameIdentifierType
#define soap_read_saml1__NameIdentifierType(soap, data) ( ((data) ? (soap_default_saml1__NameIdentifierType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml1__NameIdentifierType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml1__NameIdentifierType
#define soap_GET_saml1__NameIdentifierType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml1__NameIdentifierType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml1__NameIdentifierType
#define soap_POST_recv_saml1__NameIdentifierType(soap, data) ( soap_read_saml1__NameIdentifierType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml1__SubjectType_DEFINED
#define SOAP_TYPE_saml1__SubjectType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml1__SubjectType(struct soap*, struct saml1__SubjectType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__SubjectType(struct soap*, const struct saml1__SubjectType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml1__SubjectType(struct soap*, const char*, int, const struct saml1__SubjectType *, const char*);
SOAP_FMAC3 struct saml1__SubjectType * SOAP_FMAC4 soap_in_saml1__SubjectType(struct soap*, const char*, struct saml1__SubjectType *, const char*);

SOAP_FMAC3 struct saml1__SubjectType * SOAP_FMAC4 soap_new_saml1__SubjectType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml1__SubjectType(struct soap*, const struct saml1__SubjectType *, const char*, const char*);

#ifndef soap_write_saml1__SubjectType
#define soap_write_saml1__SubjectType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml1__SubjectType(soap, data), 0) || soap_put_saml1__SubjectType(soap, data, "saml1:SubjectType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml1__SubjectType
#define soap_PUT_saml1__SubjectType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__SubjectType(soap, data), 0) || soap_put_saml1__SubjectType(soap, data, "saml1:SubjectType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml1__SubjectType
#define soap_PATCH_saml1__SubjectType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__SubjectType(soap, data), 0) || soap_put_saml1__SubjectType(soap, data, "saml1:SubjectType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml1__SubjectType
#define soap_POST_send_saml1__SubjectType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__SubjectType(soap, data), 0) || soap_put_saml1__SubjectType(soap, data, "saml1:SubjectType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml1__SubjectType * SOAP_FMAC4 soap_get_saml1__SubjectType(struct soap*, struct saml1__SubjectType *, const char*, const char*);

#ifndef soap_read_saml1__SubjectType
#define soap_read_saml1__SubjectType(soap, data) ( ((data) ? (soap_default_saml1__SubjectType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml1__SubjectType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml1__SubjectType
#define soap_GET_saml1__SubjectType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml1__SubjectType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml1__SubjectType
#define soap_POST_recv_saml1__SubjectType(soap, data) ( soap_read_saml1__SubjectType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml1__SubjectStatementAbstractType_DEFINED
#define SOAP_TYPE_saml1__SubjectStatementAbstractType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml1__SubjectStatementAbstractType(struct soap*, struct saml1__SubjectStatementAbstractType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__SubjectStatementAbstractType(struct soap*, const struct saml1__SubjectStatementAbstractType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml1__SubjectStatementAbstractType(struct soap*, const char*, int, const struct saml1__SubjectStatementAbstractType *, const char*);
SOAP_FMAC3 struct saml1__SubjectStatementAbstractType * SOAP_FMAC4 soap_in_saml1__SubjectStatementAbstractType(struct soap*, const char*, struct saml1__SubjectStatementAbstractType *, const char*);

SOAP_FMAC3 struct saml1__SubjectStatementAbstractType * SOAP_FMAC4 soap_new_saml1__SubjectStatementAbstractType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml1__SubjectStatementAbstractType(struct soap*, const struct saml1__SubjectStatementAbstractType *, const char*, const char*);

#ifndef soap_write_saml1__SubjectStatementAbstractType
#define soap_write_saml1__SubjectStatementAbstractType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml1__SubjectStatementAbstractType(soap, data), 0) || soap_put_saml1__SubjectStatementAbstractType(soap, data, "saml1:SubjectStatementAbstractType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml1__SubjectStatementAbstractType
#define soap_PUT_saml1__SubjectStatementAbstractType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__SubjectStatementAbstractType(soap, data), 0) || soap_put_saml1__SubjectStatementAbstractType(soap, data, "saml1:SubjectStatementAbstractType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml1__SubjectStatementAbstractType
#define soap_PATCH_saml1__SubjectStatementAbstractType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__SubjectStatementAbstractType(soap, data), 0) || soap_put_saml1__SubjectStatementAbstractType(soap, data, "saml1:SubjectStatementAbstractType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml1__SubjectStatementAbstractType
#define soap_POST_send_saml1__SubjectStatementAbstractType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__SubjectStatementAbstractType(soap, data), 0) || soap_put_saml1__SubjectStatementAbstractType(soap, data, "saml1:SubjectStatementAbstractType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml1__SubjectStatementAbstractType * SOAP_FMAC4 soap_get_saml1__SubjectStatementAbstractType(struct soap*, struct saml1__SubjectStatementAbstractType *, const char*, const char*);

#ifndef soap_read_saml1__SubjectStatementAbstractType
#define soap_read_saml1__SubjectStatementAbstractType(soap, data) ( ((data) ? (soap_default_saml1__SubjectStatementAbstractType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml1__SubjectStatementAbstractType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml1__SubjectStatementAbstractType
#define soap_GET_saml1__SubjectStatementAbstractType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml1__SubjectStatementAbstractType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml1__SubjectStatementAbstractType
#define soap_POST_recv_saml1__SubjectStatementAbstractType(soap, data) ( soap_read_saml1__SubjectStatementAbstractType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml1__StatementAbstractType_DEFINED
#define SOAP_TYPE_saml1__StatementAbstractType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml1__StatementAbstractType(struct soap*, struct saml1__StatementAbstractType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__StatementAbstractType(struct soap*, const struct saml1__StatementAbstractType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml1__StatementAbstractType(struct soap*, const char*, int, const struct saml1__StatementAbstractType *, const char*);
SOAP_FMAC3 struct saml1__StatementAbstractType * SOAP_FMAC4 soap_in_saml1__StatementAbstractType(struct soap*, const char*, struct saml1__StatementAbstractType *, const char*);

SOAP_FMAC3 struct saml1__StatementAbstractType * SOAP_FMAC4 soap_new_saml1__StatementAbstractType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml1__StatementAbstractType(struct soap*, const struct saml1__StatementAbstractType *, const char*, const char*);

#ifndef soap_write_saml1__StatementAbstractType
#define soap_write_saml1__StatementAbstractType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml1__StatementAbstractType(soap, data), 0) || soap_put_saml1__StatementAbstractType(soap, data, "saml1:StatementAbstractType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml1__StatementAbstractType
#define soap_PUT_saml1__StatementAbstractType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__StatementAbstractType(soap, data), 0) || soap_put_saml1__StatementAbstractType(soap, data, "saml1:StatementAbstractType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml1__StatementAbstractType
#define soap_PATCH_saml1__StatementAbstractType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__StatementAbstractType(soap, data), 0) || soap_put_saml1__StatementAbstractType(soap, data, "saml1:StatementAbstractType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml1__StatementAbstractType
#define soap_POST_send_saml1__StatementAbstractType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__StatementAbstractType(soap, data), 0) || soap_put_saml1__StatementAbstractType(soap, data, "saml1:StatementAbstractType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml1__StatementAbstractType * SOAP_FMAC4 soap_get_saml1__StatementAbstractType(struct soap*, struct saml1__StatementAbstractType *, const char*, const char*);

#ifndef soap_read_saml1__StatementAbstractType
#define soap_read_saml1__StatementAbstractType(soap, data) ( ((data) ? (soap_default_saml1__StatementAbstractType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml1__StatementAbstractType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml1__StatementAbstractType
#define soap_GET_saml1__StatementAbstractType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml1__StatementAbstractType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml1__StatementAbstractType
#define soap_POST_recv_saml1__StatementAbstractType(soap, data) ( soap_read_saml1__StatementAbstractType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml1__AdviceType_DEFINED
#define SOAP_TYPE_saml1__AdviceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml1__AdviceType(struct soap*, struct saml1__AdviceType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__AdviceType(struct soap*, const struct saml1__AdviceType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml1__AdviceType(struct soap*, const char*, int, const struct saml1__AdviceType *, const char*);
SOAP_FMAC3 struct saml1__AdviceType * SOAP_FMAC4 soap_in_saml1__AdviceType(struct soap*, const char*, struct saml1__AdviceType *, const char*);

SOAP_FMAC3 struct saml1__AdviceType * SOAP_FMAC4 soap_new_saml1__AdviceType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml1__AdviceType(struct soap*, const struct saml1__AdviceType *, const char*, const char*);

#ifndef soap_write_saml1__AdviceType
#define soap_write_saml1__AdviceType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml1__AdviceType(soap, data), 0) || soap_put_saml1__AdviceType(soap, data, "saml1:AdviceType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml1__AdviceType
#define soap_PUT_saml1__AdviceType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AdviceType(soap, data), 0) || soap_put_saml1__AdviceType(soap, data, "saml1:AdviceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml1__AdviceType
#define soap_PATCH_saml1__AdviceType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AdviceType(soap, data), 0) || soap_put_saml1__AdviceType(soap, data, "saml1:AdviceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml1__AdviceType
#define soap_POST_send_saml1__AdviceType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AdviceType(soap, data), 0) || soap_put_saml1__AdviceType(soap, data, "saml1:AdviceType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml1__AdviceType * SOAP_FMAC4 soap_get_saml1__AdviceType(struct soap*, struct saml1__AdviceType *, const char*, const char*);

#ifndef soap_read_saml1__AdviceType
#define soap_read_saml1__AdviceType(soap, data) ( ((data) ? (soap_default_saml1__AdviceType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml1__AdviceType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml1__AdviceType
#define soap_GET_saml1__AdviceType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml1__AdviceType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml1__AdviceType
#define soap_POST_recv_saml1__AdviceType(soap, data) ( soap_read_saml1__AdviceType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml1__DoNotCacheConditionType_DEFINED
#define SOAP_TYPE_saml1__DoNotCacheConditionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml1__DoNotCacheConditionType(struct soap*, struct saml1__DoNotCacheConditionType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__DoNotCacheConditionType(struct soap*, const struct saml1__DoNotCacheConditionType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml1__DoNotCacheConditionType(struct soap*, const char*, int, const struct saml1__DoNotCacheConditionType *, const char*);
SOAP_FMAC3 struct saml1__DoNotCacheConditionType * SOAP_FMAC4 soap_in_saml1__DoNotCacheConditionType(struct soap*, const char*, struct saml1__DoNotCacheConditionType *, const char*);

SOAP_FMAC3 struct saml1__DoNotCacheConditionType * SOAP_FMAC4 soap_new_saml1__DoNotCacheConditionType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml1__DoNotCacheConditionType(struct soap*, const struct saml1__DoNotCacheConditionType *, const char*, const char*);

#ifndef soap_write_saml1__DoNotCacheConditionType
#define soap_write_saml1__DoNotCacheConditionType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml1__DoNotCacheConditionType(soap, data), 0) || soap_put_saml1__DoNotCacheConditionType(soap, data, "saml1:DoNotCacheConditionType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml1__DoNotCacheConditionType
#define soap_PUT_saml1__DoNotCacheConditionType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__DoNotCacheConditionType(soap, data), 0) || soap_put_saml1__DoNotCacheConditionType(soap, data, "saml1:DoNotCacheConditionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml1__DoNotCacheConditionType
#define soap_PATCH_saml1__DoNotCacheConditionType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__DoNotCacheConditionType(soap, data), 0) || soap_put_saml1__DoNotCacheConditionType(soap, data, "saml1:DoNotCacheConditionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml1__DoNotCacheConditionType
#define soap_POST_send_saml1__DoNotCacheConditionType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__DoNotCacheConditionType(soap, data), 0) || soap_put_saml1__DoNotCacheConditionType(soap, data, "saml1:DoNotCacheConditionType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml1__DoNotCacheConditionType * SOAP_FMAC4 soap_get_saml1__DoNotCacheConditionType(struct soap*, struct saml1__DoNotCacheConditionType *, const char*, const char*);

#ifndef soap_read_saml1__DoNotCacheConditionType
#define soap_read_saml1__DoNotCacheConditionType(soap, data) ( ((data) ? (soap_default_saml1__DoNotCacheConditionType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml1__DoNotCacheConditionType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml1__DoNotCacheConditionType
#define soap_GET_saml1__DoNotCacheConditionType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml1__DoNotCacheConditionType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml1__DoNotCacheConditionType
#define soap_POST_recv_saml1__DoNotCacheConditionType(soap, data) ( soap_read_saml1__DoNotCacheConditionType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml1__AudienceRestrictionConditionType_DEFINED
#define SOAP_TYPE_saml1__AudienceRestrictionConditionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml1__AudienceRestrictionConditionType(struct soap*, struct saml1__AudienceRestrictionConditionType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__AudienceRestrictionConditionType(struct soap*, const struct saml1__AudienceRestrictionConditionType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml1__AudienceRestrictionConditionType(struct soap*, const char*, int, const struct saml1__AudienceRestrictionConditionType *, const char*);
SOAP_FMAC3 struct saml1__AudienceRestrictionConditionType * SOAP_FMAC4 soap_in_saml1__AudienceRestrictionConditionType(struct soap*, const char*, struct saml1__AudienceRestrictionConditionType *, const char*);

SOAP_FMAC3 struct saml1__AudienceRestrictionConditionType * SOAP_FMAC4 soap_new_saml1__AudienceRestrictionConditionType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml1__AudienceRestrictionConditionType(struct soap*, const struct saml1__AudienceRestrictionConditionType *, const char*, const char*);

#ifndef soap_write_saml1__AudienceRestrictionConditionType
#define soap_write_saml1__AudienceRestrictionConditionType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml1__AudienceRestrictionConditionType(soap, data), 0) || soap_put_saml1__AudienceRestrictionConditionType(soap, data, "saml1:AudienceRestrictionConditionType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml1__AudienceRestrictionConditionType
#define soap_PUT_saml1__AudienceRestrictionConditionType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AudienceRestrictionConditionType(soap, data), 0) || soap_put_saml1__AudienceRestrictionConditionType(soap, data, "saml1:AudienceRestrictionConditionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml1__AudienceRestrictionConditionType
#define soap_PATCH_saml1__AudienceRestrictionConditionType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AudienceRestrictionConditionType(soap, data), 0) || soap_put_saml1__AudienceRestrictionConditionType(soap, data, "saml1:AudienceRestrictionConditionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml1__AudienceRestrictionConditionType
#define soap_POST_send_saml1__AudienceRestrictionConditionType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AudienceRestrictionConditionType(soap, data), 0) || soap_put_saml1__AudienceRestrictionConditionType(soap, data, "saml1:AudienceRestrictionConditionType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml1__AudienceRestrictionConditionType * SOAP_FMAC4 soap_get_saml1__AudienceRestrictionConditionType(struct soap*, struct saml1__AudienceRestrictionConditionType *, const char*, const char*);

#ifndef soap_read_saml1__AudienceRestrictionConditionType
#define soap_read_saml1__AudienceRestrictionConditionType(soap, data) ( ((data) ? (soap_default_saml1__AudienceRestrictionConditionType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml1__AudienceRestrictionConditionType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml1__AudienceRestrictionConditionType
#define soap_GET_saml1__AudienceRestrictionConditionType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml1__AudienceRestrictionConditionType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml1__AudienceRestrictionConditionType
#define soap_POST_recv_saml1__AudienceRestrictionConditionType(soap, data) ( soap_read_saml1__AudienceRestrictionConditionType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml1__ConditionAbstractType_DEFINED
#define SOAP_TYPE_saml1__ConditionAbstractType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml1__ConditionAbstractType(struct soap*, struct saml1__ConditionAbstractType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__ConditionAbstractType(struct soap*, const struct saml1__ConditionAbstractType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml1__ConditionAbstractType(struct soap*, const char*, int, const struct saml1__ConditionAbstractType *, const char*);
SOAP_FMAC3 struct saml1__ConditionAbstractType * SOAP_FMAC4 soap_in_saml1__ConditionAbstractType(struct soap*, const char*, struct saml1__ConditionAbstractType *, const char*);

SOAP_FMAC3 struct saml1__ConditionAbstractType * SOAP_FMAC4 soap_new_saml1__ConditionAbstractType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml1__ConditionAbstractType(struct soap*, const struct saml1__ConditionAbstractType *, const char*, const char*);

#ifndef soap_write_saml1__ConditionAbstractType
#define soap_write_saml1__ConditionAbstractType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml1__ConditionAbstractType(soap, data), 0) || soap_put_saml1__ConditionAbstractType(soap, data, "saml1:ConditionAbstractType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml1__ConditionAbstractType
#define soap_PUT_saml1__ConditionAbstractType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__ConditionAbstractType(soap, data), 0) || soap_put_saml1__ConditionAbstractType(soap, data, "saml1:ConditionAbstractType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml1__ConditionAbstractType
#define soap_PATCH_saml1__ConditionAbstractType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__ConditionAbstractType(soap, data), 0) || soap_put_saml1__ConditionAbstractType(soap, data, "saml1:ConditionAbstractType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml1__ConditionAbstractType
#define soap_POST_send_saml1__ConditionAbstractType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__ConditionAbstractType(soap, data), 0) || soap_put_saml1__ConditionAbstractType(soap, data, "saml1:ConditionAbstractType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml1__ConditionAbstractType * SOAP_FMAC4 soap_get_saml1__ConditionAbstractType(struct soap*, struct saml1__ConditionAbstractType *, const char*, const char*);

#ifndef soap_read_saml1__ConditionAbstractType
#define soap_read_saml1__ConditionAbstractType(soap, data) ( ((data) ? (soap_default_saml1__ConditionAbstractType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml1__ConditionAbstractType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml1__ConditionAbstractType
#define soap_GET_saml1__ConditionAbstractType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml1__ConditionAbstractType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml1__ConditionAbstractType
#define soap_POST_recv_saml1__ConditionAbstractType(soap, data) ( soap_read_saml1__ConditionAbstractType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml1__ConditionsType_DEFINED
#define SOAP_TYPE_saml1__ConditionsType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml1__ConditionsType(struct soap*, struct saml1__ConditionsType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__ConditionsType(struct soap*, const struct saml1__ConditionsType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml1__ConditionsType(struct soap*, const char*, int, const struct saml1__ConditionsType *, const char*);
SOAP_FMAC3 struct saml1__ConditionsType * SOAP_FMAC4 soap_in_saml1__ConditionsType(struct soap*, const char*, struct saml1__ConditionsType *, const char*);

SOAP_FMAC3 struct saml1__ConditionsType * SOAP_FMAC4 soap_new_saml1__ConditionsType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml1__ConditionsType(struct soap*, const struct saml1__ConditionsType *, const char*, const char*);

#ifndef soap_write_saml1__ConditionsType
#define soap_write_saml1__ConditionsType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml1__ConditionsType(soap, data), 0) || soap_put_saml1__ConditionsType(soap, data, "saml1:ConditionsType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml1__ConditionsType
#define soap_PUT_saml1__ConditionsType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__ConditionsType(soap, data), 0) || soap_put_saml1__ConditionsType(soap, data, "saml1:ConditionsType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml1__ConditionsType
#define soap_PATCH_saml1__ConditionsType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__ConditionsType(soap, data), 0) || soap_put_saml1__ConditionsType(soap, data, "saml1:ConditionsType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml1__ConditionsType
#define soap_POST_send_saml1__ConditionsType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__ConditionsType(soap, data), 0) || soap_put_saml1__ConditionsType(soap, data, "saml1:ConditionsType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml1__ConditionsType * SOAP_FMAC4 soap_get_saml1__ConditionsType(struct soap*, struct saml1__ConditionsType *, const char*, const char*);

#ifndef soap_read_saml1__ConditionsType
#define soap_read_saml1__ConditionsType(soap, data) ( ((data) ? (soap_default_saml1__ConditionsType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml1__ConditionsType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml1__ConditionsType
#define soap_GET_saml1__ConditionsType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml1__ConditionsType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml1__ConditionsType
#define soap_POST_recv_saml1__ConditionsType(soap, data) ( soap_read_saml1__ConditionsType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_saml1__AssertionType_DEFINED
#define SOAP_TYPE_saml1__AssertionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_saml1__AssertionType(struct soap*, struct saml1__AssertionType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_saml1__AssertionType(struct soap*, const struct saml1__AssertionType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_saml1__AssertionType(struct soap*, const char*, int, const struct saml1__AssertionType *, const char*);
SOAP_FMAC3 struct saml1__AssertionType * SOAP_FMAC4 soap_in_saml1__AssertionType(struct soap*, const char*, struct saml1__AssertionType *, const char*);

SOAP_FMAC3 struct saml1__AssertionType * SOAP_FMAC4 soap_new_saml1__AssertionType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_saml1__AssertionType(struct soap*, const struct saml1__AssertionType *, const char*, const char*);

#ifndef soap_write_saml1__AssertionType
#define soap_write_saml1__AssertionType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_saml1__AssertionType(soap, data), 0) || soap_put_saml1__AssertionType(soap, data, "saml1:AssertionType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_saml1__AssertionType
#define soap_PUT_saml1__AssertionType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AssertionType(soap, data), 0) || soap_put_saml1__AssertionType(soap, data, "saml1:AssertionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_saml1__AssertionType
#define soap_PATCH_saml1__AssertionType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AssertionType(soap, data), 0) || soap_put_saml1__AssertionType(soap, data, "saml1:AssertionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_saml1__AssertionType
#define soap_POST_send_saml1__AssertionType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_saml1__AssertionType(soap, data), 0) || soap_put_saml1__AssertionType(soap, data, "saml1:AssertionType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct saml1__AssertionType * SOAP_FMAC4 soap_get_saml1__AssertionType(struct soap*, struct saml1__AssertionType *, const char*, const char*);

#ifndef soap_read_saml1__AssertionType
#define soap_read_saml1__AssertionType(soap, data) ( ((data) ? (soap_default_saml1__AssertionType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_saml1__AssertionType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_saml1__AssertionType
#define soap_GET_saml1__AssertionType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_saml1__AssertionType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_saml1__AssertionType
#define soap_POST_recv_saml1__AssertionType(soap, data) ( soap_read_saml1__AssertionType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_xsd__dateTime_DEFINED
#define SOAP_TYPE_xsd__dateTime_DEFINED
SOAP_FMAC1 void SOAP_FMAC2 soap_default_xsd__dateTime(struct soap*, struct timeval *);
SOAP_FMAC1 void SOAP_FMAC2 soap_serialize_xsd__dateTime(struct soap*, const struct timeval *);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_xsd__dateTime2s(struct soap*, struct timeval);
SOAP_FMAC1 int SOAP_FMAC2 soap_out_xsd__dateTime(struct soap*, const char*, int, const struct timeval *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2xsd__dateTime(struct soap*, const char*, struct timeval *);
SOAP_FMAC1 struct timeval * SOAP_FMAC2 soap_in_xsd__dateTime(struct soap*, const char*, struct timeval *, const char*);

SOAP_FMAC3 struct timeval * SOAP_FMAC4 soap_new_xsd__dateTime(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__dateTime(struct soap*, const struct timeval *, const char*, const char*);

#ifndef soap_write_xsd__dateTime
#define soap_write_xsd__dateTime(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xsd__dateTime(soap, data), 0) || soap_put_xsd__dateTime(soap, data, "xsd:dateTime", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_xsd__dateTime
#define soap_PUT_xsd__dateTime(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xsd__dateTime(soap, data), 0) || soap_put_xsd__dateTime(soap, data, "xsd:dateTime", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_xsd__dateTime
#define soap_PATCH_xsd__dateTime(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xsd__dateTime(soap, data), 0) || soap_put_xsd__dateTime(soap, data, "xsd:dateTime", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_xsd__dateTime
#define soap_POST_send_xsd__dateTime(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xsd__dateTime(soap, data), 0) || soap_put_xsd__dateTime(soap, data, "xsd:dateTime", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct timeval * SOAP_FMAC4 soap_get_xsd__dateTime(struct soap*, struct timeval *, const char*, const char*);

#ifndef soap_read_xsd__dateTime
#define soap_read_xsd__dateTime(soap, data) ( ((data) ? (soap_default_xsd__dateTime(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xsd__dateTime(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_xsd__dateTime
#define soap_GET_xsd__dateTime(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_xsd__dateTime(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_xsd__dateTime
#define soap_POST_recv_xsd__dateTime(soap, data) ( soap_read_xsd__dateTime(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___wsc__DerivedKeyTokenType_sequence_DEFINED
#define SOAP_TYPE___wsc__DerivedKeyTokenType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___wsc__DerivedKeyTokenType_sequence(struct soap*, struct __wsc__DerivedKeyTokenType_sequence *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___wsc__DerivedKeyTokenType_sequence(struct soap*, const struct __wsc__DerivedKeyTokenType_sequence *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___wsc__DerivedKeyTokenType_sequence(struct soap*, const char*, int, const struct __wsc__DerivedKeyTokenType_sequence *, const char*);
SOAP_FMAC3 struct __wsc__DerivedKeyTokenType_sequence * SOAP_FMAC4 soap_in___wsc__DerivedKeyTokenType_sequence(struct soap*, const char*, struct __wsc__DerivedKeyTokenType_sequence *, const char*);

SOAP_FMAC3 struct __wsc__DerivedKeyTokenType_sequence * SOAP_FMAC4 soap_new___wsc__DerivedKeyTokenType_sequence(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___wsc__DerivedKeyTokenType_sequence(struct soap*, const struct __wsc__DerivedKeyTokenType_sequence *, const char*, const char*);

#ifndef soap_write___wsc__DerivedKeyTokenType_sequence
#define soap_write___wsc__DerivedKeyTokenType_sequence(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___wsc__DerivedKeyTokenType_sequence(soap, data), 0) || soap_put___wsc__DerivedKeyTokenType_sequence(soap, data, "-wsc:DerivedKeyTokenType-sequence", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___wsc__DerivedKeyTokenType_sequence
#define soap_PUT___wsc__DerivedKeyTokenType_sequence(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___wsc__DerivedKeyTokenType_sequence(soap, data), 0) || soap_put___wsc__DerivedKeyTokenType_sequence(soap, data, "-wsc:DerivedKeyTokenType-sequence", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___wsc__DerivedKeyTokenType_sequence
#define soap_PATCH___wsc__DerivedKeyTokenType_sequence(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___wsc__DerivedKeyTokenType_sequence(soap, data), 0) || soap_put___wsc__DerivedKeyTokenType_sequence(soap, data, "-wsc:DerivedKeyTokenType-sequence", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___wsc__DerivedKeyTokenType_sequence
#define soap_POST_send___wsc__DerivedKeyTokenType_sequence(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___wsc__DerivedKeyTokenType_sequence(soap, data), 0) || soap_put___wsc__DerivedKeyTokenType_sequence(soap, data, "-wsc:DerivedKeyTokenType-sequence", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __wsc__DerivedKeyTokenType_sequence * SOAP_FMAC4 soap_get___wsc__DerivedKeyTokenType_sequence(struct soap*, struct __wsc__DerivedKeyTokenType_sequence *, const char*, const char*);

#ifndef soap_read___wsc__DerivedKeyTokenType_sequence
#define soap_read___wsc__DerivedKeyTokenType_sequence(soap, data) ( ((data) ? (soap_default___wsc__DerivedKeyTokenType_sequence(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___wsc__DerivedKeyTokenType_sequence(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___wsc__DerivedKeyTokenType_sequence
#define soap_GET___wsc__DerivedKeyTokenType_sequence(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___wsc__DerivedKeyTokenType_sequence(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___wsc__DerivedKeyTokenType_sequence
#define soap_POST_recv___wsc__DerivedKeyTokenType_sequence(soap, data) ( soap_read___wsc__DerivedKeyTokenType_sequence(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsc__PropertiesType_DEFINED
#define SOAP_TYPE_wsc__PropertiesType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsc__PropertiesType(struct soap*, struct wsc__PropertiesType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsc__PropertiesType(struct soap*, const struct wsc__PropertiesType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsc__PropertiesType(struct soap*, const char*, int, const struct wsc__PropertiesType *, const char*);
SOAP_FMAC3 struct wsc__PropertiesType * SOAP_FMAC4 soap_in_wsc__PropertiesType(struct soap*, const char*, struct wsc__PropertiesType *, const char*);

SOAP_FMAC3 struct wsc__PropertiesType * SOAP_FMAC4 soap_new_wsc__PropertiesType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsc__PropertiesType(struct soap*, const struct wsc__PropertiesType *, const char*, const char*);

#ifndef soap_write_wsc__PropertiesType
#define soap_write_wsc__PropertiesType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsc__PropertiesType(soap, data), 0) || soap_put_wsc__PropertiesType(soap, data, "wsc:PropertiesType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsc__PropertiesType
#define soap_PUT_wsc__PropertiesType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsc__PropertiesType(soap, data), 0) || soap_put_wsc__PropertiesType(soap, data, "wsc:PropertiesType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsc__PropertiesType
#define soap_PATCH_wsc__PropertiesType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsc__PropertiesType(soap, data), 0) || soap_put_wsc__PropertiesType(soap, data, "wsc:PropertiesType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsc__PropertiesType
#define soap_POST_send_wsc__PropertiesType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsc__PropertiesType(soap, data), 0) || soap_put_wsc__PropertiesType(soap, data, "wsc:PropertiesType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsc__PropertiesType * SOAP_FMAC4 soap_get_wsc__PropertiesType(struct soap*, struct wsc__PropertiesType *, const char*, const char*);

#ifndef soap_read_wsc__PropertiesType
#define soap_read_wsc__PropertiesType(soap, data) ( ((data) ? (soap_default_wsc__PropertiesType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsc__PropertiesType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsc__PropertiesType
#define soap_GET_wsc__PropertiesType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsc__PropertiesType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsc__PropertiesType
#define soap_POST_recv_wsc__PropertiesType(soap, data) ( soap_read_wsc__PropertiesType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsc__DerivedKeyTokenType_DEFINED
#define SOAP_TYPE_wsc__DerivedKeyTokenType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsc__DerivedKeyTokenType(struct soap*, struct wsc__DerivedKeyTokenType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsc__DerivedKeyTokenType(struct soap*, const struct wsc__DerivedKeyTokenType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsc__DerivedKeyTokenType(struct soap*, const char*, int, const struct wsc__DerivedKeyTokenType *, const char*);
SOAP_FMAC3 struct wsc__DerivedKeyTokenType * SOAP_FMAC4 soap_in_wsc__DerivedKeyTokenType(struct soap*, const char*, struct wsc__DerivedKeyTokenType *, const char*);

SOAP_FMAC3 struct wsc__DerivedKeyTokenType * SOAP_FMAC4 soap_new_wsc__DerivedKeyTokenType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsc__DerivedKeyTokenType(struct soap*, const struct wsc__DerivedKeyTokenType *, const char*, const char*);

#ifndef soap_write_wsc__DerivedKeyTokenType
#define soap_write_wsc__DerivedKeyTokenType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsc__DerivedKeyTokenType(soap, data), 0) || soap_put_wsc__DerivedKeyTokenType(soap, data, "wsc:DerivedKeyTokenType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsc__DerivedKeyTokenType
#define soap_PUT_wsc__DerivedKeyTokenType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsc__DerivedKeyTokenType(soap, data), 0) || soap_put_wsc__DerivedKeyTokenType(soap, data, "wsc:DerivedKeyTokenType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsc__DerivedKeyTokenType
#define soap_PATCH_wsc__DerivedKeyTokenType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsc__DerivedKeyTokenType(soap, data), 0) || soap_put_wsc__DerivedKeyTokenType(soap, data, "wsc:DerivedKeyTokenType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsc__DerivedKeyTokenType
#define soap_POST_send_wsc__DerivedKeyTokenType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsc__DerivedKeyTokenType(soap, data), 0) || soap_put_wsc__DerivedKeyTokenType(soap, data, "wsc:DerivedKeyTokenType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsc__DerivedKeyTokenType * SOAP_FMAC4 soap_get_wsc__DerivedKeyTokenType(struct soap*, struct wsc__DerivedKeyTokenType *, const char*, const char*);

#ifndef soap_read_wsc__DerivedKeyTokenType
#define soap_read_wsc__DerivedKeyTokenType(soap, data) ( ((data) ? (soap_default_wsc__DerivedKeyTokenType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsc__DerivedKeyTokenType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsc__DerivedKeyTokenType
#define soap_GET_wsc__DerivedKeyTokenType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsc__DerivedKeyTokenType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsc__DerivedKeyTokenType
#define soap_POST_recv_wsc__DerivedKeyTokenType(soap, data) ( soap_read_wsc__DerivedKeyTokenType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsc__SecurityContextTokenType_DEFINED
#define SOAP_TYPE_wsc__SecurityContextTokenType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsc__SecurityContextTokenType(struct soap*, struct wsc__SecurityContextTokenType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsc__SecurityContextTokenType(struct soap*, const struct wsc__SecurityContextTokenType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsc__SecurityContextTokenType(struct soap*, const char*, int, const struct wsc__SecurityContextTokenType *, const char*);
SOAP_FMAC3 struct wsc__SecurityContextTokenType * SOAP_FMAC4 soap_in_wsc__SecurityContextTokenType(struct soap*, const char*, struct wsc__SecurityContextTokenType *, const char*);

SOAP_FMAC3 struct wsc__SecurityContextTokenType * SOAP_FMAC4 soap_new_wsc__SecurityContextTokenType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsc__SecurityContextTokenType(struct soap*, const struct wsc__SecurityContextTokenType *, const char*, const char*);

#ifndef soap_write_wsc__SecurityContextTokenType
#define soap_write_wsc__SecurityContextTokenType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsc__SecurityContextTokenType(soap, data), 0) || soap_put_wsc__SecurityContextTokenType(soap, data, "wsc:SecurityContextTokenType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsc__SecurityContextTokenType
#define soap_PUT_wsc__SecurityContextTokenType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsc__SecurityContextTokenType(soap, data), 0) || soap_put_wsc__SecurityContextTokenType(soap, data, "wsc:SecurityContextTokenType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsc__SecurityContextTokenType
#define soap_PATCH_wsc__SecurityContextTokenType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsc__SecurityContextTokenType(soap, data), 0) || soap_put_wsc__SecurityContextTokenType(soap, data, "wsc:SecurityContextTokenType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsc__SecurityContextTokenType
#define soap_POST_send_wsc__SecurityContextTokenType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsc__SecurityContextTokenType(soap, data), 0) || soap_put_wsc__SecurityContextTokenType(soap, data, "wsc:SecurityContextTokenType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsc__SecurityContextTokenType * SOAP_FMAC4 soap_get_wsc__SecurityContextTokenType(struct soap*, struct wsc__SecurityContextTokenType *, const char*, const char*);

#ifndef soap_read_wsc__SecurityContextTokenType
#define soap_read_wsc__SecurityContextTokenType(soap, data) ( ((data) ? (soap_default_wsc__SecurityContextTokenType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsc__SecurityContextTokenType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsc__SecurityContextTokenType
#define soap_GET_wsc__SecurityContextTokenType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsc__SecurityContextTokenType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsc__SecurityContextTokenType
#define soap_POST_recv_wsc__SecurityContextTokenType(soap, data) ( soap_read_wsc__SecurityContextTokenType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___xenc__union_ReferenceList_DEFINED
#define SOAP_TYPE___xenc__union_ReferenceList_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___xenc__union_ReferenceList(struct soap*, struct __xenc__union_ReferenceList *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___xenc__union_ReferenceList(struct soap*, const struct __xenc__union_ReferenceList *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___xenc__union_ReferenceList(struct soap*, const char*, int, const struct __xenc__union_ReferenceList *, const char*);
SOAP_FMAC3 struct __xenc__union_ReferenceList * SOAP_FMAC4 soap_in___xenc__union_ReferenceList(struct soap*, const char*, struct __xenc__union_ReferenceList *, const char*);

SOAP_FMAC3 struct __xenc__union_ReferenceList * SOAP_FMAC4 soap_new___xenc__union_ReferenceList(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___xenc__union_ReferenceList(struct soap*, const struct __xenc__union_ReferenceList *, const char*, const char*);

#ifndef soap_write___xenc__union_ReferenceList
#define soap_write___xenc__union_ReferenceList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___xenc__union_ReferenceList(soap, data), 0) || soap_put___xenc__union_ReferenceList(soap, data, "-xenc:union-ReferenceList", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___xenc__union_ReferenceList
#define soap_PUT___xenc__union_ReferenceList(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___xenc__union_ReferenceList(soap, data), 0) || soap_put___xenc__union_ReferenceList(soap, data, "-xenc:union-ReferenceList", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___xenc__union_ReferenceList
#define soap_PATCH___xenc__union_ReferenceList(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___xenc__union_ReferenceList(soap, data), 0) || soap_put___xenc__union_ReferenceList(soap, data, "-xenc:union-ReferenceList", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___xenc__union_ReferenceList
#define soap_POST_send___xenc__union_ReferenceList(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___xenc__union_ReferenceList(soap, data), 0) || soap_put___xenc__union_ReferenceList(soap, data, "-xenc:union-ReferenceList", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __xenc__union_ReferenceList * SOAP_FMAC4 soap_get___xenc__union_ReferenceList(struct soap*, struct __xenc__union_ReferenceList *, const char*, const char*);

#ifndef soap_read___xenc__union_ReferenceList
#define soap_read___xenc__union_ReferenceList(soap, data) ( ((data) ? (soap_default___xenc__union_ReferenceList(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___xenc__union_ReferenceList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___xenc__union_ReferenceList
#define soap_GET___xenc__union_ReferenceList(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___xenc__union_ReferenceList(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___xenc__union_ReferenceList
#define soap_POST_recv___xenc__union_ReferenceList(soap, data) ( soap_read___xenc__union_ReferenceList(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__xenc__ReferenceList_DEFINED
#define SOAP_TYPE__xenc__ReferenceList_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__xenc__ReferenceList(struct soap*, struct _xenc__ReferenceList *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__xenc__ReferenceList(struct soap*, const struct _xenc__ReferenceList *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__xenc__ReferenceList(struct soap*, const char*, int, const struct _xenc__ReferenceList *, const char*);
SOAP_FMAC3 struct _xenc__ReferenceList * SOAP_FMAC4 soap_in__xenc__ReferenceList(struct soap*, const char*, struct _xenc__ReferenceList *, const char*);

SOAP_FMAC3 struct _xenc__ReferenceList * SOAP_FMAC4 soap_new__xenc__ReferenceList(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__xenc__ReferenceList(struct soap*, const struct _xenc__ReferenceList *, const char*, const char*);

#ifndef soap_write__xenc__ReferenceList
#define soap_write__xenc__ReferenceList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__xenc__ReferenceList(soap, data), 0) || soap_put__xenc__ReferenceList(soap, data, "xenc:ReferenceList", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__xenc__ReferenceList
#define soap_PUT__xenc__ReferenceList(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__xenc__ReferenceList(soap, data), 0) || soap_put__xenc__ReferenceList(soap, data, "xenc:ReferenceList", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__xenc__ReferenceList
#define soap_PATCH__xenc__ReferenceList(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__xenc__ReferenceList(soap, data), 0) || soap_put__xenc__ReferenceList(soap, data, "xenc:ReferenceList", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__xenc__ReferenceList
#define soap_POST_send__xenc__ReferenceList(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__xenc__ReferenceList(soap, data), 0) || soap_put__xenc__ReferenceList(soap, data, "xenc:ReferenceList", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _xenc__ReferenceList * SOAP_FMAC4 soap_get__xenc__ReferenceList(struct soap*, struct _xenc__ReferenceList *, const char*, const char*);

#ifndef soap_read__xenc__ReferenceList
#define soap_read__xenc__ReferenceList(soap, data) ( ((data) ? (soap_default__xenc__ReferenceList(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__xenc__ReferenceList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__xenc__ReferenceList
#define soap_GET__xenc__ReferenceList(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__xenc__ReferenceList(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__xenc__ReferenceList
#define soap_POST_recv__xenc__ReferenceList(soap, data) ( soap_read__xenc__ReferenceList(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_xenc__EncryptionPropertyType_DEFINED
#define SOAP_TYPE_xenc__EncryptionPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xenc__EncryptionPropertyType(struct soap*, struct xenc__EncryptionPropertyType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xenc__EncryptionPropertyType(struct soap*, const struct xenc__EncryptionPropertyType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xenc__EncryptionPropertyType(struct soap*, const char*, int, const struct xenc__EncryptionPropertyType *, const char*);
SOAP_FMAC3 struct xenc__EncryptionPropertyType * SOAP_FMAC4 soap_in_xenc__EncryptionPropertyType(struct soap*, const char*, struct xenc__EncryptionPropertyType *, const char*);

SOAP_FMAC3 struct xenc__EncryptionPropertyType * SOAP_FMAC4 soap_new_xenc__EncryptionPropertyType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xenc__EncryptionPropertyType(struct soap*, const struct xenc__EncryptionPropertyType *, const char*, const char*);

#ifndef soap_write_xenc__EncryptionPropertyType
#define soap_write_xenc__EncryptionPropertyType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xenc__EncryptionPropertyType(soap, data), 0) || soap_put_xenc__EncryptionPropertyType(soap, data, "xenc:EncryptionPropertyType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_xenc__EncryptionPropertyType
#define soap_PUT_xenc__EncryptionPropertyType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__EncryptionPropertyType(soap, data), 0) || soap_put_xenc__EncryptionPropertyType(soap, data, "xenc:EncryptionPropertyType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_xenc__EncryptionPropertyType
#define soap_PATCH_xenc__EncryptionPropertyType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__EncryptionPropertyType(soap, data), 0) || soap_put_xenc__EncryptionPropertyType(soap, data, "xenc:EncryptionPropertyType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_xenc__EncryptionPropertyType
#define soap_POST_send_xenc__EncryptionPropertyType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__EncryptionPropertyType(soap, data), 0) || soap_put_xenc__EncryptionPropertyType(soap, data, "xenc:EncryptionPropertyType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct xenc__EncryptionPropertyType * SOAP_FMAC4 soap_get_xenc__EncryptionPropertyType(struct soap*, struct xenc__EncryptionPropertyType *, const char*, const char*);

#ifndef soap_read_xenc__EncryptionPropertyType
#define soap_read_xenc__EncryptionPropertyType(soap, data) ( ((data) ? (soap_default_xenc__EncryptionPropertyType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xenc__EncryptionPropertyType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_xenc__EncryptionPropertyType
#define soap_GET_xenc__EncryptionPropertyType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_xenc__EncryptionPropertyType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_xenc__EncryptionPropertyType
#define soap_POST_recv_xenc__EncryptionPropertyType(soap, data) ( soap_read_xenc__EncryptionPropertyType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_xenc__EncryptionPropertiesType_DEFINED
#define SOAP_TYPE_xenc__EncryptionPropertiesType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xenc__EncryptionPropertiesType(struct soap*, struct xenc__EncryptionPropertiesType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xenc__EncryptionPropertiesType(struct soap*, const struct xenc__EncryptionPropertiesType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xenc__EncryptionPropertiesType(struct soap*, const char*, int, const struct xenc__EncryptionPropertiesType *, const char*);
SOAP_FMAC3 struct xenc__EncryptionPropertiesType * SOAP_FMAC4 soap_in_xenc__EncryptionPropertiesType(struct soap*, const char*, struct xenc__EncryptionPropertiesType *, const char*);

SOAP_FMAC3 struct xenc__EncryptionPropertiesType * SOAP_FMAC4 soap_new_xenc__EncryptionPropertiesType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xenc__EncryptionPropertiesType(struct soap*, const struct xenc__EncryptionPropertiesType *, const char*, const char*);

#ifndef soap_write_xenc__EncryptionPropertiesType
#define soap_write_xenc__EncryptionPropertiesType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xenc__EncryptionPropertiesType(soap, data), 0) || soap_put_xenc__EncryptionPropertiesType(soap, data, "xenc:EncryptionPropertiesType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_xenc__EncryptionPropertiesType
#define soap_PUT_xenc__EncryptionPropertiesType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__EncryptionPropertiesType(soap, data), 0) || soap_put_xenc__EncryptionPropertiesType(soap, data, "xenc:EncryptionPropertiesType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_xenc__EncryptionPropertiesType
#define soap_PATCH_xenc__EncryptionPropertiesType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__EncryptionPropertiesType(soap, data), 0) || soap_put_xenc__EncryptionPropertiesType(soap, data, "xenc:EncryptionPropertiesType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_xenc__EncryptionPropertiesType
#define soap_POST_send_xenc__EncryptionPropertiesType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__EncryptionPropertiesType(soap, data), 0) || soap_put_xenc__EncryptionPropertiesType(soap, data, "xenc:EncryptionPropertiesType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct xenc__EncryptionPropertiesType * SOAP_FMAC4 soap_get_xenc__EncryptionPropertiesType(struct soap*, struct xenc__EncryptionPropertiesType *, const char*, const char*);

#ifndef soap_read_xenc__EncryptionPropertiesType
#define soap_read_xenc__EncryptionPropertiesType(soap, data) ( ((data) ? (soap_default_xenc__EncryptionPropertiesType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xenc__EncryptionPropertiesType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_xenc__EncryptionPropertiesType
#define soap_GET_xenc__EncryptionPropertiesType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_xenc__EncryptionPropertiesType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_xenc__EncryptionPropertiesType
#define soap_POST_recv_xenc__EncryptionPropertiesType(soap, data) ( soap_read_xenc__EncryptionPropertiesType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_xenc__ReferenceType_DEFINED
#define SOAP_TYPE_xenc__ReferenceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xenc__ReferenceType(struct soap*, struct xenc__ReferenceType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xenc__ReferenceType(struct soap*, const struct xenc__ReferenceType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xenc__ReferenceType(struct soap*, const char*, int, const struct xenc__ReferenceType *, const char*);
SOAP_FMAC3 struct xenc__ReferenceType * SOAP_FMAC4 soap_in_xenc__ReferenceType(struct soap*, const char*, struct xenc__ReferenceType *, const char*);

SOAP_FMAC3 struct xenc__ReferenceType * SOAP_FMAC4 soap_new_xenc__ReferenceType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xenc__ReferenceType(struct soap*, const struct xenc__ReferenceType *, const char*, const char*);

#ifndef soap_write_xenc__ReferenceType
#define soap_write_xenc__ReferenceType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xenc__ReferenceType(soap, data), 0) || soap_put_xenc__ReferenceType(soap, data, "xenc:ReferenceType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_xenc__ReferenceType
#define soap_PUT_xenc__ReferenceType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__ReferenceType(soap, data), 0) || soap_put_xenc__ReferenceType(soap, data, "xenc:ReferenceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_xenc__ReferenceType
#define soap_PATCH_xenc__ReferenceType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__ReferenceType(soap, data), 0) || soap_put_xenc__ReferenceType(soap, data, "xenc:ReferenceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_xenc__ReferenceType
#define soap_POST_send_xenc__ReferenceType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__ReferenceType(soap, data), 0) || soap_put_xenc__ReferenceType(soap, data, "xenc:ReferenceType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct xenc__ReferenceType * SOAP_FMAC4 soap_get_xenc__ReferenceType(struct soap*, struct xenc__ReferenceType *, const char*, const char*);

#ifndef soap_read_xenc__ReferenceType
#define soap_read_xenc__ReferenceType(soap, data) ( ((data) ? (soap_default_xenc__ReferenceType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xenc__ReferenceType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_xenc__ReferenceType
#define soap_GET_xenc__ReferenceType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_xenc__ReferenceType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_xenc__ReferenceType
#define soap_POST_recv_xenc__ReferenceType(soap, data) ( soap_read_xenc__ReferenceType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_xenc__AgreementMethodType_DEFINED
#define SOAP_TYPE_xenc__AgreementMethodType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xenc__AgreementMethodType(struct soap*, struct xenc__AgreementMethodType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xenc__AgreementMethodType(struct soap*, const struct xenc__AgreementMethodType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xenc__AgreementMethodType(struct soap*, const char*, int, const struct xenc__AgreementMethodType *, const char*);
SOAP_FMAC3 struct xenc__AgreementMethodType * SOAP_FMAC4 soap_in_xenc__AgreementMethodType(struct soap*, const char*, struct xenc__AgreementMethodType *, const char*);

SOAP_FMAC3 struct xenc__AgreementMethodType * SOAP_FMAC4 soap_new_xenc__AgreementMethodType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xenc__AgreementMethodType(struct soap*, const struct xenc__AgreementMethodType *, const char*, const char*);

#ifndef soap_write_xenc__AgreementMethodType
#define soap_write_xenc__AgreementMethodType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xenc__AgreementMethodType(soap, data), 0) || soap_put_xenc__AgreementMethodType(soap, data, "xenc:AgreementMethodType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_xenc__AgreementMethodType
#define soap_PUT_xenc__AgreementMethodType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__AgreementMethodType(soap, data), 0) || soap_put_xenc__AgreementMethodType(soap, data, "xenc:AgreementMethodType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_xenc__AgreementMethodType
#define soap_PATCH_xenc__AgreementMethodType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__AgreementMethodType(soap, data), 0) || soap_put_xenc__AgreementMethodType(soap, data, "xenc:AgreementMethodType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_xenc__AgreementMethodType
#define soap_POST_send_xenc__AgreementMethodType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__AgreementMethodType(soap, data), 0) || soap_put_xenc__AgreementMethodType(soap, data, "xenc:AgreementMethodType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct xenc__AgreementMethodType * SOAP_FMAC4 soap_get_xenc__AgreementMethodType(struct soap*, struct xenc__AgreementMethodType *, const char*, const char*);

#ifndef soap_read_xenc__AgreementMethodType
#define soap_read_xenc__AgreementMethodType(soap, data) ( ((data) ? (soap_default_xenc__AgreementMethodType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xenc__AgreementMethodType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_xenc__AgreementMethodType
#define soap_GET_xenc__AgreementMethodType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_xenc__AgreementMethodType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_xenc__AgreementMethodType
#define soap_POST_recv_xenc__AgreementMethodType(soap, data) ( soap_read_xenc__AgreementMethodType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_xenc__EncryptedDataType_DEFINED
#define SOAP_TYPE_xenc__EncryptedDataType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xenc__EncryptedDataType(struct soap*, struct xenc__EncryptedDataType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xenc__EncryptedDataType(struct soap*, const struct xenc__EncryptedDataType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xenc__EncryptedDataType(struct soap*, const char*, int, const struct xenc__EncryptedDataType *, const char*);
SOAP_FMAC3 struct xenc__EncryptedDataType * SOAP_FMAC4 soap_in_xenc__EncryptedDataType(struct soap*, const char*, struct xenc__EncryptedDataType *, const char*);

SOAP_FMAC3 struct xenc__EncryptedDataType * SOAP_FMAC4 soap_new_xenc__EncryptedDataType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xenc__EncryptedDataType(struct soap*, const struct xenc__EncryptedDataType *, const char*, const char*);

#ifndef soap_write_xenc__EncryptedDataType
#define soap_write_xenc__EncryptedDataType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xenc__EncryptedDataType(soap, data), 0) || soap_put_xenc__EncryptedDataType(soap, data, "xenc:EncryptedDataType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_xenc__EncryptedDataType
#define soap_PUT_xenc__EncryptedDataType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__EncryptedDataType(soap, data), 0) || soap_put_xenc__EncryptedDataType(soap, data, "xenc:EncryptedDataType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_xenc__EncryptedDataType
#define soap_PATCH_xenc__EncryptedDataType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__EncryptedDataType(soap, data), 0) || soap_put_xenc__EncryptedDataType(soap, data, "xenc:EncryptedDataType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_xenc__EncryptedDataType
#define soap_POST_send_xenc__EncryptedDataType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__EncryptedDataType(soap, data), 0) || soap_put_xenc__EncryptedDataType(soap, data, "xenc:EncryptedDataType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct xenc__EncryptedDataType * SOAP_FMAC4 soap_get_xenc__EncryptedDataType(struct soap*, struct xenc__EncryptedDataType *, const char*, const char*);

#ifndef soap_read_xenc__EncryptedDataType
#define soap_read_xenc__EncryptedDataType(soap, data) ( ((data) ? (soap_default_xenc__EncryptedDataType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xenc__EncryptedDataType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_xenc__EncryptedDataType
#define soap_GET_xenc__EncryptedDataType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_xenc__EncryptedDataType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_xenc__EncryptedDataType
#define soap_POST_recv_xenc__EncryptedDataType(soap, data) ( soap_read_xenc__EncryptedDataType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_xenc__TransformsType_DEFINED
#define SOAP_TYPE_xenc__TransformsType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xenc__TransformsType(struct soap*, struct xenc__TransformsType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xenc__TransformsType(struct soap*, const struct xenc__TransformsType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xenc__TransformsType(struct soap*, const char*, int, const struct xenc__TransformsType *, const char*);
SOAP_FMAC3 struct xenc__TransformsType * SOAP_FMAC4 soap_in_xenc__TransformsType(struct soap*, const char*, struct xenc__TransformsType *, const char*);

SOAP_FMAC3 struct xenc__TransformsType * SOAP_FMAC4 soap_new_xenc__TransformsType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xenc__TransformsType(struct soap*, const struct xenc__TransformsType *, const char*, const char*);

#ifndef soap_write_xenc__TransformsType
#define soap_write_xenc__TransformsType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xenc__TransformsType(soap, data), 0) || soap_put_xenc__TransformsType(soap, data, "xenc:TransformsType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_xenc__TransformsType
#define soap_PUT_xenc__TransformsType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__TransformsType(soap, data), 0) || soap_put_xenc__TransformsType(soap, data, "xenc:TransformsType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_xenc__TransformsType
#define soap_PATCH_xenc__TransformsType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__TransformsType(soap, data), 0) || soap_put_xenc__TransformsType(soap, data, "xenc:TransformsType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_xenc__TransformsType
#define soap_POST_send_xenc__TransformsType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__TransformsType(soap, data), 0) || soap_put_xenc__TransformsType(soap, data, "xenc:TransformsType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct xenc__TransformsType * SOAP_FMAC4 soap_get_xenc__TransformsType(struct soap*, struct xenc__TransformsType *, const char*, const char*);

#ifndef soap_read_xenc__TransformsType
#define soap_read_xenc__TransformsType(soap, data) ( ((data) ? (soap_default_xenc__TransformsType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xenc__TransformsType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_xenc__TransformsType
#define soap_GET_xenc__TransformsType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_xenc__TransformsType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_xenc__TransformsType
#define soap_POST_recv_xenc__TransformsType(soap, data) ( soap_read_xenc__TransformsType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_xenc__CipherReferenceType_DEFINED
#define SOAP_TYPE_xenc__CipherReferenceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xenc__CipherReferenceType(struct soap*, struct xenc__CipherReferenceType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xenc__CipherReferenceType(struct soap*, const struct xenc__CipherReferenceType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xenc__CipherReferenceType(struct soap*, const char*, int, const struct xenc__CipherReferenceType *, const char*);
SOAP_FMAC3 struct xenc__CipherReferenceType * SOAP_FMAC4 soap_in_xenc__CipherReferenceType(struct soap*, const char*, struct xenc__CipherReferenceType *, const char*);

SOAP_FMAC3 struct xenc__CipherReferenceType * SOAP_FMAC4 soap_new_xenc__CipherReferenceType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xenc__CipherReferenceType(struct soap*, const struct xenc__CipherReferenceType *, const char*, const char*);

#ifndef soap_write_xenc__CipherReferenceType
#define soap_write_xenc__CipherReferenceType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xenc__CipherReferenceType(soap, data), 0) || soap_put_xenc__CipherReferenceType(soap, data, "xenc:CipherReferenceType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_xenc__CipherReferenceType
#define soap_PUT_xenc__CipherReferenceType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__CipherReferenceType(soap, data), 0) || soap_put_xenc__CipherReferenceType(soap, data, "xenc:CipherReferenceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_xenc__CipherReferenceType
#define soap_PATCH_xenc__CipherReferenceType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__CipherReferenceType(soap, data), 0) || soap_put_xenc__CipherReferenceType(soap, data, "xenc:CipherReferenceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_xenc__CipherReferenceType
#define soap_POST_send_xenc__CipherReferenceType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__CipherReferenceType(soap, data), 0) || soap_put_xenc__CipherReferenceType(soap, data, "xenc:CipherReferenceType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct xenc__CipherReferenceType * SOAP_FMAC4 soap_get_xenc__CipherReferenceType(struct soap*, struct xenc__CipherReferenceType *, const char*, const char*);

#ifndef soap_read_xenc__CipherReferenceType
#define soap_read_xenc__CipherReferenceType(soap, data) ( ((data) ? (soap_default_xenc__CipherReferenceType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xenc__CipherReferenceType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_xenc__CipherReferenceType
#define soap_GET_xenc__CipherReferenceType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_xenc__CipherReferenceType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_xenc__CipherReferenceType
#define soap_POST_recv_xenc__CipherReferenceType(soap, data) ( soap_read_xenc__CipherReferenceType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_xenc__CipherDataType_DEFINED
#define SOAP_TYPE_xenc__CipherDataType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xenc__CipherDataType(struct soap*, struct xenc__CipherDataType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xenc__CipherDataType(struct soap*, const struct xenc__CipherDataType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xenc__CipherDataType(struct soap*, const char*, int, const struct xenc__CipherDataType *, const char*);
SOAP_FMAC3 struct xenc__CipherDataType * SOAP_FMAC4 soap_in_xenc__CipherDataType(struct soap*, const char*, struct xenc__CipherDataType *, const char*);

SOAP_FMAC3 struct xenc__CipherDataType * SOAP_FMAC4 soap_new_xenc__CipherDataType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xenc__CipherDataType(struct soap*, const struct xenc__CipherDataType *, const char*, const char*);

#ifndef soap_write_xenc__CipherDataType
#define soap_write_xenc__CipherDataType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xenc__CipherDataType(soap, data), 0) || soap_put_xenc__CipherDataType(soap, data, "xenc:CipherDataType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_xenc__CipherDataType
#define soap_PUT_xenc__CipherDataType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__CipherDataType(soap, data), 0) || soap_put_xenc__CipherDataType(soap, data, "xenc:CipherDataType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_xenc__CipherDataType
#define soap_PATCH_xenc__CipherDataType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__CipherDataType(soap, data), 0) || soap_put_xenc__CipherDataType(soap, data, "xenc:CipherDataType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_xenc__CipherDataType
#define soap_POST_send_xenc__CipherDataType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__CipherDataType(soap, data), 0) || soap_put_xenc__CipherDataType(soap, data, "xenc:CipherDataType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct xenc__CipherDataType * SOAP_FMAC4 soap_get_xenc__CipherDataType(struct soap*, struct xenc__CipherDataType *, const char*, const char*);

#ifndef soap_read_xenc__CipherDataType
#define soap_read_xenc__CipherDataType(soap, data) ( ((data) ? (soap_default_xenc__CipherDataType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xenc__CipherDataType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_xenc__CipherDataType
#define soap_GET_xenc__CipherDataType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_xenc__CipherDataType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_xenc__CipherDataType
#define soap_POST_recv_xenc__CipherDataType(soap, data) ( soap_read_xenc__CipherDataType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_xenc__EncryptionMethodType_DEFINED
#define SOAP_TYPE_xenc__EncryptionMethodType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xenc__EncryptionMethodType(struct soap*, struct xenc__EncryptionMethodType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xenc__EncryptionMethodType(struct soap*, const struct xenc__EncryptionMethodType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xenc__EncryptionMethodType(struct soap*, const char*, int, const struct xenc__EncryptionMethodType *, const char*);
SOAP_FMAC3 struct xenc__EncryptionMethodType * SOAP_FMAC4 soap_in_xenc__EncryptionMethodType(struct soap*, const char*, struct xenc__EncryptionMethodType *, const char*);

SOAP_FMAC3 struct xenc__EncryptionMethodType * SOAP_FMAC4 soap_new_xenc__EncryptionMethodType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xenc__EncryptionMethodType(struct soap*, const struct xenc__EncryptionMethodType *, const char*, const char*);

#ifndef soap_write_xenc__EncryptionMethodType
#define soap_write_xenc__EncryptionMethodType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xenc__EncryptionMethodType(soap, data), 0) || soap_put_xenc__EncryptionMethodType(soap, data, "xenc:EncryptionMethodType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_xenc__EncryptionMethodType
#define soap_PUT_xenc__EncryptionMethodType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__EncryptionMethodType(soap, data), 0) || soap_put_xenc__EncryptionMethodType(soap, data, "xenc:EncryptionMethodType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_xenc__EncryptionMethodType
#define soap_PATCH_xenc__EncryptionMethodType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__EncryptionMethodType(soap, data), 0) || soap_put_xenc__EncryptionMethodType(soap, data, "xenc:EncryptionMethodType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_xenc__EncryptionMethodType
#define soap_POST_send_xenc__EncryptionMethodType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__EncryptionMethodType(soap, data), 0) || soap_put_xenc__EncryptionMethodType(soap, data, "xenc:EncryptionMethodType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct xenc__EncryptionMethodType * SOAP_FMAC4 soap_get_xenc__EncryptionMethodType(struct soap*, struct xenc__EncryptionMethodType *, const char*, const char*);

#ifndef soap_read_xenc__EncryptionMethodType
#define soap_read_xenc__EncryptionMethodType(soap, data) ( ((data) ? (soap_default_xenc__EncryptionMethodType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xenc__EncryptionMethodType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_xenc__EncryptionMethodType
#define soap_GET_xenc__EncryptionMethodType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_xenc__EncryptionMethodType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_xenc__EncryptionMethodType
#define soap_POST_recv_xenc__EncryptionMethodType(soap, data) ( soap_read_xenc__EncryptionMethodType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_xenc__EncryptedType_DEFINED
#define SOAP_TYPE_xenc__EncryptedType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xenc__EncryptedType(struct soap*, struct xenc__EncryptedType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xenc__EncryptedType(struct soap*, const struct xenc__EncryptedType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xenc__EncryptedType(struct soap*, const char*, int, const struct xenc__EncryptedType *, const char*);
SOAP_FMAC3 struct xenc__EncryptedType * SOAP_FMAC4 soap_in_xenc__EncryptedType(struct soap*, const char*, struct xenc__EncryptedType *, const char*);

SOAP_FMAC3 struct xenc__EncryptedType * SOAP_FMAC4 soap_new_xenc__EncryptedType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xenc__EncryptedType(struct soap*, const struct xenc__EncryptedType *, const char*, const char*);

#ifndef soap_write_xenc__EncryptedType
#define soap_write_xenc__EncryptedType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xenc__EncryptedType(soap, data), 0) || soap_put_xenc__EncryptedType(soap, data, "xenc:EncryptedType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_xenc__EncryptedType
#define soap_PUT_xenc__EncryptedType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__EncryptedType(soap, data), 0) || soap_put_xenc__EncryptedType(soap, data, "xenc:EncryptedType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_xenc__EncryptedType
#define soap_PATCH_xenc__EncryptedType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__EncryptedType(soap, data), 0) || soap_put_xenc__EncryptedType(soap, data, "xenc:EncryptedType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_xenc__EncryptedType
#define soap_POST_send_xenc__EncryptedType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__EncryptedType(soap, data), 0) || soap_put_xenc__EncryptedType(soap, data, "xenc:EncryptedType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct xenc__EncryptedType * SOAP_FMAC4 soap_get_xenc__EncryptedType(struct soap*, struct xenc__EncryptedType *, const char*, const char*);

#ifndef soap_read_xenc__EncryptedType
#define soap_read_xenc__EncryptedType(soap, data) ( ((data) ? (soap_default_xenc__EncryptedType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xenc__EncryptedType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_xenc__EncryptedType
#define soap_GET_xenc__EncryptedType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_xenc__EncryptedType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_xenc__EncryptedType
#define soap_POST_recv_xenc__EncryptedType(soap, data) ( soap_read_xenc__EncryptedType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ds__RSAKeyValueType_DEFINED
#define SOAP_TYPE_ds__RSAKeyValueType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ds__RSAKeyValueType(struct soap*, struct ds__RSAKeyValueType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ds__RSAKeyValueType(struct soap*, const struct ds__RSAKeyValueType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ds__RSAKeyValueType(struct soap*, const char*, int, const struct ds__RSAKeyValueType *, const char*);
SOAP_FMAC3 struct ds__RSAKeyValueType * SOAP_FMAC4 soap_in_ds__RSAKeyValueType(struct soap*, const char*, struct ds__RSAKeyValueType *, const char*);

SOAP_FMAC3 struct ds__RSAKeyValueType * SOAP_FMAC4 soap_new_ds__RSAKeyValueType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ds__RSAKeyValueType(struct soap*, const struct ds__RSAKeyValueType *, const char*, const char*);

#ifndef soap_write_ds__RSAKeyValueType
#define soap_write_ds__RSAKeyValueType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ds__RSAKeyValueType(soap, data), 0) || soap_put_ds__RSAKeyValueType(soap, data, "ds:RSAKeyValueType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ds__RSAKeyValueType
#define soap_PUT_ds__RSAKeyValueType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__RSAKeyValueType(soap, data), 0) || soap_put_ds__RSAKeyValueType(soap, data, "ds:RSAKeyValueType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_ds__RSAKeyValueType
#define soap_PATCH_ds__RSAKeyValueType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__RSAKeyValueType(soap, data), 0) || soap_put_ds__RSAKeyValueType(soap, data, "ds:RSAKeyValueType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ds__RSAKeyValueType
#define soap_POST_send_ds__RSAKeyValueType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__RSAKeyValueType(soap, data), 0) || soap_put_ds__RSAKeyValueType(soap, data, "ds:RSAKeyValueType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ds__RSAKeyValueType * SOAP_FMAC4 soap_get_ds__RSAKeyValueType(struct soap*, struct ds__RSAKeyValueType *, const char*, const char*);

#ifndef soap_read_ds__RSAKeyValueType
#define soap_read_ds__RSAKeyValueType(soap, data) ( ((data) ? (soap_default_ds__RSAKeyValueType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ds__RSAKeyValueType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ds__RSAKeyValueType
#define soap_GET_ds__RSAKeyValueType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ds__RSAKeyValueType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ds__RSAKeyValueType
#define soap_POST_recv_ds__RSAKeyValueType(soap, data) ( soap_read_ds__RSAKeyValueType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ds__DSAKeyValueType_DEFINED
#define SOAP_TYPE_ds__DSAKeyValueType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ds__DSAKeyValueType(struct soap*, struct ds__DSAKeyValueType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ds__DSAKeyValueType(struct soap*, const struct ds__DSAKeyValueType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ds__DSAKeyValueType(struct soap*, const char*, int, const struct ds__DSAKeyValueType *, const char*);
SOAP_FMAC3 struct ds__DSAKeyValueType * SOAP_FMAC4 soap_in_ds__DSAKeyValueType(struct soap*, const char*, struct ds__DSAKeyValueType *, const char*);

SOAP_FMAC3 struct ds__DSAKeyValueType * SOAP_FMAC4 soap_new_ds__DSAKeyValueType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ds__DSAKeyValueType(struct soap*, const struct ds__DSAKeyValueType *, const char*, const char*);

#ifndef soap_write_ds__DSAKeyValueType
#define soap_write_ds__DSAKeyValueType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ds__DSAKeyValueType(soap, data), 0) || soap_put_ds__DSAKeyValueType(soap, data, "ds:DSAKeyValueType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ds__DSAKeyValueType
#define soap_PUT_ds__DSAKeyValueType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__DSAKeyValueType(soap, data), 0) || soap_put_ds__DSAKeyValueType(soap, data, "ds:DSAKeyValueType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_ds__DSAKeyValueType
#define soap_PATCH_ds__DSAKeyValueType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__DSAKeyValueType(soap, data), 0) || soap_put_ds__DSAKeyValueType(soap, data, "ds:DSAKeyValueType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ds__DSAKeyValueType
#define soap_POST_send_ds__DSAKeyValueType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__DSAKeyValueType(soap, data), 0) || soap_put_ds__DSAKeyValueType(soap, data, "ds:DSAKeyValueType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ds__DSAKeyValueType * SOAP_FMAC4 soap_get_ds__DSAKeyValueType(struct soap*, struct ds__DSAKeyValueType *, const char*, const char*);

#ifndef soap_read_ds__DSAKeyValueType
#define soap_read_ds__DSAKeyValueType(soap, data) ( ((data) ? (soap_default_ds__DSAKeyValueType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ds__DSAKeyValueType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ds__DSAKeyValueType
#define soap_GET_ds__DSAKeyValueType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ds__DSAKeyValueType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ds__DSAKeyValueType
#define soap_POST_recv_ds__DSAKeyValueType(soap, data) ( soap_read_ds__DSAKeyValueType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ds__X509IssuerSerialType_DEFINED
#define SOAP_TYPE_ds__X509IssuerSerialType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ds__X509IssuerSerialType(struct soap*, struct ds__X509IssuerSerialType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ds__X509IssuerSerialType(struct soap*, const struct ds__X509IssuerSerialType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ds__X509IssuerSerialType(struct soap*, const char*, int, const struct ds__X509IssuerSerialType *, const char*);
SOAP_FMAC3 struct ds__X509IssuerSerialType * SOAP_FMAC4 soap_in_ds__X509IssuerSerialType(struct soap*, const char*, struct ds__X509IssuerSerialType *, const char*);

SOAP_FMAC3 struct ds__X509IssuerSerialType * SOAP_FMAC4 soap_new_ds__X509IssuerSerialType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ds__X509IssuerSerialType(struct soap*, const struct ds__X509IssuerSerialType *, const char*, const char*);

#ifndef soap_write_ds__X509IssuerSerialType
#define soap_write_ds__X509IssuerSerialType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ds__X509IssuerSerialType(soap, data), 0) || soap_put_ds__X509IssuerSerialType(soap, data, "ds:X509IssuerSerialType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ds__X509IssuerSerialType
#define soap_PUT_ds__X509IssuerSerialType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__X509IssuerSerialType(soap, data), 0) || soap_put_ds__X509IssuerSerialType(soap, data, "ds:X509IssuerSerialType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_ds__X509IssuerSerialType
#define soap_PATCH_ds__X509IssuerSerialType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__X509IssuerSerialType(soap, data), 0) || soap_put_ds__X509IssuerSerialType(soap, data, "ds:X509IssuerSerialType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ds__X509IssuerSerialType
#define soap_POST_send_ds__X509IssuerSerialType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__X509IssuerSerialType(soap, data), 0) || soap_put_ds__X509IssuerSerialType(soap, data, "ds:X509IssuerSerialType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ds__X509IssuerSerialType * SOAP_FMAC4 soap_get_ds__X509IssuerSerialType(struct soap*, struct ds__X509IssuerSerialType *, const char*, const char*);

#ifndef soap_read_ds__X509IssuerSerialType
#define soap_read_ds__X509IssuerSerialType(soap, data) ( ((data) ? (soap_default_ds__X509IssuerSerialType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ds__X509IssuerSerialType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ds__X509IssuerSerialType
#define soap_GET_ds__X509IssuerSerialType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ds__X509IssuerSerialType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ds__X509IssuerSerialType
#define soap_POST_recv_ds__X509IssuerSerialType(soap, data) ( soap_read_ds__X509IssuerSerialType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif
/* _ds__KeyInfo is a typedef synonym of ds__KeyInfoType */

#ifndef SOAP_TYPE__ds__KeyInfo_DEFINED
#define SOAP_TYPE__ds__KeyInfo_DEFINED

#define soap_default__ds__KeyInfo soap_default_ds__KeyInfoType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ds__KeyInfoType(struct soap*, const struct ds__KeyInfoType *);

#define soap_serialize__ds__KeyInfo soap_serialize_ds__KeyInfoType


#define soap__ds__KeyInfo2s soap_ds__KeyInfoType2s


#define soap_out__ds__KeyInfo soap_out_ds__KeyInfoType


#define soap_s2_ds__KeyInfo soap_s2ds__KeyInfoType


#define soap_in__ds__KeyInfo soap_in_ds__KeyInfoType

#define soap_new__ds__KeyInfo soap_new_ds__KeyInfoType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__ds__KeyInfo(struct soap*, const struct ds__KeyInfoType *, const char*, const char*);

#ifndef soap_write__ds__KeyInfo
#define soap_write__ds__KeyInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ds__KeyInfo(soap, data), 0) || soap_put__ds__KeyInfo(soap, data, "ds:KeyInfo", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__ds__KeyInfo
#define soap_PUT__ds__KeyInfo(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ds__KeyInfo(soap, data), 0) || soap_put__ds__KeyInfo(soap, data, "ds:KeyInfo", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__ds__KeyInfo
#define soap_PATCH__ds__KeyInfo(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ds__KeyInfo(soap, data), 0) || soap_put__ds__KeyInfo(soap, data, "ds:KeyInfo", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__ds__KeyInfo
#define soap_POST_send__ds__KeyInfo(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ds__KeyInfo(soap, data), 0) || soap_put__ds__KeyInfo(soap, data, "ds:KeyInfo", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__ds__KeyInfo soap_get_ds__KeyInfoType


#define soap_read__ds__KeyInfo soap_read_ds__KeyInfoType


#define soap_GET__ds__KeyInfo soap_GET_ds__KeyInfoType


#define soap_POST_recv__ds__KeyInfo soap_POST_recv_ds__KeyInfoType

#endif

#ifndef SOAP_TYPE_ds__RetrievalMethodType_DEFINED
#define SOAP_TYPE_ds__RetrievalMethodType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ds__RetrievalMethodType(struct soap*, struct ds__RetrievalMethodType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ds__RetrievalMethodType(struct soap*, const struct ds__RetrievalMethodType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ds__RetrievalMethodType(struct soap*, const char*, int, const struct ds__RetrievalMethodType *, const char*);
SOAP_FMAC3 struct ds__RetrievalMethodType * SOAP_FMAC4 soap_in_ds__RetrievalMethodType(struct soap*, const char*, struct ds__RetrievalMethodType *, const char*);

SOAP_FMAC3 struct ds__RetrievalMethodType * SOAP_FMAC4 soap_new_ds__RetrievalMethodType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ds__RetrievalMethodType(struct soap*, const struct ds__RetrievalMethodType *, const char*, const char*);

#ifndef soap_write_ds__RetrievalMethodType
#define soap_write_ds__RetrievalMethodType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ds__RetrievalMethodType(soap, data), 0) || soap_put_ds__RetrievalMethodType(soap, data, "ds:RetrievalMethodType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ds__RetrievalMethodType
#define soap_PUT_ds__RetrievalMethodType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__RetrievalMethodType(soap, data), 0) || soap_put_ds__RetrievalMethodType(soap, data, "ds:RetrievalMethodType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_ds__RetrievalMethodType
#define soap_PATCH_ds__RetrievalMethodType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__RetrievalMethodType(soap, data), 0) || soap_put_ds__RetrievalMethodType(soap, data, "ds:RetrievalMethodType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ds__RetrievalMethodType
#define soap_POST_send_ds__RetrievalMethodType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__RetrievalMethodType(soap, data), 0) || soap_put_ds__RetrievalMethodType(soap, data, "ds:RetrievalMethodType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ds__RetrievalMethodType * SOAP_FMAC4 soap_get_ds__RetrievalMethodType(struct soap*, struct ds__RetrievalMethodType *, const char*, const char*);

#ifndef soap_read_ds__RetrievalMethodType
#define soap_read_ds__RetrievalMethodType(soap, data) ( ((data) ? (soap_default_ds__RetrievalMethodType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ds__RetrievalMethodType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ds__RetrievalMethodType
#define soap_GET_ds__RetrievalMethodType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ds__RetrievalMethodType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ds__RetrievalMethodType
#define soap_POST_recv_ds__RetrievalMethodType(soap, data) ( soap_read_ds__RetrievalMethodType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ds__KeyValueType_DEFINED
#define SOAP_TYPE_ds__KeyValueType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ds__KeyValueType(struct soap*, struct ds__KeyValueType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ds__KeyValueType(struct soap*, const struct ds__KeyValueType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ds__KeyValueType(struct soap*, const char*, int, const struct ds__KeyValueType *, const char*);
SOAP_FMAC3 struct ds__KeyValueType * SOAP_FMAC4 soap_in_ds__KeyValueType(struct soap*, const char*, struct ds__KeyValueType *, const char*);

SOAP_FMAC3 struct ds__KeyValueType * SOAP_FMAC4 soap_new_ds__KeyValueType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ds__KeyValueType(struct soap*, const struct ds__KeyValueType *, const char*, const char*);

#ifndef soap_write_ds__KeyValueType
#define soap_write_ds__KeyValueType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ds__KeyValueType(soap, data), 0) || soap_put_ds__KeyValueType(soap, data, "ds:KeyValueType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ds__KeyValueType
#define soap_PUT_ds__KeyValueType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__KeyValueType(soap, data), 0) || soap_put_ds__KeyValueType(soap, data, "ds:KeyValueType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_ds__KeyValueType
#define soap_PATCH_ds__KeyValueType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__KeyValueType(soap, data), 0) || soap_put_ds__KeyValueType(soap, data, "ds:KeyValueType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ds__KeyValueType
#define soap_POST_send_ds__KeyValueType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__KeyValueType(soap, data), 0) || soap_put_ds__KeyValueType(soap, data, "ds:KeyValueType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ds__KeyValueType * SOAP_FMAC4 soap_get_ds__KeyValueType(struct soap*, struct ds__KeyValueType *, const char*, const char*);

#ifndef soap_read_ds__KeyValueType
#define soap_read_ds__KeyValueType(soap, data) ( ((data) ? (soap_default_ds__KeyValueType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ds__KeyValueType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ds__KeyValueType
#define soap_GET_ds__KeyValueType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ds__KeyValueType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ds__KeyValueType
#define soap_POST_recv_ds__KeyValueType(soap, data) ( soap_read_ds__KeyValueType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ds__DigestMethodType_DEFINED
#define SOAP_TYPE_ds__DigestMethodType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ds__DigestMethodType(struct soap*, struct ds__DigestMethodType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ds__DigestMethodType(struct soap*, const struct ds__DigestMethodType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ds__DigestMethodType(struct soap*, const char*, int, const struct ds__DigestMethodType *, const char*);
SOAP_FMAC3 struct ds__DigestMethodType * SOAP_FMAC4 soap_in_ds__DigestMethodType(struct soap*, const char*, struct ds__DigestMethodType *, const char*);

SOAP_FMAC3 struct ds__DigestMethodType * SOAP_FMAC4 soap_new_ds__DigestMethodType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ds__DigestMethodType(struct soap*, const struct ds__DigestMethodType *, const char*, const char*);

#ifndef soap_write_ds__DigestMethodType
#define soap_write_ds__DigestMethodType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ds__DigestMethodType(soap, data), 0) || soap_put_ds__DigestMethodType(soap, data, "ds:DigestMethodType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ds__DigestMethodType
#define soap_PUT_ds__DigestMethodType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__DigestMethodType(soap, data), 0) || soap_put_ds__DigestMethodType(soap, data, "ds:DigestMethodType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_ds__DigestMethodType
#define soap_PATCH_ds__DigestMethodType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__DigestMethodType(soap, data), 0) || soap_put_ds__DigestMethodType(soap, data, "ds:DigestMethodType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ds__DigestMethodType
#define soap_POST_send_ds__DigestMethodType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__DigestMethodType(soap, data), 0) || soap_put_ds__DigestMethodType(soap, data, "ds:DigestMethodType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ds__DigestMethodType * SOAP_FMAC4 soap_get_ds__DigestMethodType(struct soap*, struct ds__DigestMethodType *, const char*, const char*);

#ifndef soap_read_ds__DigestMethodType
#define soap_read_ds__DigestMethodType(soap, data) ( ((data) ? (soap_default_ds__DigestMethodType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ds__DigestMethodType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ds__DigestMethodType
#define soap_GET_ds__DigestMethodType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ds__DigestMethodType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ds__DigestMethodType
#define soap_POST_recv_ds__DigestMethodType(soap, data) ( soap_read_ds__DigestMethodType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif
/* _ds__Transform is a typedef synonym of ds__TransformType */

#ifndef SOAP_TYPE__ds__Transform_DEFINED
#define SOAP_TYPE__ds__Transform_DEFINED

#define soap_default__ds__Transform soap_default_ds__TransformType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ds__TransformType(struct soap*, const struct ds__TransformType *);

#define soap_serialize__ds__Transform soap_serialize_ds__TransformType


#define soap__ds__Transform2s soap_ds__TransformType2s


#define soap_out__ds__Transform soap_out_ds__TransformType


#define soap_s2_ds__Transform soap_s2ds__TransformType


#define soap_in__ds__Transform soap_in_ds__TransformType

#define soap_new__ds__Transform soap_new_ds__TransformType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__ds__Transform(struct soap*, const struct ds__TransformType *, const char*, const char*);

#ifndef soap_write__ds__Transform
#define soap_write__ds__Transform(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ds__Transform(soap, data), 0) || soap_put__ds__Transform(soap, data, "ds:Transform", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__ds__Transform
#define soap_PUT__ds__Transform(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ds__Transform(soap, data), 0) || soap_put__ds__Transform(soap, data, "ds:Transform", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__ds__Transform
#define soap_PATCH__ds__Transform(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ds__Transform(soap, data), 0) || soap_put__ds__Transform(soap, data, "ds:Transform", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__ds__Transform
#define soap_POST_send__ds__Transform(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ds__Transform(soap, data), 0) || soap_put__ds__Transform(soap, data, "ds:Transform", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__ds__Transform soap_get_ds__TransformType


#define soap_read__ds__Transform soap_read_ds__TransformType


#define soap_GET__ds__Transform soap_GET_ds__TransformType


#define soap_POST_recv__ds__Transform soap_POST_recv_ds__TransformType

#endif

#ifndef SOAP_TYPE_ds__TransformType_DEFINED
#define SOAP_TYPE_ds__TransformType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ds__TransformType(struct soap*, struct ds__TransformType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ds__TransformType(struct soap*, const struct ds__TransformType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ds__TransformType(struct soap*, const char*, int, const struct ds__TransformType *, const char*);
SOAP_FMAC3 struct ds__TransformType * SOAP_FMAC4 soap_in_ds__TransformType(struct soap*, const char*, struct ds__TransformType *, const char*);

SOAP_FMAC3 struct ds__TransformType * SOAP_FMAC4 soap_new_ds__TransformType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ds__TransformType(struct soap*, const struct ds__TransformType *, const char*, const char*);

#ifndef soap_write_ds__TransformType
#define soap_write_ds__TransformType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ds__TransformType(soap, data), 0) || soap_put_ds__TransformType(soap, data, "ds:TransformType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ds__TransformType
#define soap_PUT_ds__TransformType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__TransformType(soap, data), 0) || soap_put_ds__TransformType(soap, data, "ds:TransformType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_ds__TransformType
#define soap_PATCH_ds__TransformType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__TransformType(soap, data), 0) || soap_put_ds__TransformType(soap, data, "ds:TransformType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ds__TransformType
#define soap_POST_send_ds__TransformType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__TransformType(soap, data), 0) || soap_put_ds__TransformType(soap, data, "ds:TransformType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ds__TransformType * SOAP_FMAC4 soap_get_ds__TransformType(struct soap*, struct ds__TransformType *, const char*, const char*);

#ifndef soap_read_ds__TransformType
#define soap_read_ds__TransformType(soap, data) ( ((data) ? (soap_default_ds__TransformType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ds__TransformType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ds__TransformType
#define soap_GET_ds__TransformType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ds__TransformType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ds__TransformType
#define soap_POST_recv_ds__TransformType(soap, data) ( soap_read_ds__TransformType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__c14n__InclusiveNamespaces_DEFINED
#define SOAP_TYPE__c14n__InclusiveNamespaces_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__c14n__InclusiveNamespaces(struct soap*, struct _c14n__InclusiveNamespaces *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__c14n__InclusiveNamespaces(struct soap*, const struct _c14n__InclusiveNamespaces *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__c14n__InclusiveNamespaces(struct soap*, const char*, int, const struct _c14n__InclusiveNamespaces *, const char*);
SOAP_FMAC3 struct _c14n__InclusiveNamespaces * SOAP_FMAC4 soap_in__c14n__InclusiveNamespaces(struct soap*, const char*, struct _c14n__InclusiveNamespaces *, const char*);

SOAP_FMAC3 struct _c14n__InclusiveNamespaces * SOAP_FMAC4 soap_new__c14n__InclusiveNamespaces(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__c14n__InclusiveNamespaces(struct soap*, const struct _c14n__InclusiveNamespaces *, const char*, const char*);

#ifndef soap_write__c14n__InclusiveNamespaces
#define soap_write__c14n__InclusiveNamespaces(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__c14n__InclusiveNamespaces(soap, data), 0) || soap_put__c14n__InclusiveNamespaces(soap, data, "c14n:InclusiveNamespaces", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__c14n__InclusiveNamespaces
#define soap_PUT__c14n__InclusiveNamespaces(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__c14n__InclusiveNamespaces(soap, data), 0) || soap_put__c14n__InclusiveNamespaces(soap, data, "c14n:InclusiveNamespaces", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__c14n__InclusiveNamespaces
#define soap_PATCH__c14n__InclusiveNamespaces(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__c14n__InclusiveNamespaces(soap, data), 0) || soap_put__c14n__InclusiveNamespaces(soap, data, "c14n:InclusiveNamespaces", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__c14n__InclusiveNamespaces
#define soap_POST_send__c14n__InclusiveNamespaces(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__c14n__InclusiveNamespaces(soap, data), 0) || soap_put__c14n__InclusiveNamespaces(soap, data, "c14n:InclusiveNamespaces", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _c14n__InclusiveNamespaces * SOAP_FMAC4 soap_get__c14n__InclusiveNamespaces(struct soap*, struct _c14n__InclusiveNamespaces *, const char*, const char*);

#ifndef soap_read__c14n__InclusiveNamespaces
#define soap_read__c14n__InclusiveNamespaces(soap, data) ( ((data) ? (soap_default__c14n__InclusiveNamespaces(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__c14n__InclusiveNamespaces(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__c14n__InclusiveNamespaces
#define soap_GET__c14n__InclusiveNamespaces(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__c14n__InclusiveNamespaces(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__c14n__InclusiveNamespaces
#define soap_POST_recv__c14n__InclusiveNamespaces(soap, data) ( soap_read__c14n__InclusiveNamespaces(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ds__TransformsType_DEFINED
#define SOAP_TYPE_ds__TransformsType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ds__TransformsType(struct soap*, struct ds__TransformsType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ds__TransformsType(struct soap*, const struct ds__TransformsType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ds__TransformsType(struct soap*, const char*, int, const struct ds__TransformsType *, const char*);
SOAP_FMAC3 struct ds__TransformsType * SOAP_FMAC4 soap_in_ds__TransformsType(struct soap*, const char*, struct ds__TransformsType *, const char*);

SOAP_FMAC3 struct ds__TransformsType * SOAP_FMAC4 soap_new_ds__TransformsType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ds__TransformsType(struct soap*, const struct ds__TransformsType *, const char*, const char*);

#ifndef soap_write_ds__TransformsType
#define soap_write_ds__TransformsType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ds__TransformsType(soap, data), 0) || soap_put_ds__TransformsType(soap, data, "ds:TransformsType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ds__TransformsType
#define soap_PUT_ds__TransformsType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__TransformsType(soap, data), 0) || soap_put_ds__TransformsType(soap, data, "ds:TransformsType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_ds__TransformsType
#define soap_PATCH_ds__TransformsType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__TransformsType(soap, data), 0) || soap_put_ds__TransformsType(soap, data, "ds:TransformsType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ds__TransformsType
#define soap_POST_send_ds__TransformsType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__TransformsType(soap, data), 0) || soap_put_ds__TransformsType(soap, data, "ds:TransformsType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ds__TransformsType * SOAP_FMAC4 soap_get_ds__TransformsType(struct soap*, struct ds__TransformsType *, const char*, const char*);

#ifndef soap_read_ds__TransformsType
#define soap_read_ds__TransformsType(soap, data) ( ((data) ? (soap_default_ds__TransformsType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ds__TransformsType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ds__TransformsType
#define soap_GET_ds__TransformsType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ds__TransformsType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ds__TransformsType
#define soap_POST_recv_ds__TransformsType(soap, data) ( soap_read_ds__TransformsType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ds__ReferenceType_DEFINED
#define SOAP_TYPE_ds__ReferenceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ds__ReferenceType(struct soap*, struct ds__ReferenceType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ds__ReferenceType(struct soap*, const struct ds__ReferenceType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ds__ReferenceType(struct soap*, const char*, int, const struct ds__ReferenceType *, const char*);
SOAP_FMAC3 struct ds__ReferenceType * SOAP_FMAC4 soap_in_ds__ReferenceType(struct soap*, const char*, struct ds__ReferenceType *, const char*);

SOAP_FMAC3 struct ds__ReferenceType * SOAP_FMAC4 soap_new_ds__ReferenceType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ds__ReferenceType(struct soap*, const struct ds__ReferenceType *, const char*, const char*);

#ifndef soap_write_ds__ReferenceType
#define soap_write_ds__ReferenceType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ds__ReferenceType(soap, data), 0) || soap_put_ds__ReferenceType(soap, data, "ds:ReferenceType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ds__ReferenceType
#define soap_PUT_ds__ReferenceType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__ReferenceType(soap, data), 0) || soap_put_ds__ReferenceType(soap, data, "ds:ReferenceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_ds__ReferenceType
#define soap_PATCH_ds__ReferenceType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__ReferenceType(soap, data), 0) || soap_put_ds__ReferenceType(soap, data, "ds:ReferenceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ds__ReferenceType
#define soap_POST_send_ds__ReferenceType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__ReferenceType(soap, data), 0) || soap_put_ds__ReferenceType(soap, data, "ds:ReferenceType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ds__ReferenceType * SOAP_FMAC4 soap_get_ds__ReferenceType(struct soap*, struct ds__ReferenceType *, const char*, const char*);

#ifndef soap_read_ds__ReferenceType
#define soap_read_ds__ReferenceType(soap, data) ( ((data) ? (soap_default_ds__ReferenceType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ds__ReferenceType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ds__ReferenceType
#define soap_GET_ds__ReferenceType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ds__ReferenceType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ds__ReferenceType
#define soap_POST_recv_ds__ReferenceType(soap, data) ( soap_read_ds__ReferenceType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ds__SignatureMethodType_DEFINED
#define SOAP_TYPE_ds__SignatureMethodType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ds__SignatureMethodType(struct soap*, struct ds__SignatureMethodType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ds__SignatureMethodType(struct soap*, const struct ds__SignatureMethodType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ds__SignatureMethodType(struct soap*, const char*, int, const struct ds__SignatureMethodType *, const char*);
SOAP_FMAC3 struct ds__SignatureMethodType * SOAP_FMAC4 soap_in_ds__SignatureMethodType(struct soap*, const char*, struct ds__SignatureMethodType *, const char*);

SOAP_FMAC3 struct ds__SignatureMethodType * SOAP_FMAC4 soap_new_ds__SignatureMethodType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ds__SignatureMethodType(struct soap*, const struct ds__SignatureMethodType *, const char*, const char*);

#ifndef soap_write_ds__SignatureMethodType
#define soap_write_ds__SignatureMethodType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ds__SignatureMethodType(soap, data), 0) || soap_put_ds__SignatureMethodType(soap, data, "ds:SignatureMethodType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ds__SignatureMethodType
#define soap_PUT_ds__SignatureMethodType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__SignatureMethodType(soap, data), 0) || soap_put_ds__SignatureMethodType(soap, data, "ds:SignatureMethodType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_ds__SignatureMethodType
#define soap_PATCH_ds__SignatureMethodType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__SignatureMethodType(soap, data), 0) || soap_put_ds__SignatureMethodType(soap, data, "ds:SignatureMethodType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ds__SignatureMethodType
#define soap_POST_send_ds__SignatureMethodType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__SignatureMethodType(soap, data), 0) || soap_put_ds__SignatureMethodType(soap, data, "ds:SignatureMethodType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ds__SignatureMethodType * SOAP_FMAC4 soap_get_ds__SignatureMethodType(struct soap*, struct ds__SignatureMethodType *, const char*, const char*);

#ifndef soap_read_ds__SignatureMethodType
#define soap_read_ds__SignatureMethodType(soap, data) ( ((data) ? (soap_default_ds__SignatureMethodType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ds__SignatureMethodType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ds__SignatureMethodType
#define soap_GET_ds__SignatureMethodType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ds__SignatureMethodType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ds__SignatureMethodType
#define soap_POST_recv_ds__SignatureMethodType(soap, data) ( soap_read_ds__SignatureMethodType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ds__CanonicalizationMethodType_DEFINED
#define SOAP_TYPE_ds__CanonicalizationMethodType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ds__CanonicalizationMethodType(struct soap*, struct ds__CanonicalizationMethodType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ds__CanonicalizationMethodType(struct soap*, const struct ds__CanonicalizationMethodType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ds__CanonicalizationMethodType(struct soap*, const char*, int, const struct ds__CanonicalizationMethodType *, const char*);
SOAP_FMAC3 struct ds__CanonicalizationMethodType * SOAP_FMAC4 soap_in_ds__CanonicalizationMethodType(struct soap*, const char*, struct ds__CanonicalizationMethodType *, const char*);

SOAP_FMAC3 struct ds__CanonicalizationMethodType * SOAP_FMAC4 soap_new_ds__CanonicalizationMethodType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ds__CanonicalizationMethodType(struct soap*, const struct ds__CanonicalizationMethodType *, const char*, const char*);

#ifndef soap_write_ds__CanonicalizationMethodType
#define soap_write_ds__CanonicalizationMethodType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ds__CanonicalizationMethodType(soap, data), 0) || soap_put_ds__CanonicalizationMethodType(soap, data, "ds:CanonicalizationMethodType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ds__CanonicalizationMethodType
#define soap_PUT_ds__CanonicalizationMethodType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__CanonicalizationMethodType(soap, data), 0) || soap_put_ds__CanonicalizationMethodType(soap, data, "ds:CanonicalizationMethodType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_ds__CanonicalizationMethodType
#define soap_PATCH_ds__CanonicalizationMethodType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__CanonicalizationMethodType(soap, data), 0) || soap_put_ds__CanonicalizationMethodType(soap, data, "ds:CanonicalizationMethodType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ds__CanonicalizationMethodType
#define soap_POST_send_ds__CanonicalizationMethodType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__CanonicalizationMethodType(soap, data), 0) || soap_put_ds__CanonicalizationMethodType(soap, data, "ds:CanonicalizationMethodType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ds__CanonicalizationMethodType * SOAP_FMAC4 soap_get_ds__CanonicalizationMethodType(struct soap*, struct ds__CanonicalizationMethodType *, const char*, const char*);

#ifndef soap_read_ds__CanonicalizationMethodType
#define soap_read_ds__CanonicalizationMethodType(soap, data) ( ((data) ? (soap_default_ds__CanonicalizationMethodType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ds__CanonicalizationMethodType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ds__CanonicalizationMethodType
#define soap_GET_ds__CanonicalizationMethodType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ds__CanonicalizationMethodType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ds__CanonicalizationMethodType
#define soap_POST_recv_ds__CanonicalizationMethodType(soap, data) ( soap_read_ds__CanonicalizationMethodType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif
/* _ds__Signature is a typedef synonym of ds__SignatureType */

#ifndef SOAP_TYPE__ds__Signature_DEFINED
#define SOAP_TYPE__ds__Signature_DEFINED

#define soap_default__ds__Signature soap_default_ds__SignatureType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ds__SignatureType(struct soap*, const struct ds__SignatureType *);

#define soap_serialize__ds__Signature soap_serialize_ds__SignatureType


#define soap__ds__Signature2s soap_ds__SignatureType2s


#define soap_out__ds__Signature soap_out_ds__SignatureType


#define soap_s2_ds__Signature soap_s2ds__SignatureType


#define soap_in__ds__Signature soap_in_ds__SignatureType

#define soap_new__ds__Signature soap_new_ds__SignatureType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__ds__Signature(struct soap*, const struct ds__SignatureType *, const char*, const char*);

#ifndef soap_write__ds__Signature
#define soap_write__ds__Signature(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__ds__Signature(soap, data), 0) || soap_put__ds__Signature(soap, data, "ds:Signature", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__ds__Signature
#define soap_PUT__ds__Signature(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ds__Signature(soap, data), 0) || soap_put__ds__Signature(soap, data, "ds:Signature", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__ds__Signature
#define soap_PATCH__ds__Signature(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ds__Signature(soap, data), 0) || soap_put__ds__Signature(soap, data, "ds:Signature", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__ds__Signature
#define soap_POST_send__ds__Signature(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__ds__Signature(soap, data), 0) || soap_put__ds__Signature(soap, data, "ds:Signature", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__ds__Signature soap_get_ds__SignatureType


#define soap_read__ds__Signature soap_read_ds__SignatureType


#define soap_GET__ds__Signature soap_GET_ds__SignatureType


#define soap_POST_recv__ds__Signature soap_POST_recv_ds__SignatureType

#endif

#ifndef SOAP_TYPE_ds__SignedInfoType_DEFINED
#define SOAP_TYPE_ds__SignedInfoType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ds__SignedInfoType(struct soap*, struct ds__SignedInfoType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ds__SignedInfoType(struct soap*, const struct ds__SignedInfoType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ds__SignedInfoType(struct soap*, const char*, int, const struct ds__SignedInfoType *, const char*);
SOAP_FMAC3 struct ds__SignedInfoType * SOAP_FMAC4 soap_in_ds__SignedInfoType(struct soap*, const char*, struct ds__SignedInfoType *, const char*);

SOAP_FMAC3 struct ds__SignedInfoType * SOAP_FMAC4 soap_new_ds__SignedInfoType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ds__SignedInfoType(struct soap*, const struct ds__SignedInfoType *, const char*, const char*);

#ifndef soap_write_ds__SignedInfoType
#define soap_write_ds__SignedInfoType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ds__SignedInfoType(soap, data), 0) || soap_put_ds__SignedInfoType(soap, data, "ds:SignedInfoType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ds__SignedInfoType
#define soap_PUT_ds__SignedInfoType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__SignedInfoType(soap, data), 0) || soap_put_ds__SignedInfoType(soap, data, "ds:SignedInfoType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_ds__SignedInfoType
#define soap_PATCH_ds__SignedInfoType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__SignedInfoType(soap, data), 0) || soap_put_ds__SignedInfoType(soap, data, "ds:SignedInfoType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ds__SignedInfoType
#define soap_POST_send_ds__SignedInfoType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__SignedInfoType(soap, data), 0) || soap_put_ds__SignedInfoType(soap, data, "ds:SignedInfoType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ds__SignedInfoType * SOAP_FMAC4 soap_get_ds__SignedInfoType(struct soap*, struct ds__SignedInfoType *, const char*, const char*);

#ifndef soap_read_ds__SignedInfoType
#define soap_read_ds__SignedInfoType(soap, data) ( ((data) ? (soap_default_ds__SignedInfoType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ds__SignedInfoType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ds__SignedInfoType
#define soap_GET_ds__SignedInfoType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ds__SignedInfoType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ds__SignedInfoType
#define soap_POST_recv_ds__SignedInfoType(soap, data) ( soap_read_ds__SignedInfoType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ds__SignatureType_DEFINED
#define SOAP_TYPE_ds__SignatureType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ds__SignatureType(struct soap*, struct ds__SignatureType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ds__SignatureType(struct soap*, const struct ds__SignatureType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ds__SignatureType(struct soap*, const char*, int, const struct ds__SignatureType *, const char*);
SOAP_FMAC3 struct ds__SignatureType * SOAP_FMAC4 soap_in_ds__SignatureType(struct soap*, const char*, struct ds__SignatureType *, const char*);

SOAP_FMAC3 struct ds__SignatureType * SOAP_FMAC4 soap_new_ds__SignatureType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ds__SignatureType(struct soap*, const struct ds__SignatureType *, const char*, const char*);

#ifndef soap_write_ds__SignatureType
#define soap_write_ds__SignatureType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ds__SignatureType(soap, data), 0) || soap_put_ds__SignatureType(soap, data, "ds:SignatureType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ds__SignatureType
#define soap_PUT_ds__SignatureType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__SignatureType(soap, data), 0) || soap_put_ds__SignatureType(soap, data, "ds:SignatureType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_ds__SignatureType
#define soap_PATCH_ds__SignatureType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__SignatureType(soap, data), 0) || soap_put_ds__SignatureType(soap, data, "ds:SignatureType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ds__SignatureType
#define soap_POST_send_ds__SignatureType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__SignatureType(soap, data), 0) || soap_put_ds__SignatureType(soap, data, "ds:SignatureType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ds__SignatureType * SOAP_FMAC4 soap_get_ds__SignatureType(struct soap*, struct ds__SignatureType *, const char*, const char*);

#ifndef soap_read_ds__SignatureType
#define soap_read_ds__SignatureType(soap, data) ( ((data) ? (soap_default_ds__SignatureType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ds__SignatureType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ds__SignatureType
#define soap_GET_ds__SignatureType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ds__SignatureType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ds__SignatureType
#define soap_POST_recv_ds__SignatureType(soap, data) ( soap_read_ds__SignatureType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_xenc__EncryptedKeyType_DEFINED
#define SOAP_TYPE_xenc__EncryptedKeyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xenc__EncryptedKeyType(struct soap*, struct xenc__EncryptedKeyType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xenc__EncryptedKeyType(struct soap*, const struct xenc__EncryptedKeyType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xenc__EncryptedKeyType(struct soap*, const char*, int, const struct xenc__EncryptedKeyType *, const char*);
SOAP_FMAC3 struct xenc__EncryptedKeyType * SOAP_FMAC4 soap_in_xenc__EncryptedKeyType(struct soap*, const char*, struct xenc__EncryptedKeyType *, const char*);

SOAP_FMAC3 struct xenc__EncryptedKeyType * SOAP_FMAC4 soap_new_xenc__EncryptedKeyType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xenc__EncryptedKeyType(struct soap*, const struct xenc__EncryptedKeyType *, const char*, const char*);

#ifndef soap_write_xenc__EncryptedKeyType
#define soap_write_xenc__EncryptedKeyType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xenc__EncryptedKeyType(soap, data), 0) || soap_put_xenc__EncryptedKeyType(soap, data, "xenc:EncryptedKeyType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_xenc__EncryptedKeyType
#define soap_PUT_xenc__EncryptedKeyType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__EncryptedKeyType(soap, data), 0) || soap_put_xenc__EncryptedKeyType(soap, data, "xenc:EncryptedKeyType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_xenc__EncryptedKeyType
#define soap_PATCH_xenc__EncryptedKeyType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__EncryptedKeyType(soap, data), 0) || soap_put_xenc__EncryptedKeyType(soap, data, "xenc:EncryptedKeyType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_xenc__EncryptedKeyType
#define soap_POST_send_xenc__EncryptedKeyType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_xenc__EncryptedKeyType(soap, data), 0) || soap_put_xenc__EncryptedKeyType(soap, data, "xenc:EncryptedKeyType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct xenc__EncryptedKeyType * SOAP_FMAC4 soap_get_xenc__EncryptedKeyType(struct soap*, struct xenc__EncryptedKeyType *, const char*, const char*);

#ifndef soap_read_xenc__EncryptedKeyType
#define soap_read_xenc__EncryptedKeyType(soap, data) ( ((data) ? (soap_default_xenc__EncryptedKeyType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xenc__EncryptedKeyType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_xenc__EncryptedKeyType
#define soap_GET_xenc__EncryptedKeyType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_xenc__EncryptedKeyType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_xenc__EncryptedKeyType
#define soap_POST_recv_xenc__EncryptedKeyType(soap, data) ( soap_read_xenc__EncryptedKeyType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ds__KeyInfoType_DEFINED
#define SOAP_TYPE_ds__KeyInfoType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ds__KeyInfoType(struct soap*, struct ds__KeyInfoType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ds__KeyInfoType(struct soap*, const struct ds__KeyInfoType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ds__KeyInfoType(struct soap*, const char*, int, const struct ds__KeyInfoType *, const char*);
SOAP_FMAC3 struct ds__KeyInfoType * SOAP_FMAC4 soap_in_ds__KeyInfoType(struct soap*, const char*, struct ds__KeyInfoType *, const char*);

SOAP_FMAC3 struct ds__KeyInfoType * SOAP_FMAC4 soap_new_ds__KeyInfoType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ds__KeyInfoType(struct soap*, const struct ds__KeyInfoType *, const char*, const char*);

#ifndef soap_write_ds__KeyInfoType
#define soap_write_ds__KeyInfoType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ds__KeyInfoType(soap, data), 0) || soap_put_ds__KeyInfoType(soap, data, "ds:KeyInfoType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ds__KeyInfoType
#define soap_PUT_ds__KeyInfoType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__KeyInfoType(soap, data), 0) || soap_put_ds__KeyInfoType(soap, data, "ds:KeyInfoType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_ds__KeyInfoType
#define soap_PATCH_ds__KeyInfoType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__KeyInfoType(soap, data), 0) || soap_put_ds__KeyInfoType(soap, data, "ds:KeyInfoType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ds__KeyInfoType
#define soap_POST_send_ds__KeyInfoType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__KeyInfoType(soap, data), 0) || soap_put_ds__KeyInfoType(soap, data, "ds:KeyInfoType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ds__KeyInfoType * SOAP_FMAC4 soap_get_ds__KeyInfoType(struct soap*, struct ds__KeyInfoType *, const char*, const char*);

#ifndef soap_read_ds__KeyInfoType
#define soap_read_ds__KeyInfoType(soap, data) ( ((data) ? (soap_default_ds__KeyInfoType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ds__KeyInfoType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ds__KeyInfoType
#define soap_GET_ds__KeyInfoType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ds__KeyInfoType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ds__KeyInfoType
#define soap_POST_recv_ds__KeyInfoType(soap, data) ( soap_read_ds__KeyInfoType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_ds__X509DataType_DEFINED
#define SOAP_TYPE_ds__X509DataType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ds__X509DataType(struct soap*, struct ds__X509DataType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ds__X509DataType(struct soap*, const struct ds__X509DataType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ds__X509DataType(struct soap*, const char*, int, const struct ds__X509DataType *, const char*);
SOAP_FMAC3 struct ds__X509DataType * SOAP_FMAC4 soap_in_ds__X509DataType(struct soap*, const char*, struct ds__X509DataType *, const char*);

SOAP_FMAC3 struct ds__X509DataType * SOAP_FMAC4 soap_new_ds__X509DataType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ds__X509DataType(struct soap*, const struct ds__X509DataType *, const char*, const char*);

#ifndef soap_write_ds__X509DataType
#define soap_write_ds__X509DataType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_ds__X509DataType(soap, data), 0) || soap_put_ds__X509DataType(soap, data, "ds:X509DataType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_ds__X509DataType
#define soap_PUT_ds__X509DataType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__X509DataType(soap, data), 0) || soap_put_ds__X509DataType(soap, data, "ds:X509DataType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_ds__X509DataType
#define soap_PATCH_ds__X509DataType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__X509DataType(soap, data), 0) || soap_put_ds__X509DataType(soap, data, "ds:X509DataType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_ds__X509DataType
#define soap_POST_send_ds__X509DataType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_ds__X509DataType(soap, data), 0) || soap_put_ds__X509DataType(soap, data, "ds:X509DataType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct ds__X509DataType * SOAP_FMAC4 soap_get_ds__X509DataType(struct soap*, struct ds__X509DataType *, const char*, const char*);

#ifndef soap_read_ds__X509DataType
#define soap_read_ds__X509DataType(soap, data) ( ((data) ? (soap_default_ds__X509DataType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ds__X509DataType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_ds__X509DataType
#define soap_GET_ds__X509DataType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_ds__X509DataType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_ds__X509DataType
#define soap_POST_recv_ds__X509DataType(soap, data) ( soap_read_ds__X509DataType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsse__SecurityTokenReference_DEFINED
#define SOAP_TYPE__wsse__SecurityTokenReference_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsse__SecurityTokenReference(struct soap*, struct _wsse__SecurityTokenReference *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsse__SecurityTokenReference(struct soap*, const struct _wsse__SecurityTokenReference *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsse__SecurityTokenReference(struct soap*, const char*, int, const struct _wsse__SecurityTokenReference *, const char*);
SOAP_FMAC3 struct _wsse__SecurityTokenReference * SOAP_FMAC4 soap_in__wsse__SecurityTokenReference(struct soap*, const char*, struct _wsse__SecurityTokenReference *, const char*);

SOAP_FMAC3 struct _wsse__SecurityTokenReference * SOAP_FMAC4 soap_new__wsse__SecurityTokenReference(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsse__SecurityTokenReference(struct soap*, const struct _wsse__SecurityTokenReference *, const char*, const char*);

#ifndef soap_write__wsse__SecurityTokenReference
#define soap_write__wsse__SecurityTokenReference(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsse__SecurityTokenReference(soap, data), 0) || soap_put__wsse__SecurityTokenReference(soap, data, "wsse:SecurityTokenReference", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsse__SecurityTokenReference
#define soap_PUT__wsse__SecurityTokenReference(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsse__SecurityTokenReference(soap, data), 0) || soap_put__wsse__SecurityTokenReference(soap, data, "wsse:SecurityTokenReference", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsse__SecurityTokenReference
#define soap_PATCH__wsse__SecurityTokenReference(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsse__SecurityTokenReference(soap, data), 0) || soap_put__wsse__SecurityTokenReference(soap, data, "wsse:SecurityTokenReference", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsse__SecurityTokenReference
#define soap_POST_send__wsse__SecurityTokenReference(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsse__SecurityTokenReference(soap, data), 0) || soap_put__wsse__SecurityTokenReference(soap, data, "wsse:SecurityTokenReference", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsse__SecurityTokenReference * SOAP_FMAC4 soap_get__wsse__SecurityTokenReference(struct soap*, struct _wsse__SecurityTokenReference *, const char*, const char*);

#ifndef soap_read__wsse__SecurityTokenReference
#define soap_read__wsse__SecurityTokenReference(soap, data) ( ((data) ? (soap_default__wsse__SecurityTokenReference(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsse__SecurityTokenReference(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsse__SecurityTokenReference
#define soap_GET__wsse__SecurityTokenReference(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsse__SecurityTokenReference(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsse__SecurityTokenReference
#define soap_POST_recv__wsse__SecurityTokenReference(soap, data) ( soap_read__wsse__SecurityTokenReference(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsse__KeyIdentifier_DEFINED
#define SOAP_TYPE__wsse__KeyIdentifier_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsse__KeyIdentifier(struct soap*, struct _wsse__KeyIdentifier *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsse__KeyIdentifier(struct soap*, const struct _wsse__KeyIdentifier *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsse__KeyIdentifier(struct soap*, const char*, int, const struct _wsse__KeyIdentifier *, const char*);
SOAP_FMAC3 struct _wsse__KeyIdentifier * SOAP_FMAC4 soap_in__wsse__KeyIdentifier(struct soap*, const char*, struct _wsse__KeyIdentifier *, const char*);

SOAP_FMAC3 struct _wsse__KeyIdentifier * SOAP_FMAC4 soap_new__wsse__KeyIdentifier(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsse__KeyIdentifier(struct soap*, const struct _wsse__KeyIdentifier *, const char*, const char*);

#ifndef soap_write__wsse__KeyIdentifier
#define soap_write__wsse__KeyIdentifier(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsse__KeyIdentifier(soap, data), 0) || soap_put__wsse__KeyIdentifier(soap, data, "wsse:KeyIdentifier", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsse__KeyIdentifier
#define soap_PUT__wsse__KeyIdentifier(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsse__KeyIdentifier(soap, data), 0) || soap_put__wsse__KeyIdentifier(soap, data, "wsse:KeyIdentifier", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsse__KeyIdentifier
#define soap_PATCH__wsse__KeyIdentifier(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsse__KeyIdentifier(soap, data), 0) || soap_put__wsse__KeyIdentifier(soap, data, "wsse:KeyIdentifier", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsse__KeyIdentifier
#define soap_POST_send__wsse__KeyIdentifier(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsse__KeyIdentifier(soap, data), 0) || soap_put__wsse__KeyIdentifier(soap, data, "wsse:KeyIdentifier", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsse__KeyIdentifier * SOAP_FMAC4 soap_get__wsse__KeyIdentifier(struct soap*, struct _wsse__KeyIdentifier *, const char*, const char*);

#ifndef soap_read__wsse__KeyIdentifier
#define soap_read__wsse__KeyIdentifier(soap, data) ( ((data) ? (soap_default__wsse__KeyIdentifier(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsse__KeyIdentifier(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsse__KeyIdentifier
#define soap_GET__wsse__KeyIdentifier(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsse__KeyIdentifier(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsse__KeyIdentifier
#define soap_POST_recv__wsse__KeyIdentifier(soap, data) ( soap_read__wsse__KeyIdentifier(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsse__Embedded_DEFINED
#define SOAP_TYPE__wsse__Embedded_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsse__Embedded(struct soap*, struct _wsse__Embedded *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsse__Embedded(struct soap*, const struct _wsse__Embedded *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsse__Embedded(struct soap*, const char*, int, const struct _wsse__Embedded *, const char*);
SOAP_FMAC3 struct _wsse__Embedded * SOAP_FMAC4 soap_in__wsse__Embedded(struct soap*, const char*, struct _wsse__Embedded *, const char*);

SOAP_FMAC3 struct _wsse__Embedded * SOAP_FMAC4 soap_new__wsse__Embedded(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsse__Embedded(struct soap*, const struct _wsse__Embedded *, const char*, const char*);

#ifndef soap_write__wsse__Embedded
#define soap_write__wsse__Embedded(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsse__Embedded(soap, data), 0) || soap_put__wsse__Embedded(soap, data, "wsse:Embedded", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsse__Embedded
#define soap_PUT__wsse__Embedded(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsse__Embedded(soap, data), 0) || soap_put__wsse__Embedded(soap, data, "wsse:Embedded", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsse__Embedded
#define soap_PATCH__wsse__Embedded(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsse__Embedded(soap, data), 0) || soap_put__wsse__Embedded(soap, data, "wsse:Embedded", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsse__Embedded
#define soap_POST_send__wsse__Embedded(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsse__Embedded(soap, data), 0) || soap_put__wsse__Embedded(soap, data, "wsse:Embedded", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsse__Embedded * SOAP_FMAC4 soap_get__wsse__Embedded(struct soap*, struct _wsse__Embedded *, const char*, const char*);

#ifndef soap_read__wsse__Embedded
#define soap_read__wsse__Embedded(soap, data) ( ((data) ? (soap_default__wsse__Embedded(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsse__Embedded(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsse__Embedded
#define soap_GET__wsse__Embedded(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsse__Embedded(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsse__Embedded
#define soap_POST_recv__wsse__Embedded(soap, data) ( soap_read__wsse__Embedded(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsse__Reference_DEFINED
#define SOAP_TYPE__wsse__Reference_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsse__Reference(struct soap*, struct _wsse__Reference *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsse__Reference(struct soap*, const struct _wsse__Reference *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsse__Reference(struct soap*, const char*, int, const struct _wsse__Reference *, const char*);
SOAP_FMAC3 struct _wsse__Reference * SOAP_FMAC4 soap_in__wsse__Reference(struct soap*, const char*, struct _wsse__Reference *, const char*);

SOAP_FMAC3 struct _wsse__Reference * SOAP_FMAC4 soap_new__wsse__Reference(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsse__Reference(struct soap*, const struct _wsse__Reference *, const char*, const char*);

#ifndef soap_write__wsse__Reference
#define soap_write__wsse__Reference(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsse__Reference(soap, data), 0) || soap_put__wsse__Reference(soap, data, "wsse:Reference", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsse__Reference
#define soap_PUT__wsse__Reference(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsse__Reference(soap, data), 0) || soap_put__wsse__Reference(soap, data, "wsse:Reference", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsse__Reference
#define soap_PATCH__wsse__Reference(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsse__Reference(soap, data), 0) || soap_put__wsse__Reference(soap, data, "wsse:Reference", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsse__Reference
#define soap_POST_send__wsse__Reference(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsse__Reference(soap, data), 0) || soap_put__wsse__Reference(soap, data, "wsse:Reference", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsse__Reference * SOAP_FMAC4 soap_get__wsse__Reference(struct soap*, struct _wsse__Reference *, const char*, const char*);

#ifndef soap_read__wsse__Reference
#define soap_read__wsse__Reference(soap, data) ( ((data) ? (soap_default__wsse__Reference(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsse__Reference(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsse__Reference
#define soap_GET__wsse__Reference(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsse__Reference(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsse__Reference
#define soap_POST_recv__wsse__Reference(soap, data) ( soap_read__wsse__Reference(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsse__BinarySecurityToken_DEFINED
#define SOAP_TYPE__wsse__BinarySecurityToken_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsse__BinarySecurityToken(struct soap*, struct _wsse__BinarySecurityToken *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsse__BinarySecurityToken(struct soap*, const struct _wsse__BinarySecurityToken *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsse__BinarySecurityToken(struct soap*, const char*, int, const struct _wsse__BinarySecurityToken *, const char*);
SOAP_FMAC3 struct _wsse__BinarySecurityToken * SOAP_FMAC4 soap_in__wsse__BinarySecurityToken(struct soap*, const char*, struct _wsse__BinarySecurityToken *, const char*);

SOAP_FMAC3 struct _wsse__BinarySecurityToken * SOAP_FMAC4 soap_new__wsse__BinarySecurityToken(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsse__BinarySecurityToken(struct soap*, const struct _wsse__BinarySecurityToken *, const char*, const char*);

#ifndef soap_write__wsse__BinarySecurityToken
#define soap_write__wsse__BinarySecurityToken(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsse__BinarySecurityToken(soap, data), 0) || soap_put__wsse__BinarySecurityToken(soap, data, "wsse:BinarySecurityToken", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsse__BinarySecurityToken
#define soap_PUT__wsse__BinarySecurityToken(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsse__BinarySecurityToken(soap, data), 0) || soap_put__wsse__BinarySecurityToken(soap, data, "wsse:BinarySecurityToken", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsse__BinarySecurityToken
#define soap_PATCH__wsse__BinarySecurityToken(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsse__BinarySecurityToken(soap, data), 0) || soap_put__wsse__BinarySecurityToken(soap, data, "wsse:BinarySecurityToken", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsse__BinarySecurityToken
#define soap_POST_send__wsse__BinarySecurityToken(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsse__BinarySecurityToken(soap, data), 0) || soap_put__wsse__BinarySecurityToken(soap, data, "wsse:BinarySecurityToken", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsse__BinarySecurityToken * SOAP_FMAC4 soap_get__wsse__BinarySecurityToken(struct soap*, struct _wsse__BinarySecurityToken *, const char*, const char*);

#ifndef soap_read__wsse__BinarySecurityToken
#define soap_read__wsse__BinarySecurityToken(soap, data) ( ((data) ? (soap_default__wsse__BinarySecurityToken(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsse__BinarySecurityToken(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsse__BinarySecurityToken
#define soap_GET__wsse__BinarySecurityToken(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsse__BinarySecurityToken(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsse__BinarySecurityToken
#define soap_POST_recv__wsse__BinarySecurityToken(soap, data) ( soap_read__wsse__BinarySecurityToken(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsse__Password_DEFINED
#define SOAP_TYPE__wsse__Password_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsse__Password(struct soap*, struct _wsse__Password *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsse__Password(struct soap*, const struct _wsse__Password *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsse__Password(struct soap*, const char*, int, const struct _wsse__Password *, const char*);
SOAP_FMAC3 struct _wsse__Password * SOAP_FMAC4 soap_in__wsse__Password(struct soap*, const char*, struct _wsse__Password *, const char*);

SOAP_FMAC3 struct _wsse__Password * SOAP_FMAC4 soap_new__wsse__Password(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsse__Password(struct soap*, const struct _wsse__Password *, const char*, const char*);

#ifndef soap_write__wsse__Password
#define soap_write__wsse__Password(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsse__Password(soap, data), 0) || soap_put__wsse__Password(soap, data, "wsse:Password", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsse__Password
#define soap_PUT__wsse__Password(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsse__Password(soap, data), 0) || soap_put__wsse__Password(soap, data, "wsse:Password", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsse__Password
#define soap_PATCH__wsse__Password(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsse__Password(soap, data), 0) || soap_put__wsse__Password(soap, data, "wsse:Password", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsse__Password
#define soap_POST_send__wsse__Password(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsse__Password(soap, data), 0) || soap_put__wsse__Password(soap, data, "wsse:Password", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsse__Password * SOAP_FMAC4 soap_get__wsse__Password(struct soap*, struct _wsse__Password *, const char*, const char*);

#ifndef soap_read__wsse__Password
#define soap_read__wsse__Password(soap, data) ( ((data) ? (soap_default__wsse__Password(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsse__Password(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsse__Password
#define soap_GET__wsse__Password(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsse__Password(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsse__Password
#define soap_POST_recv__wsse__Password(soap, data) ( soap_read__wsse__Password(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsse__UsernameToken_DEFINED
#define SOAP_TYPE__wsse__UsernameToken_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsse__UsernameToken(struct soap*, struct _wsse__UsernameToken *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsse__UsernameToken(struct soap*, const struct _wsse__UsernameToken *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsse__UsernameToken(struct soap*, const char*, int, const struct _wsse__UsernameToken *, const char*);
SOAP_FMAC3 struct _wsse__UsernameToken * SOAP_FMAC4 soap_in__wsse__UsernameToken(struct soap*, const char*, struct _wsse__UsernameToken *, const char*);

SOAP_FMAC3 struct _wsse__UsernameToken * SOAP_FMAC4 soap_new__wsse__UsernameToken(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsse__UsernameToken(struct soap*, const struct _wsse__UsernameToken *, const char*, const char*);

#ifndef soap_write__wsse__UsernameToken
#define soap_write__wsse__UsernameToken(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsse__UsernameToken(soap, data), 0) || soap_put__wsse__UsernameToken(soap, data, "wsse:UsernameToken", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsse__UsernameToken
#define soap_PUT__wsse__UsernameToken(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsse__UsernameToken(soap, data), 0) || soap_put__wsse__UsernameToken(soap, data, "wsse:UsernameToken", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsse__UsernameToken
#define soap_PATCH__wsse__UsernameToken(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsse__UsernameToken(soap, data), 0) || soap_put__wsse__UsernameToken(soap, data, "wsse:UsernameToken", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsse__UsernameToken
#define soap_POST_send__wsse__UsernameToken(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsse__UsernameToken(soap, data), 0) || soap_put__wsse__UsernameToken(soap, data, "wsse:UsernameToken", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsse__UsernameToken * SOAP_FMAC4 soap_get__wsse__UsernameToken(struct soap*, struct _wsse__UsernameToken *, const char*, const char*);

#ifndef soap_read__wsse__UsernameToken
#define soap_read__wsse__UsernameToken(soap, data) ( ((data) ? (soap_default__wsse__UsernameToken(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsse__UsernameToken(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsse__UsernameToken
#define soap_GET__wsse__UsernameToken(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsse__UsernameToken(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsse__UsernameToken
#define soap_POST_recv__wsse__UsernameToken(soap, data) ( soap_read__wsse__UsernameToken(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsse__EncodedString_DEFINED
#define SOAP_TYPE_wsse__EncodedString_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsse__EncodedString(struct soap*, struct wsse__EncodedString *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsse__EncodedString(struct soap*, const struct wsse__EncodedString *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsse__EncodedString(struct soap*, const char*, int, const struct wsse__EncodedString *, const char*);
SOAP_FMAC3 struct wsse__EncodedString * SOAP_FMAC4 soap_in_wsse__EncodedString(struct soap*, const char*, struct wsse__EncodedString *, const char*);

SOAP_FMAC3 struct wsse__EncodedString * SOAP_FMAC4 soap_new_wsse__EncodedString(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsse__EncodedString(struct soap*, const struct wsse__EncodedString *, const char*, const char*);

#ifndef soap_write_wsse__EncodedString
#define soap_write_wsse__EncodedString(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsse__EncodedString(soap, data), 0) || soap_put_wsse__EncodedString(soap, data, "wsse:EncodedString", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsse__EncodedString
#define soap_PUT_wsse__EncodedString(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsse__EncodedString(soap, data), 0) || soap_put_wsse__EncodedString(soap, data, "wsse:EncodedString", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsse__EncodedString
#define soap_PATCH_wsse__EncodedString(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsse__EncodedString(soap, data), 0) || soap_put_wsse__EncodedString(soap, data, "wsse:EncodedString", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsse__EncodedString
#define soap_POST_send_wsse__EncodedString(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsse__EncodedString(soap, data), 0) || soap_put_wsse__EncodedString(soap, data, "wsse:EncodedString", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsse__EncodedString * SOAP_FMAC4 soap_get_wsse__EncodedString(struct soap*, struct wsse__EncodedString *, const char*, const char*);

#ifndef soap_read_wsse__EncodedString
#define soap_read_wsse__EncodedString(soap, data) ( ((data) ? (soap_default_wsse__EncodedString(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsse__EncodedString(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsse__EncodedString
#define soap_GET_wsse__EncodedString(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsse__EncodedString(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsse__EncodedString
#define soap_POST_recv_wsse__EncodedString(soap, data) ( soap_read_wsse__EncodedString(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsu__Timestamp_DEFINED
#define SOAP_TYPE__wsu__Timestamp_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsu__Timestamp(struct soap*, struct _wsu__Timestamp *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsu__Timestamp(struct soap*, const struct _wsu__Timestamp *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsu__Timestamp(struct soap*, const char*, int, const struct _wsu__Timestamp *, const char*);
SOAP_FMAC3 struct _wsu__Timestamp * SOAP_FMAC4 soap_in__wsu__Timestamp(struct soap*, const char*, struct _wsu__Timestamp *, const char*);

SOAP_FMAC3 struct _wsu__Timestamp * SOAP_FMAC4 soap_new__wsu__Timestamp(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsu__Timestamp(struct soap*, const struct _wsu__Timestamp *, const char*, const char*);

#ifndef soap_write__wsu__Timestamp
#define soap_write__wsu__Timestamp(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsu__Timestamp(soap, data), 0) || soap_put__wsu__Timestamp(soap, data, "wsu:Timestamp", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsu__Timestamp
#define soap_PUT__wsu__Timestamp(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsu__Timestamp(soap, data), 0) || soap_put__wsu__Timestamp(soap, data, "wsu:Timestamp", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsu__Timestamp
#define soap_PATCH__wsu__Timestamp(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsu__Timestamp(soap, data), 0) || soap_put__wsu__Timestamp(soap, data, "wsu:Timestamp", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsu__Timestamp
#define soap_POST_send__wsu__Timestamp(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsu__Timestamp(soap, data), 0) || soap_put__wsu__Timestamp(soap, data, "wsu:Timestamp", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _wsu__Timestamp * SOAP_FMAC4 soap_get__wsu__Timestamp(struct soap*, struct _wsu__Timestamp *, const char*, const char*);

#ifndef soap_read__wsu__Timestamp
#define soap_read__wsu__Timestamp(soap, data) ( ((data) ? (soap_default__wsu__Timestamp(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsu__Timestamp(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__wsu__Timestamp
#define soap_GET__wsu__Timestamp(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__wsu__Timestamp(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__wsu__Timestamp
#define soap_POST_recv__wsu__Timestamp(soap, data) ( soap_read__wsu__Timestamp(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_SOAP_ENV__Fault_alex_DEFINED
#define SOAP_TYPE_SOAP_ENV__Fault_alex_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault_alex(struct soap*, struct SOAP_ENV__Fault_alex *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault_alex(struct soap*, const struct SOAP_ENV__Fault_alex *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault_alex(struct soap*, const char*, int, const struct SOAP_ENV__Fault_alex *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault_alex * SOAP_FMAC4 soap_in_SOAP_ENV__Fault_alex(struct soap*, const char*, struct SOAP_ENV__Fault_alex *, const char*);

SOAP_FMAC3 struct SOAP_ENV__Fault_alex * SOAP_FMAC4 soap_new_SOAP_ENV__Fault_alex(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault_alex(struct soap*, const struct SOAP_ENV__Fault_alex *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault_alex
#define soap_write_SOAP_ENV__Fault_alex(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault_alex(soap, data), 0) || soap_put_SOAP_ENV__Fault_alex(soap, data, "SOAP-ENV:Fault-alex", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_SOAP_ENV__Fault_alex
#define soap_PUT_SOAP_ENV__Fault_alex(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Fault_alex(soap, data), 0) || soap_put_SOAP_ENV__Fault_alex(soap, data, "SOAP-ENV:Fault-alex", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_SOAP_ENV__Fault_alex
#define soap_PATCH_SOAP_ENV__Fault_alex(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Fault_alex(soap, data), 0) || soap_put_SOAP_ENV__Fault_alex(soap, data, "SOAP-ENV:Fault-alex", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_SOAP_ENV__Fault_alex
#define soap_POST_send_SOAP_ENV__Fault_alex(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Fault_alex(soap, data), 0) || soap_put_SOAP_ENV__Fault_alex(soap, data, "SOAP-ENV:Fault-alex", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault_alex * SOAP_FMAC4 soap_get_SOAP_ENV__Fault_alex(struct soap*, struct SOAP_ENV__Fault_alex *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault_alex
#define soap_read_SOAP_ENV__Fault_alex(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Fault_alex(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault_alex(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_SOAP_ENV__Fault_alex
#define soap_GET_SOAP_ENV__Fault_alex(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_SOAP_ENV__Fault_alex(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_SOAP_ENV__Fault_alex
#define soap_POST_recv_SOAP_ENV__Fault_alex(soap, data) ( soap_read_SOAP_ENV__Fault_alex(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_chan__ChannelInstanceType_DEFINED
#define SOAP_TYPE_chan__ChannelInstanceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_chan__ChannelInstanceType(struct soap*, struct chan__ChannelInstanceType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_chan__ChannelInstanceType(struct soap*, const struct chan__ChannelInstanceType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_chan__ChannelInstanceType(struct soap*, const char*, int, const struct chan__ChannelInstanceType *, const char*);
SOAP_FMAC3 struct chan__ChannelInstanceType * SOAP_FMAC4 soap_in_chan__ChannelInstanceType(struct soap*, const char*, struct chan__ChannelInstanceType *, const char*);

SOAP_FMAC3 struct chan__ChannelInstanceType * SOAP_FMAC4 soap_new_chan__ChannelInstanceType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_chan__ChannelInstanceType(struct soap*, const struct chan__ChannelInstanceType *, const char*, const char*);

#ifndef soap_write_chan__ChannelInstanceType
#define soap_write_chan__ChannelInstanceType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_chan__ChannelInstanceType(soap, data), 0) || soap_put_chan__ChannelInstanceType(soap, data, "chan:ChannelInstanceType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_chan__ChannelInstanceType
#define soap_PUT_chan__ChannelInstanceType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_chan__ChannelInstanceType(soap, data), 0) || soap_put_chan__ChannelInstanceType(soap, data, "chan:ChannelInstanceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_chan__ChannelInstanceType
#define soap_PATCH_chan__ChannelInstanceType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_chan__ChannelInstanceType(soap, data), 0) || soap_put_chan__ChannelInstanceType(soap, data, "chan:ChannelInstanceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_chan__ChannelInstanceType
#define soap_POST_send_chan__ChannelInstanceType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_chan__ChannelInstanceType(soap, data), 0) || soap_put_chan__ChannelInstanceType(soap, data, "chan:ChannelInstanceType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct chan__ChannelInstanceType * SOAP_FMAC4 soap_get_chan__ChannelInstanceType(struct soap*, struct chan__ChannelInstanceType *, const char*, const char*);

#ifndef soap_read_chan__ChannelInstanceType
#define soap_read_chan__ChannelInstanceType(soap, data) ( ((data) ? (soap_default_chan__ChannelInstanceType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_chan__ChannelInstanceType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_chan__ChannelInstanceType
#define soap_GET_chan__ChannelInstanceType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_chan__ChannelInstanceType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_chan__ChannelInstanceType
#define soap_POST_recv_chan__ChannelInstanceType(soap, data) ( soap_read_chan__ChannelInstanceType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif
/* _wsa5__ProblemAction is a typedef synonym of wsa5__ProblemActionType */

#ifndef SOAP_TYPE__wsa5__ProblemAction_DEFINED
#define SOAP_TYPE__wsa5__ProblemAction_DEFINED

#define soap_default__wsa5__ProblemAction soap_default_wsa5__ProblemActionType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__ProblemActionType(struct soap*, const struct wsa5__ProblemActionType *);

#define soap_serialize__wsa5__ProblemAction soap_serialize_wsa5__ProblemActionType


#define soap__wsa5__ProblemAction2s soap_wsa5__ProblemActionType2s


#define soap_out__wsa5__ProblemAction soap_out_wsa5__ProblemActionType


#define soap_s2_wsa5__ProblemAction soap_s2wsa5__ProblemActionType


#define soap_in__wsa5__ProblemAction soap_in_wsa5__ProblemActionType

#define soap_new__wsa5__ProblemAction soap_new_wsa5__ProblemActionType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa5__ProblemAction(struct soap*, const struct wsa5__ProblemActionType *, const char*, const char*);

#ifndef soap_write__wsa5__ProblemAction
#define soap_write__wsa5__ProblemAction(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsa5__ProblemAction(soap, data), 0) || soap_put__wsa5__ProblemAction(soap, data, "wsa5:ProblemAction", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsa5__ProblemAction
#define soap_PUT__wsa5__ProblemAction(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__ProblemAction(soap, data), 0) || soap_put__wsa5__ProblemAction(soap, data, "wsa5:ProblemAction", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsa5__ProblemAction
#define soap_PATCH__wsa5__ProblemAction(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__ProblemAction(soap, data), 0) || soap_put__wsa5__ProblemAction(soap, data, "wsa5:ProblemAction", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsa5__ProblemAction
#define soap_POST_send__wsa5__ProblemAction(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__ProblemAction(soap, data), 0) || soap_put__wsa5__ProblemAction(soap, data, "wsa5:ProblemAction", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsa5__ProblemAction soap_get_wsa5__ProblemActionType


#define soap_read__wsa5__ProblemAction soap_read_wsa5__ProblemActionType


#define soap_GET__wsa5__ProblemAction soap_GET_wsa5__ProblemActionType


#define soap_POST_recv__wsa5__ProblemAction soap_POST_recv_wsa5__ProblemActionType

#endif
/* _wsa5__FaultTo is a typedef synonym of wsa5__EndpointReferenceType */

#ifndef SOAP_TYPE__wsa5__FaultTo_DEFINED
#define SOAP_TYPE__wsa5__FaultTo_DEFINED

#define soap_default__wsa5__FaultTo soap_default_wsa5__EndpointReferenceType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__EndpointReferenceType(struct soap*, const struct wsa5__EndpointReferenceType *);

#define soap_serialize__wsa5__FaultTo soap_serialize_wsa5__EndpointReferenceType


#define soap__wsa5__FaultTo2s soap_wsa5__EndpointReferenceType2s


#define soap_out__wsa5__FaultTo soap_out_wsa5__EndpointReferenceType


#define soap_s2_wsa5__FaultTo soap_s2wsa5__EndpointReferenceType


#define soap_in__wsa5__FaultTo soap_in_wsa5__EndpointReferenceType

#define soap_new__wsa5__FaultTo soap_new_wsa5__EndpointReferenceType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa5__FaultTo(struct soap*, const struct wsa5__EndpointReferenceType *, const char*, const char*);

#ifndef soap_write__wsa5__FaultTo
#define soap_write__wsa5__FaultTo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsa5__FaultTo(soap, data), 0) || soap_put__wsa5__FaultTo(soap, data, "wsa5:FaultTo", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsa5__FaultTo
#define soap_PUT__wsa5__FaultTo(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__FaultTo(soap, data), 0) || soap_put__wsa5__FaultTo(soap, data, "wsa5:FaultTo", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsa5__FaultTo
#define soap_PATCH__wsa5__FaultTo(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__FaultTo(soap, data), 0) || soap_put__wsa5__FaultTo(soap, data, "wsa5:FaultTo", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsa5__FaultTo
#define soap_POST_send__wsa5__FaultTo(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__FaultTo(soap, data), 0) || soap_put__wsa5__FaultTo(soap, data, "wsa5:FaultTo", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsa5__FaultTo soap_get_wsa5__EndpointReferenceType


#define soap_read__wsa5__FaultTo soap_read_wsa5__EndpointReferenceType


#define soap_GET__wsa5__FaultTo soap_GET_wsa5__EndpointReferenceType


#define soap_POST_recv__wsa5__FaultTo soap_POST_recv_wsa5__EndpointReferenceType

#endif
/* _wsa5__From is a typedef synonym of wsa5__EndpointReferenceType */

#ifndef SOAP_TYPE__wsa5__From_DEFINED
#define SOAP_TYPE__wsa5__From_DEFINED

#define soap_default__wsa5__From soap_default_wsa5__EndpointReferenceType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__EndpointReferenceType(struct soap*, const struct wsa5__EndpointReferenceType *);

#define soap_serialize__wsa5__From soap_serialize_wsa5__EndpointReferenceType


#define soap__wsa5__From2s soap_wsa5__EndpointReferenceType2s


#define soap_out__wsa5__From soap_out_wsa5__EndpointReferenceType


#define soap_s2_wsa5__From soap_s2wsa5__EndpointReferenceType


#define soap_in__wsa5__From soap_in_wsa5__EndpointReferenceType

#define soap_new__wsa5__From soap_new_wsa5__EndpointReferenceType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa5__From(struct soap*, const struct wsa5__EndpointReferenceType *, const char*, const char*);

#ifndef soap_write__wsa5__From
#define soap_write__wsa5__From(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsa5__From(soap, data), 0) || soap_put__wsa5__From(soap, data, "wsa5:From", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsa5__From
#define soap_PUT__wsa5__From(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__From(soap, data), 0) || soap_put__wsa5__From(soap, data, "wsa5:From", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsa5__From
#define soap_PATCH__wsa5__From(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__From(soap, data), 0) || soap_put__wsa5__From(soap, data, "wsa5:From", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsa5__From
#define soap_POST_send__wsa5__From(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__From(soap, data), 0) || soap_put__wsa5__From(soap, data, "wsa5:From", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsa5__From soap_get_wsa5__EndpointReferenceType


#define soap_read__wsa5__From soap_read_wsa5__EndpointReferenceType


#define soap_GET__wsa5__From soap_GET_wsa5__EndpointReferenceType


#define soap_POST_recv__wsa5__From soap_POST_recv_wsa5__EndpointReferenceType

#endif
/* _wsa5__ReplyTo is a typedef synonym of wsa5__EndpointReferenceType */

#ifndef SOAP_TYPE__wsa5__ReplyTo_DEFINED
#define SOAP_TYPE__wsa5__ReplyTo_DEFINED

#define soap_default__wsa5__ReplyTo soap_default_wsa5__EndpointReferenceType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__EndpointReferenceType(struct soap*, const struct wsa5__EndpointReferenceType *);

#define soap_serialize__wsa5__ReplyTo soap_serialize_wsa5__EndpointReferenceType


#define soap__wsa5__ReplyTo2s soap_wsa5__EndpointReferenceType2s


#define soap_out__wsa5__ReplyTo soap_out_wsa5__EndpointReferenceType


#define soap_s2_wsa5__ReplyTo soap_s2wsa5__EndpointReferenceType


#define soap_in__wsa5__ReplyTo soap_in_wsa5__EndpointReferenceType

#define soap_new__wsa5__ReplyTo soap_new_wsa5__EndpointReferenceType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa5__ReplyTo(struct soap*, const struct wsa5__EndpointReferenceType *, const char*, const char*);

#ifndef soap_write__wsa5__ReplyTo
#define soap_write__wsa5__ReplyTo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsa5__ReplyTo(soap, data), 0) || soap_put__wsa5__ReplyTo(soap, data, "wsa5:ReplyTo", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsa5__ReplyTo
#define soap_PUT__wsa5__ReplyTo(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__ReplyTo(soap, data), 0) || soap_put__wsa5__ReplyTo(soap, data, "wsa5:ReplyTo", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsa5__ReplyTo
#define soap_PATCH__wsa5__ReplyTo(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__ReplyTo(soap, data), 0) || soap_put__wsa5__ReplyTo(soap, data, "wsa5:ReplyTo", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsa5__ReplyTo
#define soap_POST_send__wsa5__ReplyTo(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__ReplyTo(soap, data), 0) || soap_put__wsa5__ReplyTo(soap, data, "wsa5:ReplyTo", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsa5__ReplyTo soap_get_wsa5__EndpointReferenceType


#define soap_read__wsa5__ReplyTo soap_read_wsa5__EndpointReferenceType


#define soap_GET__wsa5__ReplyTo soap_GET_wsa5__EndpointReferenceType


#define soap_POST_recv__wsa5__ReplyTo soap_POST_recv_wsa5__EndpointReferenceType

#endif
/* _wsa5__RelatesTo is a typedef synonym of wsa5__RelatesToType */

#ifndef SOAP_TYPE__wsa5__RelatesTo_DEFINED
#define SOAP_TYPE__wsa5__RelatesTo_DEFINED

#define soap_default__wsa5__RelatesTo soap_default_wsa5__RelatesToType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__RelatesToType(struct soap*, const struct wsa5__RelatesToType *);

#define soap_serialize__wsa5__RelatesTo soap_serialize_wsa5__RelatesToType


#define soap__wsa5__RelatesTo2s soap_wsa5__RelatesToType2s


#define soap_out__wsa5__RelatesTo soap_out_wsa5__RelatesToType


#define soap_s2_wsa5__RelatesTo soap_s2wsa5__RelatesToType


#define soap_in__wsa5__RelatesTo soap_in_wsa5__RelatesToType

#define soap_new__wsa5__RelatesTo soap_new_wsa5__RelatesToType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa5__RelatesTo(struct soap*, const struct wsa5__RelatesToType *, const char*, const char*);

#ifndef soap_write__wsa5__RelatesTo
#define soap_write__wsa5__RelatesTo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsa5__RelatesTo(soap, data), 0) || soap_put__wsa5__RelatesTo(soap, data, "wsa5:RelatesTo", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsa5__RelatesTo
#define soap_PUT__wsa5__RelatesTo(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__RelatesTo(soap, data), 0) || soap_put__wsa5__RelatesTo(soap, data, "wsa5:RelatesTo", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsa5__RelatesTo
#define soap_PATCH__wsa5__RelatesTo(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__RelatesTo(soap, data), 0) || soap_put__wsa5__RelatesTo(soap, data, "wsa5:RelatesTo", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsa5__RelatesTo
#define soap_POST_send__wsa5__RelatesTo(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__RelatesTo(soap, data), 0) || soap_put__wsa5__RelatesTo(soap, data, "wsa5:RelatesTo", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsa5__RelatesTo soap_get_wsa5__RelatesToType


#define soap_read__wsa5__RelatesTo soap_read_wsa5__RelatesToType


#define soap_GET__wsa5__RelatesTo soap_GET_wsa5__RelatesToType


#define soap_POST_recv__wsa5__RelatesTo soap_POST_recv_wsa5__RelatesToType

#endif
/* _wsa5__Metadata is a typedef synonym of wsa5__MetadataType */

#ifndef SOAP_TYPE__wsa5__Metadata_DEFINED
#define SOAP_TYPE__wsa5__Metadata_DEFINED

#define soap_default__wsa5__Metadata soap_default_wsa5__MetadataType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__MetadataType(struct soap*, const struct wsa5__MetadataType *);

#define soap_serialize__wsa5__Metadata soap_serialize_wsa5__MetadataType


#define soap__wsa5__Metadata2s soap_wsa5__MetadataType2s


#define soap_out__wsa5__Metadata soap_out_wsa5__MetadataType


#define soap_s2_wsa5__Metadata soap_s2wsa5__MetadataType


#define soap_in__wsa5__Metadata soap_in_wsa5__MetadataType

#define soap_new__wsa5__Metadata soap_new_wsa5__MetadataType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa5__Metadata(struct soap*, const struct wsa5__MetadataType *, const char*, const char*);

#ifndef soap_write__wsa5__Metadata
#define soap_write__wsa5__Metadata(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsa5__Metadata(soap, data), 0) || soap_put__wsa5__Metadata(soap, data, "wsa5:Metadata", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsa5__Metadata
#define soap_PUT__wsa5__Metadata(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__Metadata(soap, data), 0) || soap_put__wsa5__Metadata(soap, data, "wsa5:Metadata", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsa5__Metadata
#define soap_PATCH__wsa5__Metadata(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__Metadata(soap, data), 0) || soap_put__wsa5__Metadata(soap, data, "wsa5:Metadata", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsa5__Metadata
#define soap_POST_send__wsa5__Metadata(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__Metadata(soap, data), 0) || soap_put__wsa5__Metadata(soap, data, "wsa5:Metadata", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsa5__Metadata soap_get_wsa5__MetadataType


#define soap_read__wsa5__Metadata soap_read_wsa5__MetadataType


#define soap_GET__wsa5__Metadata soap_GET_wsa5__MetadataType


#define soap_POST_recv__wsa5__Metadata soap_POST_recv_wsa5__MetadataType

#endif
/* _wsa5__ReferenceParameters is a typedef synonym of wsa5__ReferenceParametersType */

#ifndef SOAP_TYPE__wsa5__ReferenceParameters_DEFINED
#define SOAP_TYPE__wsa5__ReferenceParameters_DEFINED

#define soap_default__wsa5__ReferenceParameters soap_default_wsa5__ReferenceParametersType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__ReferenceParametersType(struct soap*, const struct wsa5__ReferenceParametersType *);

#define soap_serialize__wsa5__ReferenceParameters soap_serialize_wsa5__ReferenceParametersType


#define soap__wsa5__ReferenceParameters2s soap_wsa5__ReferenceParametersType2s


#define soap_out__wsa5__ReferenceParameters soap_out_wsa5__ReferenceParametersType


#define soap_s2_wsa5__ReferenceParameters soap_s2wsa5__ReferenceParametersType


#define soap_in__wsa5__ReferenceParameters soap_in_wsa5__ReferenceParametersType

#define soap_new__wsa5__ReferenceParameters soap_new_wsa5__ReferenceParametersType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa5__ReferenceParameters(struct soap*, const struct wsa5__ReferenceParametersType *, const char*, const char*);

#ifndef soap_write__wsa5__ReferenceParameters
#define soap_write__wsa5__ReferenceParameters(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsa5__ReferenceParameters(soap, data), 0) || soap_put__wsa5__ReferenceParameters(soap, data, "wsa5:ReferenceParameters", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsa5__ReferenceParameters
#define soap_PUT__wsa5__ReferenceParameters(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__ReferenceParameters(soap, data), 0) || soap_put__wsa5__ReferenceParameters(soap, data, "wsa5:ReferenceParameters", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsa5__ReferenceParameters
#define soap_PATCH__wsa5__ReferenceParameters(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__ReferenceParameters(soap, data), 0) || soap_put__wsa5__ReferenceParameters(soap, data, "wsa5:ReferenceParameters", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsa5__ReferenceParameters
#define soap_POST_send__wsa5__ReferenceParameters(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__ReferenceParameters(soap, data), 0) || soap_put__wsa5__ReferenceParameters(soap, data, "wsa5:ReferenceParameters", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsa5__ReferenceParameters soap_get_wsa5__ReferenceParametersType


#define soap_read__wsa5__ReferenceParameters soap_read_wsa5__ReferenceParametersType


#define soap_GET__wsa5__ReferenceParameters soap_GET_wsa5__ReferenceParametersType


#define soap_POST_recv__wsa5__ReferenceParameters soap_POST_recv_wsa5__ReferenceParametersType

#endif
/* _wsa5__EndpointReference is a typedef synonym of wsa5__EndpointReferenceType */

#ifndef SOAP_TYPE__wsa5__EndpointReference_DEFINED
#define SOAP_TYPE__wsa5__EndpointReference_DEFINED

#define soap_default__wsa5__EndpointReference soap_default_wsa5__EndpointReferenceType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__EndpointReferenceType(struct soap*, const struct wsa5__EndpointReferenceType *);

#define soap_serialize__wsa5__EndpointReference soap_serialize_wsa5__EndpointReferenceType


#define soap__wsa5__EndpointReference2s soap_wsa5__EndpointReferenceType2s


#define soap_out__wsa5__EndpointReference soap_out_wsa5__EndpointReferenceType


#define soap_s2_wsa5__EndpointReference soap_s2wsa5__EndpointReferenceType


#define soap_in__wsa5__EndpointReference soap_in_wsa5__EndpointReferenceType

#define soap_new__wsa5__EndpointReference soap_new_wsa5__EndpointReferenceType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa5__EndpointReference(struct soap*, const struct wsa5__EndpointReferenceType *, const char*, const char*);

#ifndef soap_write__wsa5__EndpointReference
#define soap_write__wsa5__EndpointReference(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsa5__EndpointReference(soap, data), 0) || soap_put__wsa5__EndpointReference(soap, data, "wsa5:EndpointReference", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsa5__EndpointReference
#define soap_PUT__wsa5__EndpointReference(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__EndpointReference(soap, data), 0) || soap_put__wsa5__EndpointReference(soap, data, "wsa5:EndpointReference", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsa5__EndpointReference
#define soap_PATCH__wsa5__EndpointReference(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__EndpointReference(soap, data), 0) || soap_put__wsa5__EndpointReference(soap, data, "wsa5:EndpointReference", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsa5__EndpointReference
#define soap_POST_send__wsa5__EndpointReference(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa5__EndpointReference(soap, data), 0) || soap_put__wsa5__EndpointReference(soap, data, "wsa5:EndpointReference", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsa5__EndpointReference soap_get_wsa5__EndpointReferenceType


#define soap_read__wsa5__EndpointReference soap_read_wsa5__EndpointReferenceType


#define soap_GET__wsa5__EndpointReference soap_GET_wsa5__EndpointReferenceType


#define soap_POST_recv__wsa5__EndpointReference soap_POST_recv_wsa5__EndpointReferenceType

#endif

#ifndef SOAP_TYPE_wsa5__ProblemActionType_DEFINED
#define SOAP_TYPE_wsa5__ProblemActionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa5__ProblemActionType(struct soap*, struct wsa5__ProblemActionType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__ProblemActionType(struct soap*, const struct wsa5__ProblemActionType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__ProblemActionType(struct soap*, const char*, int, const struct wsa5__ProblemActionType *, const char*);
SOAP_FMAC3 struct wsa5__ProblemActionType * SOAP_FMAC4 soap_in_wsa5__ProblemActionType(struct soap*, const char*, struct wsa5__ProblemActionType *, const char*);

SOAP_FMAC3 struct wsa5__ProblemActionType * SOAP_FMAC4 soap_new_wsa5__ProblemActionType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__ProblemActionType(struct soap*, const struct wsa5__ProblemActionType *, const char*, const char*);

#ifndef soap_write_wsa5__ProblemActionType
#define soap_write_wsa5__ProblemActionType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsa5__ProblemActionType(soap, data), 0) || soap_put_wsa5__ProblemActionType(soap, data, "wsa5:ProblemActionType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsa5__ProblemActionType
#define soap_PUT_wsa5__ProblemActionType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa5__ProblemActionType(soap, data), 0) || soap_put_wsa5__ProblemActionType(soap, data, "wsa5:ProblemActionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsa5__ProblemActionType
#define soap_PATCH_wsa5__ProblemActionType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa5__ProblemActionType(soap, data), 0) || soap_put_wsa5__ProblemActionType(soap, data, "wsa5:ProblemActionType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsa5__ProblemActionType
#define soap_POST_send_wsa5__ProblemActionType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa5__ProblemActionType(soap, data), 0) || soap_put_wsa5__ProblemActionType(soap, data, "wsa5:ProblemActionType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa5__ProblemActionType * SOAP_FMAC4 soap_get_wsa5__ProblemActionType(struct soap*, struct wsa5__ProblemActionType *, const char*, const char*);

#ifndef soap_read_wsa5__ProblemActionType
#define soap_read_wsa5__ProblemActionType(soap, data) ( ((data) ? (soap_default_wsa5__ProblemActionType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsa5__ProblemActionType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsa5__ProblemActionType
#define soap_GET_wsa5__ProblemActionType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsa5__ProblemActionType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsa5__ProblemActionType
#define soap_POST_recv_wsa5__ProblemActionType(soap, data) ( soap_read_wsa5__ProblemActionType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsa5__RelatesToType_DEFINED
#define SOAP_TYPE_wsa5__RelatesToType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa5__RelatesToType(struct soap*, struct wsa5__RelatesToType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__RelatesToType(struct soap*, const struct wsa5__RelatesToType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__RelatesToType(struct soap*, const char*, int, const struct wsa5__RelatesToType *, const char*);
SOAP_FMAC3 struct wsa5__RelatesToType * SOAP_FMAC4 soap_in_wsa5__RelatesToType(struct soap*, const char*, struct wsa5__RelatesToType *, const char*);

SOAP_FMAC3 struct wsa5__RelatesToType * SOAP_FMAC4 soap_new_wsa5__RelatesToType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__RelatesToType(struct soap*, const struct wsa5__RelatesToType *, const char*, const char*);

#ifndef soap_write_wsa5__RelatesToType
#define soap_write_wsa5__RelatesToType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsa5__RelatesToType(soap, data), 0) || soap_put_wsa5__RelatesToType(soap, data, "wsa5:RelatesToType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsa5__RelatesToType
#define soap_PUT_wsa5__RelatesToType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa5__RelatesToType(soap, data), 0) || soap_put_wsa5__RelatesToType(soap, data, "wsa5:RelatesToType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsa5__RelatesToType
#define soap_PATCH_wsa5__RelatesToType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa5__RelatesToType(soap, data), 0) || soap_put_wsa5__RelatesToType(soap, data, "wsa5:RelatesToType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsa5__RelatesToType
#define soap_POST_send_wsa5__RelatesToType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa5__RelatesToType(soap, data), 0) || soap_put_wsa5__RelatesToType(soap, data, "wsa5:RelatesToType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa5__RelatesToType * SOAP_FMAC4 soap_get_wsa5__RelatesToType(struct soap*, struct wsa5__RelatesToType *, const char*, const char*);

#ifndef soap_read_wsa5__RelatesToType
#define soap_read_wsa5__RelatesToType(soap, data) ( ((data) ? (soap_default_wsa5__RelatesToType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsa5__RelatesToType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsa5__RelatesToType
#define soap_GET_wsa5__RelatesToType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsa5__RelatesToType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsa5__RelatesToType
#define soap_POST_recv_wsa5__RelatesToType(soap, data) ( soap_read_wsa5__RelatesToType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsa5__MetadataType_DEFINED
#define SOAP_TYPE_wsa5__MetadataType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa5__MetadataType(struct soap*, struct wsa5__MetadataType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__MetadataType(struct soap*, const struct wsa5__MetadataType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__MetadataType(struct soap*, const char*, int, const struct wsa5__MetadataType *, const char*);
SOAP_FMAC3 struct wsa5__MetadataType * SOAP_FMAC4 soap_in_wsa5__MetadataType(struct soap*, const char*, struct wsa5__MetadataType *, const char*);

SOAP_FMAC3 struct wsa5__MetadataType * SOAP_FMAC4 soap_new_wsa5__MetadataType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__MetadataType(struct soap*, const struct wsa5__MetadataType *, const char*, const char*);

#ifndef soap_write_wsa5__MetadataType
#define soap_write_wsa5__MetadataType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsa5__MetadataType(soap, data), 0) || soap_put_wsa5__MetadataType(soap, data, "wsa5:MetadataType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsa5__MetadataType
#define soap_PUT_wsa5__MetadataType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa5__MetadataType(soap, data), 0) || soap_put_wsa5__MetadataType(soap, data, "wsa5:MetadataType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsa5__MetadataType
#define soap_PATCH_wsa5__MetadataType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa5__MetadataType(soap, data), 0) || soap_put_wsa5__MetadataType(soap, data, "wsa5:MetadataType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsa5__MetadataType
#define soap_POST_send_wsa5__MetadataType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa5__MetadataType(soap, data), 0) || soap_put_wsa5__MetadataType(soap, data, "wsa5:MetadataType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa5__MetadataType * SOAP_FMAC4 soap_get_wsa5__MetadataType(struct soap*, struct wsa5__MetadataType *, const char*, const char*);

#ifndef soap_read_wsa5__MetadataType
#define soap_read_wsa5__MetadataType(soap, data) ( ((data) ? (soap_default_wsa5__MetadataType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsa5__MetadataType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsa5__MetadataType
#define soap_GET_wsa5__MetadataType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsa5__MetadataType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsa5__MetadataType
#define soap_POST_recv_wsa5__MetadataType(soap, data) ( soap_read_wsa5__MetadataType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsa5__ReferenceParametersType_DEFINED
#define SOAP_TYPE_wsa5__ReferenceParametersType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa5__ReferenceParametersType(struct soap*, struct wsa5__ReferenceParametersType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__ReferenceParametersType(struct soap*, const struct wsa5__ReferenceParametersType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__ReferenceParametersType(struct soap*, const char*, int, const struct wsa5__ReferenceParametersType *, const char*);
SOAP_FMAC3 struct wsa5__ReferenceParametersType * SOAP_FMAC4 soap_in_wsa5__ReferenceParametersType(struct soap*, const char*, struct wsa5__ReferenceParametersType *, const char*);

SOAP_FMAC3 struct wsa5__ReferenceParametersType * SOAP_FMAC4 soap_new_wsa5__ReferenceParametersType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__ReferenceParametersType(struct soap*, const struct wsa5__ReferenceParametersType *, const char*, const char*);

#ifndef soap_write_wsa5__ReferenceParametersType
#define soap_write_wsa5__ReferenceParametersType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsa5__ReferenceParametersType(soap, data), 0) || soap_put_wsa5__ReferenceParametersType(soap, data, "wsa5:ReferenceParametersType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsa5__ReferenceParametersType
#define soap_PUT_wsa5__ReferenceParametersType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa5__ReferenceParametersType(soap, data), 0) || soap_put_wsa5__ReferenceParametersType(soap, data, "wsa5:ReferenceParametersType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsa5__ReferenceParametersType
#define soap_PATCH_wsa5__ReferenceParametersType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa5__ReferenceParametersType(soap, data), 0) || soap_put_wsa5__ReferenceParametersType(soap, data, "wsa5:ReferenceParametersType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsa5__ReferenceParametersType
#define soap_POST_send_wsa5__ReferenceParametersType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa5__ReferenceParametersType(soap, data), 0) || soap_put_wsa5__ReferenceParametersType(soap, data, "wsa5:ReferenceParametersType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa5__ReferenceParametersType * SOAP_FMAC4 soap_get_wsa5__ReferenceParametersType(struct soap*, struct wsa5__ReferenceParametersType *, const char*, const char*);

#ifndef soap_read_wsa5__ReferenceParametersType
#define soap_read_wsa5__ReferenceParametersType(soap, data) ( ((data) ? (soap_default_wsa5__ReferenceParametersType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsa5__ReferenceParametersType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsa5__ReferenceParametersType
#define soap_GET_wsa5__ReferenceParametersType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsa5__ReferenceParametersType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsa5__ReferenceParametersType
#define soap_POST_recv_wsa5__ReferenceParametersType(soap, data) ( soap_read_wsa5__ReferenceParametersType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsa5__EndpointReferenceType_DEFINED
#define SOAP_TYPE_wsa5__EndpointReferenceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa5__EndpointReferenceType(struct soap*, struct wsa5__EndpointReferenceType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__EndpointReferenceType(struct soap*, const struct wsa5__EndpointReferenceType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__EndpointReferenceType(struct soap*, const char*, int, const struct wsa5__EndpointReferenceType *, const char*);
SOAP_FMAC3 struct wsa5__EndpointReferenceType * SOAP_FMAC4 soap_in_wsa5__EndpointReferenceType(struct soap*, const char*, struct wsa5__EndpointReferenceType *, const char*);

SOAP_FMAC3 struct wsa5__EndpointReferenceType * SOAP_FMAC4 soap_new_wsa5__EndpointReferenceType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__EndpointReferenceType(struct soap*, const struct wsa5__EndpointReferenceType *, const char*, const char*);

#ifndef soap_write_wsa5__EndpointReferenceType
#define soap_write_wsa5__EndpointReferenceType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsa5__EndpointReferenceType(soap, data), 0) || soap_put_wsa5__EndpointReferenceType(soap, data, "wsa5:EndpointReferenceType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsa5__EndpointReferenceType
#define soap_PUT_wsa5__EndpointReferenceType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa5__EndpointReferenceType(soap, data), 0) || soap_put_wsa5__EndpointReferenceType(soap, data, "wsa5:EndpointReferenceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsa5__EndpointReferenceType
#define soap_PATCH_wsa5__EndpointReferenceType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa5__EndpointReferenceType(soap, data), 0) || soap_put_wsa5__EndpointReferenceType(soap, data, "wsa5:EndpointReferenceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsa5__EndpointReferenceType
#define soap_POST_send_wsa5__EndpointReferenceType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa5__EndpointReferenceType(soap, data), 0) || soap_put_wsa5__EndpointReferenceType(soap, data, "wsa5:EndpointReferenceType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa5__EndpointReferenceType * SOAP_FMAC4 soap_get_wsa5__EndpointReferenceType(struct soap*, struct wsa5__EndpointReferenceType *, const char*, const char*);

#ifndef soap_read_wsa5__EndpointReferenceType
#define soap_read_wsa5__EndpointReferenceType(soap, data) ( ((data) ? (soap_default_wsa5__EndpointReferenceType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsa5__EndpointReferenceType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsa5__EndpointReferenceType
#define soap_GET_wsa5__EndpointReferenceType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsa5__EndpointReferenceType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsa5__EndpointReferenceType
#define soap_POST_recv_wsa5__EndpointReferenceType(soap, data) ( soap_read_wsa5__EndpointReferenceType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___wsdd__ResolveMatches_DEFINED
#define SOAP_TYPE___wsdd__ResolveMatches_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___wsdd__ResolveMatches(struct soap*, struct __wsdd__ResolveMatches *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___wsdd__ResolveMatches(struct soap*, const struct __wsdd__ResolveMatches *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___wsdd__ResolveMatches(struct soap*, const char*, int, const struct __wsdd__ResolveMatches *, const char*);
SOAP_FMAC3 struct __wsdd__ResolveMatches * SOAP_FMAC4 soap_in___wsdd__ResolveMatches(struct soap*, const char*, struct __wsdd__ResolveMatches *, const char*);

SOAP_FMAC3 struct __wsdd__ResolveMatches * SOAP_FMAC4 soap_new___wsdd__ResolveMatches(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___wsdd__ResolveMatches(struct soap*, const struct __wsdd__ResolveMatches *, const char*, const char*);

#ifndef soap_write___wsdd__ResolveMatches
#define soap_write___wsdd__ResolveMatches(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___wsdd__ResolveMatches(soap, data), 0) || soap_put___wsdd__ResolveMatches(soap, data, "-wsdd:ResolveMatches", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___wsdd__ResolveMatches
#define soap_PUT___wsdd__ResolveMatches(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___wsdd__ResolveMatches(soap, data), 0) || soap_put___wsdd__ResolveMatches(soap, data, "-wsdd:ResolveMatches", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___wsdd__ResolveMatches
#define soap_PATCH___wsdd__ResolveMatches(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___wsdd__ResolveMatches(soap, data), 0) || soap_put___wsdd__ResolveMatches(soap, data, "-wsdd:ResolveMatches", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___wsdd__ResolveMatches
#define soap_POST_send___wsdd__ResolveMatches(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___wsdd__ResolveMatches(soap, data), 0) || soap_put___wsdd__ResolveMatches(soap, data, "-wsdd:ResolveMatches", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __wsdd__ResolveMatches * SOAP_FMAC4 soap_get___wsdd__ResolveMatches(struct soap*, struct __wsdd__ResolveMatches *, const char*, const char*);

#ifndef soap_read___wsdd__ResolveMatches
#define soap_read___wsdd__ResolveMatches(soap, data) ( ((data) ? (soap_default___wsdd__ResolveMatches(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___wsdd__ResolveMatches(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___wsdd__ResolveMatches
#define soap_GET___wsdd__ResolveMatches(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___wsdd__ResolveMatches(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___wsdd__ResolveMatches
#define soap_POST_recv___wsdd__ResolveMatches(soap, data) ( soap_read___wsdd__ResolveMatches(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___wsdd__Resolve_DEFINED
#define SOAP_TYPE___wsdd__Resolve_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___wsdd__Resolve(struct soap*, struct __wsdd__Resolve *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___wsdd__Resolve(struct soap*, const struct __wsdd__Resolve *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___wsdd__Resolve(struct soap*, const char*, int, const struct __wsdd__Resolve *, const char*);
SOAP_FMAC3 struct __wsdd__Resolve * SOAP_FMAC4 soap_in___wsdd__Resolve(struct soap*, const char*, struct __wsdd__Resolve *, const char*);

SOAP_FMAC3 struct __wsdd__Resolve * SOAP_FMAC4 soap_new___wsdd__Resolve(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___wsdd__Resolve(struct soap*, const struct __wsdd__Resolve *, const char*, const char*);

#ifndef soap_write___wsdd__Resolve
#define soap_write___wsdd__Resolve(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___wsdd__Resolve(soap, data), 0) || soap_put___wsdd__Resolve(soap, data, "-wsdd:Resolve", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___wsdd__Resolve
#define soap_PUT___wsdd__Resolve(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___wsdd__Resolve(soap, data), 0) || soap_put___wsdd__Resolve(soap, data, "-wsdd:Resolve", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___wsdd__Resolve
#define soap_PATCH___wsdd__Resolve(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___wsdd__Resolve(soap, data), 0) || soap_put___wsdd__Resolve(soap, data, "-wsdd:Resolve", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___wsdd__Resolve
#define soap_POST_send___wsdd__Resolve(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___wsdd__Resolve(soap, data), 0) || soap_put___wsdd__Resolve(soap, data, "-wsdd:Resolve", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __wsdd__Resolve * SOAP_FMAC4 soap_get___wsdd__Resolve(struct soap*, struct __wsdd__Resolve *, const char*, const char*);

#ifndef soap_read___wsdd__Resolve
#define soap_read___wsdd__Resolve(soap, data) ( ((data) ? (soap_default___wsdd__Resolve(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___wsdd__Resolve(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___wsdd__Resolve
#define soap_GET___wsdd__Resolve(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___wsdd__Resolve(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___wsdd__Resolve
#define soap_POST_recv___wsdd__Resolve(soap, data) ( soap_read___wsdd__Resolve(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___wsdd__ProbeMatches_DEFINED
#define SOAP_TYPE___wsdd__ProbeMatches_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___wsdd__ProbeMatches(struct soap*, struct __wsdd__ProbeMatches *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___wsdd__ProbeMatches(struct soap*, const struct __wsdd__ProbeMatches *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___wsdd__ProbeMatches(struct soap*, const char*, int, const struct __wsdd__ProbeMatches *, const char*);
SOAP_FMAC3 struct __wsdd__ProbeMatches * SOAP_FMAC4 soap_in___wsdd__ProbeMatches(struct soap*, const char*, struct __wsdd__ProbeMatches *, const char*);

SOAP_FMAC3 struct __wsdd__ProbeMatches * SOAP_FMAC4 soap_new___wsdd__ProbeMatches(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___wsdd__ProbeMatches(struct soap*, const struct __wsdd__ProbeMatches *, const char*, const char*);

#ifndef soap_write___wsdd__ProbeMatches
#define soap_write___wsdd__ProbeMatches(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___wsdd__ProbeMatches(soap, data), 0) || soap_put___wsdd__ProbeMatches(soap, data, "-wsdd:ProbeMatches", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___wsdd__ProbeMatches
#define soap_PUT___wsdd__ProbeMatches(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___wsdd__ProbeMatches(soap, data), 0) || soap_put___wsdd__ProbeMatches(soap, data, "-wsdd:ProbeMatches", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___wsdd__ProbeMatches
#define soap_PATCH___wsdd__ProbeMatches(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___wsdd__ProbeMatches(soap, data), 0) || soap_put___wsdd__ProbeMatches(soap, data, "-wsdd:ProbeMatches", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___wsdd__ProbeMatches
#define soap_POST_send___wsdd__ProbeMatches(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___wsdd__ProbeMatches(soap, data), 0) || soap_put___wsdd__ProbeMatches(soap, data, "-wsdd:ProbeMatches", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __wsdd__ProbeMatches * SOAP_FMAC4 soap_get___wsdd__ProbeMatches(struct soap*, struct __wsdd__ProbeMatches *, const char*, const char*);

#ifndef soap_read___wsdd__ProbeMatches
#define soap_read___wsdd__ProbeMatches(soap, data) ( ((data) ? (soap_default___wsdd__ProbeMatches(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___wsdd__ProbeMatches(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___wsdd__ProbeMatches
#define soap_GET___wsdd__ProbeMatches(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___wsdd__ProbeMatches(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___wsdd__ProbeMatches
#define soap_POST_recv___wsdd__ProbeMatches(soap, data) ( soap_read___wsdd__ProbeMatches(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___wsdd__Probe_DEFINED
#define SOAP_TYPE___wsdd__Probe_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___wsdd__Probe(struct soap*, struct __wsdd__Probe *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___wsdd__Probe(struct soap*, const struct __wsdd__Probe *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___wsdd__Probe(struct soap*, const char*, int, const struct __wsdd__Probe *, const char*);
SOAP_FMAC3 struct __wsdd__Probe * SOAP_FMAC4 soap_in___wsdd__Probe(struct soap*, const char*, struct __wsdd__Probe *, const char*);

SOAP_FMAC3 struct __wsdd__Probe * SOAP_FMAC4 soap_new___wsdd__Probe(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___wsdd__Probe(struct soap*, const struct __wsdd__Probe *, const char*, const char*);

#ifndef soap_write___wsdd__Probe
#define soap_write___wsdd__Probe(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___wsdd__Probe(soap, data), 0) || soap_put___wsdd__Probe(soap, data, "-wsdd:Probe", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___wsdd__Probe
#define soap_PUT___wsdd__Probe(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___wsdd__Probe(soap, data), 0) || soap_put___wsdd__Probe(soap, data, "-wsdd:Probe", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___wsdd__Probe
#define soap_PATCH___wsdd__Probe(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___wsdd__Probe(soap, data), 0) || soap_put___wsdd__Probe(soap, data, "-wsdd:Probe", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___wsdd__Probe
#define soap_POST_send___wsdd__Probe(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___wsdd__Probe(soap, data), 0) || soap_put___wsdd__Probe(soap, data, "-wsdd:Probe", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __wsdd__Probe * SOAP_FMAC4 soap_get___wsdd__Probe(struct soap*, struct __wsdd__Probe *, const char*, const char*);

#ifndef soap_read___wsdd__Probe
#define soap_read___wsdd__Probe(soap, data) ( ((data) ? (soap_default___wsdd__Probe(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___wsdd__Probe(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___wsdd__Probe
#define soap_GET___wsdd__Probe(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___wsdd__Probe(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___wsdd__Probe
#define soap_POST_recv___wsdd__Probe(soap, data) ( soap_read___wsdd__Probe(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___wsdd__Bye_DEFINED
#define SOAP_TYPE___wsdd__Bye_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___wsdd__Bye(struct soap*, struct __wsdd__Bye *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___wsdd__Bye(struct soap*, const struct __wsdd__Bye *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___wsdd__Bye(struct soap*, const char*, int, const struct __wsdd__Bye *, const char*);
SOAP_FMAC3 struct __wsdd__Bye * SOAP_FMAC4 soap_in___wsdd__Bye(struct soap*, const char*, struct __wsdd__Bye *, const char*);

SOAP_FMAC3 struct __wsdd__Bye * SOAP_FMAC4 soap_new___wsdd__Bye(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___wsdd__Bye(struct soap*, const struct __wsdd__Bye *, const char*, const char*);

#ifndef soap_write___wsdd__Bye
#define soap_write___wsdd__Bye(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___wsdd__Bye(soap, data), 0) || soap_put___wsdd__Bye(soap, data, "-wsdd:Bye", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___wsdd__Bye
#define soap_PUT___wsdd__Bye(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___wsdd__Bye(soap, data), 0) || soap_put___wsdd__Bye(soap, data, "-wsdd:Bye", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___wsdd__Bye
#define soap_PATCH___wsdd__Bye(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___wsdd__Bye(soap, data), 0) || soap_put___wsdd__Bye(soap, data, "-wsdd:Bye", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___wsdd__Bye
#define soap_POST_send___wsdd__Bye(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___wsdd__Bye(soap, data), 0) || soap_put___wsdd__Bye(soap, data, "-wsdd:Bye", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __wsdd__Bye * SOAP_FMAC4 soap_get___wsdd__Bye(struct soap*, struct __wsdd__Bye *, const char*, const char*);

#ifndef soap_read___wsdd__Bye
#define soap_read___wsdd__Bye(soap, data) ( ((data) ? (soap_default___wsdd__Bye(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___wsdd__Bye(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___wsdd__Bye
#define soap_GET___wsdd__Bye(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___wsdd__Bye(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___wsdd__Bye
#define soap_POST_recv___wsdd__Bye(soap, data) ( soap_read___wsdd__Bye(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___wsdd__Hello_DEFINED
#define SOAP_TYPE___wsdd__Hello_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___wsdd__Hello(struct soap*, struct __wsdd__Hello *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___wsdd__Hello(struct soap*, const struct __wsdd__Hello *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___wsdd__Hello(struct soap*, const char*, int, const struct __wsdd__Hello *, const char*);
SOAP_FMAC3 struct __wsdd__Hello * SOAP_FMAC4 soap_in___wsdd__Hello(struct soap*, const char*, struct __wsdd__Hello *, const char*);

SOAP_FMAC3 struct __wsdd__Hello * SOAP_FMAC4 soap_new___wsdd__Hello(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___wsdd__Hello(struct soap*, const struct __wsdd__Hello *, const char*, const char*);

#ifndef soap_write___wsdd__Hello
#define soap_write___wsdd__Hello(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___wsdd__Hello(soap, data), 0) || soap_put___wsdd__Hello(soap, data, "-wsdd:Hello", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___wsdd__Hello
#define soap_PUT___wsdd__Hello(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___wsdd__Hello(soap, data), 0) || soap_put___wsdd__Hello(soap, data, "-wsdd:Hello", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH___wsdd__Hello
#define soap_PATCH___wsdd__Hello(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___wsdd__Hello(soap, data), 0) || soap_put___wsdd__Hello(soap, data, "-wsdd:Hello", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___wsdd__Hello
#define soap_POST_send___wsdd__Hello(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___wsdd__Hello(soap, data), 0) || soap_put___wsdd__Hello(soap, data, "-wsdd:Hello", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __wsdd__Hello * SOAP_FMAC4 soap_get___wsdd__Hello(struct soap*, struct __wsdd__Hello *, const char*, const char*);

#ifndef soap_read___wsdd__Hello
#define soap_read___wsdd__Hello(soap, data) ( ((data) ? (soap_default___wsdd__Hello(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___wsdd__Hello(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___wsdd__Hello
#define soap_GET___wsdd__Hello(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___wsdd__Hello(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___wsdd__Hello
#define soap_POST_recv___wsdd__Hello(soap, data) ( soap_read___wsdd__Hello(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif
/* _wsdd__AppSequence is a typedef synonym of wsdd__AppSequenceType */

#ifndef SOAP_TYPE__wsdd__AppSequence_DEFINED
#define SOAP_TYPE__wsdd__AppSequence_DEFINED

#define soap_default__wsdd__AppSequence soap_default_wsdd__AppSequenceType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__AppSequenceType(struct soap*, const struct wsdd__AppSequenceType *);

#define soap_serialize__wsdd__AppSequence soap_serialize_wsdd__AppSequenceType


#define soap__wsdd__AppSequence2s soap_wsdd__AppSequenceType2s


#define soap_out__wsdd__AppSequence soap_out_wsdd__AppSequenceType


#define soap_s2_wsdd__AppSequence soap_s2wsdd__AppSequenceType


#define soap_in__wsdd__AppSequence soap_in_wsdd__AppSequenceType

#define soap_new__wsdd__AppSequence soap_new_wsdd__AppSequenceType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsdd__AppSequence(struct soap*, const struct wsdd__AppSequenceType *, const char*, const char*);

#ifndef soap_write__wsdd__AppSequence
#define soap_write__wsdd__AppSequence(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsdd__AppSequence(soap, data), 0) || soap_put__wsdd__AppSequence(soap, data, "wsdd:AppSequence", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsdd__AppSequence
#define soap_PUT__wsdd__AppSequence(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__AppSequence(soap, data), 0) || soap_put__wsdd__AppSequence(soap, data, "wsdd:AppSequence", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsdd__AppSequence
#define soap_PATCH__wsdd__AppSequence(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__AppSequence(soap, data), 0) || soap_put__wsdd__AppSequence(soap, data, "wsdd:AppSequence", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsdd__AppSequence
#define soap_POST_send__wsdd__AppSequence(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__AppSequence(soap, data), 0) || soap_put__wsdd__AppSequence(soap, data, "wsdd:AppSequence", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsdd__AppSequence soap_get_wsdd__AppSequenceType


#define soap_read__wsdd__AppSequence soap_read_wsdd__AppSequenceType


#define soap_GET__wsdd__AppSequence soap_GET_wsdd__AppSequenceType


#define soap_POST_recv__wsdd__AppSequence soap_POST_recv_wsdd__AppSequenceType

#endif
/* _wsdd__Sig is a typedef synonym of wsdd__SigType */

#ifndef SOAP_TYPE__wsdd__Sig_DEFINED
#define SOAP_TYPE__wsdd__Sig_DEFINED

#define soap_default__wsdd__Sig soap_default_wsdd__SigType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__SigType(struct soap*, const struct wsdd__SigType *);

#define soap_serialize__wsdd__Sig soap_serialize_wsdd__SigType


#define soap__wsdd__Sig2s soap_wsdd__SigType2s


#define soap_out__wsdd__Sig soap_out_wsdd__SigType


#define soap_s2_wsdd__Sig soap_s2wsdd__SigType


#define soap_in__wsdd__Sig soap_in_wsdd__SigType

#define soap_new__wsdd__Sig soap_new_wsdd__SigType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsdd__Sig(struct soap*, const struct wsdd__SigType *, const char*, const char*);

#ifndef soap_write__wsdd__Sig
#define soap_write__wsdd__Sig(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsdd__Sig(soap, data), 0) || soap_put__wsdd__Sig(soap, data, "wsdd:Sig", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsdd__Sig
#define soap_PUT__wsdd__Sig(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__Sig(soap, data), 0) || soap_put__wsdd__Sig(soap, data, "wsdd:Sig", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsdd__Sig
#define soap_PATCH__wsdd__Sig(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__Sig(soap, data), 0) || soap_put__wsdd__Sig(soap, data, "wsdd:Sig", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsdd__Sig
#define soap_POST_send__wsdd__Sig(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__Sig(soap, data), 0) || soap_put__wsdd__Sig(soap, data, "wsdd:Sig", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsdd__Sig soap_get_wsdd__SigType


#define soap_read__wsdd__Sig soap_read_wsdd__SigType


#define soap_GET__wsdd__Sig soap_GET_wsdd__SigType


#define soap_POST_recv__wsdd__Sig soap_POST_recv_wsdd__SigType

#endif
/* _wsdd__Security is a typedef synonym of wsdd__SecurityType */

#ifndef SOAP_TYPE__wsdd__Security_DEFINED
#define SOAP_TYPE__wsdd__Security_DEFINED

#define soap_default__wsdd__Security soap_default_wsdd__SecurityType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__SecurityType(struct soap*, const struct wsdd__SecurityType *);

#define soap_serialize__wsdd__Security soap_serialize_wsdd__SecurityType


#define soap__wsdd__Security2s soap_wsdd__SecurityType2s


#define soap_out__wsdd__Security soap_out_wsdd__SecurityType


#define soap_s2_wsdd__Security soap_s2wsdd__SecurityType


#define soap_in__wsdd__Security soap_in_wsdd__SecurityType

#define soap_new__wsdd__Security soap_new_wsdd__SecurityType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsdd__Security(struct soap*, const struct wsdd__SecurityType *, const char*, const char*);

#ifndef soap_write__wsdd__Security
#define soap_write__wsdd__Security(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsdd__Security(soap, data), 0) || soap_put__wsdd__Security(soap, data, "wsdd:Security", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsdd__Security
#define soap_PUT__wsdd__Security(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__Security(soap, data), 0) || soap_put__wsdd__Security(soap, data, "wsdd:Security", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsdd__Security
#define soap_PATCH__wsdd__Security(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__Security(soap, data), 0) || soap_put__wsdd__Security(soap, data, "wsdd:Security", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsdd__Security
#define soap_POST_send__wsdd__Security(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__Security(soap, data), 0) || soap_put__wsdd__Security(soap, data, "wsdd:Security", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsdd__Security soap_get_wsdd__SecurityType


#define soap_read__wsdd__Security soap_read_wsdd__SecurityType


#define soap_GET__wsdd__Security soap_GET_wsdd__SecurityType


#define soap_POST_recv__wsdd__Security soap_POST_recv_wsdd__SecurityType

#endif
/* _wsdd__Scopes is a typedef synonym of wsdd__ScopesType */

#ifndef SOAP_TYPE__wsdd__Scopes_DEFINED
#define SOAP_TYPE__wsdd__Scopes_DEFINED

#define soap_default__wsdd__Scopes soap_default_wsdd__ScopesType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__ScopesType(struct soap*, const struct wsdd__ScopesType *);

#define soap_serialize__wsdd__Scopes soap_serialize_wsdd__ScopesType


#define soap__wsdd__Scopes2s soap_wsdd__ScopesType2s


#define soap_out__wsdd__Scopes soap_out_wsdd__ScopesType


#define soap_s2_wsdd__Scopes soap_s2wsdd__ScopesType


#define soap_in__wsdd__Scopes soap_in_wsdd__ScopesType

#define soap_new__wsdd__Scopes soap_new_wsdd__ScopesType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsdd__Scopes(struct soap*, const struct wsdd__ScopesType *, const char*, const char*);

#ifndef soap_write__wsdd__Scopes
#define soap_write__wsdd__Scopes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsdd__Scopes(soap, data), 0) || soap_put__wsdd__Scopes(soap, data, "wsdd:Scopes", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsdd__Scopes
#define soap_PUT__wsdd__Scopes(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__Scopes(soap, data), 0) || soap_put__wsdd__Scopes(soap, data, "wsdd:Scopes", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsdd__Scopes
#define soap_PATCH__wsdd__Scopes(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__Scopes(soap, data), 0) || soap_put__wsdd__Scopes(soap, data, "wsdd:Scopes", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsdd__Scopes
#define soap_POST_send__wsdd__Scopes(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__Scopes(soap, data), 0) || soap_put__wsdd__Scopes(soap, data, "wsdd:Scopes", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsdd__Scopes soap_get_wsdd__ScopesType


#define soap_read__wsdd__Scopes soap_read_wsdd__ScopesType


#define soap_GET__wsdd__Scopes soap_GET_wsdd__ScopesType


#define soap_POST_recv__wsdd__Scopes soap_POST_recv_wsdd__ScopesType

#endif
/* _wsdd__ResolveMatches is a typedef synonym of wsdd__ResolveMatchesType */

#ifndef SOAP_TYPE__wsdd__ResolveMatches_DEFINED
#define SOAP_TYPE__wsdd__ResolveMatches_DEFINED

#define soap_default__wsdd__ResolveMatches soap_default_wsdd__ResolveMatchesType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__ResolveMatchesType(struct soap*, const struct wsdd__ResolveMatchesType *);

#define soap_serialize__wsdd__ResolveMatches soap_serialize_wsdd__ResolveMatchesType


#define soap__wsdd__ResolveMatches2s soap_wsdd__ResolveMatchesType2s


#define soap_out__wsdd__ResolveMatches soap_out_wsdd__ResolveMatchesType


#define soap_s2_wsdd__ResolveMatches soap_s2wsdd__ResolveMatchesType


#define soap_in__wsdd__ResolveMatches soap_in_wsdd__ResolveMatchesType

#define soap_new__wsdd__ResolveMatches soap_new_wsdd__ResolveMatchesType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsdd__ResolveMatches(struct soap*, const struct wsdd__ResolveMatchesType *, const char*, const char*);

#ifndef soap_write__wsdd__ResolveMatches
#define soap_write__wsdd__ResolveMatches(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsdd__ResolveMatches(soap, data), 0) || soap_put__wsdd__ResolveMatches(soap, data, "wsdd:ResolveMatches", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsdd__ResolveMatches
#define soap_PUT__wsdd__ResolveMatches(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__ResolveMatches(soap, data), 0) || soap_put__wsdd__ResolveMatches(soap, data, "wsdd:ResolveMatches", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsdd__ResolveMatches
#define soap_PATCH__wsdd__ResolveMatches(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__ResolveMatches(soap, data), 0) || soap_put__wsdd__ResolveMatches(soap, data, "wsdd:ResolveMatches", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsdd__ResolveMatches
#define soap_POST_send__wsdd__ResolveMatches(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__ResolveMatches(soap, data), 0) || soap_put__wsdd__ResolveMatches(soap, data, "wsdd:ResolveMatches", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsdd__ResolveMatches soap_get_wsdd__ResolveMatchesType


#define soap_read__wsdd__ResolveMatches soap_read_wsdd__ResolveMatchesType


#define soap_GET__wsdd__ResolveMatches soap_GET_wsdd__ResolveMatchesType


#define soap_POST_recv__wsdd__ResolveMatches soap_POST_recv_wsdd__ResolveMatchesType

#endif
/* _wsdd__Resolve is a typedef synonym of wsdd__ResolveType */

#ifndef SOAP_TYPE__wsdd__Resolve_DEFINED
#define SOAP_TYPE__wsdd__Resolve_DEFINED

#define soap_default__wsdd__Resolve soap_default_wsdd__ResolveType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__ResolveType(struct soap*, const struct wsdd__ResolveType *);

#define soap_serialize__wsdd__Resolve soap_serialize_wsdd__ResolveType


#define soap__wsdd__Resolve2s soap_wsdd__ResolveType2s


#define soap_out__wsdd__Resolve soap_out_wsdd__ResolveType


#define soap_s2_wsdd__Resolve soap_s2wsdd__ResolveType


#define soap_in__wsdd__Resolve soap_in_wsdd__ResolveType

#define soap_new__wsdd__Resolve soap_new_wsdd__ResolveType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsdd__Resolve(struct soap*, const struct wsdd__ResolveType *, const char*, const char*);

#ifndef soap_write__wsdd__Resolve
#define soap_write__wsdd__Resolve(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsdd__Resolve(soap, data), 0) || soap_put__wsdd__Resolve(soap, data, "wsdd:Resolve", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsdd__Resolve
#define soap_PUT__wsdd__Resolve(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__Resolve(soap, data), 0) || soap_put__wsdd__Resolve(soap, data, "wsdd:Resolve", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsdd__Resolve
#define soap_PATCH__wsdd__Resolve(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__Resolve(soap, data), 0) || soap_put__wsdd__Resolve(soap, data, "wsdd:Resolve", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsdd__Resolve
#define soap_POST_send__wsdd__Resolve(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__Resolve(soap, data), 0) || soap_put__wsdd__Resolve(soap, data, "wsdd:Resolve", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsdd__Resolve soap_get_wsdd__ResolveType


#define soap_read__wsdd__Resolve soap_read_wsdd__ResolveType


#define soap_GET__wsdd__Resolve soap_GET_wsdd__ResolveType


#define soap_POST_recv__wsdd__Resolve soap_POST_recv_wsdd__ResolveType

#endif
/* _wsdd__ProbeMatches is a typedef synonym of wsdd__ProbeMatchesType */

#ifndef SOAP_TYPE__wsdd__ProbeMatches_DEFINED
#define SOAP_TYPE__wsdd__ProbeMatches_DEFINED

#define soap_default__wsdd__ProbeMatches soap_default_wsdd__ProbeMatchesType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__ProbeMatchesType(struct soap*, const struct wsdd__ProbeMatchesType *);

#define soap_serialize__wsdd__ProbeMatches soap_serialize_wsdd__ProbeMatchesType


#define soap__wsdd__ProbeMatches2s soap_wsdd__ProbeMatchesType2s


#define soap_out__wsdd__ProbeMatches soap_out_wsdd__ProbeMatchesType


#define soap_s2_wsdd__ProbeMatches soap_s2wsdd__ProbeMatchesType


#define soap_in__wsdd__ProbeMatches soap_in_wsdd__ProbeMatchesType

#define soap_new__wsdd__ProbeMatches soap_new_wsdd__ProbeMatchesType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsdd__ProbeMatches(struct soap*, const struct wsdd__ProbeMatchesType *, const char*, const char*);

#ifndef soap_write__wsdd__ProbeMatches
#define soap_write__wsdd__ProbeMatches(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsdd__ProbeMatches(soap, data), 0) || soap_put__wsdd__ProbeMatches(soap, data, "wsdd:ProbeMatches", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsdd__ProbeMatches
#define soap_PUT__wsdd__ProbeMatches(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__ProbeMatches(soap, data), 0) || soap_put__wsdd__ProbeMatches(soap, data, "wsdd:ProbeMatches", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsdd__ProbeMatches
#define soap_PATCH__wsdd__ProbeMatches(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__ProbeMatches(soap, data), 0) || soap_put__wsdd__ProbeMatches(soap, data, "wsdd:ProbeMatches", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsdd__ProbeMatches
#define soap_POST_send__wsdd__ProbeMatches(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__ProbeMatches(soap, data), 0) || soap_put__wsdd__ProbeMatches(soap, data, "wsdd:ProbeMatches", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsdd__ProbeMatches soap_get_wsdd__ProbeMatchesType


#define soap_read__wsdd__ProbeMatches soap_read_wsdd__ProbeMatchesType


#define soap_GET__wsdd__ProbeMatches soap_GET_wsdd__ProbeMatchesType


#define soap_POST_recv__wsdd__ProbeMatches soap_POST_recv_wsdd__ProbeMatchesType

#endif
/* _wsdd__Probe is a typedef synonym of wsdd__ProbeType */

#ifndef SOAP_TYPE__wsdd__Probe_DEFINED
#define SOAP_TYPE__wsdd__Probe_DEFINED

#define soap_default__wsdd__Probe soap_default_wsdd__ProbeType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__ProbeType(struct soap*, const struct wsdd__ProbeType *);

#define soap_serialize__wsdd__Probe soap_serialize_wsdd__ProbeType


#define soap__wsdd__Probe2s soap_wsdd__ProbeType2s


#define soap_out__wsdd__Probe soap_out_wsdd__ProbeType


#define soap_s2_wsdd__Probe soap_s2wsdd__ProbeType


#define soap_in__wsdd__Probe soap_in_wsdd__ProbeType

#define soap_new__wsdd__Probe soap_new_wsdd__ProbeType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsdd__Probe(struct soap*, const struct wsdd__ProbeType *, const char*, const char*);

#ifndef soap_write__wsdd__Probe
#define soap_write__wsdd__Probe(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsdd__Probe(soap, data), 0) || soap_put__wsdd__Probe(soap, data, "wsdd:Probe", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsdd__Probe
#define soap_PUT__wsdd__Probe(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__Probe(soap, data), 0) || soap_put__wsdd__Probe(soap, data, "wsdd:Probe", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsdd__Probe
#define soap_PATCH__wsdd__Probe(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__Probe(soap, data), 0) || soap_put__wsdd__Probe(soap, data, "wsdd:Probe", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsdd__Probe
#define soap_POST_send__wsdd__Probe(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__Probe(soap, data), 0) || soap_put__wsdd__Probe(soap, data, "wsdd:Probe", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsdd__Probe soap_get_wsdd__ProbeType


#define soap_read__wsdd__Probe soap_read_wsdd__ProbeType


#define soap_GET__wsdd__Probe soap_GET_wsdd__ProbeType


#define soap_POST_recv__wsdd__Probe soap_POST_recv_wsdd__ProbeType

#endif
/* _wsdd__Bye is a typedef synonym of wsdd__ByeType */

#ifndef SOAP_TYPE__wsdd__Bye_DEFINED
#define SOAP_TYPE__wsdd__Bye_DEFINED

#define soap_default__wsdd__Bye soap_default_wsdd__ByeType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__ByeType(struct soap*, const struct wsdd__ByeType *);

#define soap_serialize__wsdd__Bye soap_serialize_wsdd__ByeType


#define soap__wsdd__Bye2s soap_wsdd__ByeType2s


#define soap_out__wsdd__Bye soap_out_wsdd__ByeType


#define soap_s2_wsdd__Bye soap_s2wsdd__ByeType


#define soap_in__wsdd__Bye soap_in_wsdd__ByeType

#define soap_new__wsdd__Bye soap_new_wsdd__ByeType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsdd__Bye(struct soap*, const struct wsdd__ByeType *, const char*, const char*);

#ifndef soap_write__wsdd__Bye
#define soap_write__wsdd__Bye(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsdd__Bye(soap, data), 0) || soap_put__wsdd__Bye(soap, data, "wsdd:Bye", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsdd__Bye
#define soap_PUT__wsdd__Bye(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__Bye(soap, data), 0) || soap_put__wsdd__Bye(soap, data, "wsdd:Bye", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsdd__Bye
#define soap_PATCH__wsdd__Bye(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__Bye(soap, data), 0) || soap_put__wsdd__Bye(soap, data, "wsdd:Bye", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsdd__Bye
#define soap_POST_send__wsdd__Bye(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__Bye(soap, data), 0) || soap_put__wsdd__Bye(soap, data, "wsdd:Bye", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsdd__Bye soap_get_wsdd__ByeType


#define soap_read__wsdd__Bye soap_read_wsdd__ByeType


#define soap_GET__wsdd__Bye soap_GET_wsdd__ByeType


#define soap_POST_recv__wsdd__Bye soap_POST_recv_wsdd__ByeType

#endif
/* _wsdd__Hello is a typedef synonym of wsdd__HelloType */

#ifndef SOAP_TYPE__wsdd__Hello_DEFINED
#define SOAP_TYPE__wsdd__Hello_DEFINED

#define soap_default__wsdd__Hello soap_default_wsdd__HelloType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__HelloType(struct soap*, const struct wsdd__HelloType *);

#define soap_serialize__wsdd__Hello soap_serialize_wsdd__HelloType


#define soap__wsdd__Hello2s soap_wsdd__HelloType2s


#define soap_out__wsdd__Hello soap_out_wsdd__HelloType


#define soap_s2_wsdd__Hello soap_s2wsdd__HelloType


#define soap_in__wsdd__Hello soap_in_wsdd__HelloType

#define soap_new__wsdd__Hello soap_new_wsdd__HelloType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsdd__Hello(struct soap*, const struct wsdd__HelloType *, const char*, const char*);

#ifndef soap_write__wsdd__Hello
#define soap_write__wsdd__Hello(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsdd__Hello(soap, data), 0) || soap_put__wsdd__Hello(soap, data, "wsdd:Hello", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsdd__Hello
#define soap_PUT__wsdd__Hello(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__Hello(soap, data), 0) || soap_put__wsdd__Hello(soap, data, "wsdd:Hello", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsdd__Hello
#define soap_PATCH__wsdd__Hello(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__Hello(soap, data), 0) || soap_put__wsdd__Hello(soap, data, "wsdd:Hello", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsdd__Hello
#define soap_POST_send__wsdd__Hello(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsdd__Hello(soap, data), 0) || soap_put__wsdd__Hello(soap, data, "wsdd:Hello", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsdd__Hello soap_get_wsdd__HelloType


#define soap_read__wsdd__Hello soap_read_wsdd__HelloType


#define soap_GET__wsdd__Hello soap_GET_wsdd__HelloType


#define soap_POST_recv__wsdd__Hello soap_POST_recv_wsdd__HelloType

#endif

#ifndef SOAP_TYPE_wsdd__AppSequenceType_DEFINED
#define SOAP_TYPE_wsdd__AppSequenceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsdd__AppSequenceType(struct soap*, struct wsdd__AppSequenceType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__AppSequenceType(struct soap*, const struct wsdd__AppSequenceType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdd__AppSequenceType(struct soap*, const char*, int, const struct wsdd__AppSequenceType *, const char*);
SOAP_FMAC3 struct wsdd__AppSequenceType * SOAP_FMAC4 soap_in_wsdd__AppSequenceType(struct soap*, const char*, struct wsdd__AppSequenceType *, const char*);

SOAP_FMAC3 struct wsdd__AppSequenceType * SOAP_FMAC4 soap_new_wsdd__AppSequenceType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsdd__AppSequenceType(struct soap*, const struct wsdd__AppSequenceType *, const char*, const char*);

#ifndef soap_write_wsdd__AppSequenceType
#define soap_write_wsdd__AppSequenceType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsdd__AppSequenceType(soap, data), 0) || soap_put_wsdd__AppSequenceType(soap, data, "wsdd:AppSequenceType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsdd__AppSequenceType
#define soap_PUT_wsdd__AppSequenceType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__AppSequenceType(soap, data), 0) || soap_put_wsdd__AppSequenceType(soap, data, "wsdd:AppSequenceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsdd__AppSequenceType
#define soap_PATCH_wsdd__AppSequenceType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__AppSequenceType(soap, data), 0) || soap_put_wsdd__AppSequenceType(soap, data, "wsdd:AppSequenceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsdd__AppSequenceType
#define soap_POST_send_wsdd__AppSequenceType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__AppSequenceType(soap, data), 0) || soap_put_wsdd__AppSequenceType(soap, data, "wsdd:AppSequenceType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsdd__AppSequenceType * SOAP_FMAC4 soap_get_wsdd__AppSequenceType(struct soap*, struct wsdd__AppSequenceType *, const char*, const char*);

#ifndef soap_read_wsdd__AppSequenceType
#define soap_read_wsdd__AppSequenceType(soap, data) ( ((data) ? (soap_default_wsdd__AppSequenceType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsdd__AppSequenceType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsdd__AppSequenceType
#define soap_GET_wsdd__AppSequenceType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsdd__AppSequenceType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsdd__AppSequenceType
#define soap_POST_recv_wsdd__AppSequenceType(soap, data) ( soap_read_wsdd__AppSequenceType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsdd__SigType_DEFINED
#define SOAP_TYPE_wsdd__SigType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsdd__SigType(struct soap*, struct wsdd__SigType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__SigType(struct soap*, const struct wsdd__SigType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdd__SigType(struct soap*, const char*, int, const struct wsdd__SigType *, const char*);
SOAP_FMAC3 struct wsdd__SigType * SOAP_FMAC4 soap_in_wsdd__SigType(struct soap*, const char*, struct wsdd__SigType *, const char*);

SOAP_FMAC3 struct wsdd__SigType * SOAP_FMAC4 soap_new_wsdd__SigType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsdd__SigType(struct soap*, const struct wsdd__SigType *, const char*, const char*);

#ifndef soap_write_wsdd__SigType
#define soap_write_wsdd__SigType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsdd__SigType(soap, data), 0) || soap_put_wsdd__SigType(soap, data, "wsdd:SigType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsdd__SigType
#define soap_PUT_wsdd__SigType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__SigType(soap, data), 0) || soap_put_wsdd__SigType(soap, data, "wsdd:SigType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsdd__SigType
#define soap_PATCH_wsdd__SigType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__SigType(soap, data), 0) || soap_put_wsdd__SigType(soap, data, "wsdd:SigType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsdd__SigType
#define soap_POST_send_wsdd__SigType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__SigType(soap, data), 0) || soap_put_wsdd__SigType(soap, data, "wsdd:SigType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsdd__SigType * SOAP_FMAC4 soap_get_wsdd__SigType(struct soap*, struct wsdd__SigType *, const char*, const char*);

#ifndef soap_read_wsdd__SigType
#define soap_read_wsdd__SigType(soap, data) ( ((data) ? (soap_default_wsdd__SigType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsdd__SigType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsdd__SigType
#define soap_GET_wsdd__SigType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsdd__SigType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsdd__SigType
#define soap_POST_recv_wsdd__SigType(soap, data) ( soap_read_wsdd__SigType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsdd__SecurityType_DEFINED
#define SOAP_TYPE_wsdd__SecurityType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsdd__SecurityType(struct soap*, struct wsdd__SecurityType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__SecurityType(struct soap*, const struct wsdd__SecurityType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdd__SecurityType(struct soap*, const char*, int, const struct wsdd__SecurityType *, const char*);
SOAP_FMAC3 struct wsdd__SecurityType * SOAP_FMAC4 soap_in_wsdd__SecurityType(struct soap*, const char*, struct wsdd__SecurityType *, const char*);

SOAP_FMAC3 struct wsdd__SecurityType * SOAP_FMAC4 soap_new_wsdd__SecurityType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsdd__SecurityType(struct soap*, const struct wsdd__SecurityType *, const char*, const char*);

#ifndef soap_write_wsdd__SecurityType
#define soap_write_wsdd__SecurityType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsdd__SecurityType(soap, data), 0) || soap_put_wsdd__SecurityType(soap, data, "wsdd:SecurityType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsdd__SecurityType
#define soap_PUT_wsdd__SecurityType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__SecurityType(soap, data), 0) || soap_put_wsdd__SecurityType(soap, data, "wsdd:SecurityType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsdd__SecurityType
#define soap_PATCH_wsdd__SecurityType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__SecurityType(soap, data), 0) || soap_put_wsdd__SecurityType(soap, data, "wsdd:SecurityType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsdd__SecurityType
#define soap_POST_send_wsdd__SecurityType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__SecurityType(soap, data), 0) || soap_put_wsdd__SecurityType(soap, data, "wsdd:SecurityType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsdd__SecurityType * SOAP_FMAC4 soap_get_wsdd__SecurityType(struct soap*, struct wsdd__SecurityType *, const char*, const char*);

#ifndef soap_read_wsdd__SecurityType
#define soap_read_wsdd__SecurityType(soap, data) ( ((data) ? (soap_default_wsdd__SecurityType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsdd__SecurityType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsdd__SecurityType
#define soap_GET_wsdd__SecurityType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsdd__SecurityType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsdd__SecurityType
#define soap_POST_recv_wsdd__SecurityType(soap, data) ( soap_read_wsdd__SecurityType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsdd__ScopesType_DEFINED
#define SOAP_TYPE_wsdd__ScopesType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsdd__ScopesType(struct soap*, struct wsdd__ScopesType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__ScopesType(struct soap*, const struct wsdd__ScopesType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdd__ScopesType(struct soap*, const char*, int, const struct wsdd__ScopesType *, const char*);
SOAP_FMAC3 struct wsdd__ScopesType * SOAP_FMAC4 soap_in_wsdd__ScopesType(struct soap*, const char*, struct wsdd__ScopesType *, const char*);

SOAP_FMAC3 struct wsdd__ScopesType * SOAP_FMAC4 soap_new_wsdd__ScopesType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsdd__ScopesType(struct soap*, const struct wsdd__ScopesType *, const char*, const char*);

#ifndef soap_write_wsdd__ScopesType
#define soap_write_wsdd__ScopesType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsdd__ScopesType(soap, data), 0) || soap_put_wsdd__ScopesType(soap, data, "wsdd:ScopesType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsdd__ScopesType
#define soap_PUT_wsdd__ScopesType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__ScopesType(soap, data), 0) || soap_put_wsdd__ScopesType(soap, data, "wsdd:ScopesType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsdd__ScopesType
#define soap_PATCH_wsdd__ScopesType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__ScopesType(soap, data), 0) || soap_put_wsdd__ScopesType(soap, data, "wsdd:ScopesType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsdd__ScopesType
#define soap_POST_send_wsdd__ScopesType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__ScopesType(soap, data), 0) || soap_put_wsdd__ScopesType(soap, data, "wsdd:ScopesType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsdd__ScopesType * SOAP_FMAC4 soap_get_wsdd__ScopesType(struct soap*, struct wsdd__ScopesType *, const char*, const char*);

#ifndef soap_read_wsdd__ScopesType
#define soap_read_wsdd__ScopesType(soap, data) ( ((data) ? (soap_default_wsdd__ScopesType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsdd__ScopesType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsdd__ScopesType
#define soap_GET_wsdd__ScopesType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsdd__ScopesType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsdd__ScopesType
#define soap_POST_recv_wsdd__ScopesType(soap, data) ( soap_read_wsdd__ScopesType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsdd__ResolveMatchType_DEFINED
#define SOAP_TYPE_wsdd__ResolveMatchType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsdd__ResolveMatchType(struct soap*, struct wsdd__ResolveMatchType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__ResolveMatchType(struct soap*, const struct wsdd__ResolveMatchType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdd__ResolveMatchType(struct soap*, const char*, int, const struct wsdd__ResolveMatchType *, const char*);
SOAP_FMAC3 struct wsdd__ResolveMatchType * SOAP_FMAC4 soap_in_wsdd__ResolveMatchType(struct soap*, const char*, struct wsdd__ResolveMatchType *, const char*);

SOAP_FMAC3 struct wsdd__ResolveMatchType * SOAP_FMAC4 soap_new_wsdd__ResolveMatchType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsdd__ResolveMatchType(struct soap*, const struct wsdd__ResolveMatchType *, const char*, const char*);

#ifndef soap_write_wsdd__ResolveMatchType
#define soap_write_wsdd__ResolveMatchType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsdd__ResolveMatchType(soap, data), 0) || soap_put_wsdd__ResolveMatchType(soap, data, "wsdd:ResolveMatchType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsdd__ResolveMatchType
#define soap_PUT_wsdd__ResolveMatchType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__ResolveMatchType(soap, data), 0) || soap_put_wsdd__ResolveMatchType(soap, data, "wsdd:ResolveMatchType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsdd__ResolveMatchType
#define soap_PATCH_wsdd__ResolveMatchType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__ResolveMatchType(soap, data), 0) || soap_put_wsdd__ResolveMatchType(soap, data, "wsdd:ResolveMatchType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsdd__ResolveMatchType
#define soap_POST_send_wsdd__ResolveMatchType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__ResolveMatchType(soap, data), 0) || soap_put_wsdd__ResolveMatchType(soap, data, "wsdd:ResolveMatchType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsdd__ResolveMatchType * SOAP_FMAC4 soap_get_wsdd__ResolveMatchType(struct soap*, struct wsdd__ResolveMatchType *, const char*, const char*);

#ifndef soap_read_wsdd__ResolveMatchType
#define soap_read_wsdd__ResolveMatchType(soap, data) ( ((data) ? (soap_default_wsdd__ResolveMatchType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsdd__ResolveMatchType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsdd__ResolveMatchType
#define soap_GET_wsdd__ResolveMatchType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsdd__ResolveMatchType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsdd__ResolveMatchType
#define soap_POST_recv_wsdd__ResolveMatchType(soap, data) ( soap_read_wsdd__ResolveMatchType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsdd__ResolveMatchesType_DEFINED
#define SOAP_TYPE_wsdd__ResolveMatchesType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsdd__ResolveMatchesType(struct soap*, struct wsdd__ResolveMatchesType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__ResolveMatchesType(struct soap*, const struct wsdd__ResolveMatchesType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdd__ResolveMatchesType(struct soap*, const char*, int, const struct wsdd__ResolveMatchesType *, const char*);
SOAP_FMAC3 struct wsdd__ResolveMatchesType * SOAP_FMAC4 soap_in_wsdd__ResolveMatchesType(struct soap*, const char*, struct wsdd__ResolveMatchesType *, const char*);

SOAP_FMAC3 struct wsdd__ResolveMatchesType * SOAP_FMAC4 soap_new_wsdd__ResolveMatchesType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsdd__ResolveMatchesType(struct soap*, const struct wsdd__ResolveMatchesType *, const char*, const char*);

#ifndef soap_write_wsdd__ResolveMatchesType
#define soap_write_wsdd__ResolveMatchesType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsdd__ResolveMatchesType(soap, data), 0) || soap_put_wsdd__ResolveMatchesType(soap, data, "wsdd:ResolveMatchesType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsdd__ResolveMatchesType
#define soap_PUT_wsdd__ResolveMatchesType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__ResolveMatchesType(soap, data), 0) || soap_put_wsdd__ResolveMatchesType(soap, data, "wsdd:ResolveMatchesType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsdd__ResolveMatchesType
#define soap_PATCH_wsdd__ResolveMatchesType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__ResolveMatchesType(soap, data), 0) || soap_put_wsdd__ResolveMatchesType(soap, data, "wsdd:ResolveMatchesType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsdd__ResolveMatchesType
#define soap_POST_send_wsdd__ResolveMatchesType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__ResolveMatchesType(soap, data), 0) || soap_put_wsdd__ResolveMatchesType(soap, data, "wsdd:ResolveMatchesType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsdd__ResolveMatchesType * SOAP_FMAC4 soap_get_wsdd__ResolveMatchesType(struct soap*, struct wsdd__ResolveMatchesType *, const char*, const char*);

#ifndef soap_read_wsdd__ResolveMatchesType
#define soap_read_wsdd__ResolveMatchesType(soap, data) ( ((data) ? (soap_default_wsdd__ResolveMatchesType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsdd__ResolveMatchesType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsdd__ResolveMatchesType
#define soap_GET_wsdd__ResolveMatchesType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsdd__ResolveMatchesType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsdd__ResolveMatchesType
#define soap_POST_recv_wsdd__ResolveMatchesType(soap, data) ( soap_read_wsdd__ResolveMatchesType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsdd__ResolveType_DEFINED
#define SOAP_TYPE_wsdd__ResolveType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsdd__ResolveType(struct soap*, struct wsdd__ResolveType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__ResolveType(struct soap*, const struct wsdd__ResolveType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdd__ResolveType(struct soap*, const char*, int, const struct wsdd__ResolveType *, const char*);
SOAP_FMAC3 struct wsdd__ResolveType * SOAP_FMAC4 soap_in_wsdd__ResolveType(struct soap*, const char*, struct wsdd__ResolveType *, const char*);

SOAP_FMAC3 struct wsdd__ResolveType * SOAP_FMAC4 soap_new_wsdd__ResolveType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsdd__ResolveType(struct soap*, const struct wsdd__ResolveType *, const char*, const char*);

#ifndef soap_write_wsdd__ResolveType
#define soap_write_wsdd__ResolveType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsdd__ResolveType(soap, data), 0) || soap_put_wsdd__ResolveType(soap, data, "wsdd:ResolveType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsdd__ResolveType
#define soap_PUT_wsdd__ResolveType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__ResolveType(soap, data), 0) || soap_put_wsdd__ResolveType(soap, data, "wsdd:ResolveType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsdd__ResolveType
#define soap_PATCH_wsdd__ResolveType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__ResolveType(soap, data), 0) || soap_put_wsdd__ResolveType(soap, data, "wsdd:ResolveType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsdd__ResolveType
#define soap_POST_send_wsdd__ResolveType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__ResolveType(soap, data), 0) || soap_put_wsdd__ResolveType(soap, data, "wsdd:ResolveType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsdd__ResolveType * SOAP_FMAC4 soap_get_wsdd__ResolveType(struct soap*, struct wsdd__ResolveType *, const char*, const char*);

#ifndef soap_read_wsdd__ResolveType
#define soap_read_wsdd__ResolveType(soap, data) ( ((data) ? (soap_default_wsdd__ResolveType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsdd__ResolveType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsdd__ResolveType
#define soap_GET_wsdd__ResolveType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsdd__ResolveType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsdd__ResolveType
#define soap_POST_recv_wsdd__ResolveType(soap, data) ( soap_read_wsdd__ResolveType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsdd__ProbeMatchType_DEFINED
#define SOAP_TYPE_wsdd__ProbeMatchType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsdd__ProbeMatchType(struct soap*, struct wsdd__ProbeMatchType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__ProbeMatchType(struct soap*, const struct wsdd__ProbeMatchType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdd__ProbeMatchType(struct soap*, const char*, int, const struct wsdd__ProbeMatchType *, const char*);
SOAP_FMAC3 struct wsdd__ProbeMatchType * SOAP_FMAC4 soap_in_wsdd__ProbeMatchType(struct soap*, const char*, struct wsdd__ProbeMatchType *, const char*);

SOAP_FMAC3 struct wsdd__ProbeMatchType * SOAP_FMAC4 soap_new_wsdd__ProbeMatchType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsdd__ProbeMatchType(struct soap*, const struct wsdd__ProbeMatchType *, const char*, const char*);

#ifndef soap_write_wsdd__ProbeMatchType
#define soap_write_wsdd__ProbeMatchType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsdd__ProbeMatchType(soap, data), 0) || soap_put_wsdd__ProbeMatchType(soap, data, "wsdd:ProbeMatchType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsdd__ProbeMatchType
#define soap_PUT_wsdd__ProbeMatchType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__ProbeMatchType(soap, data), 0) || soap_put_wsdd__ProbeMatchType(soap, data, "wsdd:ProbeMatchType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsdd__ProbeMatchType
#define soap_PATCH_wsdd__ProbeMatchType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__ProbeMatchType(soap, data), 0) || soap_put_wsdd__ProbeMatchType(soap, data, "wsdd:ProbeMatchType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsdd__ProbeMatchType
#define soap_POST_send_wsdd__ProbeMatchType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__ProbeMatchType(soap, data), 0) || soap_put_wsdd__ProbeMatchType(soap, data, "wsdd:ProbeMatchType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsdd__ProbeMatchType * SOAP_FMAC4 soap_get_wsdd__ProbeMatchType(struct soap*, struct wsdd__ProbeMatchType *, const char*, const char*);

#ifndef soap_read_wsdd__ProbeMatchType
#define soap_read_wsdd__ProbeMatchType(soap, data) ( ((data) ? (soap_default_wsdd__ProbeMatchType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsdd__ProbeMatchType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsdd__ProbeMatchType
#define soap_GET_wsdd__ProbeMatchType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsdd__ProbeMatchType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsdd__ProbeMatchType
#define soap_POST_recv_wsdd__ProbeMatchType(soap, data) ( soap_read_wsdd__ProbeMatchType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsdd__ProbeMatchesType_DEFINED
#define SOAP_TYPE_wsdd__ProbeMatchesType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsdd__ProbeMatchesType(struct soap*, struct wsdd__ProbeMatchesType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__ProbeMatchesType(struct soap*, const struct wsdd__ProbeMatchesType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdd__ProbeMatchesType(struct soap*, const char*, int, const struct wsdd__ProbeMatchesType *, const char*);
SOAP_FMAC3 struct wsdd__ProbeMatchesType * SOAP_FMAC4 soap_in_wsdd__ProbeMatchesType(struct soap*, const char*, struct wsdd__ProbeMatchesType *, const char*);

SOAP_FMAC3 struct wsdd__ProbeMatchesType * SOAP_FMAC4 soap_new_wsdd__ProbeMatchesType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsdd__ProbeMatchesType(struct soap*, const struct wsdd__ProbeMatchesType *, const char*, const char*);

#ifndef soap_write_wsdd__ProbeMatchesType
#define soap_write_wsdd__ProbeMatchesType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsdd__ProbeMatchesType(soap, data), 0) || soap_put_wsdd__ProbeMatchesType(soap, data, "wsdd:ProbeMatchesType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsdd__ProbeMatchesType
#define soap_PUT_wsdd__ProbeMatchesType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__ProbeMatchesType(soap, data), 0) || soap_put_wsdd__ProbeMatchesType(soap, data, "wsdd:ProbeMatchesType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsdd__ProbeMatchesType
#define soap_PATCH_wsdd__ProbeMatchesType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__ProbeMatchesType(soap, data), 0) || soap_put_wsdd__ProbeMatchesType(soap, data, "wsdd:ProbeMatchesType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsdd__ProbeMatchesType
#define soap_POST_send_wsdd__ProbeMatchesType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__ProbeMatchesType(soap, data), 0) || soap_put_wsdd__ProbeMatchesType(soap, data, "wsdd:ProbeMatchesType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsdd__ProbeMatchesType * SOAP_FMAC4 soap_get_wsdd__ProbeMatchesType(struct soap*, struct wsdd__ProbeMatchesType *, const char*, const char*);

#ifndef soap_read_wsdd__ProbeMatchesType
#define soap_read_wsdd__ProbeMatchesType(soap, data) ( ((data) ? (soap_default_wsdd__ProbeMatchesType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsdd__ProbeMatchesType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsdd__ProbeMatchesType
#define soap_GET_wsdd__ProbeMatchesType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsdd__ProbeMatchesType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsdd__ProbeMatchesType
#define soap_POST_recv_wsdd__ProbeMatchesType(soap, data) ( soap_read_wsdd__ProbeMatchesType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsdd__ProbeType_DEFINED
#define SOAP_TYPE_wsdd__ProbeType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsdd__ProbeType(struct soap*, struct wsdd__ProbeType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__ProbeType(struct soap*, const struct wsdd__ProbeType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdd__ProbeType(struct soap*, const char*, int, const struct wsdd__ProbeType *, const char*);
SOAP_FMAC3 struct wsdd__ProbeType * SOAP_FMAC4 soap_in_wsdd__ProbeType(struct soap*, const char*, struct wsdd__ProbeType *, const char*);

SOAP_FMAC3 struct wsdd__ProbeType * SOAP_FMAC4 soap_new_wsdd__ProbeType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsdd__ProbeType(struct soap*, const struct wsdd__ProbeType *, const char*, const char*);

#ifndef soap_write_wsdd__ProbeType
#define soap_write_wsdd__ProbeType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsdd__ProbeType(soap, data), 0) || soap_put_wsdd__ProbeType(soap, data, "wsdd:ProbeType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsdd__ProbeType
#define soap_PUT_wsdd__ProbeType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__ProbeType(soap, data), 0) || soap_put_wsdd__ProbeType(soap, data, "wsdd:ProbeType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsdd__ProbeType
#define soap_PATCH_wsdd__ProbeType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__ProbeType(soap, data), 0) || soap_put_wsdd__ProbeType(soap, data, "wsdd:ProbeType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsdd__ProbeType
#define soap_POST_send_wsdd__ProbeType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__ProbeType(soap, data), 0) || soap_put_wsdd__ProbeType(soap, data, "wsdd:ProbeType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsdd__ProbeType * SOAP_FMAC4 soap_get_wsdd__ProbeType(struct soap*, struct wsdd__ProbeType *, const char*, const char*);

#ifndef soap_read_wsdd__ProbeType
#define soap_read_wsdd__ProbeType(soap, data) ( ((data) ? (soap_default_wsdd__ProbeType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsdd__ProbeType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsdd__ProbeType
#define soap_GET_wsdd__ProbeType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsdd__ProbeType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsdd__ProbeType
#define soap_POST_recv_wsdd__ProbeType(soap, data) ( soap_read_wsdd__ProbeType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsdd__ByeType_DEFINED
#define SOAP_TYPE_wsdd__ByeType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsdd__ByeType(struct soap*, struct wsdd__ByeType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__ByeType(struct soap*, const struct wsdd__ByeType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdd__ByeType(struct soap*, const char*, int, const struct wsdd__ByeType *, const char*);
SOAP_FMAC3 struct wsdd__ByeType * SOAP_FMAC4 soap_in_wsdd__ByeType(struct soap*, const char*, struct wsdd__ByeType *, const char*);

SOAP_FMAC3 struct wsdd__ByeType * SOAP_FMAC4 soap_new_wsdd__ByeType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsdd__ByeType(struct soap*, const struct wsdd__ByeType *, const char*, const char*);

#ifndef soap_write_wsdd__ByeType
#define soap_write_wsdd__ByeType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsdd__ByeType(soap, data), 0) || soap_put_wsdd__ByeType(soap, data, "wsdd:ByeType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsdd__ByeType
#define soap_PUT_wsdd__ByeType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__ByeType(soap, data), 0) || soap_put_wsdd__ByeType(soap, data, "wsdd:ByeType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsdd__ByeType
#define soap_PATCH_wsdd__ByeType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__ByeType(soap, data), 0) || soap_put_wsdd__ByeType(soap, data, "wsdd:ByeType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsdd__ByeType
#define soap_POST_send_wsdd__ByeType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__ByeType(soap, data), 0) || soap_put_wsdd__ByeType(soap, data, "wsdd:ByeType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsdd__ByeType * SOAP_FMAC4 soap_get_wsdd__ByeType(struct soap*, struct wsdd__ByeType *, const char*, const char*);

#ifndef soap_read_wsdd__ByeType
#define soap_read_wsdd__ByeType(soap, data) ( ((data) ? (soap_default_wsdd__ByeType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsdd__ByeType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsdd__ByeType
#define soap_GET_wsdd__ByeType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsdd__ByeType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsdd__ByeType
#define soap_POST_recv_wsdd__ByeType(soap, data) ( soap_read_wsdd__ByeType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsdd__HelloType_DEFINED
#define SOAP_TYPE_wsdd__HelloType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsdd__HelloType(struct soap*, struct wsdd__HelloType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__HelloType(struct soap*, const struct wsdd__HelloType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdd__HelloType(struct soap*, const char*, int, const struct wsdd__HelloType *, const char*);
SOAP_FMAC3 struct wsdd__HelloType * SOAP_FMAC4 soap_in_wsdd__HelloType(struct soap*, const char*, struct wsdd__HelloType *, const char*);

SOAP_FMAC3 struct wsdd__HelloType * SOAP_FMAC4 soap_new_wsdd__HelloType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsdd__HelloType(struct soap*, const struct wsdd__HelloType *, const char*, const char*);

#ifndef soap_write_wsdd__HelloType
#define soap_write_wsdd__HelloType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsdd__HelloType(soap, data), 0) || soap_put_wsdd__HelloType(soap, data, "wsdd:HelloType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsdd__HelloType
#define soap_PUT_wsdd__HelloType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__HelloType(soap, data), 0) || soap_put_wsdd__HelloType(soap, data, "wsdd:HelloType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsdd__HelloType
#define soap_PATCH_wsdd__HelloType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__HelloType(soap, data), 0) || soap_put_wsdd__HelloType(soap, data, "wsdd:HelloType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsdd__HelloType
#define soap_POST_send_wsdd__HelloType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsdd__HelloType(soap, data), 0) || soap_put_wsdd__HelloType(soap, data, "wsdd:HelloType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsdd__HelloType * SOAP_FMAC4 soap_get_wsdd__HelloType(struct soap*, struct wsdd__HelloType *, const char*, const char*);

#ifndef soap_read_wsdd__HelloType
#define soap_read_wsdd__HelloType(soap, data) ( ((data) ? (soap_default_wsdd__HelloType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsdd__HelloType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsdd__HelloType
#define soap_GET_wsdd__HelloType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsdd__HelloType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsdd__HelloType
#define soap_POST_recv_wsdd__HelloType(soap, data) ( soap_read_wsdd__HelloType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault_DEFINED
#define SOAP_TYPE_SOAP_ENV__Fault_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_new_SOAP_ENV__Fault(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_SOAP_ENV__Fault
#define soap_PUT_SOAP_ENV__Fault(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_SOAP_ENV__Fault
#define soap_PATCH_SOAP_ENV__Fault(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_SOAP_ENV__Fault
#define soap_POST_send_SOAP_ENV__Fault(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Fault(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_SOAP_ENV__Fault
#define soap_GET_SOAP_ENV__Fault(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_SOAP_ENV__Fault(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_SOAP_ENV__Fault
#define soap_POST_recv_SOAP_ENV__Fault(soap, data) ( soap_read_SOAP_ENV__Fault(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason_DEFINED
#define SOAP_TYPE_SOAP_ENV__Reason_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_new_SOAP_ENV__Reason(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_SOAP_ENV__Reason
#define soap_PUT_SOAP_ENV__Reason(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_SOAP_ENV__Reason
#define soap_PATCH_SOAP_ENV__Reason(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_SOAP_ENV__Reason
#define soap_POST_send_SOAP_ENV__Reason(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Reason(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_SOAP_ENV__Reason
#define soap_GET_SOAP_ENV__Reason(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_SOAP_ENV__Reason(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_SOAP_ENV__Reason
#define soap_POST_recv_SOAP_ENV__Reason(soap, data) ( soap_read_SOAP_ENV__Reason(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code_DEFINED
#define SOAP_TYPE_SOAP_ENV__Code_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_new_SOAP_ENV__Code(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_SOAP_ENV__Code
#define soap_PUT_SOAP_ENV__Code(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_SOAP_ENV__Code
#define soap_PATCH_SOAP_ENV__Code(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_SOAP_ENV__Code
#define soap_POST_send_SOAP_ENV__Code(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Code(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_SOAP_ENV__Code
#define soap_GET_SOAP_ENV__Code(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_SOAP_ENV__Code(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_SOAP_ENV__Code
#define soap_POST_recv_SOAP_ENV__Code(soap, data) ( soap_read_SOAP_ENV__Code(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail_DEFINED
#define SOAP_TYPE_SOAP_ENV__Detail_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_new_SOAP_ENV__Detail(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_SOAP_ENV__Detail
#define soap_PUT_SOAP_ENV__Detail(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_SOAP_ENV__Detail
#define soap_PATCH_SOAP_ENV__Detail(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_SOAP_ENV__Detail
#define soap_POST_send_SOAP_ENV__Detail(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Detail(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_SOAP_ENV__Detail
#define soap_GET_SOAP_ENV__Detail(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_SOAP_ENV__Detail(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_SOAP_ENV__Detail
#define soap_POST_recv_SOAP_ENV__Detail(soap, data) ( soap_read_SOAP_ENV__Detail(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header_DEFINED
#define SOAP_TYPE_SOAP_ENV__Header_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_new_SOAP_ENV__Header(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_SOAP_ENV__Header
#define soap_PUT_SOAP_ENV__Header(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_SOAP_ENV__Header
#define soap_PATCH_SOAP_ENV__Header(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_SOAP_ENV__Header
#define soap_POST_send_SOAP_ENV__Header(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Header(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_SOAP_ENV__Header
#define soap_GET_SOAP_ENV__Header(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_SOAP_ENV__Header(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_SOAP_ENV__Header
#define soap_POST_recv_SOAP_ENV__Header(soap, data) ( soap_read_SOAP_ENV__Header(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif
/* _wsa__FaultTo is a typedef synonym of wsa__EndpointReferenceType */

#ifndef SOAP_TYPE__wsa__FaultTo_DEFINED
#define SOAP_TYPE__wsa__FaultTo_DEFINED

#define soap_default__wsa__FaultTo soap_default_wsa__EndpointReferenceType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa__EndpointReferenceType(struct soap*, const struct wsa__EndpointReferenceType *);

#define soap_serialize__wsa__FaultTo soap_serialize_wsa__EndpointReferenceType


#define soap__wsa__FaultTo2s soap_wsa__EndpointReferenceType2s


#define soap_out__wsa__FaultTo soap_out_wsa__EndpointReferenceType


#define soap_s2_wsa__FaultTo soap_s2wsa__EndpointReferenceType


#define soap_in__wsa__FaultTo soap_in_wsa__EndpointReferenceType

#define soap_new__wsa__FaultTo soap_new_wsa__EndpointReferenceType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa__FaultTo(struct soap*, const struct wsa__EndpointReferenceType *, const char*, const char*);

#ifndef soap_write__wsa__FaultTo
#define soap_write__wsa__FaultTo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsa__FaultTo(soap, data), 0) || soap_put__wsa__FaultTo(soap, data, "wsa:FaultTo", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsa__FaultTo
#define soap_PUT__wsa__FaultTo(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa__FaultTo(soap, data), 0) || soap_put__wsa__FaultTo(soap, data, "wsa:FaultTo", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsa__FaultTo
#define soap_PATCH__wsa__FaultTo(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa__FaultTo(soap, data), 0) || soap_put__wsa__FaultTo(soap, data, "wsa:FaultTo", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsa__FaultTo
#define soap_POST_send__wsa__FaultTo(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa__FaultTo(soap, data), 0) || soap_put__wsa__FaultTo(soap, data, "wsa:FaultTo", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsa__FaultTo soap_get_wsa__EndpointReferenceType


#define soap_read__wsa__FaultTo soap_read_wsa__EndpointReferenceType


#define soap_GET__wsa__FaultTo soap_GET_wsa__EndpointReferenceType


#define soap_POST_recv__wsa__FaultTo soap_POST_recv_wsa__EndpointReferenceType

#endif
/* _wsa__ReplyTo is a typedef synonym of wsa__EndpointReferenceType */

#ifndef SOAP_TYPE__wsa__ReplyTo_DEFINED
#define SOAP_TYPE__wsa__ReplyTo_DEFINED

#define soap_default__wsa__ReplyTo soap_default_wsa__EndpointReferenceType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa__EndpointReferenceType(struct soap*, const struct wsa__EndpointReferenceType *);

#define soap_serialize__wsa__ReplyTo soap_serialize_wsa__EndpointReferenceType


#define soap__wsa__ReplyTo2s soap_wsa__EndpointReferenceType2s


#define soap_out__wsa__ReplyTo soap_out_wsa__EndpointReferenceType


#define soap_s2_wsa__ReplyTo soap_s2wsa__EndpointReferenceType


#define soap_in__wsa__ReplyTo soap_in_wsa__EndpointReferenceType

#define soap_new__wsa__ReplyTo soap_new_wsa__EndpointReferenceType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa__ReplyTo(struct soap*, const struct wsa__EndpointReferenceType *, const char*, const char*);

#ifndef soap_write__wsa__ReplyTo
#define soap_write__wsa__ReplyTo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsa__ReplyTo(soap, data), 0) || soap_put__wsa__ReplyTo(soap, data, "wsa:ReplyTo", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsa__ReplyTo
#define soap_PUT__wsa__ReplyTo(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa__ReplyTo(soap, data), 0) || soap_put__wsa__ReplyTo(soap, data, "wsa:ReplyTo", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsa__ReplyTo
#define soap_PATCH__wsa__ReplyTo(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa__ReplyTo(soap, data), 0) || soap_put__wsa__ReplyTo(soap, data, "wsa:ReplyTo", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsa__ReplyTo
#define soap_POST_send__wsa__ReplyTo(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa__ReplyTo(soap, data), 0) || soap_put__wsa__ReplyTo(soap, data, "wsa:ReplyTo", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsa__ReplyTo soap_get_wsa__EndpointReferenceType


#define soap_read__wsa__ReplyTo soap_read_wsa__EndpointReferenceType


#define soap_GET__wsa__ReplyTo soap_GET_wsa__EndpointReferenceType


#define soap_POST_recv__wsa__ReplyTo soap_POST_recv_wsa__EndpointReferenceType

#endif
/* _wsa__From is a typedef synonym of wsa__EndpointReferenceType */

#ifndef SOAP_TYPE__wsa__From_DEFINED
#define SOAP_TYPE__wsa__From_DEFINED

#define soap_default__wsa__From soap_default_wsa__EndpointReferenceType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa__EndpointReferenceType(struct soap*, const struct wsa__EndpointReferenceType *);

#define soap_serialize__wsa__From soap_serialize_wsa__EndpointReferenceType


#define soap__wsa__From2s soap_wsa__EndpointReferenceType2s


#define soap_out__wsa__From soap_out_wsa__EndpointReferenceType


#define soap_s2_wsa__From soap_s2wsa__EndpointReferenceType


#define soap_in__wsa__From soap_in_wsa__EndpointReferenceType

#define soap_new__wsa__From soap_new_wsa__EndpointReferenceType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa__From(struct soap*, const struct wsa__EndpointReferenceType *, const char*, const char*);

#ifndef soap_write__wsa__From
#define soap_write__wsa__From(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsa__From(soap, data), 0) || soap_put__wsa__From(soap, data, "wsa:From", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsa__From
#define soap_PUT__wsa__From(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa__From(soap, data), 0) || soap_put__wsa__From(soap, data, "wsa:From", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsa__From
#define soap_PATCH__wsa__From(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa__From(soap, data), 0) || soap_put__wsa__From(soap, data, "wsa:From", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsa__From
#define soap_POST_send__wsa__From(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa__From(soap, data), 0) || soap_put__wsa__From(soap, data, "wsa:From", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsa__From soap_get_wsa__EndpointReferenceType


#define soap_read__wsa__From soap_read_wsa__EndpointReferenceType


#define soap_GET__wsa__From soap_GET_wsa__EndpointReferenceType


#define soap_POST_recv__wsa__From soap_POST_recv_wsa__EndpointReferenceType

#endif
/* _wsa__RelatesTo is a typedef synonym of wsa__Relationship */

#ifndef SOAP_TYPE__wsa__RelatesTo_DEFINED
#define SOAP_TYPE__wsa__RelatesTo_DEFINED

#define soap_default__wsa__RelatesTo soap_default_wsa__Relationship

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa__Relationship(struct soap*, const struct wsa__Relationship *);

#define soap_serialize__wsa__RelatesTo soap_serialize_wsa__Relationship


#define soap__wsa__RelatesTo2s soap_wsa__Relationship2s


#define soap_out__wsa__RelatesTo soap_out_wsa__Relationship


#define soap_s2_wsa__RelatesTo soap_s2wsa__Relationship


#define soap_in__wsa__RelatesTo soap_in_wsa__Relationship

#define soap_new__wsa__RelatesTo soap_new_wsa__Relationship

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa__RelatesTo(struct soap*, const struct wsa__Relationship *, const char*, const char*);

#ifndef soap_write__wsa__RelatesTo
#define soap_write__wsa__RelatesTo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsa__RelatesTo(soap, data), 0) || soap_put__wsa__RelatesTo(soap, data, "wsa:RelatesTo", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsa__RelatesTo
#define soap_PUT__wsa__RelatesTo(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa__RelatesTo(soap, data), 0) || soap_put__wsa__RelatesTo(soap, data, "wsa:RelatesTo", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsa__RelatesTo
#define soap_PATCH__wsa__RelatesTo(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa__RelatesTo(soap, data), 0) || soap_put__wsa__RelatesTo(soap, data, "wsa:RelatesTo", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsa__RelatesTo
#define soap_POST_send__wsa__RelatesTo(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa__RelatesTo(soap, data), 0) || soap_put__wsa__RelatesTo(soap, data, "wsa:RelatesTo", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsa__RelatesTo soap_get_wsa__Relationship


#define soap_read__wsa__RelatesTo soap_read_wsa__Relationship


#define soap_GET__wsa__RelatesTo soap_GET_wsa__Relationship


#define soap_POST_recv__wsa__RelatesTo soap_POST_recv_wsa__Relationship

#endif
/* _wsa__EndpointReference is a typedef synonym of wsa__EndpointReferenceType */

#ifndef SOAP_TYPE__wsa__EndpointReference_DEFINED
#define SOAP_TYPE__wsa__EndpointReference_DEFINED

#define soap_default__wsa__EndpointReference soap_default_wsa__EndpointReferenceType

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa__EndpointReferenceType(struct soap*, const struct wsa__EndpointReferenceType *);

#define soap_serialize__wsa__EndpointReference soap_serialize_wsa__EndpointReferenceType


#define soap__wsa__EndpointReference2s soap_wsa__EndpointReferenceType2s


#define soap_out__wsa__EndpointReference soap_out_wsa__EndpointReferenceType


#define soap_s2_wsa__EndpointReference soap_s2wsa__EndpointReferenceType


#define soap_in__wsa__EndpointReference soap_in_wsa__EndpointReferenceType

#define soap_new__wsa__EndpointReference soap_new_wsa__EndpointReferenceType

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa__EndpointReference(struct soap*, const struct wsa__EndpointReferenceType *, const char*, const char*);

#ifndef soap_write__wsa__EndpointReference
#define soap_write__wsa__EndpointReference(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__wsa__EndpointReference(soap, data), 0) || soap_put__wsa__EndpointReference(soap, data, "wsa:EndpointReference", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsa__EndpointReference
#define soap_PUT__wsa__EndpointReference(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa__EndpointReference(soap, data), 0) || soap_put__wsa__EndpointReference(soap, data, "wsa:EndpointReference", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsa__EndpointReference
#define soap_PATCH__wsa__EndpointReference(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa__EndpointReference(soap, data), 0) || soap_put__wsa__EndpointReference(soap, data, "wsa:EndpointReference", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsa__EndpointReference
#define soap_POST_send__wsa__EndpointReference(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__wsa__EndpointReference(soap, data), 0) || soap_put__wsa__EndpointReference(soap, data, "wsa:EndpointReference", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsa__EndpointReference soap_get_wsa__EndpointReferenceType


#define soap_read__wsa__EndpointReference soap_read_wsa__EndpointReferenceType


#define soap_GET__wsa__EndpointReference soap_GET_wsa__EndpointReferenceType


#define soap_POST_recv__wsa__EndpointReference soap_POST_recv_wsa__EndpointReferenceType

#endif

#ifndef SOAP_TYPE_wsa__Relationship_DEFINED
#define SOAP_TYPE_wsa__Relationship_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa__Relationship(struct soap*, struct wsa__Relationship *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa__Relationship(struct soap*, const struct wsa__Relationship *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa__Relationship(struct soap*, const char*, int, const struct wsa__Relationship *, const char*);
SOAP_FMAC3 struct wsa__Relationship * SOAP_FMAC4 soap_in_wsa__Relationship(struct soap*, const char*, struct wsa__Relationship *, const char*);

SOAP_FMAC3 struct wsa__Relationship * SOAP_FMAC4 soap_new_wsa__Relationship(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa__Relationship(struct soap*, const struct wsa__Relationship *, const char*, const char*);

#ifndef soap_write_wsa__Relationship
#define soap_write_wsa__Relationship(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsa__Relationship(soap, data), 0) || soap_put_wsa__Relationship(soap, data, "wsa:Relationship", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsa__Relationship
#define soap_PUT_wsa__Relationship(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa__Relationship(soap, data), 0) || soap_put_wsa__Relationship(soap, data, "wsa:Relationship", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsa__Relationship
#define soap_PATCH_wsa__Relationship(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa__Relationship(soap, data), 0) || soap_put_wsa__Relationship(soap, data, "wsa:Relationship", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsa__Relationship
#define soap_POST_send_wsa__Relationship(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa__Relationship(soap, data), 0) || soap_put_wsa__Relationship(soap, data, "wsa:Relationship", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa__Relationship * SOAP_FMAC4 soap_get_wsa__Relationship(struct soap*, struct wsa__Relationship *, const char*, const char*);

#ifndef soap_read_wsa__Relationship
#define soap_read_wsa__Relationship(soap, data) ( ((data) ? (soap_default_wsa__Relationship(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsa__Relationship(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsa__Relationship
#define soap_GET_wsa__Relationship(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsa__Relationship(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsa__Relationship
#define soap_POST_recv_wsa__Relationship(soap, data) ( soap_read_wsa__Relationship(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsa__ServiceNameType_DEFINED
#define SOAP_TYPE_wsa__ServiceNameType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa__ServiceNameType(struct soap*, struct wsa__ServiceNameType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa__ServiceNameType(struct soap*, const struct wsa__ServiceNameType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa__ServiceNameType(struct soap*, const char*, int, const struct wsa__ServiceNameType *, const char*);
SOAP_FMAC3 struct wsa__ServiceNameType * SOAP_FMAC4 soap_in_wsa__ServiceNameType(struct soap*, const char*, struct wsa__ServiceNameType *, const char*);

SOAP_FMAC3 struct wsa__ServiceNameType * SOAP_FMAC4 soap_new_wsa__ServiceNameType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa__ServiceNameType(struct soap*, const struct wsa__ServiceNameType *, const char*, const char*);

#ifndef soap_write_wsa__ServiceNameType
#define soap_write_wsa__ServiceNameType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsa__ServiceNameType(soap, data), 0) || soap_put_wsa__ServiceNameType(soap, data, "wsa:ServiceNameType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsa__ServiceNameType
#define soap_PUT_wsa__ServiceNameType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa__ServiceNameType(soap, data), 0) || soap_put_wsa__ServiceNameType(soap, data, "wsa:ServiceNameType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsa__ServiceNameType
#define soap_PATCH_wsa__ServiceNameType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa__ServiceNameType(soap, data), 0) || soap_put_wsa__ServiceNameType(soap, data, "wsa:ServiceNameType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsa__ServiceNameType
#define soap_POST_send_wsa__ServiceNameType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa__ServiceNameType(soap, data), 0) || soap_put_wsa__ServiceNameType(soap, data, "wsa:ServiceNameType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa__ServiceNameType * SOAP_FMAC4 soap_get_wsa__ServiceNameType(struct soap*, struct wsa__ServiceNameType *, const char*, const char*);

#ifndef soap_read_wsa__ServiceNameType
#define soap_read_wsa__ServiceNameType(soap, data) ( ((data) ? (soap_default_wsa__ServiceNameType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsa__ServiceNameType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsa__ServiceNameType
#define soap_GET_wsa__ServiceNameType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsa__ServiceNameType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsa__ServiceNameType
#define soap_POST_recv_wsa__ServiceNameType(soap, data) ( soap_read_wsa__ServiceNameType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsa__ReferenceParametersType_DEFINED
#define SOAP_TYPE_wsa__ReferenceParametersType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa__ReferenceParametersType(struct soap*, struct wsa__ReferenceParametersType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa__ReferenceParametersType(struct soap*, const struct wsa__ReferenceParametersType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa__ReferenceParametersType(struct soap*, const char*, int, const struct wsa__ReferenceParametersType *, const char*);
SOAP_FMAC3 struct wsa__ReferenceParametersType * SOAP_FMAC4 soap_in_wsa__ReferenceParametersType(struct soap*, const char*, struct wsa__ReferenceParametersType *, const char*);

SOAP_FMAC3 struct wsa__ReferenceParametersType * SOAP_FMAC4 soap_new_wsa__ReferenceParametersType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa__ReferenceParametersType(struct soap*, const struct wsa__ReferenceParametersType *, const char*, const char*);

#ifndef soap_write_wsa__ReferenceParametersType
#define soap_write_wsa__ReferenceParametersType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsa__ReferenceParametersType(soap, data), 0) || soap_put_wsa__ReferenceParametersType(soap, data, "wsa:ReferenceParametersType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsa__ReferenceParametersType
#define soap_PUT_wsa__ReferenceParametersType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa__ReferenceParametersType(soap, data), 0) || soap_put_wsa__ReferenceParametersType(soap, data, "wsa:ReferenceParametersType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsa__ReferenceParametersType
#define soap_PATCH_wsa__ReferenceParametersType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa__ReferenceParametersType(soap, data), 0) || soap_put_wsa__ReferenceParametersType(soap, data, "wsa:ReferenceParametersType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsa__ReferenceParametersType
#define soap_POST_send_wsa__ReferenceParametersType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa__ReferenceParametersType(soap, data), 0) || soap_put_wsa__ReferenceParametersType(soap, data, "wsa:ReferenceParametersType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa__ReferenceParametersType * SOAP_FMAC4 soap_get_wsa__ReferenceParametersType(struct soap*, struct wsa__ReferenceParametersType *, const char*, const char*);

#ifndef soap_read_wsa__ReferenceParametersType
#define soap_read_wsa__ReferenceParametersType(soap, data) ( ((data) ? (soap_default_wsa__ReferenceParametersType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsa__ReferenceParametersType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsa__ReferenceParametersType
#define soap_GET_wsa__ReferenceParametersType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsa__ReferenceParametersType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsa__ReferenceParametersType
#define soap_POST_recv_wsa__ReferenceParametersType(soap, data) ( soap_read_wsa__ReferenceParametersType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsa__ReferencePropertiesType_DEFINED
#define SOAP_TYPE_wsa__ReferencePropertiesType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa__ReferencePropertiesType(struct soap*, struct wsa__ReferencePropertiesType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa__ReferencePropertiesType(struct soap*, const struct wsa__ReferencePropertiesType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa__ReferencePropertiesType(struct soap*, const char*, int, const struct wsa__ReferencePropertiesType *, const char*);
SOAP_FMAC3 struct wsa__ReferencePropertiesType * SOAP_FMAC4 soap_in_wsa__ReferencePropertiesType(struct soap*, const char*, struct wsa__ReferencePropertiesType *, const char*);

SOAP_FMAC3 struct wsa__ReferencePropertiesType * SOAP_FMAC4 soap_new_wsa__ReferencePropertiesType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa__ReferencePropertiesType(struct soap*, const struct wsa__ReferencePropertiesType *, const char*, const char*);

#ifndef soap_write_wsa__ReferencePropertiesType
#define soap_write_wsa__ReferencePropertiesType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsa__ReferencePropertiesType(soap, data), 0) || soap_put_wsa__ReferencePropertiesType(soap, data, "wsa:ReferencePropertiesType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsa__ReferencePropertiesType
#define soap_PUT_wsa__ReferencePropertiesType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa__ReferencePropertiesType(soap, data), 0) || soap_put_wsa__ReferencePropertiesType(soap, data, "wsa:ReferencePropertiesType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsa__ReferencePropertiesType
#define soap_PATCH_wsa__ReferencePropertiesType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa__ReferencePropertiesType(soap, data), 0) || soap_put_wsa__ReferencePropertiesType(soap, data, "wsa:ReferencePropertiesType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsa__ReferencePropertiesType
#define soap_POST_send_wsa__ReferencePropertiesType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa__ReferencePropertiesType(soap, data), 0) || soap_put_wsa__ReferencePropertiesType(soap, data, "wsa:ReferencePropertiesType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa__ReferencePropertiesType * SOAP_FMAC4 soap_get_wsa__ReferencePropertiesType(struct soap*, struct wsa__ReferencePropertiesType *, const char*, const char*);

#ifndef soap_read_wsa__ReferencePropertiesType
#define soap_read_wsa__ReferencePropertiesType(soap, data) ( ((data) ? (soap_default_wsa__ReferencePropertiesType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsa__ReferencePropertiesType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsa__ReferencePropertiesType
#define soap_GET_wsa__ReferencePropertiesType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsa__ReferencePropertiesType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsa__ReferencePropertiesType
#define soap_POST_recv_wsa__ReferencePropertiesType(soap, data) ( soap_read_wsa__ReferencePropertiesType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsa__EndpointReferenceType_DEFINED
#define SOAP_TYPE_wsa__EndpointReferenceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa__EndpointReferenceType(struct soap*, struct wsa__EndpointReferenceType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa__EndpointReferenceType(struct soap*, const struct wsa__EndpointReferenceType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa__EndpointReferenceType(struct soap*, const char*, int, const struct wsa__EndpointReferenceType *, const char*);
SOAP_FMAC3 struct wsa__EndpointReferenceType * SOAP_FMAC4 soap_in_wsa__EndpointReferenceType(struct soap*, const char*, struct wsa__EndpointReferenceType *, const char*);

SOAP_FMAC3 struct wsa__EndpointReferenceType * SOAP_FMAC4 soap_new_wsa__EndpointReferenceType(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa__EndpointReferenceType(struct soap*, const struct wsa__EndpointReferenceType *, const char*, const char*);

#ifndef soap_write_wsa__EndpointReferenceType
#define soap_write_wsa__EndpointReferenceType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsa__EndpointReferenceType(soap, data), 0) || soap_put_wsa__EndpointReferenceType(soap, data, "wsa:EndpointReferenceType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsa__EndpointReferenceType
#define soap_PUT_wsa__EndpointReferenceType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa__EndpointReferenceType(soap, data), 0) || soap_put_wsa__EndpointReferenceType(soap, data, "wsa:EndpointReferenceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsa__EndpointReferenceType
#define soap_PATCH_wsa__EndpointReferenceType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa__EndpointReferenceType(soap, data), 0) || soap_put_wsa__EndpointReferenceType(soap, data, "wsa:EndpointReferenceType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsa__EndpointReferenceType
#define soap_POST_send_wsa__EndpointReferenceType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_wsa__EndpointReferenceType(soap, data), 0) || soap_put_wsa__EndpointReferenceType(soap, data, "wsa:EndpointReferenceType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa__EndpointReferenceType * SOAP_FMAC4 soap_get_wsa__EndpointReferenceType(struct soap*, struct wsa__EndpointReferenceType *, const char*, const char*);

#ifndef soap_read_wsa__EndpointReferenceType
#define soap_read_wsa__EndpointReferenceType(soap, data) ( ((data) ? (soap_default_wsa__EndpointReferenceType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsa__EndpointReferenceType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsa__EndpointReferenceType
#define soap_GET_wsa__EndpointReferenceType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsa__EndpointReferenceType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsa__EndpointReferenceType
#define soap_POST_recv_wsa__EndpointReferenceType(soap, data) ( soap_read_wsa__EndpointReferenceType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__wsc__union_DerivedKeyTokenType_DEFINED
#define SOAP_TYPE__wsc__union_DerivedKeyTokenType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__wsc__union_DerivedKeyTokenType(struct soap*, int, const union _wsc__union_DerivedKeyTokenType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsc__union_DerivedKeyTokenType(struct soap*, int, const union _wsc__union_DerivedKeyTokenType *);
SOAP_FMAC3 union _wsc__union_DerivedKeyTokenType * SOAP_FMAC4 soap_in__wsc__union_DerivedKeyTokenType(struct soap*, int*, union _wsc__union_DerivedKeyTokenType *);
#endif

#ifndef SOAP_TYPE_PointerTo_trt__GetSnapshotUriResponse_DEFINED
#define SOAP_TYPE_PointerTo_trt__GetSnapshotUriResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_trt__GetSnapshotUriResponse(struct soap*, struct _trt__GetSnapshotUriResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_trt__GetSnapshotUriResponse(struct soap*, const char *, int, struct _trt__GetSnapshotUriResponse *const*, const char *);
SOAP_FMAC3 struct _trt__GetSnapshotUriResponse ** SOAP_FMAC4 soap_in_PointerTo_trt__GetSnapshotUriResponse(struct soap*, const char*, struct _trt__GetSnapshotUriResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_trt__GetSnapshotUriResponse(struct soap*, struct _trt__GetSnapshotUriResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _trt__GetSnapshotUriResponse ** SOAP_FMAC4 soap_get_PointerTo_trt__GetSnapshotUriResponse(struct soap*, struct _trt__GetSnapshotUriResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_trt__GetSnapshotUri_DEFINED
#define SOAP_TYPE_PointerTo_trt__GetSnapshotUri_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_trt__GetSnapshotUri(struct soap*, struct _trt__GetSnapshotUri *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_trt__GetSnapshotUri(struct soap*, const char *, int, struct _trt__GetSnapshotUri *const*, const char *);
SOAP_FMAC3 struct _trt__GetSnapshotUri ** SOAP_FMAC4 soap_in_PointerTo_trt__GetSnapshotUri(struct soap*, const char*, struct _trt__GetSnapshotUri **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_trt__GetSnapshotUri(struct soap*, struct _trt__GetSnapshotUri *const*, const char*, const char*);
SOAP_FMAC3 struct _trt__GetSnapshotUri ** SOAP_FMAC4 soap_get_PointerTo_trt__GetSnapshotUri(struct soap*, struct _trt__GetSnapshotUri **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_trt__GetProfilesResponse_DEFINED
#define SOAP_TYPE_PointerTo_trt__GetProfilesResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_trt__GetProfilesResponse(struct soap*, struct _trt__GetProfilesResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_trt__GetProfilesResponse(struct soap*, const char *, int, struct _trt__GetProfilesResponse *const*, const char *);
SOAP_FMAC3 struct _trt__GetProfilesResponse ** SOAP_FMAC4 soap_in_PointerTo_trt__GetProfilesResponse(struct soap*, const char*, struct _trt__GetProfilesResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_trt__GetProfilesResponse(struct soap*, struct _trt__GetProfilesResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _trt__GetProfilesResponse ** SOAP_FMAC4 soap_get_PointerTo_trt__GetProfilesResponse(struct soap*, struct _trt__GetProfilesResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_trt__GetProfiles_DEFINED
#define SOAP_TYPE_PointerTo_trt__GetProfiles_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_trt__GetProfiles(struct soap*, struct _trt__GetProfiles *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_trt__GetProfiles(struct soap*, const char *, int, struct _trt__GetProfiles *const*, const char *);
SOAP_FMAC3 struct _trt__GetProfiles ** SOAP_FMAC4 soap_in_PointerTo_trt__GetProfiles(struct soap*, const char*, struct _trt__GetProfiles **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_trt__GetProfiles(struct soap*, struct _trt__GetProfiles *const*, const char*, const char*);
SOAP_FMAC3 struct _trt__GetProfiles ** SOAP_FMAC4 soap_get_PointerTo_trt__GetProfiles(struct soap*, struct _trt__GetProfiles **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_trt__GetProfileResponse_DEFINED
#define SOAP_TYPE_PointerTo_trt__GetProfileResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_trt__GetProfileResponse(struct soap*, struct _trt__GetProfileResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_trt__GetProfileResponse(struct soap*, const char *, int, struct _trt__GetProfileResponse *const*, const char *);
SOAP_FMAC3 struct _trt__GetProfileResponse ** SOAP_FMAC4 soap_in_PointerTo_trt__GetProfileResponse(struct soap*, const char*, struct _trt__GetProfileResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_trt__GetProfileResponse(struct soap*, struct _trt__GetProfileResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _trt__GetProfileResponse ** SOAP_FMAC4 soap_get_PointerTo_trt__GetProfileResponse(struct soap*, struct _trt__GetProfileResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_trt__GetProfile_DEFINED
#define SOAP_TYPE_PointerTo_trt__GetProfile_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_trt__GetProfile(struct soap*, struct _trt__GetProfile *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_trt__GetProfile(struct soap*, const char *, int, struct _trt__GetProfile *const*, const char *);
SOAP_FMAC3 struct _trt__GetProfile ** SOAP_FMAC4 soap_in_PointerTo_trt__GetProfile(struct soap*, const char*, struct _trt__GetProfile **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_trt__GetProfile(struct soap*, struct _trt__GetProfile *const*, const char*, const char*);
SOAP_FMAC3 struct _trt__GetProfile ** SOAP_FMAC4 soap_get_PointerTo_trt__GetProfile(struct soap*, struct _trt__GetProfile **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_trt__CreateProfileResponse_DEFINED
#define SOAP_TYPE_PointerTo_trt__CreateProfileResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_trt__CreateProfileResponse(struct soap*, struct _trt__CreateProfileResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_trt__CreateProfileResponse(struct soap*, const char *, int, struct _trt__CreateProfileResponse *const*, const char *);
SOAP_FMAC3 struct _trt__CreateProfileResponse ** SOAP_FMAC4 soap_in_PointerTo_trt__CreateProfileResponse(struct soap*, const char*, struct _trt__CreateProfileResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_trt__CreateProfileResponse(struct soap*, struct _trt__CreateProfileResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _trt__CreateProfileResponse ** SOAP_FMAC4 soap_get_PointerTo_trt__CreateProfileResponse(struct soap*, struct _trt__CreateProfileResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_trt__CreateProfile_DEFINED
#define SOAP_TYPE_PointerTo_trt__CreateProfile_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_trt__CreateProfile(struct soap*, struct _trt__CreateProfile *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_trt__CreateProfile(struct soap*, const char *, int, struct _trt__CreateProfile *const*, const char *);
SOAP_FMAC3 struct _trt__CreateProfile ** SOAP_FMAC4 soap_in_PointerTo_trt__CreateProfile(struct soap*, const char*, struct _trt__CreateProfile **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_trt__CreateProfile(struct soap*, struct _trt__CreateProfile *const*, const char*, const char*);
SOAP_FMAC3 struct _trt__CreateProfile ** SOAP_FMAC4 soap_get_PointerTo_trt__CreateProfile(struct soap*, struct _trt__CreateProfile **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_trt__GetServiceCapabilitiesResponse_DEFINED
#define SOAP_TYPE_PointerTo_trt__GetServiceCapabilitiesResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_trt__GetServiceCapabilitiesResponse(struct soap*, struct _trt__GetServiceCapabilitiesResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_trt__GetServiceCapabilitiesResponse(struct soap*, const char *, int, struct _trt__GetServiceCapabilitiesResponse *const*, const char *);
SOAP_FMAC3 struct _trt__GetServiceCapabilitiesResponse ** SOAP_FMAC4 soap_in_PointerTo_trt__GetServiceCapabilitiesResponse(struct soap*, const char*, struct _trt__GetServiceCapabilitiesResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_trt__GetServiceCapabilitiesResponse(struct soap*, struct _trt__GetServiceCapabilitiesResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _trt__GetServiceCapabilitiesResponse ** SOAP_FMAC4 soap_get_PointerTo_trt__GetServiceCapabilitiesResponse(struct soap*, struct _trt__GetServiceCapabilitiesResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_trt__GetServiceCapabilities_DEFINED
#define SOAP_TYPE_PointerTo_trt__GetServiceCapabilities_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_trt__GetServiceCapabilities(struct soap*, struct _trt__GetServiceCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_trt__GetServiceCapabilities(struct soap*, const char *, int, struct _trt__GetServiceCapabilities *const*, const char *);
SOAP_FMAC3 struct _trt__GetServiceCapabilities ** SOAP_FMAC4 soap_in_PointerTo_trt__GetServiceCapabilities(struct soap*, const char*, struct _trt__GetServiceCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_trt__GetServiceCapabilities(struct soap*, struct _trt__GetServiceCapabilities *const*, const char*, const char*);
SOAP_FMAC3 struct _trt__GetServiceCapabilities ** SOAP_FMAC4 soap_get_PointerTo_trt__GetServiceCapabilities(struct soap*, struct _trt__GetServiceCapabilities **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_tds__GetCapabilitiesResponse_DEFINED
#define SOAP_TYPE_PointerTo_tds__GetCapabilitiesResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetCapabilitiesResponse(struct soap*, struct _tds__GetCapabilitiesResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetCapabilitiesResponse(struct soap*, const char *, int, struct _tds__GetCapabilitiesResponse *const*, const char *);
SOAP_FMAC3 struct _tds__GetCapabilitiesResponse ** SOAP_FMAC4 soap_in_PointerTo_tds__GetCapabilitiesResponse(struct soap*, const char*, struct _tds__GetCapabilitiesResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetCapabilitiesResponse(struct soap*, struct _tds__GetCapabilitiesResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _tds__GetCapabilitiesResponse ** SOAP_FMAC4 soap_get_PointerTo_tds__GetCapabilitiesResponse(struct soap*, struct _tds__GetCapabilitiesResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_tds__GetCapabilities_DEFINED
#define SOAP_TYPE_PointerTo_tds__GetCapabilities_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetCapabilities(struct soap*, struct _tds__GetCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetCapabilities(struct soap*, const char *, int, struct _tds__GetCapabilities *const*, const char *);
SOAP_FMAC3 struct _tds__GetCapabilities ** SOAP_FMAC4 soap_in_PointerTo_tds__GetCapabilities(struct soap*, const char*, struct _tds__GetCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetCapabilities(struct soap*, struct _tds__GetCapabilities *const*, const char*, const char*);
SOAP_FMAC3 struct _tds__GetCapabilities ** SOAP_FMAC4 soap_get_PointerTo_tds__GetCapabilities(struct soap*, struct _tds__GetCapabilities **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_tds__SystemRebootResponse_DEFINED
#define SOAP_TYPE_PointerTo_tds__SystemRebootResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SystemRebootResponse(struct soap*, struct _tds__SystemRebootResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SystemRebootResponse(struct soap*, const char *, int, struct _tds__SystemRebootResponse *const*, const char *);
SOAP_FMAC3 struct _tds__SystemRebootResponse ** SOAP_FMAC4 soap_in_PointerTo_tds__SystemRebootResponse(struct soap*, const char*, struct _tds__SystemRebootResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SystemRebootResponse(struct soap*, struct _tds__SystemRebootResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _tds__SystemRebootResponse ** SOAP_FMAC4 soap_get_PointerTo_tds__SystemRebootResponse(struct soap*, struct _tds__SystemRebootResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_tds__SystemReboot_DEFINED
#define SOAP_TYPE_PointerTo_tds__SystemReboot_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SystemReboot(struct soap*, struct _tds__SystemReboot *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SystemReboot(struct soap*, const char *, int, struct _tds__SystemReboot *const*, const char *);
SOAP_FMAC3 struct _tds__SystemReboot ** SOAP_FMAC4 soap_in_PointerTo_tds__SystemReboot(struct soap*, const char*, struct _tds__SystemReboot **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SystemReboot(struct soap*, struct _tds__SystemReboot *const*, const char*, const char*);
SOAP_FMAC3 struct _tds__SystemReboot ** SOAP_FMAC4 soap_get_PointerTo_tds__SystemReboot(struct soap*, struct _tds__SystemReboot **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_tds__GetDeviceInformationResponse_DEFINED
#define SOAP_TYPE_PointerTo_tds__GetDeviceInformationResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetDeviceInformationResponse(struct soap*, struct _tds__GetDeviceInformationResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetDeviceInformationResponse(struct soap*, const char *, int, struct _tds__GetDeviceInformationResponse *const*, const char *);
SOAP_FMAC3 struct _tds__GetDeviceInformationResponse ** SOAP_FMAC4 soap_in_PointerTo_tds__GetDeviceInformationResponse(struct soap*, const char*, struct _tds__GetDeviceInformationResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetDeviceInformationResponse(struct soap*, struct _tds__GetDeviceInformationResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _tds__GetDeviceInformationResponse ** SOAP_FMAC4 soap_get_PointerTo_tds__GetDeviceInformationResponse(struct soap*, struct _tds__GetDeviceInformationResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_tds__GetDeviceInformation_DEFINED
#define SOAP_TYPE_PointerTo_tds__GetDeviceInformation_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetDeviceInformation(struct soap*, struct _tds__GetDeviceInformation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetDeviceInformation(struct soap*, const char *, int, struct _tds__GetDeviceInformation *const*, const char *);
SOAP_FMAC3 struct _tds__GetDeviceInformation ** SOAP_FMAC4 soap_in_PointerTo_tds__GetDeviceInformation(struct soap*, const char*, struct _tds__GetDeviceInformation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetDeviceInformation(struct soap*, struct _tds__GetDeviceInformation *const*, const char*, const char*);
SOAP_FMAC3 struct _tds__GetDeviceInformation ** SOAP_FMAC4 soap_get_PointerTo_tds__GetDeviceInformation(struct soap*, struct _tds__GetDeviceInformation **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_tds__GetServiceCapabilitiesResponse_DEFINED
#define SOAP_TYPE_PointerTo_tds__GetServiceCapabilitiesResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetServiceCapabilitiesResponse(struct soap*, struct _tds__GetServiceCapabilitiesResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetServiceCapabilitiesResponse(struct soap*, const char *, int, struct _tds__GetServiceCapabilitiesResponse *const*, const char *);
SOAP_FMAC3 struct _tds__GetServiceCapabilitiesResponse ** SOAP_FMAC4 soap_in_PointerTo_tds__GetServiceCapabilitiesResponse(struct soap*, const char*, struct _tds__GetServiceCapabilitiesResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetServiceCapabilitiesResponse(struct soap*, struct _tds__GetServiceCapabilitiesResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _tds__GetServiceCapabilitiesResponse ** SOAP_FMAC4 soap_get_PointerTo_tds__GetServiceCapabilitiesResponse(struct soap*, struct _tds__GetServiceCapabilitiesResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_tds__GetServiceCapabilities_DEFINED
#define SOAP_TYPE_PointerTo_tds__GetServiceCapabilities_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetServiceCapabilities(struct soap*, struct _tds__GetServiceCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetServiceCapabilities(struct soap*, const char *, int, struct _tds__GetServiceCapabilities *const*, const char *);
SOAP_FMAC3 struct _tds__GetServiceCapabilities ** SOAP_FMAC4 soap_in_PointerTo_tds__GetServiceCapabilities(struct soap*, const char*, struct _tds__GetServiceCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetServiceCapabilities(struct soap*, struct _tds__GetServiceCapabilities *const*, const char*, const char*);
SOAP_FMAC3 struct _tds__GetServiceCapabilities ** SOAP_FMAC4 soap_get_PointerTo_tds__GetServiceCapabilities(struct soap*, struct _tds__GetServiceCapabilities **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_tds__GetServicesResponse_DEFINED
#define SOAP_TYPE_PointerTo_tds__GetServicesResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetServicesResponse(struct soap*, struct _tds__GetServicesResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetServicesResponse(struct soap*, const char *, int, struct _tds__GetServicesResponse *const*, const char *);
SOAP_FMAC3 struct _tds__GetServicesResponse ** SOAP_FMAC4 soap_in_PointerTo_tds__GetServicesResponse(struct soap*, const char*, struct _tds__GetServicesResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetServicesResponse(struct soap*, struct _tds__GetServicesResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _tds__GetServicesResponse ** SOAP_FMAC4 soap_get_PointerTo_tds__GetServicesResponse(struct soap*, struct _tds__GetServicesResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_tds__GetServices_DEFINED
#define SOAP_TYPE_PointerTo_tds__GetServices_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetServices(struct soap*, struct _tds__GetServices *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetServices(struct soap*, const char *, int, struct _tds__GetServices *const*, const char *);
SOAP_FMAC3 struct _tds__GetServices ** SOAP_FMAC4 soap_in_PointerTo_tds__GetServices(struct soap*, const char*, struct _tds__GetServices **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetServices(struct soap*, struct _tds__GetServices *const*, const char*, const char*);
SOAP_FMAC3 struct _tds__GetServices ** SOAP_FMAC4 soap_get_PointerTo_tds__GetServices(struct soap*, struct _tds__GetServices **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wstop__TopicNamespaceType_Topic_DEFINED
#define SOAP_TYPE_PointerTo_wstop__TopicNamespaceType_Topic_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wstop__TopicNamespaceType_Topic(struct soap*, struct _wstop__TopicNamespaceType_Topic *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wstop__TopicNamespaceType_Topic(struct soap*, const char *, int, struct _wstop__TopicNamespaceType_Topic *const*, const char *);
SOAP_FMAC3 struct _wstop__TopicNamespaceType_Topic ** SOAP_FMAC4 soap_in_PointerTo_wstop__TopicNamespaceType_Topic(struct soap*, const char*, struct _wstop__TopicNamespaceType_Topic **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wstop__TopicNamespaceType_Topic(struct soap*, struct _wstop__TopicNamespaceType_Topic *const*, const char*, const char*);
SOAP_FMAC3 struct _wstop__TopicNamespaceType_Topic ** SOAP_FMAC4 soap_get_PointerTo_wstop__TopicNamespaceType_Topic(struct soap*, struct _wstop__TopicNamespaceType_Topic **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowstop__TopicType_DEFINED
#define SOAP_TYPE_PointerTowstop__TopicType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowstop__TopicType(struct soap*, struct wstop__TopicType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowstop__TopicType(struct soap*, const char *, int, struct wstop__TopicType *const*, const char *);
SOAP_FMAC3 struct wstop__TopicType ** SOAP_FMAC4 soap_in_PointerTowstop__TopicType(struct soap*, const char*, struct wstop__TopicType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowstop__TopicType(struct soap*, struct wstop__TopicType *const*, const char*, const char*);
SOAP_FMAC3 struct wstop__TopicType ** SOAP_FMAC4 soap_get_PointerTowstop__TopicType(struct soap*, struct wstop__TopicType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowstop__QueryExpressionType_DEFINED
#define SOAP_TYPE_PointerTowstop__QueryExpressionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowstop__QueryExpressionType(struct soap*, struct wstop__QueryExpressionType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowstop__QueryExpressionType(struct soap*, const char *, int, struct wstop__QueryExpressionType *const*, const char *);
SOAP_FMAC3 struct wstop__QueryExpressionType ** SOAP_FMAC4 soap_in_PointerTowstop__QueryExpressionType(struct soap*, const char*, struct wstop__QueryExpressionType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowstop__QueryExpressionType(struct soap*, struct wstop__QueryExpressionType *const*, const char*, const char*);
SOAP_FMAC3 struct wstop__QueryExpressionType ** SOAP_FMAC4 soap_get_PointerTowstop__QueryExpressionType(struct soap*, struct wstop__QueryExpressionType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__ResumeFailedFaultType_FaultCause_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__ResumeFailedFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__ResumeFailedFaultType_FaultCause(struct soap*, struct _wsnt__ResumeFailedFaultType_FaultCause *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__ResumeFailedFaultType_FaultCause(struct soap*, const char *, int, struct _wsnt__ResumeFailedFaultType_FaultCause *const*, const char *);
SOAP_FMAC3 struct _wsnt__ResumeFailedFaultType_FaultCause ** SOAP_FMAC4 soap_in_PointerTo_wsnt__ResumeFailedFaultType_FaultCause(struct soap*, const char*, struct _wsnt__ResumeFailedFaultType_FaultCause **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__ResumeFailedFaultType_FaultCause(struct soap*, struct _wsnt__ResumeFailedFaultType_FaultCause *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__ResumeFailedFaultType_FaultCause ** SOAP_FMAC4 soap_get_PointerTo_wsnt__ResumeFailedFaultType_FaultCause(struct soap*, struct _wsnt__ResumeFailedFaultType_FaultCause **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__ResumeFailedFaultType_Description_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__ResumeFailedFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__ResumeFailedFaultType_Description(struct soap*, struct _wsnt__ResumeFailedFaultType_Description *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__ResumeFailedFaultType_Description(struct soap*, const char *, int, struct _wsnt__ResumeFailedFaultType_Description *const*, const char *);
SOAP_FMAC3 struct _wsnt__ResumeFailedFaultType_Description ** SOAP_FMAC4 soap_in_PointerTo_wsnt__ResumeFailedFaultType_Description(struct soap*, const char*, struct _wsnt__ResumeFailedFaultType_Description **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__ResumeFailedFaultType_Description(struct soap*, struct _wsnt__ResumeFailedFaultType_Description *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__ResumeFailedFaultType_Description ** SOAP_FMAC4 soap_get_PointerTo_wsnt__ResumeFailedFaultType_Description(struct soap*, struct _wsnt__ResumeFailedFaultType_Description **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__ResumeFailedFaultType_ErrorCode_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__ResumeFailedFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__ResumeFailedFaultType_ErrorCode(struct soap*, struct _wsnt__ResumeFailedFaultType_ErrorCode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__ResumeFailedFaultType_ErrorCode(struct soap*, const char *, int, struct _wsnt__ResumeFailedFaultType_ErrorCode *const*, const char *);
SOAP_FMAC3 struct _wsnt__ResumeFailedFaultType_ErrorCode ** SOAP_FMAC4 soap_in_PointerTo_wsnt__ResumeFailedFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__ResumeFailedFaultType_ErrorCode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__ResumeFailedFaultType_ErrorCode(struct soap*, struct _wsnt__ResumeFailedFaultType_ErrorCode *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__ResumeFailedFaultType_ErrorCode ** SOAP_FMAC4 soap_get_PointerTo_wsnt__ResumeFailedFaultType_ErrorCode(struct soap*, struct _wsnt__ResumeFailedFaultType_ErrorCode **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__PauseFailedFaultType_FaultCause_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__PauseFailedFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__PauseFailedFaultType_FaultCause(struct soap*, struct _wsnt__PauseFailedFaultType_FaultCause *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__PauseFailedFaultType_FaultCause(struct soap*, const char *, int, struct _wsnt__PauseFailedFaultType_FaultCause *const*, const char *);
SOAP_FMAC3 struct _wsnt__PauseFailedFaultType_FaultCause ** SOAP_FMAC4 soap_in_PointerTo_wsnt__PauseFailedFaultType_FaultCause(struct soap*, const char*, struct _wsnt__PauseFailedFaultType_FaultCause **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__PauseFailedFaultType_FaultCause(struct soap*, struct _wsnt__PauseFailedFaultType_FaultCause *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__PauseFailedFaultType_FaultCause ** SOAP_FMAC4 soap_get_PointerTo_wsnt__PauseFailedFaultType_FaultCause(struct soap*, struct _wsnt__PauseFailedFaultType_FaultCause **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__PauseFailedFaultType_Description_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__PauseFailedFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__PauseFailedFaultType_Description(struct soap*, struct _wsnt__PauseFailedFaultType_Description *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__PauseFailedFaultType_Description(struct soap*, const char *, int, struct _wsnt__PauseFailedFaultType_Description *const*, const char *);
SOAP_FMAC3 struct _wsnt__PauseFailedFaultType_Description ** SOAP_FMAC4 soap_in_PointerTo_wsnt__PauseFailedFaultType_Description(struct soap*, const char*, struct _wsnt__PauseFailedFaultType_Description **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__PauseFailedFaultType_Description(struct soap*, struct _wsnt__PauseFailedFaultType_Description *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__PauseFailedFaultType_Description ** SOAP_FMAC4 soap_get_PointerTo_wsnt__PauseFailedFaultType_Description(struct soap*, struct _wsnt__PauseFailedFaultType_Description **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__PauseFailedFaultType_ErrorCode_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__PauseFailedFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__PauseFailedFaultType_ErrorCode(struct soap*, struct _wsnt__PauseFailedFaultType_ErrorCode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__PauseFailedFaultType_ErrorCode(struct soap*, const char *, int, struct _wsnt__PauseFailedFaultType_ErrorCode *const*, const char *);
SOAP_FMAC3 struct _wsnt__PauseFailedFaultType_ErrorCode ** SOAP_FMAC4 soap_in_PointerTo_wsnt__PauseFailedFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__PauseFailedFaultType_ErrorCode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__PauseFailedFaultType_ErrorCode(struct soap*, struct _wsnt__PauseFailedFaultType_ErrorCode *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__PauseFailedFaultType_ErrorCode ** SOAP_FMAC4 soap_get_PointerTo_wsnt__PauseFailedFaultType_ErrorCode(struct soap*, struct _wsnt__PauseFailedFaultType_ErrorCode **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__UnableToDestroySubscriptionFaultType_FaultCause_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__UnableToDestroySubscriptionFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__UnableToDestroySubscriptionFaultType_FaultCause(struct soap*, struct _wsnt__UnableToDestroySubscriptionFaultType_FaultCause *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__UnableToDestroySubscriptionFaultType_FaultCause(struct soap*, const char *, int, struct _wsnt__UnableToDestroySubscriptionFaultType_FaultCause *const*, const char *);
SOAP_FMAC3 struct _wsnt__UnableToDestroySubscriptionFaultType_FaultCause ** SOAP_FMAC4 soap_in_PointerTo_wsnt__UnableToDestroySubscriptionFaultType_FaultCause(struct soap*, const char*, struct _wsnt__UnableToDestroySubscriptionFaultType_FaultCause **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__UnableToDestroySubscriptionFaultType_FaultCause(struct soap*, struct _wsnt__UnableToDestroySubscriptionFaultType_FaultCause *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__UnableToDestroySubscriptionFaultType_FaultCause ** SOAP_FMAC4 soap_get_PointerTo_wsnt__UnableToDestroySubscriptionFaultType_FaultCause(struct soap*, struct _wsnt__UnableToDestroySubscriptionFaultType_FaultCause **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__UnableToDestroySubscriptionFaultType_Description_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__UnableToDestroySubscriptionFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__UnableToDestroySubscriptionFaultType_Description(struct soap*, struct _wsnt__UnableToDestroySubscriptionFaultType_Description *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__UnableToDestroySubscriptionFaultType_Description(struct soap*, const char *, int, struct _wsnt__UnableToDestroySubscriptionFaultType_Description *const*, const char *);
SOAP_FMAC3 struct _wsnt__UnableToDestroySubscriptionFaultType_Description ** SOAP_FMAC4 soap_in_PointerTo_wsnt__UnableToDestroySubscriptionFaultType_Description(struct soap*, const char*, struct _wsnt__UnableToDestroySubscriptionFaultType_Description **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__UnableToDestroySubscriptionFaultType_Description(struct soap*, struct _wsnt__UnableToDestroySubscriptionFaultType_Description *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__UnableToDestroySubscriptionFaultType_Description ** SOAP_FMAC4 soap_get_PointerTo_wsnt__UnableToDestroySubscriptionFaultType_Description(struct soap*, struct _wsnt__UnableToDestroySubscriptionFaultType_Description **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__UnableToDestroySubscriptionFaultType_ErrorCode_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__UnableToDestroySubscriptionFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(struct soap*, struct _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(struct soap*, const char *, int, struct _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode *const*, const char *);
SOAP_FMAC3 struct _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode ** SOAP_FMAC4 soap_in_PointerTo_wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(struct soap*, struct _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode ** SOAP_FMAC4 soap_get_PointerTo_wsnt__UnableToDestroySubscriptionFaultType_ErrorCode(struct soap*, struct _wsnt__UnableToDestroySubscriptionFaultType_ErrorCode **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__UnacceptableTerminationTimeFaultType_FaultCause_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__UnacceptableTerminationTimeFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__UnacceptableTerminationTimeFaultType_FaultCause(struct soap*, struct _wsnt__UnacceptableTerminationTimeFaultType_FaultCause *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__UnacceptableTerminationTimeFaultType_FaultCause(struct soap*, const char *, int, struct _wsnt__UnacceptableTerminationTimeFaultType_FaultCause *const*, const char *);
SOAP_FMAC3 struct _wsnt__UnacceptableTerminationTimeFaultType_FaultCause ** SOAP_FMAC4 soap_in_PointerTo_wsnt__UnacceptableTerminationTimeFaultType_FaultCause(struct soap*, const char*, struct _wsnt__UnacceptableTerminationTimeFaultType_FaultCause **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__UnacceptableTerminationTimeFaultType_FaultCause(struct soap*, struct _wsnt__UnacceptableTerminationTimeFaultType_FaultCause *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__UnacceptableTerminationTimeFaultType_FaultCause ** SOAP_FMAC4 soap_get_PointerTo_wsnt__UnacceptableTerminationTimeFaultType_FaultCause(struct soap*, struct _wsnt__UnacceptableTerminationTimeFaultType_FaultCause **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__UnacceptableTerminationTimeFaultType_Description_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__UnacceptableTerminationTimeFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__UnacceptableTerminationTimeFaultType_Description(struct soap*, struct _wsnt__UnacceptableTerminationTimeFaultType_Description *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__UnacceptableTerminationTimeFaultType_Description(struct soap*, const char *, int, struct _wsnt__UnacceptableTerminationTimeFaultType_Description *const*, const char *);
SOAP_FMAC3 struct _wsnt__UnacceptableTerminationTimeFaultType_Description ** SOAP_FMAC4 soap_in_PointerTo_wsnt__UnacceptableTerminationTimeFaultType_Description(struct soap*, const char*, struct _wsnt__UnacceptableTerminationTimeFaultType_Description **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__UnacceptableTerminationTimeFaultType_Description(struct soap*, struct _wsnt__UnacceptableTerminationTimeFaultType_Description *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__UnacceptableTerminationTimeFaultType_Description ** SOAP_FMAC4 soap_get_PointerTo_wsnt__UnacceptableTerminationTimeFaultType_Description(struct soap*, struct _wsnt__UnacceptableTerminationTimeFaultType_Description **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__UnacceptableTerminationTimeFaultType_ErrorCode_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__UnacceptableTerminationTimeFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(struct soap*, struct _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(struct soap*, const char *, int, struct _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode *const*, const char *);
SOAP_FMAC3 struct _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode ** SOAP_FMAC4 soap_in_PointerTo_wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(struct soap*, struct _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode ** SOAP_FMAC4 soap_get_PointerTo_wsnt__UnacceptableTerminationTimeFaultType_ErrorCode(struct soap*, struct _wsnt__UnacceptableTerminationTimeFaultType_ErrorCode **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__UnableToCreatePullPointFaultType_FaultCause_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__UnableToCreatePullPointFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__UnableToCreatePullPointFaultType_FaultCause(struct soap*, struct _wsnt__UnableToCreatePullPointFaultType_FaultCause *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__UnableToCreatePullPointFaultType_FaultCause(struct soap*, const char *, int, struct _wsnt__UnableToCreatePullPointFaultType_FaultCause *const*, const char *);
SOAP_FMAC3 struct _wsnt__UnableToCreatePullPointFaultType_FaultCause ** SOAP_FMAC4 soap_in_PointerTo_wsnt__UnableToCreatePullPointFaultType_FaultCause(struct soap*, const char*, struct _wsnt__UnableToCreatePullPointFaultType_FaultCause **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__UnableToCreatePullPointFaultType_FaultCause(struct soap*, struct _wsnt__UnableToCreatePullPointFaultType_FaultCause *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__UnableToCreatePullPointFaultType_FaultCause ** SOAP_FMAC4 soap_get_PointerTo_wsnt__UnableToCreatePullPointFaultType_FaultCause(struct soap*, struct _wsnt__UnableToCreatePullPointFaultType_FaultCause **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__UnableToCreatePullPointFaultType_Description_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__UnableToCreatePullPointFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__UnableToCreatePullPointFaultType_Description(struct soap*, struct _wsnt__UnableToCreatePullPointFaultType_Description *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__UnableToCreatePullPointFaultType_Description(struct soap*, const char *, int, struct _wsnt__UnableToCreatePullPointFaultType_Description *const*, const char *);
SOAP_FMAC3 struct _wsnt__UnableToCreatePullPointFaultType_Description ** SOAP_FMAC4 soap_in_PointerTo_wsnt__UnableToCreatePullPointFaultType_Description(struct soap*, const char*, struct _wsnt__UnableToCreatePullPointFaultType_Description **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__UnableToCreatePullPointFaultType_Description(struct soap*, struct _wsnt__UnableToCreatePullPointFaultType_Description *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__UnableToCreatePullPointFaultType_Description ** SOAP_FMAC4 soap_get_PointerTo_wsnt__UnableToCreatePullPointFaultType_Description(struct soap*, struct _wsnt__UnableToCreatePullPointFaultType_Description **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__UnableToCreatePullPointFaultType_ErrorCode_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__UnableToCreatePullPointFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__UnableToCreatePullPointFaultType_ErrorCode(struct soap*, struct _wsnt__UnableToCreatePullPointFaultType_ErrorCode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__UnableToCreatePullPointFaultType_ErrorCode(struct soap*, const char *, int, struct _wsnt__UnableToCreatePullPointFaultType_ErrorCode *const*, const char *);
SOAP_FMAC3 struct _wsnt__UnableToCreatePullPointFaultType_ErrorCode ** SOAP_FMAC4 soap_in_PointerTo_wsnt__UnableToCreatePullPointFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__UnableToCreatePullPointFaultType_ErrorCode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__UnableToCreatePullPointFaultType_ErrorCode(struct soap*, struct _wsnt__UnableToCreatePullPointFaultType_ErrorCode *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__UnableToCreatePullPointFaultType_ErrorCode ** SOAP_FMAC4 soap_get_PointerTo_wsnt__UnableToCreatePullPointFaultType_ErrorCode(struct soap*, struct _wsnt__UnableToCreatePullPointFaultType_ErrorCode **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__UnableToDestroyPullPointFaultType_FaultCause_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__UnableToDestroyPullPointFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__UnableToDestroyPullPointFaultType_FaultCause(struct soap*, struct _wsnt__UnableToDestroyPullPointFaultType_FaultCause *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__UnableToDestroyPullPointFaultType_FaultCause(struct soap*, const char *, int, struct _wsnt__UnableToDestroyPullPointFaultType_FaultCause *const*, const char *);
SOAP_FMAC3 struct _wsnt__UnableToDestroyPullPointFaultType_FaultCause ** SOAP_FMAC4 soap_in_PointerTo_wsnt__UnableToDestroyPullPointFaultType_FaultCause(struct soap*, const char*, struct _wsnt__UnableToDestroyPullPointFaultType_FaultCause **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__UnableToDestroyPullPointFaultType_FaultCause(struct soap*, struct _wsnt__UnableToDestroyPullPointFaultType_FaultCause *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__UnableToDestroyPullPointFaultType_FaultCause ** SOAP_FMAC4 soap_get_PointerTo_wsnt__UnableToDestroyPullPointFaultType_FaultCause(struct soap*, struct _wsnt__UnableToDestroyPullPointFaultType_FaultCause **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__UnableToDestroyPullPointFaultType_Description_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__UnableToDestroyPullPointFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__UnableToDestroyPullPointFaultType_Description(struct soap*, struct _wsnt__UnableToDestroyPullPointFaultType_Description *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__UnableToDestroyPullPointFaultType_Description(struct soap*, const char *, int, struct _wsnt__UnableToDestroyPullPointFaultType_Description *const*, const char *);
SOAP_FMAC3 struct _wsnt__UnableToDestroyPullPointFaultType_Description ** SOAP_FMAC4 soap_in_PointerTo_wsnt__UnableToDestroyPullPointFaultType_Description(struct soap*, const char*, struct _wsnt__UnableToDestroyPullPointFaultType_Description **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__UnableToDestroyPullPointFaultType_Description(struct soap*, struct _wsnt__UnableToDestroyPullPointFaultType_Description *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__UnableToDestroyPullPointFaultType_Description ** SOAP_FMAC4 soap_get_PointerTo_wsnt__UnableToDestroyPullPointFaultType_Description(struct soap*, struct _wsnt__UnableToDestroyPullPointFaultType_Description **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__UnableToDestroyPullPointFaultType_ErrorCode_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__UnableToDestroyPullPointFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__UnableToDestroyPullPointFaultType_ErrorCode(struct soap*, struct _wsnt__UnableToDestroyPullPointFaultType_ErrorCode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__UnableToDestroyPullPointFaultType_ErrorCode(struct soap*, const char *, int, struct _wsnt__UnableToDestroyPullPointFaultType_ErrorCode *const*, const char *);
SOAP_FMAC3 struct _wsnt__UnableToDestroyPullPointFaultType_ErrorCode ** SOAP_FMAC4 soap_in_PointerTo_wsnt__UnableToDestroyPullPointFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__UnableToDestroyPullPointFaultType_ErrorCode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__UnableToDestroyPullPointFaultType_ErrorCode(struct soap*, struct _wsnt__UnableToDestroyPullPointFaultType_ErrorCode *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__UnableToDestroyPullPointFaultType_ErrorCode ** SOAP_FMAC4 soap_get_PointerTo_wsnt__UnableToDestroyPullPointFaultType_ErrorCode(struct soap*, struct _wsnt__UnableToDestroyPullPointFaultType_ErrorCode **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__UnableToGetMessagesFaultType_FaultCause_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__UnableToGetMessagesFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__UnableToGetMessagesFaultType_FaultCause(struct soap*, struct _wsnt__UnableToGetMessagesFaultType_FaultCause *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__UnableToGetMessagesFaultType_FaultCause(struct soap*, const char *, int, struct _wsnt__UnableToGetMessagesFaultType_FaultCause *const*, const char *);
SOAP_FMAC3 struct _wsnt__UnableToGetMessagesFaultType_FaultCause ** SOAP_FMAC4 soap_in_PointerTo_wsnt__UnableToGetMessagesFaultType_FaultCause(struct soap*, const char*, struct _wsnt__UnableToGetMessagesFaultType_FaultCause **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__UnableToGetMessagesFaultType_FaultCause(struct soap*, struct _wsnt__UnableToGetMessagesFaultType_FaultCause *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__UnableToGetMessagesFaultType_FaultCause ** SOAP_FMAC4 soap_get_PointerTo_wsnt__UnableToGetMessagesFaultType_FaultCause(struct soap*, struct _wsnt__UnableToGetMessagesFaultType_FaultCause **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__UnableToGetMessagesFaultType_Description_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__UnableToGetMessagesFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__UnableToGetMessagesFaultType_Description(struct soap*, struct _wsnt__UnableToGetMessagesFaultType_Description *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__UnableToGetMessagesFaultType_Description(struct soap*, const char *, int, struct _wsnt__UnableToGetMessagesFaultType_Description *const*, const char *);
SOAP_FMAC3 struct _wsnt__UnableToGetMessagesFaultType_Description ** SOAP_FMAC4 soap_in_PointerTo_wsnt__UnableToGetMessagesFaultType_Description(struct soap*, const char*, struct _wsnt__UnableToGetMessagesFaultType_Description **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__UnableToGetMessagesFaultType_Description(struct soap*, struct _wsnt__UnableToGetMessagesFaultType_Description *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__UnableToGetMessagesFaultType_Description ** SOAP_FMAC4 soap_get_PointerTo_wsnt__UnableToGetMessagesFaultType_Description(struct soap*, struct _wsnt__UnableToGetMessagesFaultType_Description **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__UnableToGetMessagesFaultType_ErrorCode_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__UnableToGetMessagesFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__UnableToGetMessagesFaultType_ErrorCode(struct soap*, struct _wsnt__UnableToGetMessagesFaultType_ErrorCode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__UnableToGetMessagesFaultType_ErrorCode(struct soap*, const char *, int, struct _wsnt__UnableToGetMessagesFaultType_ErrorCode *const*, const char *);
SOAP_FMAC3 struct _wsnt__UnableToGetMessagesFaultType_ErrorCode ** SOAP_FMAC4 soap_in_PointerTo_wsnt__UnableToGetMessagesFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__UnableToGetMessagesFaultType_ErrorCode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__UnableToGetMessagesFaultType_ErrorCode(struct soap*, struct _wsnt__UnableToGetMessagesFaultType_ErrorCode *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__UnableToGetMessagesFaultType_ErrorCode ** SOAP_FMAC4 soap_get_PointerTo_wsnt__UnableToGetMessagesFaultType_ErrorCode(struct soap*, struct _wsnt__UnableToGetMessagesFaultType_ErrorCode **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__NoCurrentMessageOnTopicFaultType_FaultCause_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__NoCurrentMessageOnTopicFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(struct soap*, struct _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(struct soap*, const char *, int, struct _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause *const*, const char *);
SOAP_FMAC3 struct _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause ** SOAP_FMAC4 soap_in_PointerTo_wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(struct soap*, const char*, struct _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(struct soap*, struct _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause ** SOAP_FMAC4 soap_get_PointerTo_wsnt__NoCurrentMessageOnTopicFaultType_FaultCause(struct soap*, struct _wsnt__NoCurrentMessageOnTopicFaultType_FaultCause **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__NoCurrentMessageOnTopicFaultType_Description_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__NoCurrentMessageOnTopicFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__NoCurrentMessageOnTopicFaultType_Description(struct soap*, struct _wsnt__NoCurrentMessageOnTopicFaultType_Description *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__NoCurrentMessageOnTopicFaultType_Description(struct soap*, const char *, int, struct _wsnt__NoCurrentMessageOnTopicFaultType_Description *const*, const char *);
SOAP_FMAC3 struct _wsnt__NoCurrentMessageOnTopicFaultType_Description ** SOAP_FMAC4 soap_in_PointerTo_wsnt__NoCurrentMessageOnTopicFaultType_Description(struct soap*, const char*, struct _wsnt__NoCurrentMessageOnTopicFaultType_Description **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__NoCurrentMessageOnTopicFaultType_Description(struct soap*, struct _wsnt__NoCurrentMessageOnTopicFaultType_Description *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__NoCurrentMessageOnTopicFaultType_Description ** SOAP_FMAC4 soap_get_PointerTo_wsnt__NoCurrentMessageOnTopicFaultType_Description(struct soap*, struct _wsnt__NoCurrentMessageOnTopicFaultType_Description **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(struct soap*, struct _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(struct soap*, const char *, int, struct _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode *const*, const char *);
SOAP_FMAC3 struct _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode ** SOAP_FMAC4 soap_in_PointerTo_wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(struct soap*, struct _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode ** SOAP_FMAC4 soap_get_PointerTo_wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode(struct soap*, struct _wsnt__NoCurrentMessageOnTopicFaultType_ErrorCode **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(struct soap*, struct _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(struct soap*, const char *, int, struct _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause *const*, const char *);
SOAP_FMAC3 struct _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause ** SOAP_FMAC4 soap_in_PointerTo_wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(struct soap*, const char*, struct _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(struct soap*, struct _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause ** SOAP_FMAC4 soap_get_PointerTo_wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause(struct soap*, struct _wsnt__UnacceptableInitialTerminationTimeFaultType_FaultCause **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__UnacceptableInitialTerminationTimeFaultType_Description_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__UnacceptableInitialTerminationTimeFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__UnacceptableInitialTerminationTimeFaultType_Description(struct soap*, struct _wsnt__UnacceptableInitialTerminationTimeFaultType_Description *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__UnacceptableInitialTerminationTimeFaultType_Description(struct soap*, const char *, int, struct _wsnt__UnacceptableInitialTerminationTimeFaultType_Description *const*, const char *);
SOAP_FMAC3 struct _wsnt__UnacceptableInitialTerminationTimeFaultType_Description ** SOAP_FMAC4 soap_in_PointerTo_wsnt__UnacceptableInitialTerminationTimeFaultType_Description(struct soap*, const char*, struct _wsnt__UnacceptableInitialTerminationTimeFaultType_Description **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__UnacceptableInitialTerminationTimeFaultType_Description(struct soap*, struct _wsnt__UnacceptableInitialTerminationTimeFaultType_Description *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__UnacceptableInitialTerminationTimeFaultType_Description ** SOAP_FMAC4 soap_get_PointerTo_wsnt__UnacceptableInitialTerminationTimeFaultType_Description(struct soap*, struct _wsnt__UnacceptableInitialTerminationTimeFaultType_Description **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(struct soap*, struct _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(struct soap*, const char *, int, struct _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode *const*, const char *);
SOAP_FMAC3 struct _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode ** SOAP_FMAC4 soap_in_PointerTo_wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(struct soap*, struct _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode ** SOAP_FMAC4 soap_get_PointerTo_wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode(struct soap*, struct _wsnt__UnacceptableInitialTerminationTimeFaultType_ErrorCode **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__NotifyMessageNotSupportedFaultType_FaultCause_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__NotifyMessageNotSupportedFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__NotifyMessageNotSupportedFaultType_FaultCause(struct soap*, struct _wsnt__NotifyMessageNotSupportedFaultType_FaultCause *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__NotifyMessageNotSupportedFaultType_FaultCause(struct soap*, const char *, int, struct _wsnt__NotifyMessageNotSupportedFaultType_FaultCause *const*, const char *);
SOAP_FMAC3 struct _wsnt__NotifyMessageNotSupportedFaultType_FaultCause ** SOAP_FMAC4 soap_in_PointerTo_wsnt__NotifyMessageNotSupportedFaultType_FaultCause(struct soap*, const char*, struct _wsnt__NotifyMessageNotSupportedFaultType_FaultCause **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__NotifyMessageNotSupportedFaultType_FaultCause(struct soap*, struct _wsnt__NotifyMessageNotSupportedFaultType_FaultCause *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__NotifyMessageNotSupportedFaultType_FaultCause ** SOAP_FMAC4 soap_get_PointerTo_wsnt__NotifyMessageNotSupportedFaultType_FaultCause(struct soap*, struct _wsnt__NotifyMessageNotSupportedFaultType_FaultCause **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__NotifyMessageNotSupportedFaultType_Description_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__NotifyMessageNotSupportedFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__NotifyMessageNotSupportedFaultType_Description(struct soap*, struct _wsnt__NotifyMessageNotSupportedFaultType_Description *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__NotifyMessageNotSupportedFaultType_Description(struct soap*, const char *, int, struct _wsnt__NotifyMessageNotSupportedFaultType_Description *const*, const char *);
SOAP_FMAC3 struct _wsnt__NotifyMessageNotSupportedFaultType_Description ** SOAP_FMAC4 soap_in_PointerTo_wsnt__NotifyMessageNotSupportedFaultType_Description(struct soap*, const char*, struct _wsnt__NotifyMessageNotSupportedFaultType_Description **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__NotifyMessageNotSupportedFaultType_Description(struct soap*, struct _wsnt__NotifyMessageNotSupportedFaultType_Description *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__NotifyMessageNotSupportedFaultType_Description ** SOAP_FMAC4 soap_get_PointerTo_wsnt__NotifyMessageNotSupportedFaultType_Description(struct soap*, struct _wsnt__NotifyMessageNotSupportedFaultType_Description **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__NotifyMessageNotSupportedFaultType_ErrorCode_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__NotifyMessageNotSupportedFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(struct soap*, struct _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(struct soap*, const char *, int, struct _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode *const*, const char *);
SOAP_FMAC3 struct _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode ** SOAP_FMAC4 soap_in_PointerTo_wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(struct soap*, struct _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode ** SOAP_FMAC4 soap_get_PointerTo_wsnt__NotifyMessageNotSupportedFaultType_ErrorCode(struct soap*, struct _wsnt__NotifyMessageNotSupportedFaultType_ErrorCode **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__UnsupportedPolicyRequestFaultType_FaultCause_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__UnsupportedPolicyRequestFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__UnsupportedPolicyRequestFaultType_FaultCause(struct soap*, struct _wsnt__UnsupportedPolicyRequestFaultType_FaultCause *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__UnsupportedPolicyRequestFaultType_FaultCause(struct soap*, const char *, int, struct _wsnt__UnsupportedPolicyRequestFaultType_FaultCause *const*, const char *);
SOAP_FMAC3 struct _wsnt__UnsupportedPolicyRequestFaultType_FaultCause ** SOAP_FMAC4 soap_in_PointerTo_wsnt__UnsupportedPolicyRequestFaultType_FaultCause(struct soap*, const char*, struct _wsnt__UnsupportedPolicyRequestFaultType_FaultCause **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__UnsupportedPolicyRequestFaultType_FaultCause(struct soap*, struct _wsnt__UnsupportedPolicyRequestFaultType_FaultCause *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__UnsupportedPolicyRequestFaultType_FaultCause ** SOAP_FMAC4 soap_get_PointerTo_wsnt__UnsupportedPolicyRequestFaultType_FaultCause(struct soap*, struct _wsnt__UnsupportedPolicyRequestFaultType_FaultCause **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__UnsupportedPolicyRequestFaultType_Description_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__UnsupportedPolicyRequestFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__UnsupportedPolicyRequestFaultType_Description(struct soap*, struct _wsnt__UnsupportedPolicyRequestFaultType_Description *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__UnsupportedPolicyRequestFaultType_Description(struct soap*, const char *, int, struct _wsnt__UnsupportedPolicyRequestFaultType_Description *const*, const char *);
SOAP_FMAC3 struct _wsnt__UnsupportedPolicyRequestFaultType_Description ** SOAP_FMAC4 soap_in_PointerTo_wsnt__UnsupportedPolicyRequestFaultType_Description(struct soap*, const char*, struct _wsnt__UnsupportedPolicyRequestFaultType_Description **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__UnsupportedPolicyRequestFaultType_Description(struct soap*, struct _wsnt__UnsupportedPolicyRequestFaultType_Description *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__UnsupportedPolicyRequestFaultType_Description ** SOAP_FMAC4 soap_get_PointerTo_wsnt__UnsupportedPolicyRequestFaultType_Description(struct soap*, struct _wsnt__UnsupportedPolicyRequestFaultType_Description **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__UnsupportedPolicyRequestFaultType_ErrorCode_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__UnsupportedPolicyRequestFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(struct soap*, struct _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(struct soap*, const char *, int, struct _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode *const*, const char *);
SOAP_FMAC3 struct _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode ** SOAP_FMAC4 soap_in_PointerTo_wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(struct soap*, struct _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode ** SOAP_FMAC4 soap_get_PointerTo_wsnt__UnsupportedPolicyRequestFaultType_ErrorCode(struct soap*, struct _wsnt__UnsupportedPolicyRequestFaultType_ErrorCode **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__UnrecognizedPolicyRequestFaultType_FaultCause_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__UnrecognizedPolicyRequestFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(struct soap*, struct _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(struct soap*, const char *, int, struct _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause *const*, const char *);
SOAP_FMAC3 struct _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause ** SOAP_FMAC4 soap_in_PointerTo_wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(struct soap*, const char*, struct _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(struct soap*, struct _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause ** SOAP_FMAC4 soap_get_PointerTo_wsnt__UnrecognizedPolicyRequestFaultType_FaultCause(struct soap*, struct _wsnt__UnrecognizedPolicyRequestFaultType_FaultCause **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__UnrecognizedPolicyRequestFaultType_Description_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__UnrecognizedPolicyRequestFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__UnrecognizedPolicyRequestFaultType_Description(struct soap*, struct _wsnt__UnrecognizedPolicyRequestFaultType_Description *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__UnrecognizedPolicyRequestFaultType_Description(struct soap*, const char *, int, struct _wsnt__UnrecognizedPolicyRequestFaultType_Description *const*, const char *);
SOAP_FMAC3 struct _wsnt__UnrecognizedPolicyRequestFaultType_Description ** SOAP_FMAC4 soap_in_PointerTo_wsnt__UnrecognizedPolicyRequestFaultType_Description(struct soap*, const char*, struct _wsnt__UnrecognizedPolicyRequestFaultType_Description **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__UnrecognizedPolicyRequestFaultType_Description(struct soap*, struct _wsnt__UnrecognizedPolicyRequestFaultType_Description *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__UnrecognizedPolicyRequestFaultType_Description ** SOAP_FMAC4 soap_get_PointerTo_wsnt__UnrecognizedPolicyRequestFaultType_Description(struct soap*, struct _wsnt__UnrecognizedPolicyRequestFaultType_Description **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(struct soap*, struct _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(struct soap*, const char *, int, struct _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode *const*, const char *);
SOAP_FMAC3 struct _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode ** SOAP_FMAC4 soap_in_PointerTo_wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(struct soap*, struct _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode ** SOAP_FMAC4 soap_get_PointerTo_wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode(struct soap*, struct _wsnt__UnrecognizedPolicyRequestFaultType_ErrorCode **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__InvalidMessageContentExpressionFaultType_FaultCause_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__InvalidMessageContentExpressionFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__InvalidMessageContentExpressionFaultType_FaultCause(struct soap*, struct _wsnt__InvalidMessageContentExpressionFaultType_FaultCause *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__InvalidMessageContentExpressionFaultType_FaultCause(struct soap*, const char *, int, struct _wsnt__InvalidMessageContentExpressionFaultType_FaultCause *const*, const char *);
SOAP_FMAC3 struct _wsnt__InvalidMessageContentExpressionFaultType_FaultCause ** SOAP_FMAC4 soap_in_PointerTo_wsnt__InvalidMessageContentExpressionFaultType_FaultCause(struct soap*, const char*, struct _wsnt__InvalidMessageContentExpressionFaultType_FaultCause **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__InvalidMessageContentExpressionFaultType_FaultCause(struct soap*, struct _wsnt__InvalidMessageContentExpressionFaultType_FaultCause *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__InvalidMessageContentExpressionFaultType_FaultCause ** SOAP_FMAC4 soap_get_PointerTo_wsnt__InvalidMessageContentExpressionFaultType_FaultCause(struct soap*, struct _wsnt__InvalidMessageContentExpressionFaultType_FaultCause **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__InvalidMessageContentExpressionFaultType_Description_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__InvalidMessageContentExpressionFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__InvalidMessageContentExpressionFaultType_Description(struct soap*, struct _wsnt__InvalidMessageContentExpressionFaultType_Description *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__InvalidMessageContentExpressionFaultType_Description(struct soap*, const char *, int, struct _wsnt__InvalidMessageContentExpressionFaultType_Description *const*, const char *);
SOAP_FMAC3 struct _wsnt__InvalidMessageContentExpressionFaultType_Description ** SOAP_FMAC4 soap_in_PointerTo_wsnt__InvalidMessageContentExpressionFaultType_Description(struct soap*, const char*, struct _wsnt__InvalidMessageContentExpressionFaultType_Description **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__InvalidMessageContentExpressionFaultType_Description(struct soap*, struct _wsnt__InvalidMessageContentExpressionFaultType_Description *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__InvalidMessageContentExpressionFaultType_Description ** SOAP_FMAC4 soap_get_PointerTo_wsnt__InvalidMessageContentExpressionFaultType_Description(struct soap*, struct _wsnt__InvalidMessageContentExpressionFaultType_Description **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__InvalidMessageContentExpressionFaultType_ErrorCode_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__InvalidMessageContentExpressionFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(struct soap*, struct _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(struct soap*, const char *, int, struct _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode *const*, const char *);
SOAP_FMAC3 struct _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode ** SOAP_FMAC4 soap_in_PointerTo_wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(struct soap*, struct _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode ** SOAP_FMAC4 soap_get_PointerTo_wsnt__InvalidMessageContentExpressionFaultType_ErrorCode(struct soap*, struct _wsnt__InvalidMessageContentExpressionFaultType_ErrorCode **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(struct soap*, struct _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(struct soap*, const char *, int, struct _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause *const*, const char *);
SOAP_FMAC3 struct _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause ** SOAP_FMAC4 soap_in_PointerTo_wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(struct soap*, const char*, struct _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(struct soap*, struct _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause ** SOAP_FMAC4 soap_get_PointerTo_wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause(struct soap*, struct _wsnt__InvalidProducerPropertiesExpressionFaultType_FaultCause **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__InvalidProducerPropertiesExpressionFaultType_Description_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__InvalidProducerPropertiesExpressionFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__InvalidProducerPropertiesExpressionFaultType_Description(struct soap*, struct _wsnt__InvalidProducerPropertiesExpressionFaultType_Description *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__InvalidProducerPropertiesExpressionFaultType_Description(struct soap*, const char *, int, struct _wsnt__InvalidProducerPropertiesExpressionFaultType_Description *const*, const char *);
SOAP_FMAC3 struct _wsnt__InvalidProducerPropertiesExpressionFaultType_Description ** SOAP_FMAC4 soap_in_PointerTo_wsnt__InvalidProducerPropertiesExpressionFaultType_Description(struct soap*, const char*, struct _wsnt__InvalidProducerPropertiesExpressionFaultType_Description **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__InvalidProducerPropertiesExpressionFaultType_Description(struct soap*, struct _wsnt__InvalidProducerPropertiesExpressionFaultType_Description *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__InvalidProducerPropertiesExpressionFaultType_Description ** SOAP_FMAC4 soap_get_PointerTo_wsnt__InvalidProducerPropertiesExpressionFaultType_Description(struct soap*, struct _wsnt__InvalidProducerPropertiesExpressionFaultType_Description **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(struct soap*, struct _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(struct soap*, const char *, int, struct _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode *const*, const char *);
SOAP_FMAC3 struct _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode ** SOAP_FMAC4 soap_in_PointerTo_wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(struct soap*, struct _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode ** SOAP_FMAC4 soap_get_PointerTo_wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode(struct soap*, struct _wsnt__InvalidProducerPropertiesExpressionFaultType_ErrorCode **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__MultipleTopicsSpecifiedFaultType_FaultCause_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__MultipleTopicsSpecifiedFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(struct soap*, struct _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(struct soap*, const char *, int, struct _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause *const*, const char *);
SOAP_FMAC3 struct _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause ** SOAP_FMAC4 soap_in_PointerTo_wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(struct soap*, const char*, struct _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(struct soap*, struct _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause ** SOAP_FMAC4 soap_get_PointerTo_wsnt__MultipleTopicsSpecifiedFaultType_FaultCause(struct soap*, struct _wsnt__MultipleTopicsSpecifiedFaultType_FaultCause **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__MultipleTopicsSpecifiedFaultType_Description_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__MultipleTopicsSpecifiedFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__MultipleTopicsSpecifiedFaultType_Description(struct soap*, struct _wsnt__MultipleTopicsSpecifiedFaultType_Description *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__MultipleTopicsSpecifiedFaultType_Description(struct soap*, const char *, int, struct _wsnt__MultipleTopicsSpecifiedFaultType_Description *const*, const char *);
SOAP_FMAC3 struct _wsnt__MultipleTopicsSpecifiedFaultType_Description ** SOAP_FMAC4 soap_in_PointerTo_wsnt__MultipleTopicsSpecifiedFaultType_Description(struct soap*, const char*, struct _wsnt__MultipleTopicsSpecifiedFaultType_Description **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__MultipleTopicsSpecifiedFaultType_Description(struct soap*, struct _wsnt__MultipleTopicsSpecifiedFaultType_Description *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__MultipleTopicsSpecifiedFaultType_Description ** SOAP_FMAC4 soap_get_PointerTo_wsnt__MultipleTopicsSpecifiedFaultType_Description(struct soap*, struct _wsnt__MultipleTopicsSpecifiedFaultType_Description **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(struct soap*, struct _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(struct soap*, const char *, int, struct _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode *const*, const char *);
SOAP_FMAC3 struct _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode ** SOAP_FMAC4 soap_in_PointerTo_wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(struct soap*, struct _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode ** SOAP_FMAC4 soap_get_PointerTo_wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode(struct soap*, struct _wsnt__MultipleTopicsSpecifiedFaultType_ErrorCode **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__TopicNotSupportedFaultType_FaultCause_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__TopicNotSupportedFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__TopicNotSupportedFaultType_FaultCause(struct soap*, struct _wsnt__TopicNotSupportedFaultType_FaultCause *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__TopicNotSupportedFaultType_FaultCause(struct soap*, const char *, int, struct _wsnt__TopicNotSupportedFaultType_FaultCause *const*, const char *);
SOAP_FMAC3 struct _wsnt__TopicNotSupportedFaultType_FaultCause ** SOAP_FMAC4 soap_in_PointerTo_wsnt__TopicNotSupportedFaultType_FaultCause(struct soap*, const char*, struct _wsnt__TopicNotSupportedFaultType_FaultCause **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__TopicNotSupportedFaultType_FaultCause(struct soap*, struct _wsnt__TopicNotSupportedFaultType_FaultCause *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__TopicNotSupportedFaultType_FaultCause ** SOAP_FMAC4 soap_get_PointerTo_wsnt__TopicNotSupportedFaultType_FaultCause(struct soap*, struct _wsnt__TopicNotSupportedFaultType_FaultCause **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__TopicNotSupportedFaultType_Description_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__TopicNotSupportedFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__TopicNotSupportedFaultType_Description(struct soap*, struct _wsnt__TopicNotSupportedFaultType_Description *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__TopicNotSupportedFaultType_Description(struct soap*, const char *, int, struct _wsnt__TopicNotSupportedFaultType_Description *const*, const char *);
SOAP_FMAC3 struct _wsnt__TopicNotSupportedFaultType_Description ** SOAP_FMAC4 soap_in_PointerTo_wsnt__TopicNotSupportedFaultType_Description(struct soap*, const char*, struct _wsnt__TopicNotSupportedFaultType_Description **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__TopicNotSupportedFaultType_Description(struct soap*, struct _wsnt__TopicNotSupportedFaultType_Description *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__TopicNotSupportedFaultType_Description ** SOAP_FMAC4 soap_get_PointerTo_wsnt__TopicNotSupportedFaultType_Description(struct soap*, struct _wsnt__TopicNotSupportedFaultType_Description **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__TopicNotSupportedFaultType_ErrorCode_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__TopicNotSupportedFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__TopicNotSupportedFaultType_ErrorCode(struct soap*, struct _wsnt__TopicNotSupportedFaultType_ErrorCode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__TopicNotSupportedFaultType_ErrorCode(struct soap*, const char *, int, struct _wsnt__TopicNotSupportedFaultType_ErrorCode *const*, const char *);
SOAP_FMAC3 struct _wsnt__TopicNotSupportedFaultType_ErrorCode ** SOAP_FMAC4 soap_in_PointerTo_wsnt__TopicNotSupportedFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__TopicNotSupportedFaultType_ErrorCode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__TopicNotSupportedFaultType_ErrorCode(struct soap*, struct _wsnt__TopicNotSupportedFaultType_ErrorCode *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__TopicNotSupportedFaultType_ErrorCode ** SOAP_FMAC4 soap_get_PointerTo_wsnt__TopicNotSupportedFaultType_ErrorCode(struct soap*, struct _wsnt__TopicNotSupportedFaultType_ErrorCode **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__InvalidTopicExpressionFaultType_FaultCause_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__InvalidTopicExpressionFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__InvalidTopicExpressionFaultType_FaultCause(struct soap*, struct _wsnt__InvalidTopicExpressionFaultType_FaultCause *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__InvalidTopicExpressionFaultType_FaultCause(struct soap*, const char *, int, struct _wsnt__InvalidTopicExpressionFaultType_FaultCause *const*, const char *);
SOAP_FMAC3 struct _wsnt__InvalidTopicExpressionFaultType_FaultCause ** SOAP_FMAC4 soap_in_PointerTo_wsnt__InvalidTopicExpressionFaultType_FaultCause(struct soap*, const char*, struct _wsnt__InvalidTopicExpressionFaultType_FaultCause **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__InvalidTopicExpressionFaultType_FaultCause(struct soap*, struct _wsnt__InvalidTopicExpressionFaultType_FaultCause *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__InvalidTopicExpressionFaultType_FaultCause ** SOAP_FMAC4 soap_get_PointerTo_wsnt__InvalidTopicExpressionFaultType_FaultCause(struct soap*, struct _wsnt__InvalidTopicExpressionFaultType_FaultCause **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__InvalidTopicExpressionFaultType_Description_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__InvalidTopicExpressionFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__InvalidTopicExpressionFaultType_Description(struct soap*, struct _wsnt__InvalidTopicExpressionFaultType_Description *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__InvalidTopicExpressionFaultType_Description(struct soap*, const char *, int, struct _wsnt__InvalidTopicExpressionFaultType_Description *const*, const char *);
SOAP_FMAC3 struct _wsnt__InvalidTopicExpressionFaultType_Description ** SOAP_FMAC4 soap_in_PointerTo_wsnt__InvalidTopicExpressionFaultType_Description(struct soap*, const char*, struct _wsnt__InvalidTopicExpressionFaultType_Description **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__InvalidTopicExpressionFaultType_Description(struct soap*, struct _wsnt__InvalidTopicExpressionFaultType_Description *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__InvalidTopicExpressionFaultType_Description ** SOAP_FMAC4 soap_get_PointerTo_wsnt__InvalidTopicExpressionFaultType_Description(struct soap*, struct _wsnt__InvalidTopicExpressionFaultType_Description **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__InvalidTopicExpressionFaultType_ErrorCode_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__InvalidTopicExpressionFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__InvalidTopicExpressionFaultType_ErrorCode(struct soap*, struct _wsnt__InvalidTopicExpressionFaultType_ErrorCode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__InvalidTopicExpressionFaultType_ErrorCode(struct soap*, const char *, int, struct _wsnt__InvalidTopicExpressionFaultType_ErrorCode *const*, const char *);
SOAP_FMAC3 struct _wsnt__InvalidTopicExpressionFaultType_ErrorCode ** SOAP_FMAC4 soap_in_PointerTo_wsnt__InvalidTopicExpressionFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__InvalidTopicExpressionFaultType_ErrorCode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__InvalidTopicExpressionFaultType_ErrorCode(struct soap*, struct _wsnt__InvalidTopicExpressionFaultType_ErrorCode *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__InvalidTopicExpressionFaultType_ErrorCode ** SOAP_FMAC4 soap_get_PointerTo_wsnt__InvalidTopicExpressionFaultType_ErrorCode(struct soap*, struct _wsnt__InvalidTopicExpressionFaultType_ErrorCode **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__TopicExpressionDialectUnknownFaultType_FaultCause_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__TopicExpressionDialectUnknownFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(struct soap*, struct _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(struct soap*, const char *, int, struct _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause *const*, const char *);
SOAP_FMAC3 struct _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause ** SOAP_FMAC4 soap_in_PointerTo_wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(struct soap*, const char*, struct _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(struct soap*, struct _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause ** SOAP_FMAC4 soap_get_PointerTo_wsnt__TopicExpressionDialectUnknownFaultType_FaultCause(struct soap*, struct _wsnt__TopicExpressionDialectUnknownFaultType_FaultCause **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__TopicExpressionDialectUnknownFaultType_Description_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__TopicExpressionDialectUnknownFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__TopicExpressionDialectUnknownFaultType_Description(struct soap*, struct _wsnt__TopicExpressionDialectUnknownFaultType_Description *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__TopicExpressionDialectUnknownFaultType_Description(struct soap*, const char *, int, struct _wsnt__TopicExpressionDialectUnknownFaultType_Description *const*, const char *);
SOAP_FMAC3 struct _wsnt__TopicExpressionDialectUnknownFaultType_Description ** SOAP_FMAC4 soap_in_PointerTo_wsnt__TopicExpressionDialectUnknownFaultType_Description(struct soap*, const char*, struct _wsnt__TopicExpressionDialectUnknownFaultType_Description **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__TopicExpressionDialectUnknownFaultType_Description(struct soap*, struct _wsnt__TopicExpressionDialectUnknownFaultType_Description *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__TopicExpressionDialectUnknownFaultType_Description ** SOAP_FMAC4 soap_get_PointerTo_wsnt__TopicExpressionDialectUnknownFaultType_Description(struct soap*, struct _wsnt__TopicExpressionDialectUnknownFaultType_Description **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(struct soap*, struct _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(struct soap*, const char *, int, struct _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode *const*, const char *);
SOAP_FMAC3 struct _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode ** SOAP_FMAC4 soap_in_PointerTo_wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(struct soap*, struct _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode ** SOAP_FMAC4 soap_get_PointerTo_wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode(struct soap*, struct _wsnt__TopicExpressionDialectUnknownFaultType_ErrorCode **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__InvalidFilterFaultType_FaultCause_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__InvalidFilterFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__InvalidFilterFaultType_FaultCause(struct soap*, struct _wsnt__InvalidFilterFaultType_FaultCause *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__InvalidFilterFaultType_FaultCause(struct soap*, const char *, int, struct _wsnt__InvalidFilterFaultType_FaultCause *const*, const char *);
SOAP_FMAC3 struct _wsnt__InvalidFilterFaultType_FaultCause ** SOAP_FMAC4 soap_in_PointerTo_wsnt__InvalidFilterFaultType_FaultCause(struct soap*, const char*, struct _wsnt__InvalidFilterFaultType_FaultCause **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__InvalidFilterFaultType_FaultCause(struct soap*, struct _wsnt__InvalidFilterFaultType_FaultCause *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__InvalidFilterFaultType_FaultCause ** SOAP_FMAC4 soap_get_PointerTo_wsnt__InvalidFilterFaultType_FaultCause(struct soap*, struct _wsnt__InvalidFilterFaultType_FaultCause **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__InvalidFilterFaultType_Description_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__InvalidFilterFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__InvalidFilterFaultType_Description(struct soap*, struct _wsnt__InvalidFilterFaultType_Description *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__InvalidFilterFaultType_Description(struct soap*, const char *, int, struct _wsnt__InvalidFilterFaultType_Description *const*, const char *);
SOAP_FMAC3 struct _wsnt__InvalidFilterFaultType_Description ** SOAP_FMAC4 soap_in_PointerTo_wsnt__InvalidFilterFaultType_Description(struct soap*, const char*, struct _wsnt__InvalidFilterFaultType_Description **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__InvalidFilterFaultType_Description(struct soap*, struct _wsnt__InvalidFilterFaultType_Description *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__InvalidFilterFaultType_Description ** SOAP_FMAC4 soap_get_PointerTo_wsnt__InvalidFilterFaultType_Description(struct soap*, struct _wsnt__InvalidFilterFaultType_Description **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__InvalidFilterFaultType_ErrorCode_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__InvalidFilterFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__InvalidFilterFaultType_ErrorCode(struct soap*, struct _wsnt__InvalidFilterFaultType_ErrorCode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__InvalidFilterFaultType_ErrorCode(struct soap*, const char *, int, struct _wsnt__InvalidFilterFaultType_ErrorCode *const*, const char *);
SOAP_FMAC3 struct _wsnt__InvalidFilterFaultType_ErrorCode ** SOAP_FMAC4 soap_in_PointerTo_wsnt__InvalidFilterFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__InvalidFilterFaultType_ErrorCode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__InvalidFilterFaultType_ErrorCode(struct soap*, struct _wsnt__InvalidFilterFaultType_ErrorCode *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__InvalidFilterFaultType_ErrorCode ** SOAP_FMAC4 soap_get_PointerTo_wsnt__InvalidFilterFaultType_ErrorCode(struct soap*, struct _wsnt__InvalidFilterFaultType_ErrorCode **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__SubscribeCreationFailedFaultType_FaultCause_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__SubscribeCreationFailedFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__SubscribeCreationFailedFaultType_FaultCause(struct soap*, struct _wsnt__SubscribeCreationFailedFaultType_FaultCause *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__SubscribeCreationFailedFaultType_FaultCause(struct soap*, const char *, int, struct _wsnt__SubscribeCreationFailedFaultType_FaultCause *const*, const char *);
SOAP_FMAC3 struct _wsnt__SubscribeCreationFailedFaultType_FaultCause ** SOAP_FMAC4 soap_in_PointerTo_wsnt__SubscribeCreationFailedFaultType_FaultCause(struct soap*, const char*, struct _wsnt__SubscribeCreationFailedFaultType_FaultCause **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__SubscribeCreationFailedFaultType_FaultCause(struct soap*, struct _wsnt__SubscribeCreationFailedFaultType_FaultCause *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__SubscribeCreationFailedFaultType_FaultCause ** SOAP_FMAC4 soap_get_PointerTo_wsnt__SubscribeCreationFailedFaultType_FaultCause(struct soap*, struct _wsnt__SubscribeCreationFailedFaultType_FaultCause **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__SubscribeCreationFailedFaultType_Description_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__SubscribeCreationFailedFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__SubscribeCreationFailedFaultType_Description(struct soap*, struct _wsnt__SubscribeCreationFailedFaultType_Description *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__SubscribeCreationFailedFaultType_Description(struct soap*, const char *, int, struct _wsnt__SubscribeCreationFailedFaultType_Description *const*, const char *);
SOAP_FMAC3 struct _wsnt__SubscribeCreationFailedFaultType_Description ** SOAP_FMAC4 soap_in_PointerTo_wsnt__SubscribeCreationFailedFaultType_Description(struct soap*, const char*, struct _wsnt__SubscribeCreationFailedFaultType_Description **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__SubscribeCreationFailedFaultType_Description(struct soap*, struct _wsnt__SubscribeCreationFailedFaultType_Description *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__SubscribeCreationFailedFaultType_Description ** SOAP_FMAC4 soap_get_PointerTo_wsnt__SubscribeCreationFailedFaultType_Description(struct soap*, struct _wsnt__SubscribeCreationFailedFaultType_Description **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__SubscribeCreationFailedFaultType_ErrorCode_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__SubscribeCreationFailedFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__SubscribeCreationFailedFaultType_ErrorCode(struct soap*, struct _wsnt__SubscribeCreationFailedFaultType_ErrorCode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__SubscribeCreationFailedFaultType_ErrorCode(struct soap*, const char *, int, struct _wsnt__SubscribeCreationFailedFaultType_ErrorCode *const*, const char *);
SOAP_FMAC3 struct _wsnt__SubscribeCreationFailedFaultType_ErrorCode ** SOAP_FMAC4 soap_in_PointerTo_wsnt__SubscribeCreationFailedFaultType_ErrorCode(struct soap*, const char*, struct _wsnt__SubscribeCreationFailedFaultType_ErrorCode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__SubscribeCreationFailedFaultType_ErrorCode(struct soap*, struct _wsnt__SubscribeCreationFailedFaultType_ErrorCode *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__SubscribeCreationFailedFaultType_ErrorCode ** SOAP_FMAC4 soap_get_PointerTo_wsnt__SubscribeCreationFailedFaultType_ErrorCode(struct soap*, struct _wsnt__SubscribeCreationFailedFaultType_ErrorCode **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTott__MulticastConfiguration_DEFINED
#define SOAP_TYPE_PointerTott__MulticastConfiguration_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__MulticastConfiguration(struct soap*, struct tt__MulticastConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__MulticastConfiguration(struct soap*, const char *, int, struct tt__MulticastConfiguration *const*, const char *);
SOAP_FMAC3 struct tt__MulticastConfiguration ** SOAP_FMAC4 soap_in_PointerTott__MulticastConfiguration(struct soap*, const char*, struct tt__MulticastConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__MulticastConfiguration(struct soap*, struct tt__MulticastConfiguration *const*, const char*, const char*);
SOAP_FMAC3 struct tt__MulticastConfiguration ** SOAP_FMAC4 soap_get_PointerTott__MulticastConfiguration(struct soap*, struct tt__MulticastConfiguration **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTott__H264Configuration_DEFINED
#define SOAP_TYPE_PointerTott__H264Configuration_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__H264Configuration(struct soap*, struct tt__H264Configuration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__H264Configuration(struct soap*, const char *, int, struct tt__H264Configuration *const*, const char *);
SOAP_FMAC3 struct tt__H264Configuration ** SOAP_FMAC4 soap_in_PointerTott__H264Configuration(struct soap*, const char*, struct tt__H264Configuration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__H264Configuration(struct soap*, struct tt__H264Configuration *const*, const char*, const char*);
SOAP_FMAC3 struct tt__H264Configuration ** SOAP_FMAC4 soap_get_PointerTott__H264Configuration(struct soap*, struct tt__H264Configuration **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTott__Mpeg4Configuration_DEFINED
#define SOAP_TYPE_PointerTott__Mpeg4Configuration_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Mpeg4Configuration(struct soap*, struct tt__Mpeg4Configuration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Mpeg4Configuration(struct soap*, const char *, int, struct tt__Mpeg4Configuration *const*, const char *);
SOAP_FMAC3 struct tt__Mpeg4Configuration ** SOAP_FMAC4 soap_in_PointerTott__Mpeg4Configuration(struct soap*, const char*, struct tt__Mpeg4Configuration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Mpeg4Configuration(struct soap*, struct tt__Mpeg4Configuration *const*, const char*, const char*);
SOAP_FMAC3 struct tt__Mpeg4Configuration ** SOAP_FMAC4 soap_get_PointerTott__Mpeg4Configuration(struct soap*, struct tt__Mpeg4Configuration **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTott__VideoRateControl_DEFINED
#define SOAP_TYPE_PointerTott__VideoRateControl_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__VideoRateControl(struct soap*, struct tt__VideoRateControl *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__VideoRateControl(struct soap*, const char *, int, struct tt__VideoRateControl *const*, const char *);
SOAP_FMAC3 struct tt__VideoRateControl ** SOAP_FMAC4 soap_in_PointerTott__VideoRateControl(struct soap*, const char*, struct tt__VideoRateControl **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__VideoRateControl(struct soap*, struct tt__VideoRateControl *const*, const char*, const char*);
SOAP_FMAC3 struct tt__VideoRateControl ** SOAP_FMAC4 soap_get_PointerTott__VideoRateControl(struct soap*, struct tt__VideoRateControl **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTott__MediaUri_DEFINED
#define SOAP_TYPE_PointerTott__MediaUri_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__MediaUri(struct soap*, struct tt__MediaUri *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__MediaUri(struct soap*, const char *, int, struct tt__MediaUri *const*, const char *);
SOAP_FMAC3 struct tt__MediaUri ** SOAP_FMAC4 soap_in_PointerTott__MediaUri(struct soap*, const char*, struct tt__MediaUri **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__MediaUri(struct soap*, struct tt__MediaUri *const*, const char*, const char*);
SOAP_FMAC3 struct tt__MediaUri ** SOAP_FMAC4 soap_get_PointerTott__MediaUri(struct soap*, struct tt__MediaUri **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTott__Profile_DEFINED
#define SOAP_TYPE_PointerTott__Profile_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Profile(struct soap*, struct tt__Profile *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Profile(struct soap*, const char *, int, struct tt__Profile *const*, const char *);
SOAP_FMAC3 struct tt__Profile ** SOAP_FMAC4 soap_in_PointerTott__Profile(struct soap*, const char*, struct tt__Profile **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Profile(struct soap*, struct tt__Profile *const*, const char*, const char*);
SOAP_FMAC3 struct tt__Profile ** SOAP_FMAC4 soap_get_PointerTott__Profile(struct soap*, struct tt__Profile **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTotrt__Capabilities_DEFINED
#define SOAP_TYPE_PointerTotrt__Capabilities_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTotrt__Capabilities(struct soap*, struct trt__Capabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTotrt__Capabilities(struct soap*, const char *, int, struct trt__Capabilities *const*, const char *);
SOAP_FMAC3 struct trt__Capabilities ** SOAP_FMAC4 soap_in_PointerTotrt__Capabilities(struct soap*, const char*, struct trt__Capabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTotrt__Capabilities(struct soap*, struct trt__Capabilities *const*, const char*, const char*);
SOAP_FMAC3 struct trt__Capabilities ** SOAP_FMAC4 soap_get_PointerTotrt__Capabilities(struct soap*, struct trt__Capabilities **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTotrt__ProfileCapabilities_DEFINED
#define SOAP_TYPE_PointerTotrt__ProfileCapabilities_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTotrt__ProfileCapabilities(struct soap*, struct trt__ProfileCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTotrt__ProfileCapabilities(struct soap*, const char *, int, struct trt__ProfileCapabilities *const*, const char *);
SOAP_FMAC3 struct trt__ProfileCapabilities ** SOAP_FMAC4 soap_in_PointerTotrt__ProfileCapabilities(struct soap*, const char*, struct trt__ProfileCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTotrt__ProfileCapabilities(struct soap*, struct trt__ProfileCapabilities *const*, const char*, const char*);
SOAP_FMAC3 struct trt__ProfileCapabilities ** SOAP_FMAC4 soap_get_PointerTotrt__ProfileCapabilities(struct soap*, struct trt__ProfileCapabilities **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowstop__Documentation_DEFINED
#define SOAP_TYPE_PointerTowstop__Documentation_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowstop__Documentation(struct soap*, struct wstop__Documentation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowstop__Documentation(struct soap*, const char *, int, struct wstop__Documentation *const*, const char *);
SOAP_FMAC3 struct wstop__Documentation ** SOAP_FMAC4 soap_in_PointerTowstop__Documentation(struct soap*, const char*, struct wstop__Documentation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowstop__Documentation(struct soap*, struct wstop__Documentation *const*, const char*, const char*);
SOAP_FMAC3 struct wstop__Documentation ** SOAP_FMAC4 soap_get_PointerTowstop__Documentation(struct soap*, struct wstop__Documentation **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsrfbf__BaseFaultType_FaultCause_DEFINED
#define SOAP_TYPE_PointerTo_wsrfbf__BaseFaultType_FaultCause_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsrfbf__BaseFaultType_FaultCause(struct soap*, struct _wsrfbf__BaseFaultType_FaultCause *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsrfbf__BaseFaultType_FaultCause(struct soap*, const char *, int, struct _wsrfbf__BaseFaultType_FaultCause *const*, const char *);
SOAP_FMAC3 struct _wsrfbf__BaseFaultType_FaultCause ** SOAP_FMAC4 soap_in_PointerTo_wsrfbf__BaseFaultType_FaultCause(struct soap*, const char*, struct _wsrfbf__BaseFaultType_FaultCause **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsrfbf__BaseFaultType_FaultCause(struct soap*, struct _wsrfbf__BaseFaultType_FaultCause *const*, const char*, const char*);
SOAP_FMAC3 struct _wsrfbf__BaseFaultType_FaultCause ** SOAP_FMAC4 soap_get_PointerTo_wsrfbf__BaseFaultType_FaultCause(struct soap*, struct _wsrfbf__BaseFaultType_FaultCause **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsrfbf__BaseFaultType_Description_DEFINED
#define SOAP_TYPE_PointerTo_wsrfbf__BaseFaultType_Description_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsrfbf__BaseFaultType_Description(struct soap*, struct _wsrfbf__BaseFaultType_Description *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsrfbf__BaseFaultType_Description(struct soap*, const char *, int, struct _wsrfbf__BaseFaultType_Description *const*, const char *);
SOAP_FMAC3 struct _wsrfbf__BaseFaultType_Description ** SOAP_FMAC4 soap_in_PointerTo_wsrfbf__BaseFaultType_Description(struct soap*, const char*, struct _wsrfbf__BaseFaultType_Description **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsrfbf__BaseFaultType_Description(struct soap*, struct _wsrfbf__BaseFaultType_Description *const*, const char*, const char*);
SOAP_FMAC3 struct _wsrfbf__BaseFaultType_Description ** SOAP_FMAC4 soap_get_PointerTo_wsrfbf__BaseFaultType_Description(struct soap*, struct _wsrfbf__BaseFaultType_Description **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsrfbf__BaseFaultType_ErrorCode_DEFINED
#define SOAP_TYPE_PointerTo_wsrfbf__BaseFaultType_ErrorCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsrfbf__BaseFaultType_ErrorCode(struct soap*, struct _wsrfbf__BaseFaultType_ErrorCode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsrfbf__BaseFaultType_ErrorCode(struct soap*, const char *, int, struct _wsrfbf__BaseFaultType_ErrorCode *const*, const char *);
SOAP_FMAC3 struct _wsrfbf__BaseFaultType_ErrorCode ** SOAP_FMAC4 soap_in_PointerTo_wsrfbf__BaseFaultType_ErrorCode(struct soap*, const char*, struct _wsrfbf__BaseFaultType_ErrorCode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsrfbf__BaseFaultType_ErrorCode(struct soap*, struct _wsrfbf__BaseFaultType_ErrorCode *const*, const char*, const char*);
SOAP_FMAC3 struct _wsrfbf__BaseFaultType_ErrorCode ** SOAP_FMAC4 soap_get_PointerTo_wsrfbf__BaseFaultType_ErrorCode(struct soap*, struct _wsrfbf__BaseFaultType_ErrorCode **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsnt__Subscribe_SubscriptionPolicy_DEFINED
#define SOAP_TYPE_PointerTo_wsnt__Subscribe_SubscriptionPolicy_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__Subscribe_SubscriptionPolicy(struct soap*, struct _wsnt__Subscribe_SubscriptionPolicy *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__Subscribe_SubscriptionPolicy(struct soap*, const char *, int, struct _wsnt__Subscribe_SubscriptionPolicy *const*, const char *);
SOAP_FMAC3 struct _wsnt__Subscribe_SubscriptionPolicy ** SOAP_FMAC4 soap_in_PointerTo_wsnt__Subscribe_SubscriptionPolicy(struct soap*, const char*, struct _wsnt__Subscribe_SubscriptionPolicy **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__Subscribe_SubscriptionPolicy(struct soap*, struct _wsnt__Subscribe_SubscriptionPolicy *const*, const char*, const char*);
SOAP_FMAC3 struct _wsnt__Subscribe_SubscriptionPolicy ** SOAP_FMAC4 soap_get_PointerTo_wsnt__Subscribe_SubscriptionPolicy(struct soap*, struct _wsnt__Subscribe_SubscriptionPolicy **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsnt__NotificationMessageHolderType_DEFINED
#define SOAP_TYPE_PointerTowsnt__NotificationMessageHolderType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsnt__NotificationMessageHolderType(struct soap*, struct wsnt__NotificationMessageHolderType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsnt__NotificationMessageHolderType(struct soap*, const char *, int, struct wsnt__NotificationMessageHolderType *const*, const char *);
SOAP_FMAC3 struct wsnt__NotificationMessageHolderType ** SOAP_FMAC4 soap_in_PointerTowsnt__NotificationMessageHolderType(struct soap*, const char*, struct wsnt__NotificationMessageHolderType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsnt__NotificationMessageHolderType(struct soap*, struct wsnt__NotificationMessageHolderType *const*, const char*, const char*);
SOAP_FMAC3 struct wsnt__NotificationMessageHolderType ** SOAP_FMAC4 soap_get_PointerTowsnt__NotificationMessageHolderType(struct soap*, struct wsnt__NotificationMessageHolderType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTodateTime_DEFINED
#define SOAP_TYPE_PointerTodateTime_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTodateTime(struct soap*, time_t *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTodateTime(struct soap*, const char *, int, time_t *const*, const char *);
SOAP_FMAC3 time_t ** SOAP_FMAC4 soap_in_PointerTodateTime(struct soap*, const char*, time_t **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTodateTime(struct soap*, time_t *const*, const char*, const char*);
SOAP_FMAC3 time_t ** SOAP_FMAC4 soap_get_PointerTodateTime(struct soap*, time_t **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsnt__SubscriptionPolicyType_DEFINED
#define SOAP_TYPE_PointerTowsnt__SubscriptionPolicyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsnt__SubscriptionPolicyType(struct soap*, struct wsnt__SubscriptionPolicyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsnt__SubscriptionPolicyType(struct soap*, const char *, int, struct wsnt__SubscriptionPolicyType *const*, const char *);
SOAP_FMAC3 struct wsnt__SubscriptionPolicyType ** SOAP_FMAC4 soap_in_PointerTowsnt__SubscriptionPolicyType(struct soap*, const char*, struct wsnt__SubscriptionPolicyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsnt__SubscriptionPolicyType(struct soap*, struct wsnt__SubscriptionPolicyType *const*, const char*, const char*);
SOAP_FMAC3 struct wsnt__SubscriptionPolicyType ** SOAP_FMAC4 soap_get_PointerTowsnt__SubscriptionPolicyType(struct soap*, struct wsnt__SubscriptionPolicyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsnt__FilterType_DEFINED
#define SOAP_TYPE_PointerTowsnt__FilterType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsnt__FilterType(struct soap*, struct wsnt__FilterType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsnt__FilterType(struct soap*, const char *, int, struct wsnt__FilterType *const*, const char *);
SOAP_FMAC3 struct wsnt__FilterType ** SOAP_FMAC4 soap_in_PointerTowsnt__FilterType(struct soap*, const char*, struct wsnt__FilterType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsnt__FilterType(struct soap*, struct wsnt__FilterType *const*, const char*, const char*);
SOAP_FMAC3 struct wsnt__FilterType ** SOAP_FMAC4 soap_get_PointerTowsnt__FilterType(struct soap*, struct wsnt__FilterType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowstop__TopicSetType_DEFINED
#define SOAP_TYPE_PointerTowstop__TopicSetType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowstop__TopicSetType(struct soap*, struct wstop__TopicSetType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowstop__TopicSetType(struct soap*, const char *, int, struct wstop__TopicSetType *const*, const char *);
SOAP_FMAC3 struct wstop__TopicSetType ** SOAP_FMAC4 soap_in_PointerTowstop__TopicSetType(struct soap*, const char*, struct wstop__TopicSetType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowstop__TopicSetType(struct soap*, struct wstop__TopicSetType *const*, const char*, const char*);
SOAP_FMAC3 struct wstop__TopicSetType ** SOAP_FMAC4 soap_get_PointerTowstop__TopicSetType(struct soap*, struct wstop__TopicSetType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToxsd__anyURI_DEFINED
#define SOAP_TYPE_PointerToxsd__anyURI_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxsd__anyURI(struct soap*, char **const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxsd__anyURI(struct soap*, const char *, int, char **const*, const char *);
SOAP_FMAC3 char *** SOAP_FMAC4 soap_in_PointerToxsd__anyURI(struct soap*, const char*, char ***, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxsd__anyURI(struct soap*, char **const*, const char*, const char*);
SOAP_FMAC3 char *** SOAP_FMAC4 soap_get_PointerToxsd__anyURI(struct soap*, char ***, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsnt__TopicExpressionType_DEFINED
#define SOAP_TYPE_PointerTowsnt__TopicExpressionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsnt__TopicExpressionType(struct soap*, struct wsnt__TopicExpressionType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsnt__TopicExpressionType(struct soap*, const char *, int, struct wsnt__TopicExpressionType *const*, const char *);
SOAP_FMAC3 struct wsnt__TopicExpressionType ** SOAP_FMAC4 soap_in_PointerTowsnt__TopicExpressionType(struct soap*, const char*, struct wsnt__TopicExpressionType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsnt__TopicExpressionType(struct soap*, struct wsnt__TopicExpressionType *const*, const char*, const char*);
SOAP_FMAC3 struct wsnt__TopicExpressionType ** SOAP_FMAC4 soap_get_PointerTowsnt__TopicExpressionType(struct soap*, struct wsnt__TopicExpressionType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsa5__EndpointReferenceType_DEFINED
#define SOAP_TYPE_PointerTowsa5__EndpointReferenceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsa5__EndpointReferenceType(struct soap*, struct wsa5__EndpointReferenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsa5__EndpointReferenceType(struct soap*, const char *, int, struct wsa5__EndpointReferenceType *const*, const char *);
SOAP_FMAC3 struct wsa5__EndpointReferenceType ** SOAP_FMAC4 soap_in_PointerTowsa5__EndpointReferenceType(struct soap*, const char*, struct wsa5__EndpointReferenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsa5__EndpointReferenceType(struct soap*, struct wsa5__EndpointReferenceType *const*, const char*, const char*);
SOAP_FMAC3 struct wsa5__EndpointReferenceType ** SOAP_FMAC4 soap_get_PointerTowsa5__EndpointReferenceType(struct soap*, struct wsa5__EndpointReferenceType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTott__PropertyOperation_DEFINED
#define SOAP_TYPE_PointerTott__PropertyOperation_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PropertyOperation(struct soap*, enum tt__PropertyOperation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PropertyOperation(struct soap*, const char *, int, enum tt__PropertyOperation *const*, const char *);
SOAP_FMAC3 enum tt__PropertyOperation ** SOAP_FMAC4 soap_in_PointerTott__PropertyOperation(struct soap*, const char*, enum tt__PropertyOperation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PropertyOperation(struct soap*, enum tt__PropertyOperation *const*, const char*, const char*);
SOAP_FMAC3 enum tt__PropertyOperation ** SOAP_FMAC4 soap_get_PointerTott__PropertyOperation(struct soap*, enum tt__PropertyOperation **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTott__MessageExtension_DEFINED
#define SOAP_TYPE_PointerTott__MessageExtension_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__MessageExtension(struct soap*, struct tt__MessageExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__MessageExtension(struct soap*, const char *, int, struct tt__MessageExtension *const*, const char *);
SOAP_FMAC3 struct tt__MessageExtension ** SOAP_FMAC4 soap_in_PointerTott__MessageExtension(struct soap*, const char*, struct tt__MessageExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__MessageExtension(struct soap*, struct tt__MessageExtension *const*, const char*, const char*);
SOAP_FMAC3 struct tt__MessageExtension ** SOAP_FMAC4 soap_get_PointerTott__MessageExtension(struct soap*, struct tt__MessageExtension **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTott__ItemList_DEFINED
#define SOAP_TYPE_PointerTott__ItemList_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ItemList(struct soap*, struct tt__ItemList *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ItemList(struct soap*, const char *, int, struct tt__ItemList *const*, const char *);
SOAP_FMAC3 struct tt__ItemList ** SOAP_FMAC4 soap_in_PointerTott__ItemList(struct soap*, const char*, struct tt__ItemList **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ItemList(struct soap*, struct tt__ItemList *const*, const char*, const char*);
SOAP_FMAC3 struct tt__ItemList ** SOAP_FMAC4 soap_get_PointerTott__ItemList(struct soap*, struct tt__ItemList **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTott__IPAddress_DEFINED
#define SOAP_TYPE_PointerTott__IPAddress_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IPAddress(struct soap*, struct tt__IPAddress *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IPAddress(struct soap*, const char *, int, struct tt__IPAddress *const*, const char *);
SOAP_FMAC3 struct tt__IPAddress ** SOAP_FMAC4 soap_in_PointerTott__IPAddress(struct soap*, const char*, struct tt__IPAddress **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IPAddress(struct soap*, struct tt__IPAddress *const*, const char*, const char*);
SOAP_FMAC3 struct tt__IPAddress ** SOAP_FMAC4 soap_get_PointerTott__IPAddress(struct soap*, struct tt__IPAddress **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTott__H264Profile_DEFINED
#define SOAP_TYPE_PointerTott__H264Profile_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__H264Profile(struct soap*, enum tt__H264Profile *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__H264Profile(struct soap*, const char *, int, enum tt__H264Profile *const*, const char *);
SOAP_FMAC3 enum tt__H264Profile ** SOAP_FMAC4 soap_in_PointerTott__H264Profile(struct soap*, const char*, enum tt__H264Profile **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__H264Profile(struct soap*, enum tt__H264Profile *const*, const char*, const char*);
SOAP_FMAC3 enum tt__H264Profile ** SOAP_FMAC4 soap_get_PointerTott__H264Profile(struct soap*, enum tt__H264Profile **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTott__Mpeg4Profile_DEFINED
#define SOAP_TYPE_PointerTott__Mpeg4Profile_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Mpeg4Profile(struct soap*, enum tt__Mpeg4Profile *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Mpeg4Profile(struct soap*, const char *, int, enum tt__Mpeg4Profile *const*, const char *);
SOAP_FMAC3 enum tt__Mpeg4Profile ** SOAP_FMAC4 soap_in_PointerTott__Mpeg4Profile(struct soap*, const char*, enum tt__Mpeg4Profile **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Mpeg4Profile(struct soap*, enum tt__Mpeg4Profile *const*, const char*, const char*);
SOAP_FMAC3 enum tt__Mpeg4Profile ** SOAP_FMAC4 soap_get_PointerTott__Mpeg4Profile(struct soap*, enum tt__Mpeg4Profile **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTott__VideoResolution_DEFINED
#define SOAP_TYPE_PointerTott__VideoResolution_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__VideoResolution(struct soap*, struct tt__VideoResolution *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__VideoResolution(struct soap*, const char *, int, struct tt__VideoResolution *const*, const char *);
SOAP_FMAC3 struct tt__VideoResolution ** SOAP_FMAC4 soap_in_PointerTott__VideoResolution(struct soap*, const char*, struct tt__VideoResolution **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__VideoResolution(struct soap*, struct tt__VideoResolution *const*, const char*, const char*);
SOAP_FMAC3 struct tt__VideoResolution ** SOAP_FMAC4 soap_get_PointerTott__VideoResolution(struct soap*, struct tt__VideoResolution **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTott__VideoEncoderOptionsExtension2_DEFINED
#define SOAP_TYPE_PointerTott__VideoEncoderOptionsExtension2_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__VideoEncoderOptionsExtension2(struct soap*, struct tt__VideoEncoderOptionsExtension2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__VideoEncoderOptionsExtension2(struct soap*, const char *, int, struct tt__VideoEncoderOptionsExtension2 *const*, const char *);
SOAP_FMAC3 struct tt__VideoEncoderOptionsExtension2 ** SOAP_FMAC4 soap_in_PointerTott__VideoEncoderOptionsExtension2(struct soap*, const char*, struct tt__VideoEncoderOptionsExtension2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__VideoEncoderOptionsExtension2(struct soap*, struct tt__VideoEncoderOptionsExtension2 *const*, const char*, const char*);
SOAP_FMAC3 struct tt__VideoEncoderOptionsExtension2 ** SOAP_FMAC4 soap_get_PointerTott__VideoEncoderOptionsExtension2(struct soap*, struct tt__VideoEncoderOptionsExtension2 **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTott__H264Options2_DEFINED
#define SOAP_TYPE_PointerTott__H264Options2_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__H264Options2(struct soap*, struct tt__H264Options2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__H264Options2(struct soap*, const char *, int, struct tt__H264Options2 *const*, const char *);
SOAP_FMAC3 struct tt__H264Options2 ** SOAP_FMAC4 soap_in_PointerTott__H264Options2(struct soap*, const char*, struct tt__H264Options2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__H264Options2(struct soap*, struct tt__H264Options2 *const*, const char*, const char*);
SOAP_FMAC3 struct tt__H264Options2 ** SOAP_FMAC4 soap_get_PointerTott__H264Options2(struct soap*, struct tt__H264Options2 **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTott__Mpeg4Options2_DEFINED
#define SOAP_TYPE_PointerTott__Mpeg4Options2_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Mpeg4Options2(struct soap*, struct tt__Mpeg4Options2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Mpeg4Options2(struct soap*, const char *, int, struct tt__Mpeg4Options2 *const*, const char *);
SOAP_FMAC3 struct tt__Mpeg4Options2 ** SOAP_FMAC4 soap_in_PointerTott__Mpeg4Options2(struct soap*, const char*, struct tt__Mpeg4Options2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Mpeg4Options2(struct soap*, struct tt__Mpeg4Options2 *const*, const char*, const char*);
SOAP_FMAC3 struct tt__Mpeg4Options2 ** SOAP_FMAC4 soap_get_PointerTott__Mpeg4Options2(struct soap*, struct tt__Mpeg4Options2 **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTott__JpegOptions2_DEFINED
#define SOAP_TYPE_PointerTott__JpegOptions2_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__JpegOptions2(struct soap*, struct tt__JpegOptions2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__JpegOptions2(struct soap*, const char *, int, struct tt__JpegOptions2 *const*, const char *);
SOAP_FMAC3 struct tt__JpegOptions2 ** SOAP_FMAC4 soap_in_PointerTott__JpegOptions2(struct soap*, const char*, struct tt__JpegOptions2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__JpegOptions2(struct soap*, struct tt__JpegOptions2 *const*, const char*, const char*);
SOAP_FMAC3 struct tt__JpegOptions2 ** SOAP_FMAC4 soap_get_PointerTott__JpegOptions2(struct soap*, struct tt__JpegOptions2 **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTott__VideoEncoderOptionsExtension_DEFINED
#define SOAP_TYPE_PointerTott__VideoEncoderOptionsExtension_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__VideoEncoderOptionsExtension(struct soap*, struct tt__VideoEncoderOptionsExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__VideoEncoderOptionsExtension(struct soap*, const char *, int, struct tt__VideoEncoderOptionsExtension *const*, const char *);
SOAP_FMAC3 struct tt__VideoEncoderOptionsExtension ** SOAP_FMAC4 soap_in_PointerTott__VideoEncoderOptionsExtension(struct soap*, const char*, struct tt__VideoEncoderOptionsExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__VideoEncoderOptionsExtension(struct soap*, struct tt__VideoEncoderOptionsExtension *const*, const char*, const char*);
SOAP_FMAC3 struct tt__VideoEncoderOptionsExtension ** SOAP_FMAC4 soap_get_PointerTott__VideoEncoderOptionsExtension(struct soap*, struct tt__VideoEncoderOptionsExtension **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTott__H264Options_DEFINED
#define SOAP_TYPE_PointerTott__H264Options_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__H264Options(struct soap*, struct tt__H264Options *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__H264Options(struct soap*, const char *, int, struct tt__H264Options *const*, const char *);
SOAP_FMAC3 struct tt__H264Options ** SOAP_FMAC4 soap_in_PointerTott__H264Options(struct soap*, const char*, struct tt__H264Options **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__H264Options(struct soap*, struct tt__H264Options *const*, const char*, const char*);
SOAP_FMAC3 struct tt__H264Options ** SOAP_FMAC4 soap_get_PointerTott__H264Options(struct soap*, struct tt__H264Options **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTott__Mpeg4Options_DEFINED
#define SOAP_TYPE_PointerTott__Mpeg4Options_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Mpeg4Options(struct soap*, struct tt__Mpeg4Options *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Mpeg4Options(struct soap*, const char *, int, struct tt__Mpeg4Options *const*, const char *);
SOAP_FMAC3 struct tt__Mpeg4Options ** SOAP_FMAC4 soap_in_PointerTott__Mpeg4Options(struct soap*, const char*, struct tt__Mpeg4Options **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Mpeg4Options(struct soap*, struct tt__Mpeg4Options *const*, const char*, const char*);
SOAP_FMAC3 struct tt__Mpeg4Options ** SOAP_FMAC4 soap_get_PointerTott__Mpeg4Options(struct soap*, struct tt__Mpeg4Options **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTott__JpegOptions_DEFINED
#define SOAP_TYPE_PointerTott__JpegOptions_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__JpegOptions(struct soap*, struct tt__JpegOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__JpegOptions(struct soap*, const char *, int, struct tt__JpegOptions *const*, const char *);
SOAP_FMAC3 struct tt__JpegOptions ** SOAP_FMAC4 soap_in_PointerTott__JpegOptions(struct soap*, const char*, struct tt__JpegOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__JpegOptions(struct soap*, struct tt__JpegOptions *const*, const char*, const char*);
SOAP_FMAC3 struct tt__JpegOptions ** SOAP_FMAC4 soap_get_PointerTott__JpegOptions(struct soap*, struct tt__JpegOptions **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTott__ItemListDescriptionExtension_DEFINED
#define SOAP_TYPE_PointerTott__ItemListDescriptionExtension_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ItemListDescriptionExtension(struct soap*, struct tt__ItemListDescriptionExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ItemListDescriptionExtension(struct soap*, const char *, int, struct tt__ItemListDescriptionExtension *const*, const char *);
SOAP_FMAC3 struct tt__ItemListDescriptionExtension ** SOAP_FMAC4 soap_in_PointerTott__ItemListDescriptionExtension(struct soap*, const char*, struct tt__ItemListDescriptionExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ItemListDescriptionExtension(struct soap*, struct tt__ItemListDescriptionExtension *const*, const char*, const char*);
SOAP_FMAC3 struct tt__ItemListDescriptionExtension ** SOAP_FMAC4 soap_get_PointerTott__ItemListDescriptionExtension(struct soap*, struct tt__ItemListDescriptionExtension **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_tt__ItemListDescription_ElementItemDescription_DEFINED
#define SOAP_TYPE_PointerTo_tt__ItemListDescription_ElementItemDescription_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tt__ItemListDescription_ElementItemDescription(struct soap*, struct _tt__ItemListDescription_ElementItemDescription *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tt__ItemListDescription_ElementItemDescription(struct soap*, const char *, int, struct _tt__ItemListDescription_ElementItemDescription *const*, const char *);
SOAP_FMAC3 struct _tt__ItemListDescription_ElementItemDescription ** SOAP_FMAC4 soap_in_PointerTo_tt__ItemListDescription_ElementItemDescription(struct soap*, const char*, struct _tt__ItemListDescription_ElementItemDescription **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tt__ItemListDescription_ElementItemDescription(struct soap*, struct _tt__ItemListDescription_ElementItemDescription *const*, const char*, const char*);
SOAP_FMAC3 struct _tt__ItemListDescription_ElementItemDescription ** SOAP_FMAC4 soap_get_PointerTo_tt__ItemListDescription_ElementItemDescription(struct soap*, struct _tt__ItemListDescription_ElementItemDescription **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_tt__ItemListDescription_SimpleItemDescription_DEFINED
#define SOAP_TYPE_PointerTo_tt__ItemListDescription_SimpleItemDescription_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tt__ItemListDescription_SimpleItemDescription(struct soap*, struct _tt__ItemListDescription_SimpleItemDescription *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tt__ItemListDescription_SimpleItemDescription(struct soap*, const char *, int, struct _tt__ItemListDescription_SimpleItemDescription *const*, const char *);
SOAP_FMAC3 struct _tt__ItemListDescription_SimpleItemDescription ** SOAP_FMAC4 soap_in_PointerTo_tt__ItemListDescription_SimpleItemDescription(struct soap*, const char*, struct _tt__ItemListDescription_SimpleItemDescription **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tt__ItemListDescription_SimpleItemDescription(struct soap*, struct _tt__ItemListDescription_SimpleItemDescription *const*, const char*, const char*);
SOAP_FMAC3 struct _tt__ItemListDescription_SimpleItemDescription ** SOAP_FMAC4 soap_get_PointerTo_tt__ItemListDescription_SimpleItemDescription(struct soap*, struct _tt__ItemListDescription_SimpleItemDescription **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTott__MessageDescriptionExtension_DEFINED
#define SOAP_TYPE_PointerTott__MessageDescriptionExtension_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__MessageDescriptionExtension(struct soap*, struct tt__MessageDescriptionExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__MessageDescriptionExtension(struct soap*, const char *, int, struct tt__MessageDescriptionExtension *const*, const char *);
SOAP_FMAC3 struct tt__MessageDescriptionExtension ** SOAP_FMAC4 soap_in_PointerTott__MessageDescriptionExtension(struct soap*, const char*, struct tt__MessageDescriptionExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__MessageDescriptionExtension(struct soap*, struct tt__MessageDescriptionExtension *const*, const char*, const char*);
SOAP_FMAC3 struct tt__MessageDescriptionExtension ** SOAP_FMAC4 soap_get_PointerTott__MessageDescriptionExtension(struct soap*, struct tt__MessageDescriptionExtension **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTott__ItemListDescription_DEFINED
#define SOAP_TYPE_PointerTott__ItemListDescription_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ItemListDescription(struct soap*, struct tt__ItemListDescription *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ItemListDescription(struct soap*, const char *, int, struct tt__ItemListDescription *const*, const char *);
SOAP_FMAC3 struct tt__ItemListDescription ** SOAP_FMAC4 soap_in_PointerTott__ItemListDescription(struct soap*, const char*, struct tt__ItemListDescription **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ItemListDescription(struct soap*, struct tt__ItemListDescription *const*, const char*, const char*);
SOAP_FMAC3 struct tt__ItemListDescription ** SOAP_FMAC4 soap_get_PointerTott__ItemListDescription(struct soap*, struct tt__ItemListDescription **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTott__ItemListExtension_DEFINED
#define SOAP_TYPE_PointerTott__ItemListExtension_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ItemListExtension(struct soap*, struct tt__ItemListExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ItemListExtension(struct soap*, const char *, int, struct tt__ItemListExtension *const*, const char *);
SOAP_FMAC3 struct tt__ItemListExtension ** SOAP_FMAC4 soap_in_PointerTott__ItemListExtension(struct soap*, const char*, struct tt__ItemListExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ItemListExtension(struct soap*, struct tt__ItemListExtension *const*, const char*, const char*);
SOAP_FMAC3 struct tt__ItemListExtension ** SOAP_FMAC4 soap_get_PointerTott__ItemListExtension(struct soap*, struct tt__ItemListExtension **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_tt__ItemList_ElementItem_DEFINED
#define SOAP_TYPE_PointerTo_tt__ItemList_ElementItem_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tt__ItemList_ElementItem(struct soap*, struct _tt__ItemList_ElementItem *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tt__ItemList_ElementItem(struct soap*, const char *, int, struct _tt__ItemList_ElementItem *const*, const char *);
SOAP_FMAC3 struct _tt__ItemList_ElementItem ** SOAP_FMAC4 soap_in_PointerTo_tt__ItemList_ElementItem(struct soap*, const char*, struct _tt__ItemList_ElementItem **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tt__ItemList_ElementItem(struct soap*, struct _tt__ItemList_ElementItem *const*, const char*, const char*);
SOAP_FMAC3 struct _tt__ItemList_ElementItem ** SOAP_FMAC4 soap_get_PointerTo_tt__ItemList_ElementItem(struct soap*, struct _tt__ItemList_ElementItem **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_tt__ItemList_SimpleItem_DEFINED
#define SOAP_TYPE_PointerTo_tt__ItemList_SimpleItem_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tt__ItemList_SimpleItem(struct soap*, struct _tt__ItemList_SimpleItem *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tt__ItemList_SimpleItem(struct soap*, const char *, int, struct _tt__ItemList_SimpleItem *const*, const char *);
SOAP_FMAC3 struct _tt__ItemList_SimpleItem ** SOAP_FMAC4 soap_in_PointerTo_tt__ItemList_SimpleItem(struct soap*, const char*, struct _tt__ItemList_SimpleItem **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tt__ItemList_SimpleItem(struct soap*, struct _tt__ItemList_SimpleItem *const*, const char*, const char*);
SOAP_FMAC3 struct _tt__ItemList_SimpleItem ** SOAP_FMAC4 soap_get_PointerTo_tt__ItemList_SimpleItem(struct soap*, struct _tt__ItemList_SimpleItem **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTott__MoveStatus_DEFINED
#define SOAP_TYPE_PointerTott__MoveStatus_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__MoveStatus(struct soap*, enum tt__MoveStatus *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__MoveStatus(struct soap*, const char *, int, enum tt__MoveStatus *const*, const char *);
SOAP_FMAC3 enum tt__MoveStatus ** SOAP_FMAC4 soap_in_PointerTott__MoveStatus(struct soap*, const char*, enum tt__MoveStatus **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__MoveStatus(struct soap*, enum tt__MoveStatus *const*, const char*, const char*);
SOAP_FMAC3 enum tt__MoveStatus ** SOAP_FMAC4 soap_get_PointerTott__MoveStatus(struct soap*, enum tt__MoveStatus **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTott__PTZVector_DEFINED
#define SOAP_TYPE_PointerTott__PTZVector_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZVector(struct soap*, struct tt__PTZVector *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZVector(struct soap*, const char *, int, struct tt__PTZVector *const*, const char *);
SOAP_FMAC3 struct tt__PTZVector ** SOAP_FMAC4 soap_in_PointerTott__PTZVector(struct soap*, const char*, struct tt__PTZVector **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZVector(struct soap*, struct tt__PTZVector *const*, const char*, const char*);
SOAP_FMAC3 struct tt__PTZVector ** SOAP_FMAC4 soap_get_PointerTott__PTZVector(struct soap*, struct tt__PTZVector **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTott__Vector1D_DEFINED
#define SOAP_TYPE_PointerTott__Vector1D_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Vector1D(struct soap*, struct tt__Vector1D *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Vector1D(struct soap*, const char *, int, struct tt__Vector1D *const*, const char *);
SOAP_FMAC3 struct tt__Vector1D ** SOAP_FMAC4 soap_in_PointerTott__Vector1D(struct soap*, const char*, struct tt__Vector1D **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Vector1D(struct soap*, struct tt__Vector1D *const*, const char*, const char*);
SOAP_FMAC3 struct tt__Vector1D ** SOAP_FMAC4 soap_get_PointerTott__Vector1D(struct soap*, struct tt__Vector1D **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTott__Vector2D_DEFINED
#define SOAP_TYPE_PointerTott__Vector2D_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Vector2D(struct soap*, struct tt__Vector2D *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Vector2D(struct soap*, const char *, int, struct tt__Vector2D *const*, const char *);
SOAP_FMAC3 struct tt__Vector2D ** SOAP_FMAC4 soap_in_PointerTott__Vector2D(struct soap*, const char*, struct tt__Vector2D **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Vector2D(struct soap*, struct tt__Vector2D *const*, const char*, const char*);
SOAP_FMAC3 struct tt__Vector2D ** SOAP_FMAC4 soap_get_PointerTott__Vector2D(struct soap*, struct tt__Vector2D **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTott__FloatRange_DEFINED
#define SOAP_TYPE_PointerTott__FloatRange_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__FloatRange(struct soap*, struct tt__FloatRange *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__FloatRange(struct soap*, const char *, int, struct tt__FloatRange *const*, const char *);
SOAP_FMAC3 struct tt__FloatRange ** SOAP_FMAC4 soap_in_PointerTott__FloatRange(struct soap*, const char*, struct tt__FloatRange **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__FloatRange(struct soap*, struct tt__FloatRange *const*, const char*, const char*);
SOAP_FMAC3 struct tt__FloatRange ** SOAP_FMAC4 soap_get_PointerTott__FloatRange(struct soap*, struct tt__FloatRange **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTott__Space1DDescription_DEFINED
#define SOAP_TYPE_PointerTott__Space1DDescription_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Space1DDescription(struct soap*, struct tt__Space1DDescription *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Space1DDescription(struct soap*, const char *, int, struct tt__Space1DDescription *const*, const char *);
SOAP_FMAC3 struct tt__Space1DDescription ** SOAP_FMAC4 soap_in_PointerTott__Space1DDescription(struct soap*, const char*, struct tt__Space1DDescription **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Space1DDescription(struct soap*, struct tt__Space1DDescription *const*, const char*, const char*);
SOAP_FMAC3 struct tt__Space1DDescription ** SOAP_FMAC4 soap_get_PointerTott__Space1DDescription(struct soap*, struct tt__Space1DDescription **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTott__Space2DDescription_DEFINED
#define SOAP_TYPE_PointerTott__Space2DDescription_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Space2DDescription(struct soap*, struct tt__Space2DDescription *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Space2DDescription(struct soap*, const char *, int, struct tt__Space2DDescription *const*, const char *);
SOAP_FMAC3 struct tt__Space2DDescription ** SOAP_FMAC4 soap_in_PointerTott__Space2DDescription(struct soap*, const char*, struct tt__Space2DDescription **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Space2DDescription(struct soap*, struct tt__Space2DDescription *const*, const char*, const char*);
SOAP_FMAC3 struct tt__Space2DDescription ** SOAP_FMAC4 soap_get_PointerTott__Space2DDescription(struct soap*, struct tt__Space2DDescription **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTott__ProfileCapabilities_DEFINED
#define SOAP_TYPE_PointerTott__ProfileCapabilities_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ProfileCapabilities(struct soap*, struct tt__ProfileCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ProfileCapabilities(struct soap*, const char *, int, struct tt__ProfileCapabilities *const*, const char *);
SOAP_FMAC3 struct tt__ProfileCapabilities ** SOAP_FMAC4 soap_in_PointerTott__ProfileCapabilities(struct soap*, const char*, struct tt__ProfileCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ProfileCapabilities(struct soap*, struct tt__ProfileCapabilities *const*, const char*, const char*);
SOAP_FMAC3 struct tt__ProfileCapabilities ** SOAP_FMAC4 soap_get_PointerTott__ProfileCapabilities(struct soap*, struct tt__ProfileCapabilities **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTott__MediaCapabilitiesExtension_DEFINED
#define SOAP_TYPE_PointerTott__MediaCapabilitiesExtension_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__MediaCapabilitiesExtension(struct soap*, struct tt__MediaCapabilitiesExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__MediaCapabilitiesExtension(struct soap*, const char *, int, struct tt__MediaCapabilitiesExtension *const*, const char *);
SOAP_FMAC3 struct tt__MediaCapabilitiesExtension ** SOAP_FMAC4 soap_in_PointerTott__MediaCapabilitiesExtension(struct soap*, const char*, struct tt__MediaCapabilitiesExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__MediaCapabilitiesExtension(struct soap*, struct tt__MediaCapabilitiesExtension *const*, const char*, const char*);
SOAP_FMAC3 struct tt__MediaCapabilitiesExtension ** SOAP_FMAC4 soap_get_PointerTott__MediaCapabilitiesExtension(struct soap*, struct tt__MediaCapabilitiesExtension **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTott__RealTimeStreamingCapabilities_DEFINED
#define SOAP_TYPE_PointerTott__RealTimeStreamingCapabilities_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RealTimeStreamingCapabilities(struct soap*, struct tt__RealTimeStreamingCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RealTimeStreamingCapabilities(struct soap*, const char *, int, struct tt__RealTimeStreamingCapabilities *const*, const char *);
SOAP_FMAC3 struct tt__RealTimeStreamingCapabilities ** SOAP_FMAC4 soap_in_PointerTott__RealTimeStreamingCapabilities(struct soap*, const char*, struct tt__RealTimeStreamingCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RealTimeStreamingCapabilities(struct soap*, struct tt__RealTimeStreamingCapabilities *const*, const char*, const char*);
SOAP_FMAC3 struct tt__RealTimeStreamingCapabilities ** SOAP_FMAC4 soap_get_PointerTott__RealTimeStreamingCapabilities(struct soap*, struct tt__RealTimeStreamingCapabilities **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTott__SystemCapabilities_DEFINED
#define SOAP_TYPE_PointerTott__SystemCapabilities_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__SystemCapabilities(struct soap*, struct tt__SystemCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__SystemCapabilities(struct soap*, const char *, int, struct tt__SystemCapabilities *const*, const char *);
SOAP_FMAC3 struct tt__SystemCapabilities ** SOAP_FMAC4 soap_in_PointerTott__SystemCapabilities(struct soap*, const char*, struct tt__SystemCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__SystemCapabilities(struct soap*, struct tt__SystemCapabilities *const*, const char*, const char*);
SOAP_FMAC3 struct tt__SystemCapabilities ** SOAP_FMAC4 soap_get_PointerTott__SystemCapabilities(struct soap*, struct tt__SystemCapabilities **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTott__PTZCapabilities_DEFINED
#define SOAP_TYPE_PointerTott__PTZCapabilities_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZCapabilities(struct soap*, struct tt__PTZCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZCapabilities(struct soap*, const char *, int, struct tt__PTZCapabilities *const*, const char *);
SOAP_FMAC3 struct tt__PTZCapabilities ** SOAP_FMAC4 soap_in_PointerTott__PTZCapabilities(struct soap*, const char*, struct tt__PTZCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZCapabilities(struct soap*, struct tt__PTZCapabilities *const*, const char*, const char*);
SOAP_FMAC3 struct tt__PTZCapabilities ** SOAP_FMAC4 soap_get_PointerTott__PTZCapabilities(struct soap*, struct tt__PTZCapabilities **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTott__MediaCapabilities_DEFINED
#define SOAP_TYPE_PointerTott__MediaCapabilities_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__MediaCapabilities(struct soap*, struct tt__MediaCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__MediaCapabilities(struct soap*, const char *, int, struct tt__MediaCapabilities *const*, const char *);
SOAP_FMAC3 struct tt__MediaCapabilities ** SOAP_FMAC4 soap_in_PointerTott__MediaCapabilities(struct soap*, const char*, struct tt__MediaCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__MediaCapabilities(struct soap*, struct tt__MediaCapabilities *const*, const char*, const char*);
SOAP_FMAC3 struct tt__MediaCapabilities ** SOAP_FMAC4 soap_get_PointerTott__MediaCapabilities(struct soap*, struct tt__MediaCapabilities **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTott__EventCapabilities_DEFINED
#define SOAP_TYPE_PointerTott__EventCapabilities_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__EventCapabilities(struct soap*, struct tt__EventCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__EventCapabilities(struct soap*, const char *, int, struct tt__EventCapabilities *const*, const char *);
SOAP_FMAC3 struct tt__EventCapabilities ** SOAP_FMAC4 soap_in_PointerTott__EventCapabilities(struct soap*, const char*, struct tt__EventCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__EventCapabilities(struct soap*, struct tt__EventCapabilities *const*, const char*, const char*);
SOAP_FMAC3 struct tt__EventCapabilities ** SOAP_FMAC4 soap_get_PointerTott__EventCapabilities(struct soap*, struct tt__EventCapabilities **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTott__DeviceCapabilities_DEFINED
#define SOAP_TYPE_PointerTott__DeviceCapabilities_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__DeviceCapabilities(struct soap*, struct tt__DeviceCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__DeviceCapabilities(struct soap*, const char *, int, struct tt__DeviceCapabilities *const*, const char *);
SOAP_FMAC3 struct tt__DeviceCapabilities ** SOAP_FMAC4 soap_in_PointerTott__DeviceCapabilities(struct soap*, const char*, struct tt__DeviceCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__DeviceCapabilities(struct soap*, struct tt__DeviceCapabilities *const*, const char*, const char*);
SOAP_FMAC3 struct tt__DeviceCapabilities ** SOAP_FMAC4 soap_get_PointerTott__DeviceCapabilities(struct soap*, struct tt__DeviceCapabilities **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToxsd__boolean_DEFINED
#define SOAP_TYPE_PointerToxsd__boolean_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxsd__boolean(struct soap*, enum xsd__boolean *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxsd__boolean(struct soap*, const char *, int, enum xsd__boolean *const*, const char *);
SOAP_FMAC3 enum xsd__boolean ** SOAP_FMAC4 soap_in_PointerToxsd__boolean(struct soap*, const char*, enum xsd__boolean **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxsd__boolean(struct soap*, enum xsd__boolean *const*, const char*, const char*);
SOAP_FMAC3 enum xsd__boolean ** SOAP_FMAC4 soap_get_PointerToxsd__boolean(struct soap*, enum xsd__boolean **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTott__VideoEncoderConfiguration_DEFINED
#define SOAP_TYPE_PointerTott__VideoEncoderConfiguration_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__VideoEncoderConfiguration(struct soap*, struct tt__VideoEncoderConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__VideoEncoderConfiguration(struct soap*, const char *, int, struct tt__VideoEncoderConfiguration *const*, const char *);
SOAP_FMAC3 struct tt__VideoEncoderConfiguration ** SOAP_FMAC4 soap_in_PointerTott__VideoEncoderConfiguration(struct soap*, const char*, struct tt__VideoEncoderConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__VideoEncoderConfiguration(struct soap*, struct tt__VideoEncoderConfiguration *const*, const char*, const char*);
SOAP_FMAC3 struct tt__VideoEncoderConfiguration ** SOAP_FMAC4 soap_get_PointerTott__VideoEncoderConfiguration(struct soap*, struct tt__VideoEncoderConfiguration **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTofloat_DEFINED
#define SOAP_TYPE_PointerTofloat_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTofloat(struct soap*, float *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTofloat(struct soap*, const char *, int, float *const*, const char *);
SOAP_FMAC3 float ** SOAP_FMAC4 soap_in_PointerTofloat(struct soap*, const char*, float **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTofloat(struct soap*, float *const*, const char*, const char*);
SOAP_FMAC3 float ** SOAP_FMAC4 soap_get_PointerTofloat(struct soap*, float **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTott__IntRange_DEFINED
#define SOAP_TYPE_PointerTott__IntRange_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IntRange(struct soap*, struct tt__IntRange *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IntRange(struct soap*, const char *, int, struct tt__IntRange *const*, const char *);
SOAP_FMAC3 struct tt__IntRange ** SOAP_FMAC4 soap_in_PointerTott__IntRange(struct soap*, const char*, struct tt__IntRange **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IntRange(struct soap*, struct tt__IntRange *const*, const char*, const char*);
SOAP_FMAC3 struct tt__IntRange ** SOAP_FMAC4 soap_get_PointerTott__IntRange(struct soap*, struct tt__IntRange **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTott__Capabilities_DEFINED
#define SOAP_TYPE_PointerTott__Capabilities_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Capabilities(struct soap*, struct tt__Capabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Capabilities(struct soap*, const char *, int, struct tt__Capabilities *const*, const char *);
SOAP_FMAC3 struct tt__Capabilities ** SOAP_FMAC4 soap_in_PointerTott__Capabilities(struct soap*, const char*, struct tt__Capabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Capabilities(struct soap*, struct tt__Capabilities *const*, const char*, const char*);
SOAP_FMAC3 struct tt__Capabilities ** SOAP_FMAC4 soap_get_PointerTott__Capabilities(struct soap*, struct tt__Capabilities **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTott__CapabilityCategory_DEFINED
#define SOAP_TYPE_PointerTott__CapabilityCategory_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__CapabilityCategory(struct soap*, enum tt__CapabilityCategory *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__CapabilityCategory(struct soap*, const char *, int, enum tt__CapabilityCategory *const*, const char *);
SOAP_FMAC3 enum tt__CapabilityCategory ** SOAP_FMAC4 soap_in_PointerTott__CapabilityCategory(struct soap*, const char*, enum tt__CapabilityCategory **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__CapabilityCategory(struct soap*, enum tt__CapabilityCategory *const*, const char*, const char*);
SOAP_FMAC3 enum tt__CapabilityCategory ** SOAP_FMAC4 soap_get_PointerTott__CapabilityCategory(struct soap*, enum tt__CapabilityCategory **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTotds__DeviceServiceCapabilities_DEFINED
#define SOAP_TYPE_PointerTotds__DeviceServiceCapabilities_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTotds__DeviceServiceCapabilities(struct soap*, struct tds__DeviceServiceCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTotds__DeviceServiceCapabilities(struct soap*, const char *, int, struct tds__DeviceServiceCapabilities *const*, const char *);
SOAP_FMAC3 struct tds__DeviceServiceCapabilities ** SOAP_FMAC4 soap_in_PointerTotds__DeviceServiceCapabilities(struct soap*, const char*, struct tds__DeviceServiceCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTotds__DeviceServiceCapabilities(struct soap*, struct tds__DeviceServiceCapabilities *const*, const char*, const char*);
SOAP_FMAC3 struct tds__DeviceServiceCapabilities ** SOAP_FMAC4 soap_get_PointerTotds__DeviceServiceCapabilities(struct soap*, struct tds__DeviceServiceCapabilities **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTotds__Service_DEFINED
#define SOAP_TYPE_PointerTotds__Service_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTotds__Service(struct soap*, struct tds__Service *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTotds__Service(struct soap*, const char *, int, struct tds__Service *const*, const char *);
SOAP_FMAC3 struct tds__Service ** SOAP_FMAC4 soap_in_PointerTotds__Service(struct soap*, const char*, struct tds__Service **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTotds__Service(struct soap*, struct tds__Service *const*, const char*, const char*);
SOAP_FMAC3 struct tds__Service ** SOAP_FMAC4 soap_get_PointerTotds__Service(struct soap*, struct tds__Service **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTott__OnvifVersion_DEFINED
#define SOAP_TYPE_PointerTott__OnvifVersion_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__OnvifVersion(struct soap*, struct tt__OnvifVersion *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__OnvifVersion(struct soap*, const char *, int, struct tt__OnvifVersion *const*, const char *);
SOAP_FMAC3 struct tt__OnvifVersion ** SOAP_FMAC4 soap_in_PointerTott__OnvifVersion(struct soap*, const char*, struct tt__OnvifVersion **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__OnvifVersion(struct soap*, struct tt__OnvifVersion *const*, const char*, const char*);
SOAP_FMAC3 struct tt__OnvifVersion ** SOAP_FMAC4 soap_get_PointerTott__OnvifVersion(struct soap*, struct tt__OnvifVersion **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_tds__Service_Capabilities_DEFINED
#define SOAP_TYPE_PointerTo_tds__Service_Capabilities_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__Service_Capabilities(struct soap*, struct _tds__Service_Capabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__Service_Capabilities(struct soap*, const char *, int, struct _tds__Service_Capabilities *const*, const char *);
SOAP_FMAC3 struct _tds__Service_Capabilities ** SOAP_FMAC4 soap_in_PointerTo_tds__Service_Capabilities(struct soap*, const char*, struct _tds__Service_Capabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__Service_Capabilities(struct soap*, struct _tds__Service_Capabilities *const*, const char*, const char*);
SOAP_FMAC3 struct _tds__Service_Capabilities ** SOAP_FMAC4 soap_get_PointerTo_tds__Service_Capabilities(struct soap*, struct _tds__Service_Capabilities **, const char*, const char*);
#endif
/* wstop__SimpleTopicExpression is a typedef synonym of _QName */

#ifndef SOAP_TYPE_wstop__SimpleTopicExpression_DEFINED
#define SOAP_TYPE_wstop__SimpleTopicExpression_DEFINED

#define soap_default_wstop__SimpleTopicExpression soap_default__QName


#define soap_serialize_wstop__SimpleTopicExpression soap_serialize__QName


#define soap_wstop__SimpleTopicExpression2s(soap, a) soap_QName2s(soap, (a))

#define soap_out_wstop__SimpleTopicExpression soap_out__QName


#define soap_s2wstop__SimpleTopicExpression(soap, s, a) soap_s2QName((soap), (s), (char**)(a), 0, -1, NULL)

#define soap_in_wstop__SimpleTopicExpression soap_in__QName

#define soap_new_wstop__SimpleTopicExpression soap_new__QName


#define soap_put_wstop__SimpleTopicExpression soap_put__QName


#define soap_write_wstop__SimpleTopicExpression soap_write__QName


#define soap_PUT_wstop__SimpleTopicExpression soap_PUT__QName


#define soap_PATCH_wstop__SimpleTopicExpression soap_PATCH__QName


#define soap_POST_send_wstop__SimpleTopicExpression soap_POST_send__QName


#define soap_get_wstop__SimpleTopicExpression soap_get__QName


#define soap_read_wstop__SimpleTopicExpression soap_read__QName


#define soap_GET_wstop__SimpleTopicExpression soap_GET__QName


#define soap_POST_recv_wstop__SimpleTopicExpression soap_POST_recv__QName

#endif
/* wstop__ConcreteTopicExpression is a typedef restriction of xsd__token */

#ifndef SOAP_TYPE_wstop__ConcreteTopicExpression_DEFINED
#define SOAP_TYPE_wstop__ConcreteTopicExpression_DEFINED

#define soap_default_wstop__ConcreteTopicExpression soap_default_xsd__token


#define soap_serialize_wstop__ConcreteTopicExpression soap_serialize_xsd__token


#define soap_wstop__ConcreteTopicExpression2s(soap, a) (a)
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wstop__ConcreteTopicExpression(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2wstop__ConcreteTopicExpression(soap, s, a) soap_s2char((soap), (s), (char**)(a), 5, 0, -1, "(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)(/([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)*")
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_wstop__ConcreteTopicExpression(struct soap*, const char*, char **, const char*);
#define soap_new_wstop__ConcreteTopicExpression soap_new_xsd__token

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wstop__ConcreteTopicExpression(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_wstop__ConcreteTopicExpression
#define soap_write_wstop__ConcreteTopicExpression(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_wstop__ConcreteTopicExpression(soap, data, "wstop:ConcreteTopicExpression", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wstop__ConcreteTopicExpression
#define soap_PUT_wstop__ConcreteTopicExpression(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wstop__ConcreteTopicExpression(soap, data, "wstop:ConcreteTopicExpression", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wstop__ConcreteTopicExpression
#define soap_PATCH_wstop__ConcreteTopicExpression(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wstop__ConcreteTopicExpression(soap, data, "wstop:ConcreteTopicExpression", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wstop__ConcreteTopicExpression
#define soap_POST_send_wstop__ConcreteTopicExpression(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wstop__ConcreteTopicExpression(soap, data, "wstop:ConcreteTopicExpression", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_wstop__ConcreteTopicExpression(struct soap*, char **, const char*, const char*);

#ifndef soap_read_wstop__ConcreteTopicExpression
#define soap_read_wstop__ConcreteTopicExpression(soap, data) ( soap_begin_recv(soap) || !soap_get_wstop__ConcreteTopicExpression(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wstop__ConcreteTopicExpression
#define soap_GET_wstop__ConcreteTopicExpression(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wstop__ConcreteTopicExpression(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wstop__ConcreteTopicExpression
#define soap_POST_recv_wstop__ConcreteTopicExpression(soap, data) ( soap_read_wstop__ConcreteTopicExpression(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif
/* wstop__FullTopicExpression is a typedef restriction of xsd__token */

#ifndef SOAP_TYPE_wstop__FullTopicExpression_DEFINED
#define SOAP_TYPE_wstop__FullTopicExpression_DEFINED

#define soap_default_wstop__FullTopicExpression soap_default_xsd__token


#define soap_serialize_wstop__FullTopicExpression soap_serialize_xsd__token


#define soap_wstop__FullTopicExpression2s(soap, a) (a)
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wstop__FullTopicExpression(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2wstop__FullTopicExpression(soap, s, a) soap_s2char((soap), (s), (char**)(a), 5, 0, -1, "([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*(\\|([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*)*")
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_wstop__FullTopicExpression(struct soap*, const char*, char **, const char*);
#define soap_new_wstop__FullTopicExpression soap_new_xsd__token

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wstop__FullTopicExpression(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_wstop__FullTopicExpression
#define soap_write_wstop__FullTopicExpression(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_wstop__FullTopicExpression(soap, data, "wstop:FullTopicExpression", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wstop__FullTopicExpression
#define soap_PUT_wstop__FullTopicExpression(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wstop__FullTopicExpression(soap, data, "wstop:FullTopicExpression", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wstop__FullTopicExpression
#define soap_PATCH_wstop__FullTopicExpression(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wstop__FullTopicExpression(soap, data, "wstop:FullTopicExpression", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wstop__FullTopicExpression
#define soap_POST_send_wstop__FullTopicExpression(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wstop__FullTopicExpression(soap, data, "wstop:FullTopicExpression", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_wstop__FullTopicExpression(struct soap*, char **, const char*, const char*);

#ifndef soap_read_wstop__FullTopicExpression
#define soap_read_wstop__FullTopicExpression(soap, data) ( soap_begin_recv(soap) || !soap_get_wstop__FullTopicExpression(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wstop__FullTopicExpression
#define soap_GET_wstop__FullTopicExpression(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wstop__FullTopicExpression(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wstop__FullTopicExpression
#define soap_POST_recv_wstop__FullTopicExpression(soap, data) ( soap_read_wstop__FullTopicExpression(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif
/* tt__IPv6Address is a typedef synonym of xsd__token */

#ifndef SOAP_TYPE_tt__IPv6Address_DEFINED
#define SOAP_TYPE_tt__IPv6Address_DEFINED

#define soap_default_tt__IPv6Address soap_default_xsd__token


#define soap_serialize_tt__IPv6Address soap_serialize_xsd__token


#define soap_tt__IPv6Address2s(soap, a) (a)

#define soap_out_tt__IPv6Address soap_out_xsd__token


#define soap_s2tt__IPv6Address(soap, s, a) soap_s2char((soap), (s), (char**)(a), 5, 0, -1, NULL)

#define soap_in_tt__IPv6Address soap_in_xsd__token

#define soap_new_tt__IPv6Address soap_new_xsd__token


#define soap_put_tt__IPv6Address soap_put_xsd__token


#define soap_write_tt__IPv6Address soap_write_xsd__token


#define soap_PUT_tt__IPv6Address soap_PUT_xsd__token


#define soap_PATCH_tt__IPv6Address soap_PATCH_xsd__token


#define soap_POST_send_tt__IPv6Address soap_POST_send_xsd__token


#define soap_get_tt__IPv6Address soap_get_xsd__token


#define soap_read_tt__IPv6Address soap_read_xsd__token


#define soap_GET_tt__IPv6Address soap_GET_xsd__token


#define soap_POST_recv_tt__IPv6Address soap_POST_recv_xsd__token

#endif
/* tt__IPv4Address is a typedef synonym of xsd__token */

#ifndef SOAP_TYPE_tt__IPv4Address_DEFINED
#define SOAP_TYPE_tt__IPv4Address_DEFINED

#define soap_default_tt__IPv4Address soap_default_xsd__token


#define soap_serialize_tt__IPv4Address soap_serialize_xsd__token


#define soap_tt__IPv4Address2s(soap, a) (a)

#define soap_out_tt__IPv4Address soap_out_xsd__token


#define soap_s2tt__IPv4Address(soap, s, a) soap_s2char((soap), (s), (char**)(a), 5, 0, -1, NULL)

#define soap_in_tt__IPv4Address soap_in_xsd__token

#define soap_new_tt__IPv4Address soap_new_xsd__token


#define soap_put_tt__IPv4Address soap_put_xsd__token


#define soap_write_tt__IPv4Address soap_write_xsd__token


#define soap_PUT_tt__IPv4Address soap_PUT_xsd__token


#define soap_PATCH_tt__IPv4Address soap_PATCH_xsd__token


#define soap_POST_send_tt__IPv4Address soap_POST_send_xsd__token


#define soap_get_tt__IPv4Address soap_get_xsd__token


#define soap_read_tt__IPv4Address soap_read_xsd__token


#define soap_GET_tt__IPv4Address soap_GET_xsd__token


#define soap_POST_recv_tt__IPv4Address soap_POST_recv_xsd__token

#endif
/* tt__TopicNamespaceLocation is a typedef synonym of xsd__anyURI */

#ifndef SOAP_TYPE_tt__TopicNamespaceLocation_DEFINED
#define SOAP_TYPE_tt__TopicNamespaceLocation_DEFINED

#define soap_default_tt__TopicNamespaceLocation soap_default_xsd__anyURI


#define soap_serialize_tt__TopicNamespaceLocation soap_serialize_xsd__anyURI


#define soap_tt__TopicNamespaceLocation2s(soap, a) (a)

#define soap_out_tt__TopicNamespaceLocation soap_out_xsd__anyURI


#define soap_s2tt__TopicNamespaceLocation(soap, s, a) soap_s2char((soap), (s), (char**)(a), 4, 0, -1, NULL)

#define soap_in_tt__TopicNamespaceLocation soap_in_xsd__anyURI

#define soap_new_tt__TopicNamespaceLocation soap_new_xsd__anyURI


#define soap_put_tt__TopicNamespaceLocation soap_put_xsd__anyURI


#define soap_write_tt__TopicNamespaceLocation soap_write_xsd__anyURI


#define soap_PUT_tt__TopicNamespaceLocation soap_PUT_xsd__anyURI


#define soap_PATCH_tt__TopicNamespaceLocation soap_PATCH_xsd__anyURI


#define soap_POST_send_tt__TopicNamespaceLocation soap_POST_send_xsd__anyURI


#define soap_get_tt__TopicNamespaceLocation soap_get_xsd__anyURI


#define soap_read_tt__TopicNamespaceLocation soap_read_xsd__anyURI


#define soap_GET_tt__TopicNamespaceLocation soap_GET_xsd__anyURI


#define soap_POST_recv_tt__TopicNamespaceLocation soap_POST_recv_xsd__anyURI

#endif

#ifndef SOAP_TYPE_tt__Name_DEFINED
#define SOAP_TYPE_tt__Name_DEFINED

#ifdef SOAP_DEFAULT_tt__Name
#define soap_default_tt__Name(soap, a) (*(a) = SOAP_DEFAULT_tt__Name)
#else
#define soap_default_tt__Name(soap, a) (*(a) = (char *)0)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__Name(struct soap*, char *const*);

#define soap_tt__Name2s(soap, a) (a)
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Name(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2tt__Name(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, 64, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_tt__Name(struct soap*, const char*, char **, const char*);
#define soap_new_tt__Name soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__Name(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_tt__Name
#define soap_write_tt__Name(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__Name(soap, data, "tt:Name", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__Name
#define soap_PUT_tt__Name(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_tt__Name(soap, data, "tt:Name", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__Name
#define soap_PATCH_tt__Name(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_tt__Name(soap, data, "tt:Name", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__Name
#define soap_POST_send_tt__Name(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_tt__Name(soap, data, "tt:Name", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_tt__Name(struct soap*, char **, const char*, const char*);

#ifndef soap_read_tt__Name
#define soap_read_tt__Name(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__Name(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__Name
#define soap_GET_tt__Name(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__Name(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__Name
#define soap_POST_recv_tt__Name(soap, data) ( soap_read_tt__Name(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__ReferenceToken_DEFINED
#define SOAP_TYPE_tt__ReferenceToken_DEFINED

#ifdef SOAP_DEFAULT_tt__ReferenceToken
#define soap_default_tt__ReferenceToken(soap, a) (*(a) = SOAP_DEFAULT_tt__ReferenceToken)
#else
#define soap_default_tt__ReferenceToken(soap, a) (*(a) = (char *)0)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__ReferenceToken(struct soap*, char *const*);

#define soap_tt__ReferenceToken2s(soap, a) (a)
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ReferenceToken(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2tt__ReferenceToken(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, 64, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_tt__ReferenceToken(struct soap*, const char*, char **, const char*);
#define soap_new_tt__ReferenceToken soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__ReferenceToken(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_tt__ReferenceToken
#define soap_write_tt__ReferenceToken(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__ReferenceToken(soap, data, "tt:ReferenceToken", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__ReferenceToken
#define soap_PUT_tt__ReferenceToken(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_tt__ReferenceToken(soap, data, "tt:ReferenceToken", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__ReferenceToken
#define soap_PATCH_tt__ReferenceToken(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_tt__ReferenceToken(soap, data, "tt:ReferenceToken", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__ReferenceToken
#define soap_POST_send_tt__ReferenceToken(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_tt__ReferenceToken(soap, data, "tt:ReferenceToken", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_tt__ReferenceToken(struct soap*, char **, const char*, const char*);

#ifndef soap_read_tt__ReferenceToken
#define soap_read_tt__ReferenceToken(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__ReferenceToken(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__ReferenceToken
#define soap_GET_tt__ReferenceToken(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__ReferenceToken(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__ReferenceToken
#define soap_POST_recv_tt__ReferenceToken(soap, data) ( soap_read_tt__ReferenceToken(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsnt__AbsoluteOrRelativeTimeType_DEFINED
#define SOAP_TYPE_wsnt__AbsoluteOrRelativeTimeType_DEFINED

#ifdef SOAP_DEFAULT_wsnt__AbsoluteOrRelativeTimeType
#define soap_default_wsnt__AbsoluteOrRelativeTimeType(soap, a) (*(a) = SOAP_DEFAULT_wsnt__AbsoluteOrRelativeTimeType)
#else
#define soap_default_wsnt__AbsoluteOrRelativeTimeType(soap, a) (*(a) = (char *)0)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__AbsoluteOrRelativeTimeType(struct soap*, char *const*);

#define soap_wsnt__AbsoluteOrRelativeTimeType2s(soap, a) (a)
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__AbsoluteOrRelativeTimeType(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2wsnt__AbsoluteOrRelativeTimeType(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_wsnt__AbsoluteOrRelativeTimeType(struct soap*, const char*, char **, const char*);
#define soap_new_wsnt__AbsoluteOrRelativeTimeType soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__AbsoluteOrRelativeTimeType(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_wsnt__AbsoluteOrRelativeTimeType
#define soap_write_wsnt__AbsoluteOrRelativeTimeType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_wsnt__AbsoluteOrRelativeTimeType(soap, data, "wsnt:AbsoluteOrRelativeTimeType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsnt__AbsoluteOrRelativeTimeType
#define soap_PUT_wsnt__AbsoluteOrRelativeTimeType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsnt__AbsoluteOrRelativeTimeType(soap, data, "wsnt:AbsoluteOrRelativeTimeType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsnt__AbsoluteOrRelativeTimeType
#define soap_PATCH_wsnt__AbsoluteOrRelativeTimeType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsnt__AbsoluteOrRelativeTimeType(soap, data, "wsnt:AbsoluteOrRelativeTimeType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsnt__AbsoluteOrRelativeTimeType
#define soap_POST_send_wsnt__AbsoluteOrRelativeTimeType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsnt__AbsoluteOrRelativeTimeType(soap, data, "wsnt:AbsoluteOrRelativeTimeType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_wsnt__AbsoluteOrRelativeTimeType(struct soap*, char **, const char*, const char*);

#ifndef soap_read_wsnt__AbsoluteOrRelativeTimeType
#define soap_read_wsnt__AbsoluteOrRelativeTimeType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsnt__AbsoluteOrRelativeTimeType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsnt__AbsoluteOrRelativeTimeType
#define soap_GET_wsnt__AbsoluteOrRelativeTimeType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsnt__AbsoluteOrRelativeTimeType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsnt__AbsoluteOrRelativeTimeType
#define soap_POST_recv_wsnt__AbsoluteOrRelativeTimeType(soap, data) ( soap_read_wsnt__AbsoluteOrRelativeTimeType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__StringAttrList_DEFINED
#define SOAP_TYPE_tt__StringAttrList_DEFINED

#ifdef SOAP_DEFAULT_tt__StringAttrList
#define soap_default_tt__StringAttrList(soap, a) (*(a) = SOAP_DEFAULT_tt__StringAttrList)
#else
#define soap_default_tt__StringAttrList(soap, a) (*(a) = (char *)0)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__StringAttrList(struct soap*, char *const*);

#define soap_tt__StringAttrList2s(soap, a) (a)
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__StringAttrList(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2tt__StringAttrList(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_tt__StringAttrList(struct soap*, const char*, char **, const char*);
#define soap_new_tt__StringAttrList soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__StringAttrList(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_tt__StringAttrList
#define soap_write_tt__StringAttrList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__StringAttrList(soap, data, "tt:StringAttrList", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__StringAttrList
#define soap_PUT_tt__StringAttrList(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_tt__StringAttrList(soap, data, "tt:StringAttrList", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__StringAttrList
#define soap_PATCH_tt__StringAttrList(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_tt__StringAttrList(soap, data, "tt:StringAttrList", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__StringAttrList
#define soap_POST_send_tt__StringAttrList(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_tt__StringAttrList(soap, data, "tt:StringAttrList", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_tt__StringAttrList(struct soap*, char **, const char*, const char*);

#ifndef soap_read_tt__StringAttrList
#define soap_read_tt__StringAttrList(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__StringAttrList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__StringAttrList
#define soap_GET_tt__StringAttrList(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__StringAttrList(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__StringAttrList
#define soap_POST_recv_tt__StringAttrList(soap, data) ( soap_read_tt__StringAttrList(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__FloatAttrList_DEFINED
#define SOAP_TYPE_tt__FloatAttrList_DEFINED

#ifdef SOAP_DEFAULT_tt__FloatAttrList
#define soap_default_tt__FloatAttrList(soap, a) (*(a) = SOAP_DEFAULT_tt__FloatAttrList)
#else
#define soap_default_tt__FloatAttrList(soap, a) (*(a) = (char *)0)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__FloatAttrList(struct soap*, char *const*);

#define soap_tt__FloatAttrList2s(soap, a) (a)
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__FloatAttrList(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2tt__FloatAttrList(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_tt__FloatAttrList(struct soap*, const char*, char **, const char*);
#define soap_new_tt__FloatAttrList soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__FloatAttrList(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_tt__FloatAttrList
#define soap_write_tt__FloatAttrList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__FloatAttrList(soap, data, "tt:FloatAttrList", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__FloatAttrList
#define soap_PUT_tt__FloatAttrList(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_tt__FloatAttrList(soap, data, "tt:FloatAttrList", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__FloatAttrList
#define soap_PATCH_tt__FloatAttrList(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_tt__FloatAttrList(soap, data, "tt:FloatAttrList", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__FloatAttrList
#define soap_POST_send_tt__FloatAttrList(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_tt__FloatAttrList(soap, data, "tt:FloatAttrList", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_tt__FloatAttrList(struct soap*, char **, const char*, const char*);

#ifndef soap_read_tt__FloatAttrList
#define soap_read_tt__FloatAttrList(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__FloatAttrList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__FloatAttrList
#define soap_GET_tt__FloatAttrList(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__FloatAttrList(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__FloatAttrList
#define soap_POST_recv_tt__FloatAttrList(soap, data) ( soap_read_tt__FloatAttrList(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tt__IntAttrList_DEFINED
#define SOAP_TYPE_tt__IntAttrList_DEFINED

#ifdef SOAP_DEFAULT_tt__IntAttrList
#define soap_default_tt__IntAttrList(soap, a) (*(a) = SOAP_DEFAULT_tt__IntAttrList)
#else
#define soap_default_tt__IntAttrList(soap, a) (*(a) = (char *)0)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__IntAttrList(struct soap*, char *const*);

#define soap_tt__IntAttrList2s(soap, a) (a)
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IntAttrList(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2tt__IntAttrList(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_tt__IntAttrList(struct soap*, const char*, char **, const char*);
#define soap_new_tt__IntAttrList soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__IntAttrList(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_tt__IntAttrList
#define soap_write_tt__IntAttrList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__IntAttrList(soap, data, "tt:IntAttrList", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tt__IntAttrList
#define soap_PUT_tt__IntAttrList(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_tt__IntAttrList(soap, data, "tt:IntAttrList", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tt__IntAttrList
#define soap_PATCH_tt__IntAttrList(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_tt__IntAttrList(soap, data, "tt:IntAttrList", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tt__IntAttrList
#define soap_POST_send_tt__IntAttrList(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_tt__IntAttrList(soap, data, "tt:IntAttrList", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_tt__IntAttrList(struct soap*, char **, const char*, const char*);

#ifndef soap_read_tt__IntAttrList
#define soap_read_tt__IntAttrList(soap, data) ( soap_begin_recv(soap) || !soap_get_tt__IntAttrList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tt__IntAttrList
#define soap_GET_tt__IntAttrList(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tt__IntAttrList(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tt__IntAttrList
#define soap_POST_recv_tt__IntAttrList(soap, data) ( soap_read_tt__IntAttrList(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_tds__EAPMethodTypes_DEFINED
#define SOAP_TYPE_tds__EAPMethodTypes_DEFINED

#ifdef SOAP_DEFAULT_tds__EAPMethodTypes
#define soap_default_tds__EAPMethodTypes(soap, a) (*(a) = SOAP_DEFAULT_tds__EAPMethodTypes)
#else
#define soap_default_tds__EAPMethodTypes(soap, a) (*(a) = (char *)0)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tds__EAPMethodTypes(struct soap*, char *const*);

#define soap_tds__EAPMethodTypes2s(soap, a) (a)
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tds__EAPMethodTypes(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2tds__EAPMethodTypes(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_tds__EAPMethodTypes(struct soap*, const char*, char **, const char*);
#define soap_new_tds__EAPMethodTypes soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tds__EAPMethodTypes(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_tds__EAPMethodTypes
#define soap_write_tds__EAPMethodTypes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tds__EAPMethodTypes(soap, data, "tds:EAPMethodTypes", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_tds__EAPMethodTypes
#define soap_PUT_tds__EAPMethodTypes(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_tds__EAPMethodTypes(soap, data, "tds:EAPMethodTypes", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_tds__EAPMethodTypes
#define soap_PATCH_tds__EAPMethodTypes(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_tds__EAPMethodTypes(soap, data, "tds:EAPMethodTypes", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_tds__EAPMethodTypes
#define soap_POST_send_tds__EAPMethodTypes(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_tds__EAPMethodTypes(soap, data, "tds:EAPMethodTypes", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_tds__EAPMethodTypes(struct soap*, char **, const char*, const char*);

#ifndef soap_read_tds__EAPMethodTypes
#define soap_read_tds__EAPMethodTypes(soap, data) ( soap_begin_recv(soap) || !soap_get_tds__EAPMethodTypes(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_tds__EAPMethodTypes
#define soap_GET_tds__EAPMethodTypes(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_tds__EAPMethodTypes(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_tds__EAPMethodTypes
#define soap_POST_recv_tds__EAPMethodTypes(soap, data) ( soap_read_tds__EAPMethodTypes(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif
/* _xml__lang is a typedef synonym of string */

#ifndef SOAP_TYPE__xml__lang_DEFINED
#define SOAP_TYPE__xml__lang_DEFINED

#define soap_default__xml__lang soap_default_string


#define soap_serialize__xml__lang soap_serialize_string


#define soap__xml__lang2s(soap, a) (a)

#define soap_out__xml__lang soap_out_string


#define soap_s2_xml__lang(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)

#define soap_in__xml__lang soap_in_string

#define soap_new__xml__lang soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put__xml__lang(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__xml__lang
#define soap_write__xml__lang(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__xml__lang(soap, data, "xml:lang", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__xml__lang
#define soap_PUT__xml__lang(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__xml__lang(soap, data, "xml:lang", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__xml__lang
#define soap_PATCH__xml__lang(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__xml__lang(soap, data, "xml:lang", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__xml__lang
#define soap_POST_send__xml__lang(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__xml__lang(soap, data, "xml:lang", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__xml__lang soap_get_string


#define soap_read__xml__lang soap_read_string


#define soap_GET__xml__lang soap_GET_string


#define soap_POST_recv__xml__lang soap_POST_recv_string

#endif

#ifndef SOAP_TYPE_xsd__token_DEFINED
#define SOAP_TYPE_xsd__token_DEFINED

#ifdef SOAP_DEFAULT_xsd__token
#define soap_default_xsd__token(soap, a) (*(a) = SOAP_DEFAULT_xsd__token)
#else
#define soap_default_xsd__token(soap, a) (*(a) = (char *)0)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__token(struct soap*, char *const*);

#define soap_xsd__token2s(soap, a) (a)
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__token(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2xsd__token(soap, s, a) soap_s2char((soap), (s), (char**)(a), 5, 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xsd__token(struct soap*, const char*, char **, const char*);
#define soap_new_xsd__token soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__token(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_xsd__token
#define soap_write_xsd__token(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_xsd__token(soap, data, "xsd:token", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_xsd__token
#define soap_PUT_xsd__token(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_xsd__token(soap, data, "xsd:token", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_xsd__token
#define soap_PATCH_xsd__token(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_xsd__token(soap, data, "xsd:token", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_xsd__token
#define soap_POST_send_xsd__token(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_xsd__token(soap, data, "xsd:token", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xsd__token(struct soap*, char **, const char*, const char*);

#ifndef soap_read_xsd__token
#define soap_read_xsd__token(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__token(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_xsd__token
#define soap_GET_xsd__token(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_xsd__token(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_xsd__token
#define soap_POST_recv_xsd__token(soap, data) ( soap_read_xsd__token(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_xsd__nonNegativeInteger_DEFINED
#define SOAP_TYPE_xsd__nonNegativeInteger_DEFINED

#ifdef SOAP_DEFAULT_xsd__nonNegativeInteger
#define soap_default_xsd__nonNegativeInteger(soap, a) (*(a) = SOAP_DEFAULT_xsd__nonNegativeInteger)
#else
#define soap_default_xsd__nonNegativeInteger(soap, a) (*(a) = (char *)0)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__nonNegativeInteger(struct soap*, char *const*);

#define soap_xsd__nonNegativeInteger2s(soap, a) (a)
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__nonNegativeInteger(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2xsd__nonNegativeInteger(soap, s, a) soap_s2char((soap), (s), (char**)(a), 5, 0, -1, "\\+?\\d+")
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xsd__nonNegativeInteger(struct soap*, const char*, char **, const char*);
#define soap_new_xsd__nonNegativeInteger soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__nonNegativeInteger(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_xsd__nonNegativeInteger
#define soap_write_xsd__nonNegativeInteger(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_xsd__nonNegativeInteger(soap, data, "xsd:nonNegativeInteger", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_xsd__nonNegativeInteger
#define soap_PUT_xsd__nonNegativeInteger(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_xsd__nonNegativeInteger(soap, data, "xsd:nonNegativeInteger", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_xsd__nonNegativeInteger
#define soap_PATCH_xsd__nonNegativeInteger(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_xsd__nonNegativeInteger(soap, data, "xsd:nonNegativeInteger", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_xsd__nonNegativeInteger
#define soap_POST_send_xsd__nonNegativeInteger(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_xsd__nonNegativeInteger(soap, data, "xsd:nonNegativeInteger", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xsd__nonNegativeInteger(struct soap*, char **, const char*, const char*);

#ifndef soap_read_xsd__nonNegativeInteger
#define soap_read_xsd__nonNegativeInteger(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__nonNegativeInteger(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_xsd__nonNegativeInteger
#define soap_GET_xsd__nonNegativeInteger(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_xsd__nonNegativeInteger(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_xsd__nonNegativeInteger
#define soap_POST_recv_xsd__nonNegativeInteger(soap, data) ( soap_read_xsd__nonNegativeInteger(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_xsd__anyURI_DEFINED
#define SOAP_TYPE_xsd__anyURI_DEFINED

#ifdef SOAP_DEFAULT_xsd__anyURI
#define soap_default_xsd__anyURI(soap, a) (*(a) = SOAP_DEFAULT_xsd__anyURI)
#else
#define soap_default_xsd__anyURI(soap, a) (*(a) = (char *)0)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__anyURI(struct soap*, char *const*);

#define soap_xsd__anyURI2s(soap, a) (a)
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__anyURI(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2xsd__anyURI(soap, s, a) soap_s2char((soap), (s), (char**)(a), 4, 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xsd__anyURI(struct soap*, const char*, char **, const char*);
#define soap_new_xsd__anyURI soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__anyURI(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_xsd__anyURI
#define soap_write_xsd__anyURI(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_xsd__anyURI(soap, data, "xsd:anyURI", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_xsd__anyURI
#define soap_PUT_xsd__anyURI(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_xsd__anyURI(soap, data, "xsd:anyURI", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_xsd__anyURI
#define soap_PATCH_xsd__anyURI(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_xsd__anyURI(soap, data, "xsd:anyURI", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_xsd__anyURI
#define soap_POST_send_xsd__anyURI(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_xsd__anyURI(soap, data, "xsd:anyURI", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xsd__anyURI(struct soap*, char **, const char*, const char*);

#ifndef soap_read_xsd__anyURI
#define soap_read_xsd__anyURI(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__anyURI(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_xsd__anyURI
#define soap_GET_xsd__anyURI(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_xsd__anyURI(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_xsd__anyURI
#define soap_POST_recv_xsd__anyURI(soap, data) ( soap_read_xsd__anyURI(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_xsd__anySimpleType_DEFINED
#define SOAP_TYPE_xsd__anySimpleType_DEFINED

#ifdef SOAP_DEFAULT_xsd__anySimpleType
#define soap_default_xsd__anySimpleType(soap, a) (*(a) = SOAP_DEFAULT_xsd__anySimpleType)
#else
#define soap_default_xsd__anySimpleType(soap, a) (*(a) = (char *)0)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__anySimpleType(struct soap*, char *const*);

#define soap_xsd__anySimpleType2s(soap, a) (a)
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__anySimpleType(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2xsd__anySimpleType(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xsd__anySimpleType(struct soap*, const char*, char **, const char*);
#define soap_new_xsd__anySimpleType soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__anySimpleType(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_xsd__anySimpleType
#define soap_write_xsd__anySimpleType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_xsd__anySimpleType(soap, data, "xsd:anySimpleType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_xsd__anySimpleType
#define soap_PUT_xsd__anySimpleType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_xsd__anySimpleType(soap, data, "xsd:anySimpleType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_xsd__anySimpleType
#define soap_PATCH_xsd__anySimpleType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_xsd__anySimpleType(soap, data, "xsd:anySimpleType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_xsd__anySimpleType
#define soap_POST_send_xsd__anySimpleType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_xsd__anySimpleType(soap, data, "xsd:anySimpleType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xsd__anySimpleType(struct soap*, char **, const char*, const char*);

#ifndef soap_read_xsd__anySimpleType
#define soap_read_xsd__anySimpleType(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__anySimpleType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_xsd__anySimpleType
#define soap_GET_xsd__anySimpleType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_xsd__anySimpleType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_xsd__anySimpleType
#define soap_POST_recv_xsd__anySimpleType(soap, data) ( soap_read_xsd__anySimpleType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_xsd__NCName_DEFINED
#define SOAP_TYPE_xsd__NCName_DEFINED

#ifdef SOAP_DEFAULT_xsd__NCName
#define soap_default_xsd__NCName(soap, a) (*(a) = SOAP_DEFAULT_xsd__NCName)
#else
#define soap_default_xsd__NCName(soap, a) (*(a) = (char *)0)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__NCName(struct soap*, char *const*);

#define soap_xsd__NCName2s(soap, a) (a)
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__NCName(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2xsd__NCName(soap, s, a) soap_s2char((soap), (s), (char**)(a), 5, 0, -1, "[\\i-[:]][\\c-[:]]*")
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xsd__NCName(struct soap*, const char*, char **, const char*);
#define soap_new_xsd__NCName soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__NCName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_xsd__NCName
#define soap_write_xsd__NCName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_xsd__NCName(soap, data, "xsd:NCName", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_xsd__NCName
#define soap_PUT_xsd__NCName(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_xsd__NCName(soap, data, "xsd:NCName", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_xsd__NCName
#define soap_PATCH_xsd__NCName(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_xsd__NCName(soap, data, "xsd:NCName", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_xsd__NCName
#define soap_POST_send_xsd__NCName(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_xsd__NCName(soap, data, "xsd:NCName", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xsd__NCName(struct soap*, char **, const char*, const char*);

#ifndef soap_read_xsd__NCName
#define soap_read_xsd__NCName(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__NCName(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_xsd__NCName
#define soap_GET_xsd__NCName(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_xsd__NCName(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_xsd__NCName
#define soap_POST_recv_xsd__NCName(soap, data) ( soap_read_xsd__NCName(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_PointerTo_wsse__Security_DEFINED
#define SOAP_TYPE_PointerTo_wsse__Security_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsse__Security(struct soap*, struct _wsse__Security *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsse__Security(struct soap*, const char *, int, struct _wsse__Security *const*, const char *);
SOAP_FMAC3 struct _wsse__Security ** SOAP_FMAC4 soap_in_PointerTo_wsse__Security(struct soap*, const char*, struct _wsse__Security **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsse__Security(struct soap*, struct _wsse__Security *const*, const char*, const char*);
SOAP_FMAC3 struct _wsse__Security ** SOAP_FMAC4 soap_get_PointerTo_wsse__Security(struct soap*, struct _wsse__Security **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTods__SignatureType_DEFINED
#define SOAP_TYPE_PointerTods__SignatureType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTods__SignatureType(struct soap*, struct ds__SignatureType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTods__SignatureType(struct soap*, const char *, int, struct ds__SignatureType *const*, const char *);
SOAP_FMAC3 struct ds__SignatureType ** SOAP_FMAC4 soap_in_PointerTods__SignatureType(struct soap*, const char*, struct ds__SignatureType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTods__SignatureType(struct soap*, struct ds__SignatureType *const*, const char*, const char*);
SOAP_FMAC3 struct ds__SignatureType ** SOAP_FMAC4 soap_get_PointerTods__SignatureType(struct soap*, struct ds__SignatureType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsc__SecurityContextTokenType_DEFINED
#define SOAP_TYPE_PointerTowsc__SecurityContextTokenType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsc__SecurityContextTokenType(struct soap*, struct wsc__SecurityContextTokenType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsc__SecurityContextTokenType(struct soap*, const char *, int, struct wsc__SecurityContextTokenType *const*, const char *);
SOAP_FMAC3 struct wsc__SecurityContextTokenType ** SOAP_FMAC4 soap_in_PointerTowsc__SecurityContextTokenType(struct soap*, const char*, struct wsc__SecurityContextTokenType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsc__SecurityContextTokenType(struct soap*, struct wsc__SecurityContextTokenType *const*, const char*, const char*);
SOAP_FMAC3 struct wsc__SecurityContextTokenType ** SOAP_FMAC4 soap_get_PointerTowsc__SecurityContextTokenType(struct soap*, struct wsc__SecurityContextTokenType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsse__BinarySecurityToken_DEFINED
#define SOAP_TYPE_PointerTo_wsse__BinarySecurityToken_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsse__BinarySecurityToken(struct soap*, struct _wsse__BinarySecurityToken *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsse__BinarySecurityToken(struct soap*, const char *, int, struct _wsse__BinarySecurityToken *const*, const char *);
SOAP_FMAC3 struct _wsse__BinarySecurityToken ** SOAP_FMAC4 soap_in_PointerTo_wsse__BinarySecurityToken(struct soap*, const char*, struct _wsse__BinarySecurityToken **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsse__BinarySecurityToken(struct soap*, struct _wsse__BinarySecurityToken *const*, const char*, const char*);
SOAP_FMAC3 struct _wsse__BinarySecurityToken ** SOAP_FMAC4 soap_get_PointerTo_wsse__BinarySecurityToken(struct soap*, struct _wsse__BinarySecurityToken **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsse__UsernameToken_DEFINED
#define SOAP_TYPE_PointerTo_wsse__UsernameToken_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsse__UsernameToken(struct soap*, struct _wsse__UsernameToken *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsse__UsernameToken(struct soap*, const char *, int, struct _wsse__UsernameToken *const*, const char *);
SOAP_FMAC3 struct _wsse__UsernameToken ** SOAP_FMAC4 soap_in_PointerTo_wsse__UsernameToken(struct soap*, const char*, struct _wsse__UsernameToken **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsse__UsernameToken(struct soap*, struct _wsse__UsernameToken *const*, const char*, const char*);
SOAP_FMAC3 struct _wsse__UsernameToken ** SOAP_FMAC4 soap_get_PointerTo_wsse__UsernameToken(struct soap*, struct _wsse__UsernameToken **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsu__Timestamp_DEFINED
#define SOAP_TYPE_PointerTo_wsu__Timestamp_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsu__Timestamp(struct soap*, struct _wsu__Timestamp *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsu__Timestamp(struct soap*, const char *, int, struct _wsu__Timestamp *const*, const char *);
SOAP_FMAC3 struct _wsu__Timestamp ** SOAP_FMAC4 soap_in_PointerTo_wsu__Timestamp(struct soap*, const char*, struct _wsu__Timestamp **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsu__Timestamp(struct soap*, struct _wsu__Timestamp *const*, const char*, const char*);
SOAP_FMAC3 struct _wsu__Timestamp ** SOAP_FMAC4 soap_get_PointerTo_wsu__Timestamp(struct soap*, struct _wsu__Timestamp **, const char*, const char*);
#endif
/* _saml2__AttributeValue is a typedef synonym of _XML */

#ifndef SOAP_TYPE__saml2__AttributeValue_DEFINED
#define SOAP_TYPE__saml2__AttributeValue_DEFINED
#endif
/* _saml2__AuthenticatingAuthority is a typedef synonym of string */

#ifndef SOAP_TYPE__saml2__AuthenticatingAuthority_DEFINED
#define SOAP_TYPE__saml2__AuthenticatingAuthority_DEFINED

#define soap_default__saml2__AuthenticatingAuthority soap_default_string


#define soap_serialize__saml2__AuthenticatingAuthority soap_serialize_string


#define soap__saml2__AuthenticatingAuthority2s(soap, a) (a)

#define soap_out__saml2__AuthenticatingAuthority soap_out_string


#define soap_s2_saml2__AuthenticatingAuthority(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)

#define soap_in__saml2__AuthenticatingAuthority soap_in_string

#define soap_new__saml2__AuthenticatingAuthority soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__AuthenticatingAuthority(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__saml2__AuthenticatingAuthority
#define soap_write__saml2__AuthenticatingAuthority(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__saml2__AuthenticatingAuthority(soap, data, "saml2:AuthenticatingAuthority", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__AuthenticatingAuthority
#define soap_PUT__saml2__AuthenticatingAuthority(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml2__AuthenticatingAuthority(soap, data, "saml2:AuthenticatingAuthority", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__AuthenticatingAuthority
#define soap_PATCH__saml2__AuthenticatingAuthority(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml2__AuthenticatingAuthority(soap, data, "saml2:AuthenticatingAuthority", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__AuthenticatingAuthority
#define soap_POST_send__saml2__AuthenticatingAuthority(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml2__AuthenticatingAuthority(soap, data, "saml2:AuthenticatingAuthority", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__AuthenticatingAuthority soap_get_string


#define soap_read__saml2__AuthenticatingAuthority soap_read_string


#define soap_GET__saml2__AuthenticatingAuthority soap_GET_string


#define soap_POST_recv__saml2__AuthenticatingAuthority soap_POST_recv_string

#endif
/* _saml2__AuthnContextDecl is a typedef synonym of _XML */

#ifndef SOAP_TYPE__saml2__AuthnContextDecl_DEFINED
#define SOAP_TYPE__saml2__AuthnContextDecl_DEFINED
#endif
/* _saml2__AuthnContextDeclRef is a typedef synonym of string */

#ifndef SOAP_TYPE__saml2__AuthnContextDeclRef_DEFINED
#define SOAP_TYPE__saml2__AuthnContextDeclRef_DEFINED

#define soap_default__saml2__AuthnContextDeclRef soap_default_string


#define soap_serialize__saml2__AuthnContextDeclRef soap_serialize_string


#define soap__saml2__AuthnContextDeclRef2s(soap, a) (a)

#define soap_out__saml2__AuthnContextDeclRef soap_out_string


#define soap_s2_saml2__AuthnContextDeclRef(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)

#define soap_in__saml2__AuthnContextDeclRef soap_in_string

#define soap_new__saml2__AuthnContextDeclRef soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__AuthnContextDeclRef(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__saml2__AuthnContextDeclRef
#define soap_write__saml2__AuthnContextDeclRef(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__saml2__AuthnContextDeclRef(soap, data, "saml2:AuthnContextDeclRef", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__AuthnContextDeclRef
#define soap_PUT__saml2__AuthnContextDeclRef(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml2__AuthnContextDeclRef(soap, data, "saml2:AuthnContextDeclRef", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__AuthnContextDeclRef
#define soap_PATCH__saml2__AuthnContextDeclRef(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml2__AuthnContextDeclRef(soap, data, "saml2:AuthnContextDeclRef", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__AuthnContextDeclRef
#define soap_POST_send__saml2__AuthnContextDeclRef(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml2__AuthnContextDeclRef(soap, data, "saml2:AuthnContextDeclRef", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__AuthnContextDeclRef soap_get_string


#define soap_read__saml2__AuthnContextDeclRef soap_read_string


#define soap_GET__saml2__AuthnContextDeclRef soap_GET_string


#define soap_POST_recv__saml2__AuthnContextDeclRef soap_POST_recv_string

#endif
/* _saml2__AuthnContextClassRef is a typedef synonym of string */

#ifndef SOAP_TYPE__saml2__AuthnContextClassRef_DEFINED
#define SOAP_TYPE__saml2__AuthnContextClassRef_DEFINED

#define soap_default__saml2__AuthnContextClassRef soap_default_string


#define soap_serialize__saml2__AuthnContextClassRef soap_serialize_string


#define soap__saml2__AuthnContextClassRef2s(soap, a) (a)

#define soap_out__saml2__AuthnContextClassRef soap_out_string


#define soap_s2_saml2__AuthnContextClassRef(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)

#define soap_in__saml2__AuthnContextClassRef soap_in_string

#define soap_new__saml2__AuthnContextClassRef soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__AuthnContextClassRef(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__saml2__AuthnContextClassRef
#define soap_write__saml2__AuthnContextClassRef(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__saml2__AuthnContextClassRef(soap, data, "saml2:AuthnContextClassRef", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__AuthnContextClassRef
#define soap_PUT__saml2__AuthnContextClassRef(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml2__AuthnContextClassRef(soap, data, "saml2:AuthnContextClassRef", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__AuthnContextClassRef
#define soap_PATCH__saml2__AuthnContextClassRef(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml2__AuthnContextClassRef(soap, data, "saml2:AuthnContextClassRef", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__AuthnContextClassRef
#define soap_POST_send__saml2__AuthnContextClassRef(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml2__AuthnContextClassRef(soap, data, "saml2:AuthnContextClassRef", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__AuthnContextClassRef soap_get_string


#define soap_read__saml2__AuthnContextClassRef soap_read_string


#define soap_GET__saml2__AuthnContextClassRef soap_GET_string


#define soap_POST_recv__saml2__AuthnContextClassRef soap_POST_recv_string

#endif
/* _saml2__Audience is a typedef synonym of string */

#ifndef SOAP_TYPE__saml2__Audience_DEFINED
#define SOAP_TYPE__saml2__Audience_DEFINED

#define soap_default__saml2__Audience soap_default_string


#define soap_serialize__saml2__Audience soap_serialize_string


#define soap__saml2__Audience2s(soap, a) (a)

#define soap_out__saml2__Audience soap_out_string


#define soap_s2_saml2__Audience(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)

#define soap_in__saml2__Audience soap_in_string

#define soap_new__saml2__Audience soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__Audience(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__saml2__Audience
#define soap_write__saml2__Audience(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__saml2__Audience(soap, data, "saml2:Audience", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__Audience
#define soap_PUT__saml2__Audience(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml2__Audience(soap, data, "saml2:Audience", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__Audience
#define soap_PATCH__saml2__Audience(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml2__Audience(soap, data, "saml2:Audience", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__Audience
#define soap_POST_send__saml2__Audience(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml2__Audience(soap, data, "saml2:Audience", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__Audience soap_get_string


#define soap_read__saml2__Audience soap_read_string


#define soap_GET__saml2__Audience soap_GET_string


#define soap_POST_recv__saml2__Audience soap_POST_recv_string

#endif
/* _saml2__AssertionURIRef is a typedef synonym of string */

#ifndef SOAP_TYPE__saml2__AssertionURIRef_DEFINED
#define SOAP_TYPE__saml2__AssertionURIRef_DEFINED

#define soap_default__saml2__AssertionURIRef soap_default_string


#define soap_serialize__saml2__AssertionURIRef soap_serialize_string


#define soap__saml2__AssertionURIRef2s(soap, a) (a)

#define soap_out__saml2__AssertionURIRef soap_out_string


#define soap_s2_saml2__AssertionURIRef(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)

#define soap_in__saml2__AssertionURIRef soap_in_string

#define soap_new__saml2__AssertionURIRef soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__AssertionURIRef(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__saml2__AssertionURIRef
#define soap_write__saml2__AssertionURIRef(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__saml2__AssertionURIRef(soap, data, "saml2:AssertionURIRef", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__AssertionURIRef
#define soap_PUT__saml2__AssertionURIRef(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml2__AssertionURIRef(soap, data, "saml2:AssertionURIRef", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__AssertionURIRef
#define soap_PATCH__saml2__AssertionURIRef(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml2__AssertionURIRef(soap, data, "saml2:AssertionURIRef", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__AssertionURIRef
#define soap_POST_send__saml2__AssertionURIRef(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml2__AssertionURIRef(soap, data, "saml2:AssertionURIRef", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__AssertionURIRef soap_get_string


#define soap_read__saml2__AssertionURIRef soap_read_string


#define soap_GET__saml2__AssertionURIRef soap_GET_string


#define soap_POST_recv__saml2__AssertionURIRef soap_POST_recv_string

#endif
/* _saml2__AssertionIDRef is a typedef synonym of string */

#ifndef SOAP_TYPE__saml2__AssertionIDRef_DEFINED
#define SOAP_TYPE__saml2__AssertionIDRef_DEFINED

#define soap_default__saml2__AssertionIDRef soap_default_string


#define soap_serialize__saml2__AssertionIDRef soap_serialize_string


#define soap__saml2__AssertionIDRef2s(soap, a) (a)

#define soap_out__saml2__AssertionIDRef soap_out_string


#define soap_s2_saml2__AssertionIDRef(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)

#define soap_in__saml2__AssertionIDRef soap_in_string

#define soap_new__saml2__AssertionIDRef soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml2__AssertionIDRef(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__saml2__AssertionIDRef
#define soap_write__saml2__AssertionIDRef(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__saml2__AssertionIDRef(soap, data, "saml2:AssertionIDRef", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml2__AssertionIDRef
#define soap_PUT__saml2__AssertionIDRef(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml2__AssertionIDRef(soap, data, "saml2:AssertionIDRef", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml2__AssertionIDRef
#define soap_PATCH__saml2__AssertionIDRef(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml2__AssertionIDRef(soap, data, "saml2:AssertionIDRef", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml2__AssertionIDRef
#define soap_POST_send__saml2__AssertionIDRef(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml2__AssertionIDRef(soap, data, "saml2:AssertionIDRef", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml2__AssertionIDRef soap_get_string


#define soap_read__saml2__AssertionIDRef soap_read_string


#define soap_GET__saml2__AssertionIDRef soap_GET_string


#define soap_POST_recv__saml2__AssertionIDRef soap_POST_recv_string

#endif

#ifndef SOAP_TYPE_PointerToPointerTo_ds__KeyInfo_DEFINED
#define SOAP_TYPE_PointerToPointerTo_ds__KeyInfo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToPointerTo_ds__KeyInfo(struct soap*, struct ds__KeyInfoType **const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToPointerTo_ds__KeyInfo(struct soap*, const char *, int, struct ds__KeyInfoType **const*, const char *);
SOAP_FMAC3 struct ds__KeyInfoType *** SOAP_FMAC4 soap_in_PointerToPointerTo_ds__KeyInfo(struct soap*, const char*, struct ds__KeyInfoType ***, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToPointerTo_ds__KeyInfo(struct soap*, struct ds__KeyInfoType **const*, const char*, const char*);
SOAP_FMAC3 struct ds__KeyInfoType *** SOAP_FMAC4 soap_get_PointerToPointerTo_ds__KeyInfo(struct soap*, struct ds__KeyInfoType ***, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo__saml2__union_AttributeStatementType_DEFINED
#define SOAP_TYPE_PointerTo__saml2__union_AttributeStatementType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__saml2__union_AttributeStatementType(struct soap*, struct __saml2__union_AttributeStatementType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__saml2__union_AttributeStatementType(struct soap*, const char *, int, struct __saml2__union_AttributeStatementType *const*, const char *);
SOAP_FMAC3 struct __saml2__union_AttributeStatementType ** SOAP_FMAC4 soap_in_PointerTo__saml2__union_AttributeStatementType(struct soap*, const char*, struct __saml2__union_AttributeStatementType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__saml2__union_AttributeStatementType(struct soap*, struct __saml2__union_AttributeStatementType *const*, const char*, const char*);
SOAP_FMAC3 struct __saml2__union_AttributeStatementType ** SOAP_FMAC4 soap_get_PointerTo__saml2__union_AttributeStatementType(struct soap*, struct __saml2__union_AttributeStatementType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml2__AttributeType_DEFINED
#define SOAP_TYPE_PointerTosaml2__AttributeType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml2__AttributeType(struct soap*, struct saml2__AttributeType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml2__AttributeType(struct soap*, const char *, int, struct saml2__AttributeType *const*, const char *);
SOAP_FMAC3 struct saml2__AttributeType ** SOAP_FMAC4 soap_in_PointerTosaml2__AttributeType(struct soap*, const char*, struct saml2__AttributeType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml2__AttributeType(struct soap*, struct saml2__AttributeType *const*, const char*, const char*);
SOAP_FMAC3 struct saml2__AttributeType ** SOAP_FMAC4 soap_get_PointerTosaml2__AttributeType(struct soap*, struct saml2__AttributeType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml2__EvidenceType_DEFINED
#define SOAP_TYPE_PointerTosaml2__EvidenceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml2__EvidenceType(struct soap*, struct saml2__EvidenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml2__EvidenceType(struct soap*, const char *, int, struct saml2__EvidenceType *const*, const char *);
SOAP_FMAC3 struct saml2__EvidenceType ** SOAP_FMAC4 soap_in_PointerTosaml2__EvidenceType(struct soap*, const char*, struct saml2__EvidenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml2__EvidenceType(struct soap*, struct saml2__EvidenceType *const*, const char*, const char*);
SOAP_FMAC3 struct saml2__EvidenceType ** SOAP_FMAC4 soap_get_PointerTosaml2__EvidenceType(struct soap*, struct saml2__EvidenceType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml2__ActionType_DEFINED
#define SOAP_TYPE_PointerTosaml2__ActionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml2__ActionType(struct soap*, struct saml2__ActionType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml2__ActionType(struct soap*, const char *, int, struct saml2__ActionType *const*, const char *);
SOAP_FMAC3 struct saml2__ActionType ** SOAP_FMAC4 soap_in_PointerTosaml2__ActionType(struct soap*, const char*, struct saml2__ActionType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml2__ActionType(struct soap*, struct saml2__ActionType *const*, const char*, const char*);
SOAP_FMAC3 struct saml2__ActionType ** SOAP_FMAC4 soap_get_PointerTosaml2__ActionType(struct soap*, struct saml2__ActionType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml2__AuthnContextType_DEFINED
#define SOAP_TYPE_PointerTosaml2__AuthnContextType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml2__AuthnContextType(struct soap*, struct saml2__AuthnContextType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml2__AuthnContextType(struct soap*, const char *, int, struct saml2__AuthnContextType *const*, const char *);
SOAP_FMAC3 struct saml2__AuthnContextType ** SOAP_FMAC4 soap_in_PointerTosaml2__AuthnContextType(struct soap*, const char*, struct saml2__AuthnContextType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml2__AuthnContextType(struct soap*, struct saml2__AuthnContextType *const*, const char*, const char*);
SOAP_FMAC3 struct saml2__AuthnContextType ** SOAP_FMAC4 soap_get_PointerTosaml2__AuthnContextType(struct soap*, struct saml2__AuthnContextType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml2__SubjectLocalityType_DEFINED
#define SOAP_TYPE_PointerTosaml2__SubjectLocalityType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml2__SubjectLocalityType(struct soap*, struct saml2__SubjectLocalityType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml2__SubjectLocalityType(struct soap*, const char *, int, struct saml2__SubjectLocalityType *const*, const char *);
SOAP_FMAC3 struct saml2__SubjectLocalityType ** SOAP_FMAC4 soap_in_PointerTosaml2__SubjectLocalityType(struct soap*, const char*, struct saml2__SubjectLocalityType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml2__SubjectLocalityType(struct soap*, struct saml2__SubjectLocalityType *const*, const char*, const char*);
SOAP_FMAC3 struct saml2__SubjectLocalityType ** SOAP_FMAC4 soap_get_PointerTosaml2__SubjectLocalityType(struct soap*, struct saml2__SubjectLocalityType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo__saml2__union_EvidenceType_DEFINED
#define SOAP_TYPE_PointerTo__saml2__union_EvidenceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__saml2__union_EvidenceType(struct soap*, struct __saml2__union_EvidenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__saml2__union_EvidenceType(struct soap*, const char *, int, struct __saml2__union_EvidenceType *const*, const char *);
SOAP_FMAC3 struct __saml2__union_EvidenceType ** SOAP_FMAC4 soap_in_PointerTo__saml2__union_EvidenceType(struct soap*, const char*, struct __saml2__union_EvidenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__saml2__union_EvidenceType(struct soap*, struct __saml2__union_EvidenceType *const*, const char*, const char*);
SOAP_FMAC3 struct __saml2__union_EvidenceType ** SOAP_FMAC4 soap_get_PointerTo__saml2__union_EvidenceType(struct soap*, struct __saml2__union_EvidenceType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo__saml2__union_AdviceType_DEFINED
#define SOAP_TYPE_PointerTo__saml2__union_AdviceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__saml2__union_AdviceType(struct soap*, struct __saml2__union_AdviceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__saml2__union_AdviceType(struct soap*, const char *, int, struct __saml2__union_AdviceType *const*, const char *);
SOAP_FMAC3 struct __saml2__union_AdviceType ** SOAP_FMAC4 soap_in_PointerTo__saml2__union_AdviceType(struct soap*, const char*, struct __saml2__union_AdviceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__saml2__union_AdviceType(struct soap*, struct __saml2__union_AdviceType *const*, const char*, const char*);
SOAP_FMAC3 struct __saml2__union_AdviceType ** SOAP_FMAC4 soap_get_PointerTo__saml2__union_AdviceType(struct soap*, struct __saml2__union_AdviceType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml2__AssertionType_DEFINED
#define SOAP_TYPE_PointerTosaml2__AssertionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml2__AssertionType(struct soap*, struct saml2__AssertionType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml2__AssertionType(struct soap*, const char *, int, struct saml2__AssertionType *const*, const char *);
SOAP_FMAC3 struct saml2__AssertionType ** SOAP_FMAC4 soap_in_PointerTosaml2__AssertionType(struct soap*, const char*, struct saml2__AssertionType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml2__AssertionType(struct soap*, struct saml2__AssertionType *const*, const char*, const char*);
SOAP_FMAC3 struct saml2__AssertionType ** SOAP_FMAC4 soap_get_PointerTosaml2__AssertionType(struct soap*, struct saml2__AssertionType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo__saml2__union_ConditionsType_DEFINED
#define SOAP_TYPE_PointerTo__saml2__union_ConditionsType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__saml2__union_ConditionsType(struct soap*, struct __saml2__union_ConditionsType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__saml2__union_ConditionsType(struct soap*, const char *, int, struct __saml2__union_ConditionsType *const*, const char *);
SOAP_FMAC3 struct __saml2__union_ConditionsType ** SOAP_FMAC4 soap_in_PointerTo__saml2__union_ConditionsType(struct soap*, const char*, struct __saml2__union_ConditionsType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__saml2__union_ConditionsType(struct soap*, struct __saml2__union_ConditionsType *const*, const char*, const char*);
SOAP_FMAC3 struct __saml2__union_ConditionsType ** SOAP_FMAC4 soap_get_PointerTo__saml2__union_ConditionsType(struct soap*, struct __saml2__union_ConditionsType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml2__ProxyRestrictionType_DEFINED
#define SOAP_TYPE_PointerTosaml2__ProxyRestrictionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml2__ProxyRestrictionType(struct soap*, struct saml2__ProxyRestrictionType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml2__ProxyRestrictionType(struct soap*, const char *, int, struct saml2__ProxyRestrictionType *const*, const char *);
SOAP_FMAC3 struct saml2__ProxyRestrictionType ** SOAP_FMAC4 soap_in_PointerTosaml2__ProxyRestrictionType(struct soap*, const char*, struct saml2__ProxyRestrictionType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml2__ProxyRestrictionType(struct soap*, struct saml2__ProxyRestrictionType *const*, const char*, const char*);
SOAP_FMAC3 struct saml2__ProxyRestrictionType ** SOAP_FMAC4 soap_get_PointerTosaml2__ProxyRestrictionType(struct soap*, struct saml2__ProxyRestrictionType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml2__OneTimeUseType_DEFINED
#define SOAP_TYPE_PointerTosaml2__OneTimeUseType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml2__OneTimeUseType(struct soap*, struct saml2__OneTimeUseType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml2__OneTimeUseType(struct soap*, const char *, int, struct saml2__OneTimeUseType *const*, const char *);
SOAP_FMAC3 struct saml2__OneTimeUseType ** SOAP_FMAC4 soap_in_PointerTosaml2__OneTimeUseType(struct soap*, const char*, struct saml2__OneTimeUseType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml2__OneTimeUseType(struct soap*, struct saml2__OneTimeUseType *const*, const char*, const char*);
SOAP_FMAC3 struct saml2__OneTimeUseType ** SOAP_FMAC4 soap_get_PointerTosaml2__OneTimeUseType(struct soap*, struct saml2__OneTimeUseType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml2__AudienceRestrictionType_DEFINED
#define SOAP_TYPE_PointerTosaml2__AudienceRestrictionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml2__AudienceRestrictionType(struct soap*, struct saml2__AudienceRestrictionType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml2__AudienceRestrictionType(struct soap*, const char *, int, struct saml2__AudienceRestrictionType *const*, const char *);
SOAP_FMAC3 struct saml2__AudienceRestrictionType ** SOAP_FMAC4 soap_in_PointerTosaml2__AudienceRestrictionType(struct soap*, const char*, struct saml2__AudienceRestrictionType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml2__AudienceRestrictionType(struct soap*, struct saml2__AudienceRestrictionType *const*, const char*, const char*);
SOAP_FMAC3 struct saml2__AudienceRestrictionType ** SOAP_FMAC4 soap_get_PointerTosaml2__AudienceRestrictionType(struct soap*, struct saml2__AudienceRestrictionType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml2__ConditionAbstractType_DEFINED
#define SOAP_TYPE_PointerTosaml2__ConditionAbstractType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml2__ConditionAbstractType(struct soap*, struct saml2__ConditionAbstractType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml2__ConditionAbstractType(struct soap*, const char *, int, struct saml2__ConditionAbstractType *const*, const char *);
SOAP_FMAC3 struct saml2__ConditionAbstractType ** SOAP_FMAC4 soap_in_PointerTosaml2__ConditionAbstractType(struct soap*, const char*, struct saml2__ConditionAbstractType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml2__ConditionAbstractType(struct soap*, struct saml2__ConditionAbstractType *const*, const char*, const char*);
SOAP_FMAC3 struct saml2__ConditionAbstractType ** SOAP_FMAC4 soap_get_PointerTosaml2__ConditionAbstractType(struct soap*, struct saml2__ConditionAbstractType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml2__SubjectConfirmationDataType_DEFINED
#define SOAP_TYPE_PointerTosaml2__SubjectConfirmationDataType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml2__SubjectConfirmationDataType(struct soap*, struct saml2__SubjectConfirmationDataType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml2__SubjectConfirmationDataType(struct soap*, const char *, int, struct saml2__SubjectConfirmationDataType *const*, const char *);
SOAP_FMAC3 struct saml2__SubjectConfirmationDataType ** SOAP_FMAC4 soap_in_PointerTosaml2__SubjectConfirmationDataType(struct soap*, const char*, struct saml2__SubjectConfirmationDataType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml2__SubjectConfirmationDataType(struct soap*, struct saml2__SubjectConfirmationDataType *const*, const char*, const char*);
SOAP_FMAC3 struct saml2__SubjectConfirmationDataType ** SOAP_FMAC4 soap_get_PointerTosaml2__SubjectConfirmationDataType(struct soap*, struct saml2__SubjectConfirmationDataType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml2__SubjectConfirmationType_DEFINED
#define SOAP_TYPE_PointerTosaml2__SubjectConfirmationType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml2__SubjectConfirmationType(struct soap*, struct saml2__SubjectConfirmationType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml2__SubjectConfirmationType(struct soap*, const char *, int, struct saml2__SubjectConfirmationType *const*, const char *);
SOAP_FMAC3 struct saml2__SubjectConfirmationType ** SOAP_FMAC4 soap_in_PointerTosaml2__SubjectConfirmationType(struct soap*, const char*, struct saml2__SubjectConfirmationType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml2__SubjectConfirmationType(struct soap*, struct saml2__SubjectConfirmationType *const*, const char*, const char*);
SOAP_FMAC3 struct saml2__SubjectConfirmationType ** SOAP_FMAC4 soap_get_PointerTosaml2__SubjectConfirmationType(struct soap*, struct saml2__SubjectConfirmationType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml2__EncryptedElementType_DEFINED
#define SOAP_TYPE_PointerTosaml2__EncryptedElementType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml2__EncryptedElementType(struct soap*, struct saml2__EncryptedElementType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml2__EncryptedElementType(struct soap*, const char *, int, struct saml2__EncryptedElementType *const*, const char *);
SOAP_FMAC3 struct saml2__EncryptedElementType ** SOAP_FMAC4 soap_in_PointerTosaml2__EncryptedElementType(struct soap*, const char*, struct saml2__EncryptedElementType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml2__EncryptedElementType(struct soap*, struct saml2__EncryptedElementType *const*, const char*, const char*);
SOAP_FMAC3 struct saml2__EncryptedElementType ** SOAP_FMAC4 soap_get_PointerTosaml2__EncryptedElementType(struct soap*, struct saml2__EncryptedElementType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml2__BaseIDAbstractType_DEFINED
#define SOAP_TYPE_PointerTosaml2__BaseIDAbstractType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml2__BaseIDAbstractType(struct soap*, struct saml2__BaseIDAbstractType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml2__BaseIDAbstractType(struct soap*, const char *, int, struct saml2__BaseIDAbstractType *const*, const char *);
SOAP_FMAC3 struct saml2__BaseIDAbstractType ** SOAP_FMAC4 soap_in_PointerTosaml2__BaseIDAbstractType(struct soap*, const char*, struct saml2__BaseIDAbstractType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml2__BaseIDAbstractType(struct soap*, struct saml2__BaseIDAbstractType *const*, const char*, const char*);
SOAP_FMAC3 struct saml2__BaseIDAbstractType ** SOAP_FMAC4 soap_get_PointerTosaml2__BaseIDAbstractType(struct soap*, struct saml2__BaseIDAbstractType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo__saml2__union_AssertionType_DEFINED
#define SOAP_TYPE_PointerTo__saml2__union_AssertionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__saml2__union_AssertionType(struct soap*, struct __saml2__union_AssertionType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__saml2__union_AssertionType(struct soap*, const char *, int, struct __saml2__union_AssertionType *const*, const char *);
SOAP_FMAC3 struct __saml2__union_AssertionType ** SOAP_FMAC4 soap_in_PointerTo__saml2__union_AssertionType(struct soap*, const char*, struct __saml2__union_AssertionType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__saml2__union_AssertionType(struct soap*, struct __saml2__union_AssertionType *const*, const char*, const char*);
SOAP_FMAC3 struct __saml2__union_AssertionType ** SOAP_FMAC4 soap_get_PointerTo__saml2__union_AssertionType(struct soap*, struct __saml2__union_AssertionType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml2__AttributeStatementType_DEFINED
#define SOAP_TYPE_PointerTosaml2__AttributeStatementType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml2__AttributeStatementType(struct soap*, struct saml2__AttributeStatementType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml2__AttributeStatementType(struct soap*, const char *, int, struct saml2__AttributeStatementType *const*, const char *);
SOAP_FMAC3 struct saml2__AttributeStatementType ** SOAP_FMAC4 soap_in_PointerTosaml2__AttributeStatementType(struct soap*, const char*, struct saml2__AttributeStatementType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml2__AttributeStatementType(struct soap*, struct saml2__AttributeStatementType *const*, const char*, const char*);
SOAP_FMAC3 struct saml2__AttributeStatementType ** SOAP_FMAC4 soap_get_PointerTosaml2__AttributeStatementType(struct soap*, struct saml2__AttributeStatementType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml2__AuthzDecisionStatementType_DEFINED
#define SOAP_TYPE_PointerTosaml2__AuthzDecisionStatementType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml2__AuthzDecisionStatementType(struct soap*, struct saml2__AuthzDecisionStatementType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml2__AuthzDecisionStatementType(struct soap*, const char *, int, struct saml2__AuthzDecisionStatementType *const*, const char *);
SOAP_FMAC3 struct saml2__AuthzDecisionStatementType ** SOAP_FMAC4 soap_in_PointerTosaml2__AuthzDecisionStatementType(struct soap*, const char*, struct saml2__AuthzDecisionStatementType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml2__AuthzDecisionStatementType(struct soap*, struct saml2__AuthzDecisionStatementType *const*, const char*, const char*);
SOAP_FMAC3 struct saml2__AuthzDecisionStatementType ** SOAP_FMAC4 soap_get_PointerTosaml2__AuthzDecisionStatementType(struct soap*, struct saml2__AuthzDecisionStatementType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml2__AuthnStatementType_DEFINED
#define SOAP_TYPE_PointerTosaml2__AuthnStatementType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml2__AuthnStatementType(struct soap*, struct saml2__AuthnStatementType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml2__AuthnStatementType(struct soap*, const char *, int, struct saml2__AuthnStatementType *const*, const char *);
SOAP_FMAC3 struct saml2__AuthnStatementType ** SOAP_FMAC4 soap_in_PointerTosaml2__AuthnStatementType(struct soap*, const char*, struct saml2__AuthnStatementType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml2__AuthnStatementType(struct soap*, struct saml2__AuthnStatementType *const*, const char*, const char*);
SOAP_FMAC3 struct saml2__AuthnStatementType ** SOAP_FMAC4 soap_get_PointerTosaml2__AuthnStatementType(struct soap*, struct saml2__AuthnStatementType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml2__StatementAbstractType_DEFINED
#define SOAP_TYPE_PointerTosaml2__StatementAbstractType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml2__StatementAbstractType(struct soap*, struct saml2__StatementAbstractType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml2__StatementAbstractType(struct soap*, const char *, int, struct saml2__StatementAbstractType *const*, const char *);
SOAP_FMAC3 struct saml2__StatementAbstractType ** SOAP_FMAC4 soap_in_PointerTosaml2__StatementAbstractType(struct soap*, const char*, struct saml2__StatementAbstractType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml2__StatementAbstractType(struct soap*, struct saml2__StatementAbstractType *const*, const char*, const char*);
SOAP_FMAC3 struct saml2__StatementAbstractType ** SOAP_FMAC4 soap_get_PointerTosaml2__StatementAbstractType(struct soap*, struct saml2__StatementAbstractType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml2__AdviceType_DEFINED
#define SOAP_TYPE_PointerTosaml2__AdviceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml2__AdviceType(struct soap*, struct saml2__AdviceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml2__AdviceType(struct soap*, const char *, int, struct saml2__AdviceType *const*, const char *);
SOAP_FMAC3 struct saml2__AdviceType ** SOAP_FMAC4 soap_in_PointerTosaml2__AdviceType(struct soap*, const char*, struct saml2__AdviceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml2__AdviceType(struct soap*, struct saml2__AdviceType *const*, const char*, const char*);
SOAP_FMAC3 struct saml2__AdviceType ** SOAP_FMAC4 soap_get_PointerTosaml2__AdviceType(struct soap*, struct saml2__AdviceType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml2__ConditionsType_DEFINED
#define SOAP_TYPE_PointerTosaml2__ConditionsType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml2__ConditionsType(struct soap*, struct saml2__ConditionsType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml2__ConditionsType(struct soap*, const char *, int, struct saml2__ConditionsType *const*, const char *);
SOAP_FMAC3 struct saml2__ConditionsType ** SOAP_FMAC4 soap_in_PointerTosaml2__ConditionsType(struct soap*, const char*, struct saml2__ConditionsType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml2__ConditionsType(struct soap*, struct saml2__ConditionsType *const*, const char*, const char*);
SOAP_FMAC3 struct saml2__ConditionsType ** SOAP_FMAC4 soap_get_PointerTosaml2__ConditionsType(struct soap*, struct saml2__ConditionsType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml2__SubjectType_DEFINED
#define SOAP_TYPE_PointerTosaml2__SubjectType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml2__SubjectType(struct soap*, struct saml2__SubjectType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml2__SubjectType(struct soap*, const char *, int, struct saml2__SubjectType *const*, const char *);
SOAP_FMAC3 struct saml2__SubjectType ** SOAP_FMAC4 soap_in_PointerTosaml2__SubjectType(struct soap*, const char*, struct saml2__SubjectType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml2__SubjectType(struct soap*, struct saml2__SubjectType *const*, const char*, const char*);
SOAP_FMAC3 struct saml2__SubjectType ** SOAP_FMAC4 soap_get_PointerTosaml2__SubjectType(struct soap*, struct saml2__SubjectType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml2__NameIDType_DEFINED
#define SOAP_TYPE_PointerTosaml2__NameIDType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml2__NameIDType(struct soap*, struct saml2__NameIDType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml2__NameIDType(struct soap*, const char *, int, struct saml2__NameIDType *const*, const char *);
SOAP_FMAC3 struct saml2__NameIDType ** SOAP_FMAC4 soap_in_PointerTosaml2__NameIDType(struct soap*, const char*, struct saml2__NameIDType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml2__NameIDType(struct soap*, struct saml2__NameIDType *const*, const char*, const char*);
SOAP_FMAC3 struct saml2__NameIDType ** SOAP_FMAC4 soap_get_PointerTosaml2__NameIDType(struct soap*, struct saml2__NameIDType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToPointerToxenc__EncryptedKeyType_DEFINED
#define SOAP_TYPE_PointerToPointerToxenc__EncryptedKeyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToPointerToxenc__EncryptedKeyType(struct soap*, struct xenc__EncryptedKeyType **const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToPointerToxenc__EncryptedKeyType(struct soap*, const char *, int, struct xenc__EncryptedKeyType **const*, const char *);
SOAP_FMAC3 struct xenc__EncryptedKeyType *** SOAP_FMAC4 soap_in_PointerToPointerToxenc__EncryptedKeyType(struct soap*, const char*, struct xenc__EncryptedKeyType ***, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToPointerToxenc__EncryptedKeyType(struct soap*, struct xenc__EncryptedKeyType **const*, const char*, const char*);
SOAP_FMAC3 struct xenc__EncryptedKeyType *** SOAP_FMAC4 soap_get_PointerToPointerToxenc__EncryptedKeyType(struct soap*, struct xenc__EncryptedKeyType ***, const char*, const char*);
#endif
/* _saml1__AttributeValue is a typedef synonym of _XML */

#ifndef SOAP_TYPE__saml1__AttributeValue_DEFINED
#define SOAP_TYPE__saml1__AttributeValue_DEFINED
#endif
/* _saml1__ConfirmationMethod is a typedef synonym of string */

#ifndef SOAP_TYPE__saml1__ConfirmationMethod_DEFINED
#define SOAP_TYPE__saml1__ConfirmationMethod_DEFINED

#define soap_default__saml1__ConfirmationMethod soap_default_string


#define soap_serialize__saml1__ConfirmationMethod soap_serialize_string


#define soap__saml1__ConfirmationMethod2s(soap, a) (a)

#define soap_out__saml1__ConfirmationMethod soap_out_string


#define soap_s2_saml1__ConfirmationMethod(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)

#define soap_in__saml1__ConfirmationMethod soap_in_string

#define soap_new__saml1__ConfirmationMethod soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml1__ConfirmationMethod(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__saml1__ConfirmationMethod
#define soap_write__saml1__ConfirmationMethod(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__saml1__ConfirmationMethod(soap, data, "saml1:ConfirmationMethod", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml1__ConfirmationMethod
#define soap_PUT__saml1__ConfirmationMethod(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml1__ConfirmationMethod(soap, data, "saml1:ConfirmationMethod", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml1__ConfirmationMethod
#define soap_PATCH__saml1__ConfirmationMethod(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml1__ConfirmationMethod(soap, data, "saml1:ConfirmationMethod", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml1__ConfirmationMethod
#define soap_POST_send__saml1__ConfirmationMethod(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml1__ConfirmationMethod(soap, data, "saml1:ConfirmationMethod", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml1__ConfirmationMethod soap_get_string


#define soap_read__saml1__ConfirmationMethod soap_read_string


#define soap_GET__saml1__ConfirmationMethod soap_GET_string


#define soap_POST_recv__saml1__ConfirmationMethod soap_POST_recv_string

#endif
/* _saml1__SubjectConfirmationData is a typedef synonym of _XML */

#ifndef SOAP_TYPE__saml1__SubjectConfirmationData_DEFINED
#define SOAP_TYPE__saml1__SubjectConfirmationData_DEFINED
#endif
/* _saml1__Audience is a typedef synonym of string */

#ifndef SOAP_TYPE__saml1__Audience_DEFINED
#define SOAP_TYPE__saml1__Audience_DEFINED

#define soap_default__saml1__Audience soap_default_string


#define soap_serialize__saml1__Audience soap_serialize_string


#define soap__saml1__Audience2s(soap, a) (a)

#define soap_out__saml1__Audience soap_out_string


#define soap_s2_saml1__Audience(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)

#define soap_in__saml1__Audience soap_in_string

#define soap_new__saml1__Audience soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml1__Audience(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__saml1__Audience
#define soap_write__saml1__Audience(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__saml1__Audience(soap, data, "saml1:Audience", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml1__Audience
#define soap_PUT__saml1__Audience(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml1__Audience(soap, data, "saml1:Audience", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml1__Audience
#define soap_PATCH__saml1__Audience(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml1__Audience(soap, data, "saml1:Audience", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml1__Audience
#define soap_POST_send__saml1__Audience(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml1__Audience(soap, data, "saml1:Audience", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml1__Audience soap_get_string


#define soap_read__saml1__Audience soap_read_string


#define soap_GET__saml1__Audience soap_GET_string


#define soap_POST_recv__saml1__Audience soap_POST_recv_string

#endif
/* _saml1__AssertionIDReference is a typedef synonym of string */

#ifndef SOAP_TYPE__saml1__AssertionIDReference_DEFINED
#define SOAP_TYPE__saml1__AssertionIDReference_DEFINED

#define soap_default__saml1__AssertionIDReference soap_default_string


#define soap_serialize__saml1__AssertionIDReference soap_serialize_string


#define soap__saml1__AssertionIDReference2s(soap, a) (a)

#define soap_out__saml1__AssertionIDReference soap_out_string


#define soap_s2_saml1__AssertionIDReference(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)

#define soap_in__saml1__AssertionIDReference soap_in_string

#define soap_new__saml1__AssertionIDReference soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put__saml1__AssertionIDReference(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__saml1__AssertionIDReference
#define soap_write__saml1__AssertionIDReference(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__saml1__AssertionIDReference(soap, data, "saml1:AssertionIDReference", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__saml1__AssertionIDReference
#define soap_PUT__saml1__AssertionIDReference(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml1__AssertionIDReference(soap, data, "saml1:AssertionIDReference", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__saml1__AssertionIDReference
#define soap_PATCH__saml1__AssertionIDReference(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml1__AssertionIDReference(soap, data, "saml1:AssertionIDReference", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__saml1__AssertionIDReference
#define soap_POST_send__saml1__AssertionIDReference(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__saml1__AssertionIDReference(soap, data, "saml1:AssertionIDReference", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__saml1__AssertionIDReference soap_get_string


#define soap_read__saml1__AssertionIDReference soap_read_string


#define soap_GET__saml1__AssertionIDReference soap_GET_string


#define soap_POST_recv__saml1__AssertionIDReference soap_POST_recv_string

#endif

#ifndef SOAP_TYPE_PointerTosaml1__AttributeType_DEFINED
#define SOAP_TYPE_PointerTosaml1__AttributeType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml1__AttributeType(struct soap*, struct saml1__AttributeType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml1__AttributeType(struct soap*, const char *, int, struct saml1__AttributeType *const*, const char *);
SOAP_FMAC3 struct saml1__AttributeType ** SOAP_FMAC4 soap_in_PointerTosaml1__AttributeType(struct soap*, const char*, struct saml1__AttributeType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml1__AttributeType(struct soap*, struct saml1__AttributeType *const*, const char*, const char*);
SOAP_FMAC3 struct saml1__AttributeType ** SOAP_FMAC4 soap_get_PointerTosaml1__AttributeType(struct soap*, struct saml1__AttributeType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml1__EvidenceType_DEFINED
#define SOAP_TYPE_PointerTosaml1__EvidenceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml1__EvidenceType(struct soap*, struct saml1__EvidenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml1__EvidenceType(struct soap*, const char *, int, struct saml1__EvidenceType *const*, const char *);
SOAP_FMAC3 struct saml1__EvidenceType ** SOAP_FMAC4 soap_in_PointerTosaml1__EvidenceType(struct soap*, const char*, struct saml1__EvidenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml1__EvidenceType(struct soap*, struct saml1__EvidenceType *const*, const char*, const char*);
SOAP_FMAC3 struct saml1__EvidenceType ** SOAP_FMAC4 soap_get_PointerTosaml1__EvidenceType(struct soap*, struct saml1__EvidenceType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml1__ActionType_DEFINED
#define SOAP_TYPE_PointerTosaml1__ActionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml1__ActionType(struct soap*, struct saml1__ActionType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml1__ActionType(struct soap*, const char *, int, struct saml1__ActionType *const*, const char *);
SOAP_FMAC3 struct saml1__ActionType ** SOAP_FMAC4 soap_in_PointerTosaml1__ActionType(struct soap*, const char*, struct saml1__ActionType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml1__ActionType(struct soap*, struct saml1__ActionType *const*, const char*, const char*);
SOAP_FMAC3 struct saml1__ActionType ** SOAP_FMAC4 soap_get_PointerTosaml1__ActionType(struct soap*, struct saml1__ActionType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml1__AuthorityBindingType_DEFINED
#define SOAP_TYPE_PointerTosaml1__AuthorityBindingType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml1__AuthorityBindingType(struct soap*, struct saml1__AuthorityBindingType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml1__AuthorityBindingType(struct soap*, const char *, int, struct saml1__AuthorityBindingType *const*, const char *);
SOAP_FMAC3 struct saml1__AuthorityBindingType ** SOAP_FMAC4 soap_in_PointerTosaml1__AuthorityBindingType(struct soap*, const char*, struct saml1__AuthorityBindingType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml1__AuthorityBindingType(struct soap*, struct saml1__AuthorityBindingType *const*, const char*, const char*);
SOAP_FMAC3 struct saml1__AuthorityBindingType ** SOAP_FMAC4 soap_get_PointerTosaml1__AuthorityBindingType(struct soap*, struct saml1__AuthorityBindingType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml1__SubjectLocalityType_DEFINED
#define SOAP_TYPE_PointerTosaml1__SubjectLocalityType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml1__SubjectLocalityType(struct soap*, struct saml1__SubjectLocalityType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml1__SubjectLocalityType(struct soap*, const char *, int, struct saml1__SubjectLocalityType *const*, const char *);
SOAP_FMAC3 struct saml1__SubjectLocalityType ** SOAP_FMAC4 soap_in_PointerTosaml1__SubjectLocalityType(struct soap*, const char*, struct saml1__SubjectLocalityType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml1__SubjectLocalityType(struct soap*, struct saml1__SubjectLocalityType *const*, const char*, const char*);
SOAP_FMAC3 struct saml1__SubjectLocalityType ** SOAP_FMAC4 soap_get_PointerTosaml1__SubjectLocalityType(struct soap*, struct saml1__SubjectLocalityType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml1__SubjectType_DEFINED
#define SOAP_TYPE_PointerTosaml1__SubjectType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml1__SubjectType(struct soap*, struct saml1__SubjectType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml1__SubjectType(struct soap*, const char *, int, struct saml1__SubjectType *const*, const char *);
SOAP_FMAC3 struct saml1__SubjectType ** SOAP_FMAC4 soap_in_PointerTosaml1__SubjectType(struct soap*, const char*, struct saml1__SubjectType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml1__SubjectType(struct soap*, struct saml1__SubjectType *const*, const char*, const char*);
SOAP_FMAC3 struct saml1__SubjectType ** SOAP_FMAC4 soap_get_PointerTosaml1__SubjectType(struct soap*, struct saml1__SubjectType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo__saml1__union_EvidenceType_DEFINED
#define SOAP_TYPE_PointerTo__saml1__union_EvidenceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__saml1__union_EvidenceType(struct soap*, struct __saml1__union_EvidenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__saml1__union_EvidenceType(struct soap*, const char *, int, struct __saml1__union_EvidenceType *const*, const char *);
SOAP_FMAC3 struct __saml1__union_EvidenceType ** SOAP_FMAC4 soap_in_PointerTo__saml1__union_EvidenceType(struct soap*, const char*, struct __saml1__union_EvidenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__saml1__union_EvidenceType(struct soap*, struct __saml1__union_EvidenceType *const*, const char*, const char*);
SOAP_FMAC3 struct __saml1__union_EvidenceType ** SOAP_FMAC4 soap_get_PointerTo__saml1__union_EvidenceType(struct soap*, struct __saml1__union_EvidenceType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTostring_DEFINED
#define SOAP_TYPE_PointerTostring_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostring(struct soap*, char **const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostring(struct soap*, const char *, int, char **const*, const char *);
SOAP_FMAC3 char *** SOAP_FMAC4 soap_in_PointerTostring(struct soap*, const char*, char ***, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostring(struct soap*, char **const*, const char*, const char*);
SOAP_FMAC3 char *** SOAP_FMAC4 soap_get_PointerTostring(struct soap*, char ***, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml1__SubjectConfirmationType_DEFINED
#define SOAP_TYPE_PointerTosaml1__SubjectConfirmationType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml1__SubjectConfirmationType(struct soap*, struct saml1__SubjectConfirmationType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml1__SubjectConfirmationType(struct soap*, const char *, int, struct saml1__SubjectConfirmationType *const*, const char *);
SOAP_FMAC3 struct saml1__SubjectConfirmationType ** SOAP_FMAC4 soap_in_PointerTosaml1__SubjectConfirmationType(struct soap*, const char*, struct saml1__SubjectConfirmationType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml1__SubjectConfirmationType(struct soap*, struct saml1__SubjectConfirmationType *const*, const char*, const char*);
SOAP_FMAC3 struct saml1__SubjectConfirmationType ** SOAP_FMAC4 soap_get_PointerTosaml1__SubjectConfirmationType(struct soap*, struct saml1__SubjectConfirmationType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml1__NameIdentifierType_DEFINED
#define SOAP_TYPE_PointerTosaml1__NameIdentifierType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml1__NameIdentifierType(struct soap*, struct saml1__NameIdentifierType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml1__NameIdentifierType(struct soap*, const char *, int, struct saml1__NameIdentifierType *const*, const char *);
SOAP_FMAC3 struct saml1__NameIdentifierType ** SOAP_FMAC4 soap_in_PointerTosaml1__NameIdentifierType(struct soap*, const char*, struct saml1__NameIdentifierType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml1__NameIdentifierType(struct soap*, struct saml1__NameIdentifierType *const*, const char*, const char*);
SOAP_FMAC3 struct saml1__NameIdentifierType ** SOAP_FMAC4 soap_get_PointerTosaml1__NameIdentifierType(struct soap*, struct saml1__NameIdentifierType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo__saml1__union_AdviceType_DEFINED
#define SOAP_TYPE_PointerTo__saml1__union_AdviceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__saml1__union_AdviceType(struct soap*, struct __saml1__union_AdviceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__saml1__union_AdviceType(struct soap*, const char *, int, struct __saml1__union_AdviceType *const*, const char *);
SOAP_FMAC3 struct __saml1__union_AdviceType ** SOAP_FMAC4 soap_in_PointerTo__saml1__union_AdviceType(struct soap*, const char*, struct __saml1__union_AdviceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__saml1__union_AdviceType(struct soap*, struct __saml1__union_AdviceType *const*, const char*, const char*);
SOAP_FMAC3 struct __saml1__union_AdviceType ** SOAP_FMAC4 soap_get_PointerTo__saml1__union_AdviceType(struct soap*, struct __saml1__union_AdviceType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml1__AssertionType_DEFINED
#define SOAP_TYPE_PointerTosaml1__AssertionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml1__AssertionType(struct soap*, struct saml1__AssertionType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml1__AssertionType(struct soap*, const char *, int, struct saml1__AssertionType *const*, const char *);
SOAP_FMAC3 struct saml1__AssertionType ** SOAP_FMAC4 soap_in_PointerTosaml1__AssertionType(struct soap*, const char*, struct saml1__AssertionType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml1__AssertionType(struct soap*, struct saml1__AssertionType *const*, const char*, const char*);
SOAP_FMAC3 struct saml1__AssertionType ** SOAP_FMAC4 soap_get_PointerTosaml1__AssertionType(struct soap*, struct saml1__AssertionType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToxsd__dateTime_DEFINED
#define SOAP_TYPE_PointerToxsd__dateTime_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxsd__dateTime(struct soap*, struct timeval *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxsd__dateTime(struct soap*, const char *, int, struct timeval *const*, const char *);
SOAP_FMAC3 struct timeval ** SOAP_FMAC4 soap_in_PointerToxsd__dateTime(struct soap*, const char*, struct timeval **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxsd__dateTime(struct soap*, struct timeval *const*, const char*, const char*);
SOAP_FMAC3 struct timeval ** SOAP_FMAC4 soap_get_PointerToxsd__dateTime(struct soap*, struct timeval **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo__saml1__union_ConditionsType_DEFINED
#define SOAP_TYPE_PointerTo__saml1__union_ConditionsType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__saml1__union_ConditionsType(struct soap*, struct __saml1__union_ConditionsType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__saml1__union_ConditionsType(struct soap*, const char *, int, struct __saml1__union_ConditionsType *const*, const char *);
SOAP_FMAC3 struct __saml1__union_ConditionsType ** SOAP_FMAC4 soap_in_PointerTo__saml1__union_ConditionsType(struct soap*, const char*, struct __saml1__union_ConditionsType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__saml1__union_ConditionsType(struct soap*, struct __saml1__union_ConditionsType *const*, const char*, const char*);
SOAP_FMAC3 struct __saml1__union_ConditionsType ** SOAP_FMAC4 soap_get_PointerTo__saml1__union_ConditionsType(struct soap*, struct __saml1__union_ConditionsType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml1__ConditionAbstractType_DEFINED
#define SOAP_TYPE_PointerTosaml1__ConditionAbstractType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml1__ConditionAbstractType(struct soap*, struct saml1__ConditionAbstractType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml1__ConditionAbstractType(struct soap*, const char *, int, struct saml1__ConditionAbstractType *const*, const char *);
SOAP_FMAC3 struct saml1__ConditionAbstractType ** SOAP_FMAC4 soap_in_PointerTosaml1__ConditionAbstractType(struct soap*, const char*, struct saml1__ConditionAbstractType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml1__ConditionAbstractType(struct soap*, struct saml1__ConditionAbstractType *const*, const char*, const char*);
SOAP_FMAC3 struct saml1__ConditionAbstractType ** SOAP_FMAC4 soap_get_PointerTosaml1__ConditionAbstractType(struct soap*, struct saml1__ConditionAbstractType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml1__DoNotCacheConditionType_DEFINED
#define SOAP_TYPE_PointerTosaml1__DoNotCacheConditionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml1__DoNotCacheConditionType(struct soap*, struct saml1__DoNotCacheConditionType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml1__DoNotCacheConditionType(struct soap*, const char *, int, struct saml1__DoNotCacheConditionType *const*, const char *);
SOAP_FMAC3 struct saml1__DoNotCacheConditionType ** SOAP_FMAC4 soap_in_PointerTosaml1__DoNotCacheConditionType(struct soap*, const char*, struct saml1__DoNotCacheConditionType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml1__DoNotCacheConditionType(struct soap*, struct saml1__DoNotCacheConditionType *const*, const char*, const char*);
SOAP_FMAC3 struct saml1__DoNotCacheConditionType ** SOAP_FMAC4 soap_get_PointerTosaml1__DoNotCacheConditionType(struct soap*, struct saml1__DoNotCacheConditionType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml1__AudienceRestrictionConditionType_DEFINED
#define SOAP_TYPE_PointerTosaml1__AudienceRestrictionConditionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml1__AudienceRestrictionConditionType(struct soap*, struct saml1__AudienceRestrictionConditionType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml1__AudienceRestrictionConditionType(struct soap*, const char *, int, struct saml1__AudienceRestrictionConditionType *const*, const char *);
SOAP_FMAC3 struct saml1__AudienceRestrictionConditionType ** SOAP_FMAC4 soap_in_PointerTosaml1__AudienceRestrictionConditionType(struct soap*, const char*, struct saml1__AudienceRestrictionConditionType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml1__AudienceRestrictionConditionType(struct soap*, struct saml1__AudienceRestrictionConditionType *const*, const char*, const char*);
SOAP_FMAC3 struct saml1__AudienceRestrictionConditionType ** SOAP_FMAC4 soap_get_PointerTosaml1__AudienceRestrictionConditionType(struct soap*, struct saml1__AudienceRestrictionConditionType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ds__Signature_DEFINED
#define SOAP_TYPE_PointerTo_ds__Signature_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ds__Signature(struct soap*, struct ds__SignatureType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ds__Signature(struct soap*, const char *, int, struct ds__SignatureType *const*, const char *);
SOAP_FMAC3 struct ds__SignatureType ** SOAP_FMAC4 soap_in_PointerTo_ds__Signature(struct soap*, const char*, struct ds__SignatureType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ds__Signature(struct soap*, struct ds__SignatureType *const*, const char*, const char*);
SOAP_FMAC3 struct ds__SignatureType ** SOAP_FMAC4 soap_get_PointerTo_ds__Signature(struct soap*, struct ds__SignatureType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo__saml1__union_AssertionType_DEFINED
#define SOAP_TYPE_PointerTo__saml1__union_AssertionType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__saml1__union_AssertionType(struct soap*, struct __saml1__union_AssertionType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__saml1__union_AssertionType(struct soap*, const char *, int, struct __saml1__union_AssertionType *const*, const char *);
SOAP_FMAC3 struct __saml1__union_AssertionType ** SOAP_FMAC4 soap_in_PointerTo__saml1__union_AssertionType(struct soap*, const char*, struct __saml1__union_AssertionType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__saml1__union_AssertionType(struct soap*, struct __saml1__union_AssertionType *const*, const char*, const char*);
SOAP_FMAC3 struct __saml1__union_AssertionType ** SOAP_FMAC4 soap_get_PointerTo__saml1__union_AssertionType(struct soap*, struct __saml1__union_AssertionType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml1__AttributeStatementType_DEFINED
#define SOAP_TYPE_PointerTosaml1__AttributeStatementType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml1__AttributeStatementType(struct soap*, struct saml1__AttributeStatementType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml1__AttributeStatementType(struct soap*, const char *, int, struct saml1__AttributeStatementType *const*, const char *);
SOAP_FMAC3 struct saml1__AttributeStatementType ** SOAP_FMAC4 soap_in_PointerTosaml1__AttributeStatementType(struct soap*, const char*, struct saml1__AttributeStatementType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml1__AttributeStatementType(struct soap*, struct saml1__AttributeStatementType *const*, const char*, const char*);
SOAP_FMAC3 struct saml1__AttributeStatementType ** SOAP_FMAC4 soap_get_PointerTosaml1__AttributeStatementType(struct soap*, struct saml1__AttributeStatementType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml1__AuthorizationDecisionStatementType_DEFINED
#define SOAP_TYPE_PointerTosaml1__AuthorizationDecisionStatementType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml1__AuthorizationDecisionStatementType(struct soap*, struct saml1__AuthorizationDecisionStatementType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml1__AuthorizationDecisionStatementType(struct soap*, const char *, int, struct saml1__AuthorizationDecisionStatementType *const*, const char *);
SOAP_FMAC3 struct saml1__AuthorizationDecisionStatementType ** SOAP_FMAC4 soap_in_PointerTosaml1__AuthorizationDecisionStatementType(struct soap*, const char*, struct saml1__AuthorizationDecisionStatementType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml1__AuthorizationDecisionStatementType(struct soap*, struct saml1__AuthorizationDecisionStatementType *const*, const char*, const char*);
SOAP_FMAC3 struct saml1__AuthorizationDecisionStatementType ** SOAP_FMAC4 soap_get_PointerTosaml1__AuthorizationDecisionStatementType(struct soap*, struct saml1__AuthorizationDecisionStatementType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml1__AuthenticationStatementType_DEFINED
#define SOAP_TYPE_PointerTosaml1__AuthenticationStatementType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml1__AuthenticationStatementType(struct soap*, struct saml1__AuthenticationStatementType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml1__AuthenticationStatementType(struct soap*, const char *, int, struct saml1__AuthenticationStatementType *const*, const char *);
SOAP_FMAC3 struct saml1__AuthenticationStatementType ** SOAP_FMAC4 soap_in_PointerTosaml1__AuthenticationStatementType(struct soap*, const char*, struct saml1__AuthenticationStatementType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml1__AuthenticationStatementType(struct soap*, struct saml1__AuthenticationStatementType *const*, const char*, const char*);
SOAP_FMAC3 struct saml1__AuthenticationStatementType ** SOAP_FMAC4 soap_get_PointerTosaml1__AuthenticationStatementType(struct soap*, struct saml1__AuthenticationStatementType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml1__SubjectStatementAbstractType_DEFINED
#define SOAP_TYPE_PointerTosaml1__SubjectStatementAbstractType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml1__SubjectStatementAbstractType(struct soap*, struct saml1__SubjectStatementAbstractType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml1__SubjectStatementAbstractType(struct soap*, const char *, int, struct saml1__SubjectStatementAbstractType *const*, const char *);
SOAP_FMAC3 struct saml1__SubjectStatementAbstractType ** SOAP_FMAC4 soap_in_PointerTosaml1__SubjectStatementAbstractType(struct soap*, const char*, struct saml1__SubjectStatementAbstractType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml1__SubjectStatementAbstractType(struct soap*, struct saml1__SubjectStatementAbstractType *const*, const char*, const char*);
SOAP_FMAC3 struct saml1__SubjectStatementAbstractType ** SOAP_FMAC4 soap_get_PointerTosaml1__SubjectStatementAbstractType(struct soap*, struct saml1__SubjectStatementAbstractType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml1__StatementAbstractType_DEFINED
#define SOAP_TYPE_PointerTosaml1__StatementAbstractType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml1__StatementAbstractType(struct soap*, struct saml1__StatementAbstractType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml1__StatementAbstractType(struct soap*, const char *, int, struct saml1__StatementAbstractType *const*, const char *);
SOAP_FMAC3 struct saml1__StatementAbstractType ** SOAP_FMAC4 soap_in_PointerTosaml1__StatementAbstractType(struct soap*, const char*, struct saml1__StatementAbstractType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml1__StatementAbstractType(struct soap*, struct saml1__StatementAbstractType *const*, const char*, const char*);
SOAP_FMAC3 struct saml1__StatementAbstractType ** SOAP_FMAC4 soap_get_PointerTosaml1__StatementAbstractType(struct soap*, struct saml1__StatementAbstractType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml1__AdviceType_DEFINED
#define SOAP_TYPE_PointerTosaml1__AdviceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml1__AdviceType(struct soap*, struct saml1__AdviceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml1__AdviceType(struct soap*, const char *, int, struct saml1__AdviceType *const*, const char *);
SOAP_FMAC3 struct saml1__AdviceType ** SOAP_FMAC4 soap_in_PointerTosaml1__AdviceType(struct soap*, const char*, struct saml1__AdviceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml1__AdviceType(struct soap*, struct saml1__AdviceType *const*, const char*, const char*);
SOAP_FMAC3 struct saml1__AdviceType ** SOAP_FMAC4 soap_get_PointerTosaml1__AdviceType(struct soap*, struct saml1__AdviceType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTosaml1__ConditionsType_DEFINED
#define SOAP_TYPE_PointerTosaml1__ConditionsType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosaml1__ConditionsType(struct soap*, struct saml1__ConditionsType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosaml1__ConditionsType(struct soap*, const char *, int, struct saml1__ConditionsType *const*, const char *);
SOAP_FMAC3 struct saml1__ConditionsType ** SOAP_FMAC4 soap_in_PointerTosaml1__ConditionsType(struct soap*, const char*, struct saml1__ConditionsType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosaml1__ConditionsType(struct soap*, struct saml1__ConditionsType *const*, const char*, const char*);
SOAP_FMAC3 struct saml1__ConditionsType ** SOAP_FMAC4 soap_get_PointerTosaml1__ConditionsType(struct soap*, struct saml1__ConditionsType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo__wsc__DerivedKeyTokenType_sequence_DEFINED
#define SOAP_TYPE_PointerTo__wsc__DerivedKeyTokenType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__wsc__DerivedKeyTokenType_sequence(struct soap*, struct __wsc__DerivedKeyTokenType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__wsc__DerivedKeyTokenType_sequence(struct soap*, const char *, int, struct __wsc__DerivedKeyTokenType_sequence *const*, const char *);
SOAP_FMAC3 struct __wsc__DerivedKeyTokenType_sequence ** SOAP_FMAC4 soap_in_PointerTo__wsc__DerivedKeyTokenType_sequence(struct soap*, const char*, struct __wsc__DerivedKeyTokenType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__wsc__DerivedKeyTokenType_sequence(struct soap*, struct __wsc__DerivedKeyTokenType_sequence *const*, const char*, const char*);
SOAP_FMAC3 struct __wsc__DerivedKeyTokenType_sequence ** SOAP_FMAC4 soap_get_PointerTo__wsc__DerivedKeyTokenType_sequence(struct soap*, struct __wsc__DerivedKeyTokenType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToULONG64_DEFINED
#define SOAP_TYPE_PointerToULONG64_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToULONG64(struct soap*, ULONG64 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToULONG64(struct soap*, const char *, int, ULONG64 *const*, const char *);
SOAP_FMAC3 ULONG64 ** SOAP_FMAC4 soap_in_PointerToULONG64(struct soap*, const char*, ULONG64 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToULONG64(struct soap*, ULONG64 *const*, const char*, const char*);
SOAP_FMAC3 ULONG64 ** SOAP_FMAC4 soap_get_PointerToULONG64(struct soap*, ULONG64 **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsc__PropertiesType_DEFINED
#define SOAP_TYPE_PointerTowsc__PropertiesType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsc__PropertiesType(struct soap*, struct wsc__PropertiesType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsc__PropertiesType(struct soap*, const char *, int, struct wsc__PropertiesType *const*, const char *);
SOAP_FMAC3 struct wsc__PropertiesType ** SOAP_FMAC4 soap_in_PointerTowsc__PropertiesType(struct soap*, const char*, struct wsc__PropertiesType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsc__PropertiesType(struct soap*, struct wsc__PropertiesType *const*, const char*, const char*);
SOAP_FMAC3 struct wsc__PropertiesType ** SOAP_FMAC4 soap_get_PointerTowsc__PropertiesType(struct soap*, struct wsc__PropertiesType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_wsc__FaultCodeOpenEnumType_DEFINED
#define SOAP_TYPE_wsc__FaultCodeOpenEnumType_DEFINED

#ifdef SOAP_DEFAULT_wsc__FaultCodeOpenEnumType
#define soap_default_wsc__FaultCodeOpenEnumType(soap, a) (*(a) = SOAP_DEFAULT_wsc__FaultCodeOpenEnumType)
#else
#define soap_default_wsc__FaultCodeOpenEnumType(soap, a) (*(a) = (char *)0)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsc__FaultCodeOpenEnumType(struct soap*, char *const*);

#define soap_wsc__FaultCodeOpenEnumType2s(soap, a) (a)
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsc__FaultCodeOpenEnumType(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2wsc__FaultCodeOpenEnumType(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_wsc__FaultCodeOpenEnumType(struct soap*, const char*, char **, const char*);
#define soap_new_wsc__FaultCodeOpenEnumType soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsc__FaultCodeOpenEnumType(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_wsc__FaultCodeOpenEnumType
#define soap_write_wsc__FaultCodeOpenEnumType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_wsc__FaultCodeOpenEnumType(soap, data, "wsc:FaultCodeOpenEnumType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsc__FaultCodeOpenEnumType
#define soap_PUT_wsc__FaultCodeOpenEnumType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsc__FaultCodeOpenEnumType(soap, data, "wsc:FaultCodeOpenEnumType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsc__FaultCodeOpenEnumType
#define soap_PATCH_wsc__FaultCodeOpenEnumType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsc__FaultCodeOpenEnumType(soap, data, "wsc:FaultCodeOpenEnumType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsc__FaultCodeOpenEnumType
#define soap_POST_send_wsc__FaultCodeOpenEnumType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsc__FaultCodeOpenEnumType(soap, data, "wsc:FaultCodeOpenEnumType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_wsc__FaultCodeOpenEnumType(struct soap*, char **, const char*, const char*);

#ifndef soap_read_wsc__FaultCodeOpenEnumType
#define soap_read_wsc__FaultCodeOpenEnumType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsc__FaultCodeOpenEnumType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsc__FaultCodeOpenEnumType
#define soap_GET_wsc__FaultCodeOpenEnumType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsc__FaultCodeOpenEnumType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsc__FaultCodeOpenEnumType
#define soap_POST_recv_wsc__FaultCodeOpenEnumType(soap, data) ( soap_read_wsc__FaultCodeOpenEnumType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_PointerTo_xenc__ReferenceList_DEFINED
#define SOAP_TYPE_PointerTo_xenc__ReferenceList_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_xenc__ReferenceList(struct soap*, struct _xenc__ReferenceList *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_xenc__ReferenceList(struct soap*, const char *, int, struct _xenc__ReferenceList *const*, const char *);
SOAP_FMAC3 struct _xenc__ReferenceList ** SOAP_FMAC4 soap_in_PointerTo_xenc__ReferenceList(struct soap*, const char*, struct _xenc__ReferenceList **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_xenc__ReferenceList(struct soap*, struct _xenc__ReferenceList *const*, const char*, const char*);
SOAP_FMAC3 struct _xenc__ReferenceList ** SOAP_FMAC4 soap_get_PointerTo_xenc__ReferenceList(struct soap*, struct _xenc__ReferenceList **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo__xenc__union_ReferenceList_DEFINED
#define SOAP_TYPE_PointerTo__xenc__union_ReferenceList_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__xenc__union_ReferenceList(struct soap*, struct __xenc__union_ReferenceList *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__xenc__union_ReferenceList(struct soap*, const char *, int, struct __xenc__union_ReferenceList *const*, const char *);
SOAP_FMAC3 struct __xenc__union_ReferenceList ** SOAP_FMAC4 soap_in_PointerTo__xenc__union_ReferenceList(struct soap*, const char*, struct __xenc__union_ReferenceList **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__xenc__union_ReferenceList(struct soap*, struct __xenc__union_ReferenceList *const*, const char*, const char*);
SOAP_FMAC3 struct __xenc__union_ReferenceList ** SOAP_FMAC4 soap_get_PointerTo__xenc__union_ReferenceList(struct soap*, struct __xenc__union_ReferenceList **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToxenc__ReferenceType_DEFINED
#define SOAP_TYPE_PointerToxenc__ReferenceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxenc__ReferenceType(struct soap*, struct xenc__ReferenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxenc__ReferenceType(struct soap*, const char *, int, struct xenc__ReferenceType *const*, const char *);
SOAP_FMAC3 struct xenc__ReferenceType ** SOAP_FMAC4 soap_in_PointerToxenc__ReferenceType(struct soap*, const char*, struct xenc__ReferenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxenc__ReferenceType(struct soap*, struct xenc__ReferenceType *const*, const char*, const char*);
SOAP_FMAC3 struct xenc__ReferenceType ** SOAP_FMAC4 soap_get_PointerToxenc__ReferenceType(struct soap*, struct xenc__ReferenceType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToxenc__EncryptionPropertyType_DEFINED
#define SOAP_TYPE_PointerToxenc__EncryptionPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxenc__EncryptionPropertyType(struct soap*, struct xenc__EncryptionPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxenc__EncryptionPropertyType(struct soap*, const char *, int, struct xenc__EncryptionPropertyType *const*, const char *);
SOAP_FMAC3 struct xenc__EncryptionPropertyType ** SOAP_FMAC4 soap_in_PointerToxenc__EncryptionPropertyType(struct soap*, const char*, struct xenc__EncryptionPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxenc__EncryptionPropertyType(struct soap*, struct xenc__EncryptionPropertyType *const*, const char*, const char*);
SOAP_FMAC3 struct xenc__EncryptionPropertyType ** SOAP_FMAC4 soap_get_PointerToxenc__EncryptionPropertyType(struct soap*, struct xenc__EncryptionPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToxenc__TransformsType_DEFINED
#define SOAP_TYPE_PointerToxenc__TransformsType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxenc__TransformsType(struct soap*, struct xenc__TransformsType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxenc__TransformsType(struct soap*, const char *, int, struct xenc__TransformsType *const*, const char *);
SOAP_FMAC3 struct xenc__TransformsType ** SOAP_FMAC4 soap_in_PointerToxenc__TransformsType(struct soap*, const char*, struct xenc__TransformsType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxenc__TransformsType(struct soap*, struct xenc__TransformsType *const*, const char*, const char*);
SOAP_FMAC3 struct xenc__TransformsType ** SOAP_FMAC4 soap_get_PointerToxenc__TransformsType(struct soap*, struct xenc__TransformsType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToxenc__CipherReferenceType_DEFINED
#define SOAP_TYPE_PointerToxenc__CipherReferenceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxenc__CipherReferenceType(struct soap*, struct xenc__CipherReferenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxenc__CipherReferenceType(struct soap*, const char *, int, struct xenc__CipherReferenceType *const*, const char *);
SOAP_FMAC3 struct xenc__CipherReferenceType ** SOAP_FMAC4 soap_in_PointerToxenc__CipherReferenceType(struct soap*, const char*, struct xenc__CipherReferenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxenc__CipherReferenceType(struct soap*, struct xenc__CipherReferenceType *const*, const char*, const char*);
SOAP_FMAC3 struct xenc__CipherReferenceType ** SOAP_FMAC4 soap_get_PointerToxenc__CipherReferenceType(struct soap*, struct xenc__CipherReferenceType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToxenc__EncryptionPropertiesType_DEFINED
#define SOAP_TYPE_PointerToxenc__EncryptionPropertiesType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxenc__EncryptionPropertiesType(struct soap*, struct xenc__EncryptionPropertiesType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxenc__EncryptionPropertiesType(struct soap*, const char *, int, struct xenc__EncryptionPropertiesType *const*, const char *);
SOAP_FMAC3 struct xenc__EncryptionPropertiesType ** SOAP_FMAC4 soap_in_PointerToxenc__EncryptionPropertiesType(struct soap*, const char*, struct xenc__EncryptionPropertiesType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxenc__EncryptionPropertiesType(struct soap*, struct xenc__EncryptionPropertiesType *const*, const char*, const char*);
SOAP_FMAC3 struct xenc__EncryptionPropertiesType ** SOAP_FMAC4 soap_get_PointerToxenc__EncryptionPropertiesType(struct soap*, struct xenc__EncryptionPropertiesType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToxenc__CipherDataType_DEFINED
#define SOAP_TYPE_PointerToxenc__CipherDataType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxenc__CipherDataType(struct soap*, struct xenc__CipherDataType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxenc__CipherDataType(struct soap*, const char *, int, struct xenc__CipherDataType *const*, const char *);
SOAP_FMAC3 struct xenc__CipherDataType ** SOAP_FMAC4 soap_in_PointerToxenc__CipherDataType(struct soap*, const char*, struct xenc__CipherDataType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxenc__CipherDataType(struct soap*, struct xenc__CipherDataType *const*, const char*, const char*);
SOAP_FMAC3 struct xenc__CipherDataType ** SOAP_FMAC4 soap_get_PointerToxenc__CipherDataType(struct soap*, struct xenc__CipherDataType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_ds__KeyInfo_DEFINED
#define SOAP_TYPE_PointerTo_ds__KeyInfo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ds__KeyInfo(struct soap*, struct ds__KeyInfoType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ds__KeyInfo(struct soap*, const char *, int, struct ds__KeyInfoType *const*, const char *);
SOAP_FMAC3 struct ds__KeyInfoType ** SOAP_FMAC4 soap_in_PointerTo_ds__KeyInfo(struct soap*, const char*, struct ds__KeyInfoType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ds__KeyInfo(struct soap*, struct ds__KeyInfoType *const*, const char*, const char*);
SOAP_FMAC3 struct ds__KeyInfoType ** SOAP_FMAC4 soap_get_PointerTo_ds__KeyInfo(struct soap*, struct ds__KeyInfoType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToxenc__EncryptionMethodType_DEFINED
#define SOAP_TYPE_PointerToxenc__EncryptionMethodType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxenc__EncryptionMethodType(struct soap*, struct xenc__EncryptionMethodType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxenc__EncryptionMethodType(struct soap*, const char *, int, struct xenc__EncryptionMethodType *const*, const char *);
SOAP_FMAC3 struct xenc__EncryptionMethodType ** SOAP_FMAC4 soap_in_PointerToxenc__EncryptionMethodType(struct soap*, const char*, struct xenc__EncryptionMethodType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxenc__EncryptionMethodType(struct soap*, struct xenc__EncryptionMethodType *const*, const char*, const char*);
SOAP_FMAC3 struct xenc__EncryptionMethodType ** SOAP_FMAC4 soap_get_PointerToxenc__EncryptionMethodType(struct soap*, struct xenc__EncryptionMethodType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTods__X509IssuerSerialType_DEFINED
#define SOAP_TYPE_PointerTods__X509IssuerSerialType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTods__X509IssuerSerialType(struct soap*, struct ds__X509IssuerSerialType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTods__X509IssuerSerialType(struct soap*, const char *, int, struct ds__X509IssuerSerialType *const*, const char *);
SOAP_FMAC3 struct ds__X509IssuerSerialType ** SOAP_FMAC4 soap_in_PointerTods__X509IssuerSerialType(struct soap*, const char*, struct ds__X509IssuerSerialType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTods__X509IssuerSerialType(struct soap*, struct ds__X509IssuerSerialType *const*, const char*, const char*);
SOAP_FMAC3 struct ds__X509IssuerSerialType ** SOAP_FMAC4 soap_get_PointerTods__X509IssuerSerialType(struct soap*, struct ds__X509IssuerSerialType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTods__RSAKeyValueType_DEFINED
#define SOAP_TYPE_PointerTods__RSAKeyValueType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTods__RSAKeyValueType(struct soap*, struct ds__RSAKeyValueType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTods__RSAKeyValueType(struct soap*, const char *, int, struct ds__RSAKeyValueType *const*, const char *);
SOAP_FMAC3 struct ds__RSAKeyValueType ** SOAP_FMAC4 soap_in_PointerTods__RSAKeyValueType(struct soap*, const char*, struct ds__RSAKeyValueType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTods__RSAKeyValueType(struct soap*, struct ds__RSAKeyValueType *const*, const char*, const char*);
SOAP_FMAC3 struct ds__RSAKeyValueType ** SOAP_FMAC4 soap_get_PointerTods__RSAKeyValueType(struct soap*, struct ds__RSAKeyValueType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTods__DSAKeyValueType_DEFINED
#define SOAP_TYPE_PointerTods__DSAKeyValueType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTods__DSAKeyValueType(struct soap*, struct ds__DSAKeyValueType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTods__DSAKeyValueType(struct soap*, const char *, int, struct ds__DSAKeyValueType *const*, const char *);
SOAP_FMAC3 struct ds__DSAKeyValueType ** SOAP_FMAC4 soap_in_PointerTods__DSAKeyValueType(struct soap*, const char*, struct ds__DSAKeyValueType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTods__DSAKeyValueType(struct soap*, struct ds__DSAKeyValueType *const*, const char*, const char*);
SOAP_FMAC3 struct ds__DSAKeyValueType ** SOAP_FMAC4 soap_get_PointerTods__DSAKeyValueType(struct soap*, struct ds__DSAKeyValueType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTods__TransformType_DEFINED
#define SOAP_TYPE_PointerTods__TransformType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTods__TransformType(struct soap*, struct ds__TransformType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTods__TransformType(struct soap*, const char *, int, struct ds__TransformType *const*, const char *);
SOAP_FMAC3 struct ds__TransformType ** SOAP_FMAC4 soap_in_PointerTods__TransformType(struct soap*, const char*, struct ds__TransformType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTods__TransformType(struct soap*, struct ds__TransformType *const*, const char*, const char*);
SOAP_FMAC3 struct ds__TransformType ** SOAP_FMAC4 soap_get_PointerTods__TransformType(struct soap*, struct ds__TransformType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTods__DigestMethodType_DEFINED
#define SOAP_TYPE_PointerTods__DigestMethodType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTods__DigestMethodType(struct soap*, struct ds__DigestMethodType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTods__DigestMethodType(struct soap*, const char *, int, struct ds__DigestMethodType *const*, const char *);
SOAP_FMAC3 struct ds__DigestMethodType ** SOAP_FMAC4 soap_in_PointerTods__DigestMethodType(struct soap*, const char*, struct ds__DigestMethodType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTods__DigestMethodType(struct soap*, struct ds__DigestMethodType *const*, const char*, const char*);
SOAP_FMAC3 struct ds__DigestMethodType ** SOAP_FMAC4 soap_get_PointerTods__DigestMethodType(struct soap*, struct ds__DigestMethodType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTods__TransformsType_DEFINED
#define SOAP_TYPE_PointerTods__TransformsType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTods__TransformsType(struct soap*, struct ds__TransformsType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTods__TransformsType(struct soap*, const char *, int, struct ds__TransformsType *const*, const char *);
SOAP_FMAC3 struct ds__TransformsType ** SOAP_FMAC4 soap_in_PointerTods__TransformsType(struct soap*, const char*, struct ds__TransformsType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTods__TransformsType(struct soap*, struct ds__TransformsType *const*, const char*, const char*);
SOAP_FMAC3 struct ds__TransformsType ** SOAP_FMAC4 soap_get_PointerTods__TransformsType(struct soap*, struct ds__TransformsType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerToPointerTods__ReferenceType_DEFINED
#define SOAP_TYPE_PointerToPointerTods__ReferenceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToPointerTods__ReferenceType(struct soap*, struct ds__ReferenceType **const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToPointerTods__ReferenceType(struct soap*, const char *, int, struct ds__ReferenceType **const*, const char *);
SOAP_FMAC3 struct ds__ReferenceType *** SOAP_FMAC4 soap_in_PointerToPointerTods__ReferenceType(struct soap*, const char*, struct ds__ReferenceType ***, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToPointerTods__ReferenceType(struct soap*, struct ds__ReferenceType **const*, const char*, const char*);
SOAP_FMAC3 struct ds__ReferenceType *** SOAP_FMAC4 soap_get_PointerToPointerTods__ReferenceType(struct soap*, struct ds__ReferenceType ***, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTods__ReferenceType_DEFINED
#define SOAP_TYPE_PointerTods__ReferenceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTods__ReferenceType(struct soap*, struct ds__ReferenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTods__ReferenceType(struct soap*, const char *, int, struct ds__ReferenceType *const*, const char *);
SOAP_FMAC3 struct ds__ReferenceType ** SOAP_FMAC4 soap_in_PointerTods__ReferenceType(struct soap*, const char*, struct ds__ReferenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTods__ReferenceType(struct soap*, struct ds__ReferenceType *const*, const char*, const char*);
SOAP_FMAC3 struct ds__ReferenceType ** SOAP_FMAC4 soap_get_PointerTods__ReferenceType(struct soap*, struct ds__ReferenceType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTods__SignatureMethodType_DEFINED
#define SOAP_TYPE_PointerTods__SignatureMethodType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTods__SignatureMethodType(struct soap*, struct ds__SignatureMethodType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTods__SignatureMethodType(struct soap*, const char *, int, struct ds__SignatureMethodType *const*, const char *);
SOAP_FMAC3 struct ds__SignatureMethodType ** SOAP_FMAC4 soap_in_PointerTods__SignatureMethodType(struct soap*, const char*, struct ds__SignatureMethodType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTods__SignatureMethodType(struct soap*, struct ds__SignatureMethodType *const*, const char*, const char*);
SOAP_FMAC3 struct ds__SignatureMethodType ** SOAP_FMAC4 soap_get_PointerTods__SignatureMethodType(struct soap*, struct ds__SignatureMethodType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTods__CanonicalizationMethodType_DEFINED
#define SOAP_TYPE_PointerTods__CanonicalizationMethodType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTods__CanonicalizationMethodType(struct soap*, struct ds__CanonicalizationMethodType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTods__CanonicalizationMethodType(struct soap*, const char *, int, struct ds__CanonicalizationMethodType *const*, const char *);
SOAP_FMAC3 struct ds__CanonicalizationMethodType ** SOAP_FMAC4 soap_in_PointerTods__CanonicalizationMethodType(struct soap*, const char*, struct ds__CanonicalizationMethodType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTods__CanonicalizationMethodType(struct soap*, struct ds__CanonicalizationMethodType *const*, const char*, const char*);
SOAP_FMAC3 struct ds__CanonicalizationMethodType ** SOAP_FMAC4 soap_get_PointerTods__CanonicalizationMethodType(struct soap*, struct ds__CanonicalizationMethodType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsse__SecurityTokenReference_DEFINED
#define SOAP_TYPE_PointerTo_wsse__SecurityTokenReference_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsse__SecurityTokenReference(struct soap*, struct _wsse__SecurityTokenReference *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsse__SecurityTokenReference(struct soap*, const char *, int, struct _wsse__SecurityTokenReference *const*, const char *);
SOAP_FMAC3 struct _wsse__SecurityTokenReference ** SOAP_FMAC4 soap_in_PointerTo_wsse__SecurityTokenReference(struct soap*, const char*, struct _wsse__SecurityTokenReference **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsse__SecurityTokenReference(struct soap*, struct _wsse__SecurityTokenReference *const*, const char*, const char*);
SOAP_FMAC3 struct _wsse__SecurityTokenReference ** SOAP_FMAC4 soap_get_PointerTo_wsse__SecurityTokenReference(struct soap*, struct _wsse__SecurityTokenReference **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTods__RetrievalMethodType_DEFINED
#define SOAP_TYPE_PointerTods__RetrievalMethodType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTods__RetrievalMethodType(struct soap*, struct ds__RetrievalMethodType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTods__RetrievalMethodType(struct soap*, const char *, int, struct ds__RetrievalMethodType *const*, const char *);
SOAP_FMAC3 struct ds__RetrievalMethodType ** SOAP_FMAC4 soap_in_PointerTods__RetrievalMethodType(struct soap*, const char*, struct ds__RetrievalMethodType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTods__RetrievalMethodType(struct soap*, struct ds__RetrievalMethodType *const*, const char*, const char*);
SOAP_FMAC3 struct ds__RetrievalMethodType ** SOAP_FMAC4 soap_get_PointerTods__RetrievalMethodType(struct soap*, struct ds__RetrievalMethodType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTods__KeyValueType_DEFINED
#define SOAP_TYPE_PointerTods__KeyValueType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTods__KeyValueType(struct soap*, struct ds__KeyValueType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTods__KeyValueType(struct soap*, const char *, int, struct ds__KeyValueType *const*, const char *);
SOAP_FMAC3 struct ds__KeyValueType ** SOAP_FMAC4 soap_in_PointerTods__KeyValueType(struct soap*, const char*, struct ds__KeyValueType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTods__KeyValueType(struct soap*, struct ds__KeyValueType *const*, const char*, const char*);
SOAP_FMAC3 struct ds__KeyValueType ** SOAP_FMAC4 soap_get_PointerTods__KeyValueType(struct soap*, struct ds__KeyValueType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_c14n__InclusiveNamespaces_DEFINED
#define SOAP_TYPE_PointerTo_c14n__InclusiveNamespaces_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_c14n__InclusiveNamespaces(struct soap*, struct _c14n__InclusiveNamespaces *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_c14n__InclusiveNamespaces(struct soap*, const char *, int, struct _c14n__InclusiveNamespaces *const*, const char *);
SOAP_FMAC3 struct _c14n__InclusiveNamespaces ** SOAP_FMAC4 soap_in_PointerTo_c14n__InclusiveNamespaces(struct soap*, const char*, struct _c14n__InclusiveNamespaces **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_c14n__InclusiveNamespaces(struct soap*, struct _c14n__InclusiveNamespaces *const*, const char*, const char*);
SOAP_FMAC3 struct _c14n__InclusiveNamespaces ** SOAP_FMAC4 soap_get_PointerTo_c14n__InclusiveNamespaces(struct soap*, struct _c14n__InclusiveNamespaces **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTods__KeyInfoType_DEFINED
#define SOAP_TYPE_PointerTods__KeyInfoType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTods__KeyInfoType(struct soap*, struct ds__KeyInfoType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTods__KeyInfoType(struct soap*, const char *, int, struct ds__KeyInfoType *const*, const char *);
SOAP_FMAC3 struct ds__KeyInfoType ** SOAP_FMAC4 soap_in_PointerTods__KeyInfoType(struct soap*, const char*, struct ds__KeyInfoType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTods__KeyInfoType(struct soap*, struct ds__KeyInfoType *const*, const char*, const char*);
SOAP_FMAC3 struct ds__KeyInfoType ** SOAP_FMAC4 soap_get_PointerTods__KeyInfoType(struct soap*, struct ds__KeyInfoType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTods__SignedInfoType_DEFINED
#define SOAP_TYPE_PointerTods__SignedInfoType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTods__SignedInfoType(struct soap*, struct ds__SignedInfoType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTods__SignedInfoType(struct soap*, const char *, int, struct ds__SignedInfoType *const*, const char *);
SOAP_FMAC3 struct ds__SignedInfoType ** SOAP_FMAC4 soap_in_PointerTods__SignedInfoType(struct soap*, const char*, struct ds__SignedInfoType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTods__SignedInfoType(struct soap*, struct ds__SignedInfoType *const*, const char*, const char*);
SOAP_FMAC3 struct ds__SignedInfoType ** SOAP_FMAC4 soap_get_PointerTods__SignedInfoType(struct soap*, struct ds__SignedInfoType **, const char*, const char*);
#endif
/* _ds__SignatureValue is a typedef synonym of string */

#ifndef SOAP_TYPE__ds__SignatureValue_DEFINED
#define SOAP_TYPE__ds__SignatureValue_DEFINED

#define soap_default__ds__SignatureValue soap_default_string


#define soap_serialize__ds__SignatureValue soap_serialize_string


#define soap__ds__SignatureValue2s(soap, a) (a)

#define soap_out__ds__SignatureValue soap_out_string


#define soap_s2_ds__SignatureValue(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)

#define soap_in__ds__SignatureValue soap_in_string

#define soap_new__ds__SignatureValue soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put__ds__SignatureValue(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__ds__SignatureValue
#define soap_write__ds__SignatureValue(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__ds__SignatureValue(soap, data, "ds:SignatureValue", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__ds__SignatureValue
#define soap_PUT__ds__SignatureValue(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__ds__SignatureValue(soap, data, "ds:SignatureValue", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__ds__SignatureValue
#define soap_PATCH__ds__SignatureValue(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__ds__SignatureValue(soap, data, "ds:SignatureValue", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__ds__SignatureValue
#define soap_POST_send__ds__SignatureValue(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__ds__SignatureValue(soap, data, "ds:SignatureValue", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__ds__SignatureValue soap_get_string


#define soap_read__ds__SignatureValue soap_read_string


#define soap_GET__ds__SignatureValue soap_GET_string


#define soap_POST_recv__ds__SignatureValue soap_POST_recv_string

#endif

#ifndef SOAP_TYPE_PointerToxenc__EncryptedKeyType_DEFINED
#define SOAP_TYPE_PointerToxenc__EncryptedKeyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxenc__EncryptedKeyType(struct soap*, struct xenc__EncryptedKeyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxenc__EncryptedKeyType(struct soap*, const char *, int, struct xenc__EncryptedKeyType *const*, const char *);
SOAP_FMAC3 struct xenc__EncryptedKeyType ** SOAP_FMAC4 soap_in_PointerToxenc__EncryptedKeyType(struct soap*, const char*, struct xenc__EncryptedKeyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxenc__EncryptedKeyType(struct soap*, struct xenc__EncryptedKeyType *const*, const char*, const char*);
SOAP_FMAC3 struct xenc__EncryptedKeyType ** SOAP_FMAC4 soap_get_PointerToxenc__EncryptedKeyType(struct soap*, struct xenc__EncryptedKeyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTods__X509DataType_DEFINED
#define SOAP_TYPE_PointerTods__X509DataType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTods__X509DataType(struct soap*, struct ds__X509DataType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTods__X509DataType(struct soap*, const char *, int, struct ds__X509DataType *const*, const char *);
SOAP_FMAC3 struct ds__X509DataType ** SOAP_FMAC4 soap_in_PointerTods__X509DataType(struct soap*, const char*, struct ds__X509DataType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTods__X509DataType(struct soap*, struct ds__X509DataType *const*, const char*, const char*);
SOAP_FMAC3 struct ds__X509DataType ** SOAP_FMAC4 soap_get_PointerTods__X509DataType(struct soap*, struct ds__X509DataType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsse__Embedded_DEFINED
#define SOAP_TYPE_PointerTo_wsse__Embedded_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsse__Embedded(struct soap*, struct _wsse__Embedded *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsse__Embedded(struct soap*, const char *, int, struct _wsse__Embedded *const*, const char *);
SOAP_FMAC3 struct _wsse__Embedded ** SOAP_FMAC4 soap_in_PointerTo_wsse__Embedded(struct soap*, const char*, struct _wsse__Embedded **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsse__Embedded(struct soap*, struct _wsse__Embedded *const*, const char*, const char*);
SOAP_FMAC3 struct _wsse__Embedded ** SOAP_FMAC4 soap_get_PointerTo_wsse__Embedded(struct soap*, struct _wsse__Embedded **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsse__KeyIdentifier_DEFINED
#define SOAP_TYPE_PointerTo_wsse__KeyIdentifier_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsse__KeyIdentifier(struct soap*, struct _wsse__KeyIdentifier *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsse__KeyIdentifier(struct soap*, const char *, int, struct _wsse__KeyIdentifier *const*, const char *);
SOAP_FMAC3 struct _wsse__KeyIdentifier ** SOAP_FMAC4 soap_in_PointerTo_wsse__KeyIdentifier(struct soap*, const char*, struct _wsse__KeyIdentifier **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsse__KeyIdentifier(struct soap*, struct _wsse__KeyIdentifier *const*, const char*, const char*);
SOAP_FMAC3 struct _wsse__KeyIdentifier ** SOAP_FMAC4 soap_get_PointerTo_wsse__KeyIdentifier(struct soap*, struct _wsse__KeyIdentifier **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsse__Reference_DEFINED
#define SOAP_TYPE_PointerTo_wsse__Reference_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsse__Reference(struct soap*, struct _wsse__Reference *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsse__Reference(struct soap*, const char *, int, struct _wsse__Reference *const*, const char *);
SOAP_FMAC3 struct _wsse__Reference ** SOAP_FMAC4 soap_in_PointerTo_wsse__Reference(struct soap*, const char*, struct _wsse__Reference **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsse__Reference(struct soap*, struct _wsse__Reference *const*, const char*, const char*);
SOAP_FMAC3 struct _wsse__Reference ** SOAP_FMAC4 soap_get_PointerTo_wsse__Reference(struct soap*, struct _wsse__Reference **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsse__EncodedString_DEFINED
#define SOAP_TYPE_PointerTowsse__EncodedString_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsse__EncodedString(struct soap*, struct wsse__EncodedString *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsse__EncodedString(struct soap*, const char *, int, struct wsse__EncodedString *const*, const char *);
SOAP_FMAC3 struct wsse__EncodedString ** SOAP_FMAC4 soap_in_PointerTowsse__EncodedString(struct soap*, const char*, struct wsse__EncodedString **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsse__EncodedString(struct soap*, struct wsse__EncodedString *const*, const char*, const char*);
SOAP_FMAC3 struct wsse__EncodedString ** SOAP_FMAC4 soap_get_PointerTowsse__EncodedString(struct soap*, struct wsse__EncodedString **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsse__Password_DEFINED
#define SOAP_TYPE_PointerTo_wsse__Password_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsse__Password(struct soap*, struct _wsse__Password *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsse__Password(struct soap*, const char *, int, struct _wsse__Password *const*, const char *);
SOAP_FMAC3 struct _wsse__Password ** SOAP_FMAC4 soap_in_PointerTo_wsse__Password(struct soap*, const char*, struct _wsse__Password **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsse__Password(struct soap*, struct _wsse__Password *const*, const char*, const char*);
SOAP_FMAC3 struct _wsse__Password ** SOAP_FMAC4 soap_get_PointerTo_wsse__Password(struct soap*, struct _wsse__Password **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTochan__ChannelInstanceType_DEFINED
#define SOAP_TYPE_PointerTochan__ChannelInstanceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTochan__ChannelInstanceType(struct soap*, struct chan__ChannelInstanceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTochan__ChannelInstanceType(struct soap*, const char *, int, struct chan__ChannelInstanceType *const*, const char *);
SOAP_FMAC3 struct chan__ChannelInstanceType ** SOAP_FMAC4 soap_in_PointerTochan__ChannelInstanceType(struct soap*, const char*, struct chan__ChannelInstanceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTochan__ChannelInstanceType(struct soap*, struct chan__ChannelInstanceType *const*, const char*, const char*);
SOAP_FMAC3 struct chan__ChannelInstanceType ** SOAP_FMAC4 soap_get_PointerTochan__ChannelInstanceType(struct soap*, struct chan__ChannelInstanceType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsa5__FaultTo_DEFINED
#define SOAP_TYPE_PointerTo_wsa5__FaultTo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsa5__FaultTo(struct soap*, struct wsa5__EndpointReferenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsa5__FaultTo(struct soap*, const char *, int, struct wsa5__EndpointReferenceType *const*, const char *);
SOAP_FMAC3 struct wsa5__EndpointReferenceType ** SOAP_FMAC4 soap_in_PointerTo_wsa5__FaultTo(struct soap*, const char*, struct wsa5__EndpointReferenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsa5__FaultTo(struct soap*, struct wsa5__EndpointReferenceType *const*, const char*, const char*);
SOAP_FMAC3 struct wsa5__EndpointReferenceType ** SOAP_FMAC4 soap_get_PointerTo_wsa5__FaultTo(struct soap*, struct wsa5__EndpointReferenceType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsa5__ReplyTo_DEFINED
#define SOAP_TYPE_PointerTo_wsa5__ReplyTo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsa5__ReplyTo(struct soap*, struct wsa5__EndpointReferenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsa5__ReplyTo(struct soap*, const char *, int, struct wsa5__EndpointReferenceType *const*, const char *);
SOAP_FMAC3 struct wsa5__EndpointReferenceType ** SOAP_FMAC4 soap_in_PointerTo_wsa5__ReplyTo(struct soap*, const char*, struct wsa5__EndpointReferenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsa5__ReplyTo(struct soap*, struct wsa5__EndpointReferenceType *const*, const char*, const char*);
SOAP_FMAC3 struct wsa5__EndpointReferenceType ** SOAP_FMAC4 soap_get_PointerTo_wsa5__ReplyTo(struct soap*, struct wsa5__EndpointReferenceType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsa5__From_DEFINED
#define SOAP_TYPE_PointerTo_wsa5__From_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsa5__From(struct soap*, struct wsa5__EndpointReferenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsa5__From(struct soap*, const char *, int, struct wsa5__EndpointReferenceType *const*, const char *);
SOAP_FMAC3 struct wsa5__EndpointReferenceType ** SOAP_FMAC4 soap_in_PointerTo_wsa5__From(struct soap*, const char*, struct wsa5__EndpointReferenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsa5__From(struct soap*, struct wsa5__EndpointReferenceType *const*, const char*, const char*);
SOAP_FMAC3 struct wsa5__EndpointReferenceType ** SOAP_FMAC4 soap_get_PointerTo_wsa5__From(struct soap*, struct wsa5__EndpointReferenceType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsa5__RelatesTo_DEFINED
#define SOAP_TYPE_PointerTo_wsa5__RelatesTo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsa5__RelatesTo(struct soap*, struct wsa5__RelatesToType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsa5__RelatesTo(struct soap*, const char *, int, struct wsa5__RelatesToType *const*, const char *);
SOAP_FMAC3 struct wsa5__RelatesToType ** SOAP_FMAC4 soap_in_PointerTo_wsa5__RelatesTo(struct soap*, const char*, struct wsa5__RelatesToType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsa5__RelatesTo(struct soap*, struct wsa5__RelatesToType *const*, const char*, const char*);
SOAP_FMAC3 struct wsa5__RelatesToType ** SOAP_FMAC4 soap_get_PointerTo_wsa5__RelatesTo(struct soap*, struct wsa5__RelatesToType **, const char*, const char*);
#endif
/* _wsa5__ProblemIRI is a typedef synonym of string */

#ifndef SOAP_TYPE__wsa5__ProblemIRI_DEFINED
#define SOAP_TYPE__wsa5__ProblemIRI_DEFINED

#define soap_default__wsa5__ProblemIRI soap_default_string


#define soap_serialize__wsa5__ProblemIRI soap_serialize_string


#define soap__wsa5__ProblemIRI2s(soap, a) (a)

#define soap_out__wsa5__ProblemIRI soap_out_string


#define soap_s2_wsa5__ProblemIRI(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)

#define soap_in__wsa5__ProblemIRI soap_in_string

#define soap_new__wsa5__ProblemIRI soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa5__ProblemIRI(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__wsa5__ProblemIRI
#define soap_write__wsa5__ProblemIRI(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__wsa5__ProblemIRI(soap, data, "wsa5:ProblemIRI", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsa5__ProblemIRI
#define soap_PUT__wsa5__ProblemIRI(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__ProblemIRI(soap, data, "wsa5:ProblemIRI", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsa5__ProblemIRI
#define soap_PATCH__wsa5__ProblemIRI(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__ProblemIRI(soap, data, "wsa5:ProblemIRI", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsa5__ProblemIRI
#define soap_POST_send__wsa5__ProblemIRI(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__ProblemIRI(soap, data, "wsa5:ProblemIRI", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsa5__ProblemIRI soap_get_string


#define soap_read__wsa5__ProblemIRI soap_read_string


#define soap_GET__wsa5__ProblemIRI soap_GET_string


#define soap_POST_recv__wsa5__ProblemIRI soap_POST_recv_string

#endif
/* _wsa5__ProblemHeaderQName is a typedef synonym of _QName */

#ifndef SOAP_TYPE__wsa5__ProblemHeaderQName_DEFINED
#define SOAP_TYPE__wsa5__ProblemHeaderQName_DEFINED

#define soap_default__wsa5__ProblemHeaderQName soap_default__QName


#define soap_serialize__wsa5__ProblemHeaderQName soap_serialize__QName


#define soap__wsa5__ProblemHeaderQName2s(soap, a) soap_QName2s(soap, (a))

#define soap_out__wsa5__ProblemHeaderQName soap_out__QName


#define soap_s2_wsa5__ProblemHeaderQName(soap, s, a) soap_s2QName((soap), (s), (char**)(a), 0, -1, NULL)

#define soap_in__wsa5__ProblemHeaderQName soap_in__QName

#define soap_new__wsa5__ProblemHeaderQName soap_new__QName


#define soap_put__wsa5__ProblemHeaderQName soap_put__QName


#define soap_write__wsa5__ProblemHeaderQName soap_write__QName


#define soap_PUT__wsa5__ProblemHeaderQName soap_PUT__QName


#define soap_PATCH__wsa5__ProblemHeaderQName soap_PATCH__QName


#define soap_POST_send__wsa5__ProblemHeaderQName soap_POST_send__QName


#define soap_get__wsa5__ProblemHeaderQName soap_get__QName


#define soap_read__wsa5__ProblemHeaderQName soap_read__QName


#define soap_GET__wsa5__ProblemHeaderQName soap_GET__QName


#define soap_POST_recv__wsa5__ProblemHeaderQName soap_POST_recv__QName

#endif
/* _wsa5__Action is a typedef synonym of string */

#ifndef SOAP_TYPE__wsa5__Action_DEFINED
#define SOAP_TYPE__wsa5__Action_DEFINED

#define soap_default__wsa5__Action soap_default_string


#define soap_serialize__wsa5__Action soap_serialize_string


#define soap__wsa5__Action2s(soap, a) (a)

#define soap_out__wsa5__Action soap_out_string


#define soap_s2_wsa5__Action(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)

#define soap_in__wsa5__Action soap_in_string

#define soap_new__wsa5__Action soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa5__Action(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__wsa5__Action
#define soap_write__wsa5__Action(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__wsa5__Action(soap, data, "wsa5:Action", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsa5__Action
#define soap_PUT__wsa5__Action(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__Action(soap, data, "wsa5:Action", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsa5__Action
#define soap_PATCH__wsa5__Action(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__Action(soap, data, "wsa5:Action", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsa5__Action
#define soap_POST_send__wsa5__Action(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__Action(soap, data, "wsa5:Action", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsa5__Action soap_get_string


#define soap_read__wsa5__Action soap_read_string


#define soap_GET__wsa5__Action soap_GET_string


#define soap_POST_recv__wsa5__Action soap_POST_recv_string

#endif
/* _wsa5__To is a typedef synonym of string */

#ifndef SOAP_TYPE__wsa5__To_DEFINED
#define SOAP_TYPE__wsa5__To_DEFINED

#define soap_default__wsa5__To soap_default_string


#define soap_serialize__wsa5__To soap_serialize_string


#define soap__wsa5__To2s(soap, a) (a)

#define soap_out__wsa5__To soap_out_string


#define soap_s2_wsa5__To(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)

#define soap_in__wsa5__To soap_in_string

#define soap_new__wsa5__To soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa5__To(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__wsa5__To
#define soap_write__wsa5__To(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__wsa5__To(soap, data, "wsa5:To", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsa5__To
#define soap_PUT__wsa5__To(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__To(soap, data, "wsa5:To", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsa5__To
#define soap_PATCH__wsa5__To(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__To(soap, data, "wsa5:To", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsa5__To
#define soap_POST_send__wsa5__To(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__To(soap, data, "wsa5:To", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsa5__To soap_get_string


#define soap_read__wsa5__To soap_read_string


#define soap_GET__wsa5__To soap_GET_string


#define soap_POST_recv__wsa5__To soap_POST_recv_string

#endif
/* _wsa5__MessageID is a typedef synonym of string */

#ifndef SOAP_TYPE__wsa5__MessageID_DEFINED
#define SOAP_TYPE__wsa5__MessageID_DEFINED

#define soap_default__wsa5__MessageID soap_default_string


#define soap_serialize__wsa5__MessageID soap_serialize_string


#define soap__wsa5__MessageID2s(soap, a) (a)

#define soap_out__wsa5__MessageID soap_out_string


#define soap_s2_wsa5__MessageID(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)

#define soap_in__wsa5__MessageID soap_in_string

#define soap_new__wsa5__MessageID soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa5__MessageID(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__wsa5__MessageID
#define soap_write__wsa5__MessageID(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__wsa5__MessageID(soap, data, "wsa5:MessageID", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsa5__MessageID
#define soap_PUT__wsa5__MessageID(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__MessageID(soap, data, "wsa5:MessageID", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsa5__MessageID
#define soap_PATCH__wsa5__MessageID(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__MessageID(soap, data, "wsa5:MessageID", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsa5__MessageID
#define soap_POST_send__wsa5__MessageID(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa5__MessageID(soap, data, "wsa5:MessageID", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsa5__MessageID soap_get_string


#define soap_read__wsa5__MessageID soap_read_string


#define soap_GET__wsa5__MessageID soap_GET_string


#define soap_POST_recv__wsa5__MessageID soap_POST_recv_string

#endif

#ifndef SOAP_TYPE_PointerToint_DEFINED
#define SOAP_TYPE_PointerToint_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToint(struct soap*, int *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToint(struct soap*, const char *, int, int *const*, const char *);
SOAP_FMAC3 int ** SOAP_FMAC4 soap_in_PointerToint(struct soap*, const char*, int **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToint(struct soap*, int *const*, const char*, const char*);
SOAP_FMAC3 int ** SOAP_FMAC4 soap_get_PointerToint(struct soap*, int **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsa5__MetadataType_DEFINED
#define SOAP_TYPE_PointerTowsa5__MetadataType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsa5__MetadataType(struct soap*, struct wsa5__MetadataType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsa5__MetadataType(struct soap*, const char *, int, struct wsa5__MetadataType *const*, const char *);
SOAP_FMAC3 struct wsa5__MetadataType ** SOAP_FMAC4 soap_in_PointerTowsa5__MetadataType(struct soap*, const char*, struct wsa5__MetadataType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsa5__MetadataType(struct soap*, struct wsa5__MetadataType *const*, const char*, const char*);
SOAP_FMAC3 struct wsa5__MetadataType ** SOAP_FMAC4 soap_get_PointerTowsa5__MetadataType(struct soap*, struct wsa5__MetadataType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsa5__ReferenceParametersType_DEFINED
#define SOAP_TYPE_PointerTowsa5__ReferenceParametersType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsa5__ReferenceParametersType(struct soap*, struct wsa5__ReferenceParametersType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsa5__ReferenceParametersType(struct soap*, const char *, int, struct wsa5__ReferenceParametersType *const*, const char *);
SOAP_FMAC3 struct wsa5__ReferenceParametersType ** SOAP_FMAC4 soap_in_PointerTowsa5__ReferenceParametersType(struct soap*, const char*, struct wsa5__ReferenceParametersType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsa5__ReferenceParametersType(struct soap*, struct wsa5__ReferenceParametersType *const*, const char*, const char*);
SOAP_FMAC3 struct wsa5__ReferenceParametersType ** SOAP_FMAC4 soap_get_PointerTowsa5__ReferenceParametersType(struct soap*, struct wsa5__ReferenceParametersType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_wsa5__FaultCodesOpenEnumType_DEFINED
#define SOAP_TYPE_wsa5__FaultCodesOpenEnumType_DEFINED

#ifdef SOAP_DEFAULT_wsa5__FaultCodesOpenEnumType
#define soap_default_wsa5__FaultCodesOpenEnumType(soap, a) (*(a) = SOAP_DEFAULT_wsa5__FaultCodesOpenEnumType)
#else
#define soap_default_wsa5__FaultCodesOpenEnumType(soap, a) (*(a) = (char *)0)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__FaultCodesOpenEnumType(struct soap*, char *const*);

#define soap_wsa5__FaultCodesOpenEnumType2s(soap, a) (a)
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__FaultCodesOpenEnumType(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2wsa5__FaultCodesOpenEnumType(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_wsa5__FaultCodesOpenEnumType(struct soap*, const char*, char **, const char*);
#define soap_new_wsa5__FaultCodesOpenEnumType soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__FaultCodesOpenEnumType(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_wsa5__FaultCodesOpenEnumType
#define soap_write_wsa5__FaultCodesOpenEnumType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_wsa5__FaultCodesOpenEnumType(soap, data, "wsa5:FaultCodesOpenEnumType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsa5__FaultCodesOpenEnumType
#define soap_PUT_wsa5__FaultCodesOpenEnumType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsa5__FaultCodesOpenEnumType(soap, data, "wsa5:FaultCodesOpenEnumType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsa5__FaultCodesOpenEnumType
#define soap_PATCH_wsa5__FaultCodesOpenEnumType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsa5__FaultCodesOpenEnumType(soap, data, "wsa5:FaultCodesOpenEnumType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsa5__FaultCodesOpenEnumType
#define soap_POST_send_wsa5__FaultCodesOpenEnumType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsa5__FaultCodesOpenEnumType(soap, data, "wsa5:FaultCodesOpenEnumType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_wsa5__FaultCodesOpenEnumType(struct soap*, char **, const char*, const char*);

#ifndef soap_read_wsa5__FaultCodesOpenEnumType
#define soap_read_wsa5__FaultCodesOpenEnumType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsa5__FaultCodesOpenEnumType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsa5__FaultCodesOpenEnumType
#define soap_GET_wsa5__FaultCodesOpenEnumType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsa5__FaultCodesOpenEnumType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsa5__FaultCodesOpenEnumType
#define soap_POST_recv_wsa5__FaultCodesOpenEnumType(soap, data) ( soap_read_wsa5__FaultCodesOpenEnumType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsa5__RelationshipTypeOpenEnum_DEFINED
#define SOAP_TYPE_wsa5__RelationshipTypeOpenEnum_DEFINED

#ifdef SOAP_DEFAULT_wsa5__RelationshipTypeOpenEnum
#define soap_default_wsa5__RelationshipTypeOpenEnum(soap, a) (*(a) = SOAP_DEFAULT_wsa5__RelationshipTypeOpenEnum)
#else
#define soap_default_wsa5__RelationshipTypeOpenEnum(soap, a) (*(a) = (char *)0)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__RelationshipTypeOpenEnum(struct soap*, char *const*);

#define soap_wsa5__RelationshipTypeOpenEnum2s(soap, a) (a)
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__RelationshipTypeOpenEnum(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2wsa5__RelationshipTypeOpenEnum(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_wsa5__RelationshipTypeOpenEnum(struct soap*, const char*, char **, const char*);
#define soap_new_wsa5__RelationshipTypeOpenEnum soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__RelationshipTypeOpenEnum(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_wsa5__RelationshipTypeOpenEnum
#define soap_write_wsa5__RelationshipTypeOpenEnum(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_wsa5__RelationshipTypeOpenEnum(soap, data, "wsa5:RelationshipTypeOpenEnum", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsa5__RelationshipTypeOpenEnum
#define soap_PUT_wsa5__RelationshipTypeOpenEnum(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsa5__RelationshipTypeOpenEnum(soap, data, "wsa5:RelationshipTypeOpenEnum", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsa5__RelationshipTypeOpenEnum
#define soap_PATCH_wsa5__RelationshipTypeOpenEnum(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsa5__RelationshipTypeOpenEnum(soap, data, "wsa5:RelationshipTypeOpenEnum", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsa5__RelationshipTypeOpenEnum
#define soap_POST_send_wsa5__RelationshipTypeOpenEnum(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsa5__RelationshipTypeOpenEnum(soap, data, "wsa5:RelationshipTypeOpenEnum", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_wsa5__RelationshipTypeOpenEnum(struct soap*, char **, const char*, const char*);

#ifndef soap_read_wsa5__RelationshipTypeOpenEnum
#define soap_read_wsa5__RelationshipTypeOpenEnum(soap, data) ( soap_begin_recv(soap) || !soap_get_wsa5__RelationshipTypeOpenEnum(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsa5__RelationshipTypeOpenEnum
#define soap_GET_wsa5__RelationshipTypeOpenEnum(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsa5__RelationshipTypeOpenEnum(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsa5__RelationshipTypeOpenEnum
#define soap_POST_recv_wsa5__RelationshipTypeOpenEnum(soap, data) ( soap_read_wsa5__RelationshipTypeOpenEnum(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_PointerTowsdd__ResolveMatchesType_DEFINED
#define SOAP_TYPE_PointerTowsdd__ResolveMatchesType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsdd__ResolveMatchesType(struct soap*, struct wsdd__ResolveMatchesType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsdd__ResolveMatchesType(struct soap*, const char *, int, struct wsdd__ResolveMatchesType *const*, const char *);
SOAP_FMAC3 struct wsdd__ResolveMatchesType ** SOAP_FMAC4 soap_in_PointerTowsdd__ResolveMatchesType(struct soap*, const char*, struct wsdd__ResolveMatchesType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsdd__ResolveMatchesType(struct soap*, struct wsdd__ResolveMatchesType *const*, const char*, const char*);
SOAP_FMAC3 struct wsdd__ResolveMatchesType ** SOAP_FMAC4 soap_get_PointerTowsdd__ResolveMatchesType(struct soap*, struct wsdd__ResolveMatchesType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsdd__ResolveType_DEFINED
#define SOAP_TYPE_PointerTowsdd__ResolveType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsdd__ResolveType(struct soap*, struct wsdd__ResolveType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsdd__ResolveType(struct soap*, const char *, int, struct wsdd__ResolveType *const*, const char *);
SOAP_FMAC3 struct wsdd__ResolveType ** SOAP_FMAC4 soap_in_PointerTowsdd__ResolveType(struct soap*, const char*, struct wsdd__ResolveType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsdd__ResolveType(struct soap*, struct wsdd__ResolveType *const*, const char*, const char*);
SOAP_FMAC3 struct wsdd__ResolveType ** SOAP_FMAC4 soap_get_PointerTowsdd__ResolveType(struct soap*, struct wsdd__ResolveType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsdd__ProbeMatchesType_DEFINED
#define SOAP_TYPE_PointerTowsdd__ProbeMatchesType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsdd__ProbeMatchesType(struct soap*, struct wsdd__ProbeMatchesType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsdd__ProbeMatchesType(struct soap*, const char *, int, struct wsdd__ProbeMatchesType *const*, const char *);
SOAP_FMAC3 struct wsdd__ProbeMatchesType ** SOAP_FMAC4 soap_in_PointerTowsdd__ProbeMatchesType(struct soap*, const char*, struct wsdd__ProbeMatchesType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsdd__ProbeMatchesType(struct soap*, struct wsdd__ProbeMatchesType *const*, const char*, const char*);
SOAP_FMAC3 struct wsdd__ProbeMatchesType ** SOAP_FMAC4 soap_get_PointerTowsdd__ProbeMatchesType(struct soap*, struct wsdd__ProbeMatchesType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsdd__ProbeType_DEFINED
#define SOAP_TYPE_PointerTowsdd__ProbeType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsdd__ProbeType(struct soap*, struct wsdd__ProbeType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsdd__ProbeType(struct soap*, const char *, int, struct wsdd__ProbeType *const*, const char *);
SOAP_FMAC3 struct wsdd__ProbeType ** SOAP_FMAC4 soap_in_PointerTowsdd__ProbeType(struct soap*, const char*, struct wsdd__ProbeType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsdd__ProbeType(struct soap*, struct wsdd__ProbeType *const*, const char*, const char*);
SOAP_FMAC3 struct wsdd__ProbeType ** SOAP_FMAC4 soap_get_PointerTowsdd__ProbeType(struct soap*, struct wsdd__ProbeType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsdd__ByeType_DEFINED
#define SOAP_TYPE_PointerTowsdd__ByeType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsdd__ByeType(struct soap*, struct wsdd__ByeType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsdd__ByeType(struct soap*, const char *, int, struct wsdd__ByeType *const*, const char *);
SOAP_FMAC3 struct wsdd__ByeType ** SOAP_FMAC4 soap_in_PointerTowsdd__ByeType(struct soap*, const char*, struct wsdd__ByeType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsdd__ByeType(struct soap*, struct wsdd__ByeType *const*, const char*, const char*);
SOAP_FMAC3 struct wsdd__ByeType ** SOAP_FMAC4 soap_get_PointerTowsdd__ByeType(struct soap*, struct wsdd__ByeType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsdd__HelloType_DEFINED
#define SOAP_TYPE_PointerTowsdd__HelloType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsdd__HelloType(struct soap*, struct wsdd__HelloType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsdd__HelloType(struct soap*, const char *, int, struct wsdd__HelloType *const*, const char *);
SOAP_FMAC3 struct wsdd__HelloType ** SOAP_FMAC4 soap_in_PointerTowsdd__HelloType(struct soap*, const char*, struct wsdd__HelloType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsdd__HelloType(struct soap*, struct wsdd__HelloType *const*, const char*, const char*);
SOAP_FMAC3 struct wsdd__HelloType ** SOAP_FMAC4 soap_get_PointerTowsdd__HelloType(struct soap*, struct wsdd__HelloType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsdd__AppSequenceType_DEFINED
#define SOAP_TYPE_PointerTowsdd__AppSequenceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsdd__AppSequenceType(struct soap*, struct wsdd__AppSequenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsdd__AppSequenceType(struct soap*, const char *, int, struct wsdd__AppSequenceType *const*, const char *);
SOAP_FMAC3 struct wsdd__AppSequenceType ** SOAP_FMAC4 soap_in_PointerTowsdd__AppSequenceType(struct soap*, const char*, struct wsdd__AppSequenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsdd__AppSequenceType(struct soap*, struct wsdd__AppSequenceType *const*, const char*, const char*);
SOAP_FMAC3 struct wsdd__AppSequenceType ** SOAP_FMAC4 soap_get_PointerTowsdd__AppSequenceType(struct soap*, struct wsdd__AppSequenceType **, const char*, const char*);
#endif
/* _wsdd__Id is a typedef synonym of string */

#ifndef SOAP_TYPE__wsdd__Id_DEFINED
#define SOAP_TYPE__wsdd__Id_DEFINED

#define soap_default__wsdd__Id soap_default_string


#define soap_serialize__wsdd__Id soap_serialize_string


#define soap__wsdd__Id2s(soap, a) (a)

#define soap_out__wsdd__Id soap_out_string


#define soap_s2_wsdd__Id(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)

#define soap_in__wsdd__Id soap_in_string

#define soap_new__wsdd__Id soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsdd__Id(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__wsdd__Id
#define soap_write__wsdd__Id(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__wsdd__Id(soap, data, "wsdd:Id", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsdd__Id
#define soap_PUT__wsdd__Id(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsdd__Id(soap, data, "wsdd:Id", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsdd__Id
#define soap_PATCH__wsdd__Id(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsdd__Id(soap, data, "wsdd:Id", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsdd__Id
#define soap_POST_send__wsdd__Id(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsdd__Id(soap, data, "wsdd:Id", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsdd__Id soap_get_string


#define soap_read__wsdd__Id soap_read_string


#define soap_GET__wsdd__Id soap_GET_string


#define soap_POST_recv__wsdd__Id soap_POST_recv_string

#endif
/* _wsdd__SupportedMatchingRules is a typedef synonym of wsdd__UriListType */

#ifndef SOAP_TYPE__wsdd__SupportedMatchingRules_DEFINED
#define SOAP_TYPE__wsdd__SupportedMatchingRules_DEFINED

#define soap_default__wsdd__SupportedMatchingRules soap_default_wsdd__UriListType


#define soap_serialize__wsdd__SupportedMatchingRules soap_serialize_wsdd__UriListType


#define soap__wsdd__SupportedMatchingRules2s(soap, a) (a)

#define soap_out__wsdd__SupportedMatchingRules soap_out_wsdd__UriListType


#define soap_s2_wsdd__SupportedMatchingRules(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)

#define soap_in__wsdd__SupportedMatchingRules soap_in_wsdd__UriListType

#define soap_new__wsdd__SupportedMatchingRules soap_new_wsdd__UriListType


#define soap_put__wsdd__SupportedMatchingRules soap_put_wsdd__UriListType


#define soap_write__wsdd__SupportedMatchingRules soap_write_wsdd__UriListType


#define soap_PUT__wsdd__SupportedMatchingRules soap_PUT_wsdd__UriListType


#define soap_PATCH__wsdd__SupportedMatchingRules soap_PATCH_wsdd__UriListType


#define soap_POST_send__wsdd__SupportedMatchingRules soap_POST_send_wsdd__UriListType


#define soap_get__wsdd__SupportedMatchingRules soap_get_wsdd__UriListType


#define soap_read__wsdd__SupportedMatchingRules soap_read_wsdd__UriListType


#define soap_GET__wsdd__SupportedMatchingRules soap_GET_wsdd__UriListType


#define soap_POST_recv__wsdd__SupportedMatchingRules soap_POST_recv_wsdd__UriListType

#endif
/* _wsdd__XAddrs is a typedef synonym of wsdd__UriListType */

#ifndef SOAP_TYPE__wsdd__XAddrs_DEFINED
#define SOAP_TYPE__wsdd__XAddrs_DEFINED

#define soap_default__wsdd__XAddrs soap_default_wsdd__UriListType


#define soap_serialize__wsdd__XAddrs soap_serialize_wsdd__UriListType


#define soap__wsdd__XAddrs2s(soap, a) (a)

#define soap_out__wsdd__XAddrs soap_out_wsdd__UriListType


#define soap_s2_wsdd__XAddrs(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)

#define soap_in__wsdd__XAddrs soap_in_wsdd__UriListType

#define soap_new__wsdd__XAddrs soap_new_wsdd__UriListType


#define soap_put__wsdd__XAddrs soap_put_wsdd__UriListType


#define soap_write__wsdd__XAddrs soap_write_wsdd__UriListType


#define soap_PUT__wsdd__XAddrs soap_PUT_wsdd__UriListType


#define soap_PATCH__wsdd__XAddrs soap_PATCH_wsdd__UriListType


#define soap_POST_send__wsdd__XAddrs soap_POST_send_wsdd__UriListType


#define soap_get__wsdd__XAddrs soap_get_wsdd__UriListType


#define soap_read__wsdd__XAddrs soap_read_wsdd__UriListType


#define soap_GET__wsdd__XAddrs soap_GET_wsdd__UriListType


#define soap_POST_recv__wsdd__XAddrs soap_POST_recv_wsdd__UriListType

#endif
/* _wsdd__Types is a typedef synonym of wsdd__QNameListType */

#ifndef SOAP_TYPE__wsdd__Types_DEFINED
#define SOAP_TYPE__wsdd__Types_DEFINED

#define soap_default__wsdd__Types soap_default_wsdd__QNameListType


#define soap_serialize__wsdd__Types soap_serialize_wsdd__QNameListType


#define soap__wsdd__Types2s(soap, a) soap_QName2s(soap, (a))

#define soap_out__wsdd__Types soap_out_wsdd__QNameListType


#define soap_s2_wsdd__Types(soap, s, a) soap_s2QName((soap), (s), (char**)(a), 0, -1, NULL)

#define soap_in__wsdd__Types soap_in_wsdd__QNameListType

#define soap_new__wsdd__Types soap_new_wsdd__QNameListType


#define soap_put__wsdd__Types soap_put_wsdd__QNameListType


#define soap_write__wsdd__Types soap_write_wsdd__QNameListType


#define soap_PUT__wsdd__Types soap_PUT_wsdd__QNameListType


#define soap_PATCH__wsdd__Types soap_PATCH_wsdd__QNameListType


#define soap_POST_send__wsdd__Types soap_POST_send_wsdd__QNameListType


#define soap_get__wsdd__Types soap_get_wsdd__QNameListType


#define soap_read__wsdd__Types soap_read_wsdd__QNameListType


#define soap_GET__wsdd__Types soap_GET_wsdd__QNameListType


#define soap_POST_recv__wsdd__Types soap_POST_recv_wsdd__QNameListType

#endif

#ifndef SOAP_TYPE_PointerTowsdd__SigType_DEFINED
#define SOAP_TYPE_PointerTowsdd__SigType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsdd__SigType(struct soap*, struct wsdd__SigType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsdd__SigType(struct soap*, const char *, int, struct wsdd__SigType *const*, const char *);
SOAP_FMAC3 struct wsdd__SigType ** SOAP_FMAC4 soap_in_PointerTowsdd__SigType(struct soap*, const char*, struct wsdd__SigType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsdd__SigType(struct soap*, struct wsdd__SigType *const*, const char*, const char*);
SOAP_FMAC3 struct wsdd__SigType ** SOAP_FMAC4 soap_get_PointerTowsdd__SigType(struct soap*, struct wsdd__SigType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsdd__ResolveMatchType_DEFINED
#define SOAP_TYPE_PointerTowsdd__ResolveMatchType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsdd__ResolveMatchType(struct soap*, struct wsdd__ResolveMatchType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsdd__ResolveMatchType(struct soap*, const char *, int, struct wsdd__ResolveMatchType *const*, const char *);
SOAP_FMAC3 struct wsdd__ResolveMatchType ** SOAP_FMAC4 soap_in_PointerTowsdd__ResolveMatchType(struct soap*, const char*, struct wsdd__ResolveMatchType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsdd__ResolveMatchType(struct soap*, struct wsdd__ResolveMatchType *const*, const char*, const char*);
SOAP_FMAC3 struct wsdd__ResolveMatchType ** SOAP_FMAC4 soap_get_PointerTowsdd__ResolveMatchType(struct soap*, struct wsdd__ResolveMatchType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsdd__ProbeMatchType_DEFINED
#define SOAP_TYPE_PointerTowsdd__ProbeMatchType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsdd__ProbeMatchType(struct soap*, struct wsdd__ProbeMatchType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsdd__ProbeMatchType(struct soap*, const char *, int, struct wsdd__ProbeMatchType *const*, const char *);
SOAP_FMAC3 struct wsdd__ProbeMatchType ** SOAP_FMAC4 soap_in_PointerTowsdd__ProbeMatchType(struct soap*, const char*, struct wsdd__ProbeMatchType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsdd__ProbeMatchType(struct soap*, struct wsdd__ProbeMatchType *const*, const char*, const char*);
SOAP_FMAC3 struct wsdd__ProbeMatchType ** SOAP_FMAC4 soap_get_PointerTowsdd__ProbeMatchType(struct soap*, struct wsdd__ProbeMatchType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTounsignedInt_DEFINED
#define SOAP_TYPE_PointerTounsignedInt_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTounsignedInt(struct soap*, unsigned int *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTounsignedInt(struct soap*, const char *, int, unsigned int *const*, const char *);
SOAP_FMAC3 unsigned int ** SOAP_FMAC4 soap_in_PointerTounsignedInt(struct soap*, const char*, unsigned int **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTounsignedInt(struct soap*, unsigned int *const*, const char*, const char*);
SOAP_FMAC3 unsigned int ** SOAP_FMAC4 soap_get_PointerTounsignedInt(struct soap*, unsigned int **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsdd__ScopesType_DEFINED
#define SOAP_TYPE_PointerTowsdd__ScopesType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsdd__ScopesType(struct soap*, struct wsdd__ScopesType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsdd__ScopesType(struct soap*, const char *, int, struct wsdd__ScopesType *const*, const char *);
SOAP_FMAC3 struct wsdd__ScopesType ** SOAP_FMAC4 soap_in_PointerTowsdd__ScopesType(struct soap*, const char*, struct wsdd__ScopesType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsdd__ScopesType(struct soap*, struct wsdd__ScopesType *const*, const char*, const char*);
SOAP_FMAC3 struct wsdd__ScopesType ** SOAP_FMAC4 soap_get_PointerTowsdd__ScopesType(struct soap*, struct wsdd__ScopesType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_wsdd__FaultCodeOpenType_DEFINED
#define SOAP_TYPE_wsdd__FaultCodeOpenType_DEFINED

#ifdef SOAP_DEFAULT_wsdd__FaultCodeOpenType
#define soap_default_wsdd__FaultCodeOpenType(soap, a) (*(a) = SOAP_DEFAULT_wsdd__FaultCodeOpenType)
#else
#define soap_default_wsdd__FaultCodeOpenType(soap, a) (*(a) = (char *)0)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__FaultCodeOpenType(struct soap*, char *const*);

#define soap_wsdd__FaultCodeOpenType2s(soap, a) (a)
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdd__FaultCodeOpenType(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2wsdd__FaultCodeOpenType(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_wsdd__FaultCodeOpenType(struct soap*, const char*, char **, const char*);
#define soap_new_wsdd__FaultCodeOpenType soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsdd__FaultCodeOpenType(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_wsdd__FaultCodeOpenType
#define soap_write_wsdd__FaultCodeOpenType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_wsdd__FaultCodeOpenType(soap, data, "wsdd:FaultCodeOpenType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsdd__FaultCodeOpenType
#define soap_PUT_wsdd__FaultCodeOpenType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsdd__FaultCodeOpenType(soap, data, "wsdd:FaultCodeOpenType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsdd__FaultCodeOpenType
#define soap_PATCH_wsdd__FaultCodeOpenType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsdd__FaultCodeOpenType(soap, data, "wsdd:FaultCodeOpenType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsdd__FaultCodeOpenType
#define soap_POST_send_wsdd__FaultCodeOpenType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsdd__FaultCodeOpenType(soap, data, "wsdd:FaultCodeOpenType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_wsdd__FaultCodeOpenType(struct soap*, char **, const char*, const char*);

#ifndef soap_read_wsdd__FaultCodeOpenType
#define soap_read_wsdd__FaultCodeOpenType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsdd__FaultCodeOpenType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsdd__FaultCodeOpenType
#define soap_GET_wsdd__FaultCodeOpenType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsdd__FaultCodeOpenType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsdd__FaultCodeOpenType
#define soap_POST_recv_wsdd__FaultCodeOpenType(soap, data) ( soap_read_wsdd__FaultCodeOpenType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_wsdd__UriListType_DEFINED
#define SOAP_TYPE_wsdd__UriListType_DEFINED

#ifdef SOAP_DEFAULT_wsdd__UriListType
#define soap_default_wsdd__UriListType(soap, a) (*(a) = SOAP_DEFAULT_wsdd__UriListType)
#else
#define soap_default_wsdd__UriListType(soap, a) (*(a) = (char *)0)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsdd__UriListType(struct soap*, char *const*);

#define soap_wsdd__UriListType2s(soap, a) (a)
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdd__UriListType(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2wsdd__UriListType(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_wsdd__UriListType(struct soap*, const char*, char **, const char*);
#define soap_new_wsdd__UriListType soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsdd__UriListType(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_wsdd__UriListType
#define soap_write_wsdd__UriListType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_wsdd__UriListType(soap, data, "wsdd:UriListType", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_wsdd__UriListType
#define soap_PUT_wsdd__UriListType(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsdd__UriListType(soap, data, "wsdd:UriListType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_wsdd__UriListType
#define soap_PATCH_wsdd__UriListType(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsdd__UriListType(soap, data, "wsdd:UriListType", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_wsdd__UriListType
#define soap_POST_send_wsdd__UriListType(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_wsdd__UriListType(soap, data, "wsdd:UriListType", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_wsdd__UriListType(struct soap*, char **, const char*, const char*);

#ifndef soap_read_wsdd__UriListType
#define soap_read_wsdd__UriListType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsdd__UriListType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_wsdd__UriListType
#define soap_GET_wsdd__UriListType(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_wsdd__UriListType(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_wsdd__UriListType
#define soap_POST_recv_wsdd__UriListType(soap, data) ( soap_read_wsdd__UriListType(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif
/* wsdd__QNameListType is a typedef synonym of _QName */

#ifndef SOAP_TYPE_wsdd__QNameListType_DEFINED
#define SOAP_TYPE_wsdd__QNameListType_DEFINED

#define soap_default_wsdd__QNameListType soap_default__QName


#define soap_serialize_wsdd__QNameListType soap_serialize__QName


#define soap_wsdd__QNameListType2s(soap, a) soap_QName2s(soap, (a))

#define soap_out_wsdd__QNameListType soap_out__QName


#define soap_s2wsdd__QNameListType(soap, s, a) soap_s2QName((soap), (s), (char**)(a), 0, -1, NULL)

#define soap_in_wsdd__QNameListType soap_in__QName

#define soap_new_wsdd__QNameListType soap_new__QName


#define soap_put_wsdd__QNameListType soap_put__QName


#define soap_write_wsdd__QNameListType soap_write__QName


#define soap_PUT_wsdd__QNameListType soap_PUT__QName


#define soap_PATCH_wsdd__QNameListType soap_PATCH__QName


#define soap_POST_send_wsdd__QNameListType soap_POST_send__QName


#define soap_get_wsdd__QNameListType soap_get__QName


#define soap_read_wsdd__QNameListType soap_read__QName


#define soap_GET_wsdd__QNameListType soap_GET__QName


#define soap_POST_recv_wsdd__QNameListType soap_POST_recv__QName

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason_DEFINED
#define SOAP_TYPE_PointerToSOAP_ENV__Reason_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code_DEFINED
#define SOAP_TYPE_PointerToSOAP_ENV__Code_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail_DEFINED
#define SOAP_TYPE_PointerToSOAP_ENV__Detail_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);
#endif

#endif

#ifndef SOAP_TYPE_PointerTo_wsa__FaultTo_DEFINED
#define SOAP_TYPE_PointerTo_wsa__FaultTo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsa__FaultTo(struct soap*, struct wsa__EndpointReferenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsa__FaultTo(struct soap*, const char *, int, struct wsa__EndpointReferenceType *const*, const char *);
SOAP_FMAC3 struct wsa__EndpointReferenceType ** SOAP_FMAC4 soap_in_PointerTo_wsa__FaultTo(struct soap*, const char*, struct wsa__EndpointReferenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsa__FaultTo(struct soap*, struct wsa__EndpointReferenceType *const*, const char*, const char*);
SOAP_FMAC3 struct wsa__EndpointReferenceType ** SOAP_FMAC4 soap_get_PointerTo_wsa__FaultTo(struct soap*, struct wsa__EndpointReferenceType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsa__ReplyTo_DEFINED
#define SOAP_TYPE_PointerTo_wsa__ReplyTo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsa__ReplyTo(struct soap*, struct wsa__EndpointReferenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsa__ReplyTo(struct soap*, const char *, int, struct wsa__EndpointReferenceType *const*, const char *);
SOAP_FMAC3 struct wsa__EndpointReferenceType ** SOAP_FMAC4 soap_in_PointerTo_wsa__ReplyTo(struct soap*, const char*, struct wsa__EndpointReferenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsa__ReplyTo(struct soap*, struct wsa__EndpointReferenceType *const*, const char*, const char*);
SOAP_FMAC3 struct wsa__EndpointReferenceType ** SOAP_FMAC4 soap_get_PointerTo_wsa__ReplyTo(struct soap*, struct wsa__EndpointReferenceType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsa__From_DEFINED
#define SOAP_TYPE_PointerTo_wsa__From_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsa__From(struct soap*, struct wsa__EndpointReferenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsa__From(struct soap*, const char *, int, struct wsa__EndpointReferenceType *const*, const char *);
SOAP_FMAC3 struct wsa__EndpointReferenceType ** SOAP_FMAC4 soap_in_PointerTo_wsa__From(struct soap*, const char*, struct wsa__EndpointReferenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsa__From(struct soap*, struct wsa__EndpointReferenceType *const*, const char*, const char*);
SOAP_FMAC3 struct wsa__EndpointReferenceType ** SOAP_FMAC4 soap_get_PointerTo_wsa__From(struct soap*, struct wsa__EndpointReferenceType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_wsa__RelatesTo_DEFINED
#define SOAP_TYPE_PointerTo_wsa__RelatesTo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsa__RelatesTo(struct soap*, struct wsa__Relationship *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsa__RelatesTo(struct soap*, const char *, int, struct wsa__Relationship *const*, const char *);
SOAP_FMAC3 struct wsa__Relationship ** SOAP_FMAC4 soap_in_PointerTo_wsa__RelatesTo(struct soap*, const char*, struct wsa__Relationship **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsa__RelatesTo(struct soap*, struct wsa__Relationship *const*, const char*, const char*);
SOAP_FMAC3 struct wsa__Relationship ** SOAP_FMAC4 soap_get_PointerTo_wsa__RelatesTo(struct soap*, struct wsa__Relationship **, const char*, const char*);
#endif
/* _wsa__Action is a typedef synonym of string */

#ifndef SOAP_TYPE__wsa__Action_DEFINED
#define SOAP_TYPE__wsa__Action_DEFINED

#define soap_default__wsa__Action soap_default_string


#define soap_serialize__wsa__Action soap_serialize_string


#define soap__wsa__Action2s(soap, a) (a)

#define soap_out__wsa__Action soap_out_string


#define soap_s2_wsa__Action(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)

#define soap_in__wsa__Action soap_in_string

#define soap_new__wsa__Action soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa__Action(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__wsa__Action
#define soap_write__wsa__Action(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__wsa__Action(soap, data, "wsa:Action", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsa__Action
#define soap_PUT__wsa__Action(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa__Action(soap, data, "wsa:Action", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsa__Action
#define soap_PATCH__wsa__Action(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa__Action(soap, data, "wsa:Action", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsa__Action
#define soap_POST_send__wsa__Action(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa__Action(soap, data, "wsa:Action", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsa__Action soap_get_string


#define soap_read__wsa__Action soap_read_string


#define soap_GET__wsa__Action soap_GET_string


#define soap_POST_recv__wsa__Action soap_POST_recv_string

#endif
/* _wsa__To is a typedef synonym of string */

#ifndef SOAP_TYPE__wsa__To_DEFINED
#define SOAP_TYPE__wsa__To_DEFINED

#define soap_default__wsa__To soap_default_string


#define soap_serialize__wsa__To soap_serialize_string


#define soap__wsa__To2s(soap, a) (a)

#define soap_out__wsa__To soap_out_string


#define soap_s2_wsa__To(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)

#define soap_in__wsa__To soap_in_string

#define soap_new__wsa__To soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa__To(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__wsa__To
#define soap_write__wsa__To(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__wsa__To(soap, data, "wsa:To", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsa__To
#define soap_PUT__wsa__To(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa__To(soap, data, "wsa:To", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsa__To
#define soap_PATCH__wsa__To(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa__To(soap, data, "wsa:To", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsa__To
#define soap_POST_send__wsa__To(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa__To(soap, data, "wsa:To", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsa__To soap_get_string


#define soap_read__wsa__To soap_read_string


#define soap_GET__wsa__To soap_GET_string


#define soap_POST_recv__wsa__To soap_POST_recv_string

#endif
/* _wsa__MessageID is a typedef synonym of string */

#ifndef SOAP_TYPE__wsa__MessageID_DEFINED
#define SOAP_TYPE__wsa__MessageID_DEFINED

#define soap_default__wsa__MessageID soap_default_string


#define soap_serialize__wsa__MessageID soap_serialize_string


#define soap__wsa__MessageID2s(soap, a) (a)

#define soap_out__wsa__MessageID soap_out_string


#define soap_s2_wsa__MessageID(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)

#define soap_in__wsa__MessageID soap_in_string

#define soap_new__wsa__MessageID soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa__MessageID(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__wsa__MessageID
#define soap_write__wsa__MessageID(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__wsa__MessageID(soap, data, "wsa:MessageID", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__wsa__MessageID
#define soap_PUT__wsa__MessageID(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa__MessageID(soap, data, "wsa:MessageID", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__wsa__MessageID
#define soap_PATCH__wsa__MessageID(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa__MessageID(soap, data, "wsa:MessageID", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__wsa__MessageID
#define soap_POST_send__wsa__MessageID(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__wsa__MessageID(soap, data, "wsa:MessageID", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif


#define soap_get__wsa__MessageID soap_get_string


#define soap_read__wsa__MessageID soap_read_string


#define soap_GET__wsa__MessageID soap_GET_string


#define soap_POST_recv__wsa__MessageID soap_POST_recv_string

#endif

#ifndef SOAP_TYPE_PointerTo_XML_DEFINED
#define SOAP_TYPE_PointerTo_XML_DEFINED
#endif

#ifndef SOAP_TYPE_PointerTowsa__ServiceNameType_DEFINED
#define SOAP_TYPE_PointerTowsa__ServiceNameType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsa__ServiceNameType(struct soap*, struct wsa__ServiceNameType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsa__ServiceNameType(struct soap*, const char *, int, struct wsa__ServiceNameType *const*, const char *);
SOAP_FMAC3 struct wsa__ServiceNameType ** SOAP_FMAC4 soap_in_PointerTowsa__ServiceNameType(struct soap*, const char*, struct wsa__ServiceNameType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsa__ServiceNameType(struct soap*, struct wsa__ServiceNameType *const*, const char*, const char*);
SOAP_FMAC3 struct wsa__ServiceNameType ** SOAP_FMAC4 soap_get_PointerTowsa__ServiceNameType(struct soap*, struct wsa__ServiceNameType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_QName_DEFINED
#define SOAP_TYPE_PointerTo_QName_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_QName(struct soap*, char **const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_QName(struct soap*, const char *, int, char **const*, const char *);
SOAP_FMAC3 char *** SOAP_FMAC4 soap_in_PointerTo_QName(struct soap*, const char*, char ***, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_QName(struct soap*, char **const*, const char*, const char*);
SOAP_FMAC3 char *** SOAP_FMAC4 soap_get_PointerTo_QName(struct soap*, char ***, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsa__ReferenceParametersType_DEFINED
#define SOAP_TYPE_PointerTowsa__ReferenceParametersType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsa__ReferenceParametersType(struct soap*, struct wsa__ReferenceParametersType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsa__ReferenceParametersType(struct soap*, const char *, int, struct wsa__ReferenceParametersType *const*, const char *);
SOAP_FMAC3 struct wsa__ReferenceParametersType ** SOAP_FMAC4 soap_in_PointerTowsa__ReferenceParametersType(struct soap*, const char*, struct wsa__ReferenceParametersType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsa__ReferenceParametersType(struct soap*, struct wsa__ReferenceParametersType *const*, const char*, const char*);
SOAP_FMAC3 struct wsa__ReferenceParametersType ** SOAP_FMAC4 soap_get_PointerTowsa__ReferenceParametersType(struct soap*, struct wsa__ReferenceParametersType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTowsa__ReferencePropertiesType_DEFINED
#define SOAP_TYPE_PointerTowsa__ReferencePropertiesType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsa__ReferencePropertiesType(struct soap*, struct wsa__ReferencePropertiesType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsa__ReferencePropertiesType(struct soap*, const char *, int, struct wsa__ReferencePropertiesType *const*, const char *);
SOAP_FMAC3 struct wsa__ReferencePropertiesType ** SOAP_FMAC4 soap_in_PointerTowsa__ReferencePropertiesType(struct soap*, const char*, struct wsa__ReferencePropertiesType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsa__ReferencePropertiesType(struct soap*, struct wsa__ReferencePropertiesType *const*, const char*, const char*);
SOAP_FMAC3 struct wsa__ReferencePropertiesType ** SOAP_FMAC4 soap_get_PointerTowsa__ReferencePropertiesType(struct soap*, struct wsa__ReferencePropertiesType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE__QName_DEFINED
#define SOAP_TYPE__QName_DEFINED

#ifdef SOAP_DEFAULT__QName
#define soap_default__QName(soap, a) (*(a) = SOAP_DEFAULT__QName)
#else
#define soap_default__QName(soap, a) (*(a) = (char *)0)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);

#define soap__QName2s(soap, a) soap_QName2s(soap, (a))
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2_QName(soap, s, a) soap_s2QName((soap), (s), (char**)(a), 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
#define soap_new__QName soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__QName(soap, data, "QName", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__QName
#define soap_PUT__QName(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__QName(soap, data, "QName", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH__QName
#define soap_PATCH__QName(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__QName(soap, data, "QName", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__QName
#define soap_POST_send__QName(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__QName(soap, data, "QName", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__QName
#define soap_GET__QName(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__QName(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__QName
#define soap_POST_recv__QName(soap, data) ( soap_read__QName(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__XML_DEFINED
#define SOAP_TYPE__XML_DEFINED
#endif

#ifndef SOAP_TYPE_string_DEFINED
#define SOAP_TYPE_string_DEFINED

#ifdef SOAP_DEFAULT_string
#define soap_default_string(soap, a) (*(a) = SOAP_DEFAULT_string)
#else
#define soap_default_string(soap, a) (*(a) = (char *)0)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);

#define soap_string2s(soap, a) (a)
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2string(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);

SOAP_FMAC3 char * * SOAP_FMAC4 soap_new_string(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_string(soap, data, "string", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_string
#define soap_PUT_string(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_string(soap, data, "string", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_PATCH_string
#define soap_PATCH_string(soap, URL, data) ( soap_free_temp(soap), soap_PATCH(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_string(soap, data, "string", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_string
#define soap_POST_send_string(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_string(soap, data, "string", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_string
#define soap_GET_string(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_string(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_string
#define soap_POST_recv_string(soap, data) ( soap_read_string(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

/* End of soapH.h */
